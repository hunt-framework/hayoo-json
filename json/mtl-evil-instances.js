[
  {
    "cmd": "delete-by-query",
    "query": {
      "contexts": [
        "package"
      ],
      "query": {
        "op": "case",
        "type": "word",
        "word": "mtl-evil-instances"
      },
      "type": "context"
    }
  },
  [
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThis module exports several very overlapping instances for the type classes\ndefined in the \u003ccode\u003emtl\u003c/code\u003e library, and should be used with caution, or not at all\n(see the package description). The instances are defined:\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e\u003cpre\u003einstance (\u003ccode\u003e\u003ca\u003eMonadTrans\u003c/a\u003e\u003c/code\u003e t, \u003ccode\u003e\u003ca\u003eMonad\u003c/a\u003e\u003c/code\u003e (t m),        \u003ccode\u003e\u003ca\u003eMonadBase\u003c/a\u003e\u003c/code\u003e b m)      =\u003e \u003ccode\u003e\u003ca\u003eMonadBase\u003c/a\u003e\u003c/code\u003e b        (t m)\u003c/pre\u003e\u003c/li\u003e\u003cli\u003e\u003cpre\u003einstance (\u003ccode\u003e\u003ca\u003eMonadTransControl\u003c/a\u003e\u003c/code\u003e t, \u003ccode\u003e\u003ca\u003eMonad\u003c/a\u003e\u003c/code\u003e (t m), \u003ccode\u003e\u003ca\u003eMonadCont\u003c/a\u003e\u003c/code\u003e m)        =\u003e \u003ccode\u003e\u003ca\u003eMonadCont\u003c/a\u003e\u003c/code\u003e          (t m)\u003c/pre\u003e\u003c/li\u003e\u003cli\u003e\u003cpre\u003einstance (\u003ccode\u003e\u003ca\u003eMonadTransControl\u003c/a\u003e\u003c/code\u003e t, \u003ccode\u003e\u003ca\u003eMonad\u003c/a\u003e\u003c/code\u003e (t m), \u003ccode\u003e\u003ca\u003eMonadError\u003c/a\u003e\u003c/code\u003e e m)     =\u003e \u003ccode\u003e\u003ca\u003eMonadError\u003c/a\u003e\u003c/code\u003e e       (t m)\u003c/pre\u003e\u003c/li\u003e\u003cli\u003e\u003cpre\u003einstance (\u003ccode\u003e\u003ca\u003eMonadTransControl\u003c/a\u003e\u003c/code\u003e t, \u003ccode\u003e\u003ca\u003eMonad\u003c/a\u003e\u003c/code\u003e (t m), \u003ccode\u003e\u003ca\u003eMonadFix\u003c/a\u003e\u003c/code\u003e m)         =\u003e \u003ccode\u003e\u003ca\u003eMonadFix\u003c/a\u003e\u003c/code\u003e           (t m)\u003c/pre\u003e\u003c/li\u003e\u003cli\u003e\u003cpre\u003einstance (\u003ccode\u003e\u003ca\u003eMonadTrans\u003c/a\u003e\u003c/code\u003e t, \u003ccode\u003e\u003ca\u003eMonad\u003c/a\u003e\u003c/code\u003e (t m),        \u003ccode\u003e\u003ca\u003eMonadIO\u003c/a\u003e\u003c/code\u003e m)          =\u003e \u003ccode\u003e\u003ca\u003eMonadIO\u003c/a\u003e\u003c/code\u003e            (t m)\u003c/pre\u003e\u003c/li\u003e\u003cli\u003e\u003cpre\u003einstance (\u003ccode\u003e\u003ca\u003eMonadTrans\u003c/a\u003e\u003c/code\u003e t, \u003ccode\u003e\u003ca\u003eMonad\u003c/a\u003e\u003c/code\u003e (t m),        \u003ccode\u003e\u003ca\u003eMonadReader\u003c/a\u003e\u003c/code\u003e r m)    =\u003e \u003ccode\u003e\u003ca\u003eMonadReader\u003c/a\u003e\u003c/code\u003e r      (t m)\u003c/pre\u003e\u003c/li\u003e\u003cli\u003e\u003cpre\u003einstance (\u003ccode\u003e\u003ca\u003eMonadTrans\u003c/a\u003e\u003c/code\u003e t, \u003ccode\u003e\u003ca\u003eMonad\u003c/a\u003e\u003c/code\u003e (t m),        \u003ccode\u003e\u003ca\u003eMonadRWS\u003c/a\u003e\u003c/code\u003e r w s m)   =\u003e \u003ccode\u003e\u003ca\u003eMonadRWS\u003c/a\u003e\u003c/code\u003e r w s     (t m)\u003c/pre\u003e\u003c/li\u003e\u003cli\u003e\u003cpre\u003einstance (\u003ccode\u003e\u003ca\u003eMonadTrans\u003c/a\u003e\u003c/code\u003e t, \u003ccode\u003e\u003ca\u003eMonad\u003c/a\u003e\u003c/code\u003e (t m),        \u003ccode\u003e\u003ca\u003eMonadState\u003c/a\u003e\u003c/code\u003e s m)     =\u003e \u003ccode\u003e\u003ca\u003eMonadState\u003c/a\u003e\u003c/code\u003e s       (t m)\u003c/pre\u003e\u003c/li\u003e\u003cli\u003e\u003cpre\u003einstance (\u003ccode\u003e\u003ca\u003eMonadTrans\u003c/a\u003e\u003c/code\u003e t, \u003ccode\u003e\u003ca\u003eMonad\u003c/a\u003e\u003c/code\u003e (t m),        \u003ccode\u003e\u003ca\u003eMonadWriter\u003c/a\u003e\u003c/code\u003e w m)    =\u003e \u003ccode\u003e\u003ca\u003eMonadWriter\u003c/a\u003e\u003c/code\u003e w      (t m)\u003c/pre\u003e\u003c/li\u003e\u003cli\u003e\u003cpre\u003einstance (\u003ccode\u003e\u003ca\u003eMonadBaseControl\u003c/a\u003e\u003c/code\u003e b m,             \u003ccode\u003e\u003ca\u003eMonadCont\u003c/a\u003e\u003c/code\u003e b)        =\u003e \u003ccode\u003e\u003ca\u003eMonadCont\u003c/a\u003e\u003c/code\u003e          m\u003c/pre\u003e\u003c/li\u003e\u003cli\u003e\u003cpre\u003einstance (\u003ccode\u003e\u003ca\u003eMonadBaseControl\u003c/a\u003e\u003c/code\u003e b m,             \u003ccode\u003e\u003ca\u003eMonadError\u003c/a\u003e\u003c/code\u003e e b)     =\u003e \u003ccode\u003e\u003ca\u003eMonadError\u003c/a\u003e\u003c/code\u003e e       m\u003c/pre\u003e\u003c/li\u003e\u003cli\u003e\u003cpre\u003einstance (\u003ccode\u003e\u003ca\u003eMonadBaseControl\u003c/a\u003e\u003c/code\u003e b m,             \u003ccode\u003e\u003ca\u003eMonadFix\u003c/a\u003e\u003c/code\u003e b)         =\u003e \u003ccode\u003e\u003ca\u003eMonadFix\u003c/a\u003e\u003c/code\u003e           m\u003c/pre\u003e\u003c/li\u003e\u003cli\u003e\u003cpre\u003einstance (\u003ccode\u003e\u003ca\u003eMonadBase\u003c/a\u003e\u003c/code\u003e b m,                    \u003ccode\u003e\u003ca\u003eMonadIO\u003c/a\u003e\u003c/code\u003e b)          =\u003e \u003ccode\u003e\u003ca\u003eMonadIO\u003c/a\u003e\u003c/code\u003e            m\u003c/pre\u003e\u003c/li\u003e\u003cli\u003e\u003cpre\u003einstance (\u003ccode\u003e\u003ca\u003eMonadBase\u003c/a\u003e\u003c/code\u003e b m,                    \u003ccode\u003e\u003ca\u003eMonadReader\u003c/a\u003e\u003c/code\u003e r b)    =\u003e \u003ccode\u003e\u003ca\u003eMonadReader\u003c/a\u003e\u003c/code\u003e r      m\u003c/pre\u003e\u003c/li\u003e\u003cli\u003e\u003cpre\u003einstance (\u003ccode\u003e\u003ca\u003eMonadBase\u003c/a\u003e\u003c/code\u003e b m,                    \u003ccode\u003e\u003ca\u003eMonadRWS\u003c/a\u003e\u003c/code\u003e r w s b)   =\u003e \u003ccode\u003e\u003ca\u003eMonadRWS\u003c/a\u003e\u003c/code\u003e r w s     m\u003c/pre\u003e\u003c/li\u003e\u003cli\u003e\u003cpre\u003einstance (\u003ccode\u003e\u003ca\u003eMonadBase\u003c/a\u003e\u003c/code\u003e b m,                    \u003ccode\u003e\u003ca\u003eMonadState\u003c/a\u003e\u003c/code\u003e s b)     =\u003e \u003ccode\u003e\u003ca\u003eMonadState\u003c/a\u003e\u003c/code\u003e s       m\u003c/pre\u003e\u003c/li\u003e\u003cli\u003e\u003cpre\u003einstance (\u003ccode\u003e\u003ca\u003eMonadBase\u003c/a\u003e\u003c/code\u003e b m,                    \u003ccode\u003e\u003ca\u003eMonadWriter\u003c/a\u003e\u003c/code\u003e w b)    =\u003e \u003ccode\u003e\u003ca\u003eMonadWriter\u003c/a\u003e\u003c/code\u003e w      m\u003c/pre\u003e\u003c/li\u003e\u003c/ul\u003e\u003cp\u003eNote that the following instance is not included, as currently it cannot be due to GHC bug #4259:\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e\u003cpre\u003einstance (\u003ccode\u003e\u003ca\u003eMonadTransControl\u003c/a\u003e\u003c/code\u003e t, \u003ccode\u003e\u003ca\u003eMonad\u003c/a\u003e\u003c/code\u003e (t m), \u003ccode\u003e\u003ca\u003eMonadBaseControl\u003c/a\u003e\u003c/code\u003e b m) =\u003e \u003ccode\u003e\u003ca\u003eMonadBaseControl\u003c/a\u003e\u003c/code\u003e b (t m)\u003c/pre\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e",
          "module": "Control.Monad.Instances.Evil",
          "name": "Evil",
          "package": "mtl-evil-instances",
          "source": "src/Control-Monad-Instances-Evil.html",
          "type": "module"
        },
        "index": {
          "description": "This module exports several very overlapping instances for the type classes defined in the mtl library and should be used with caution or not at all see the package description The instances are defined instance MonadTrans Monad MonadBase MonadBase instance MonadTransControl Monad MonadCont MonadCont instance MonadTransControl Monad MonadError MonadError instance MonadTransControl Monad MonadFix MonadFix instance MonadTrans Monad MonadIO MonadIO instance MonadTrans Monad MonadReader MonadReader instance MonadTrans Monad MonadRWS MonadRWS instance MonadTrans Monad MonadState MonadState instance MonadTrans Monad MonadWriter MonadWriter instance MonadBaseControl MonadCont MonadCont instance MonadBaseControl MonadError MonadError instance MonadBaseControl MonadFix MonadFix instance MonadBase MonadIO MonadIO instance MonadBase MonadReader MonadReader instance MonadBase MonadRWS MonadRWS instance MonadBase MonadState MonadState instance MonadBase MonadWriter MonadWriter Note that the following instance is not included as currently it cannot be due to GHC bug instance MonadTransControl Monad MonadBaseControl MonadBaseControl",
          "hierarchy": "Control Monad Instances Evil",
          "module": "Control.Monad.Instances.Evil",
          "name": "Evil",
          "package": "mtl-evil-instances",
          "partial": "Evil",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/mtl-evil-instances/docs/Control-Monad-Instances-Evil.html#"
      }
    }
  ]
]
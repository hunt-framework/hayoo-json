[
  {
    "cmd": "delete-by-query",
    "query": {
      "contexts": [
        "package"
      ],
      "query": {
        "op": "case",
        "type": "word",
        "word": "EdisonCore"
      },
      "type": "context"
    }
  },
  [
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThis module implements finite maps as simple association lists.\n\u003c/p\u003e\u003cp\u003eDuplicates are removed conceptually, but not physically.  The first\n   occurrence of a given key is the one that is considered to be in the map.\n\u003c/p\u003e\u003cp\u003eThe list type is mildly customized to prevent boxing the pairs.\n\u003c/p\u003e\u003c/div\u003e",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "AssocList",
          "package": "EdisonCore",
          "source": "src/Data-Edison-Assoc-AssocList.html",
          "type": "module"
        },
        "index": {
          "description": "This module implements finite maps as simple association lists Duplicates are removed conceptually but not physically The first occurrence of given key is the one that is considered to be in the map The list type is mildly customized to prevent boxing the pairs",
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "AssocList",
          "package": "EdisonCore",
          "partial": "Assoc List",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "FM",
          "package": "EdisonCore",
          "source": "src/Data-Edison-Assoc-AssocList.html#FM",
          "type": "data"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "FM",
          "package": "EdisonCore",
          "partial": "FM",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#t:FM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "adjust",
          "package": "EdisonCore",
          "signature": "(a -\u003e a) -\u003e k -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-AssocList.html#adjust",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "adjust",
          "normalized": "(a-\u003ea)-\u003eb-\u003eFM b a-\u003eFM b a",
          "package": "EdisonCore",
          "signature": "(a-\u003ea)-\u003ek-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:adjust"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "adjustAll",
          "package": "EdisonCore",
          "signature": "(a -\u003e a) -\u003e k -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-AssocList.html#adjustAll",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "adjustAll",
          "normalized": "(a-\u003ea)-\u003eb-\u003eFM b a-\u003eFM b a",
          "package": "EdisonCore",
          "partial": "All",
          "signature": "(a-\u003ea)-\u003ek-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:adjustAll"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "adjustAllOrInsert",
          "package": "EdisonCore",
          "signature": "(a -\u003e a) -\u003e a -\u003e k -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-AssocList.html#adjustAllOrInsert",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "adjustAllOrInsert",
          "normalized": "(a-\u003ea)-\u003ea-\u003eb-\u003eFM b a-\u003eFM b a",
          "package": "EdisonCore",
          "partial": "All Or Insert",
          "signature": "(a-\u003ea)-\u003ea-\u003ek-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:adjustAllOrInsert"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "adjustOrDelete",
          "package": "EdisonCore",
          "signature": "(a -\u003e Maybe a) -\u003e k -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-AssocList.html#adjustOrDelete",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "adjustOrDelete",
          "normalized": "(a-\u003eMaybe a)-\u003eb-\u003eFM b a-\u003eFM b a",
          "package": "EdisonCore",
          "partial": "Or Delete",
          "signature": "(a-\u003eMaybe a)-\u003ek-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:adjustOrDelete"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "adjustOrDeleteAll",
          "package": "EdisonCore",
          "signature": "(a -\u003e Maybe a) -\u003e k -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-AssocList.html#adjustOrDeleteAll",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "adjustOrDeleteAll",
          "normalized": "(a-\u003eMaybe a)-\u003eb-\u003eFM b a-\u003eFM b a",
          "package": "EdisonCore",
          "partial": "Or Delete All",
          "signature": "(a-\u003eMaybe a)-\u003ek-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:adjustOrDeleteAll"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "adjustOrInsert",
          "package": "EdisonCore",
          "signature": "(a -\u003e a) -\u003e a -\u003e k -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-AssocList.html#adjustOrInsert",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "adjustOrInsert",
          "normalized": "(a-\u003ea)-\u003ea-\u003eb-\u003eFM b a-\u003eFM b a",
          "package": "EdisonCore",
          "partial": "Or Insert",
          "signature": "(a-\u003ea)-\u003ea-\u003ek-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:adjustOrInsert"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "count",
          "package": "EdisonCore",
          "signature": "k -\u003e FM k a -\u003e Int",
          "source": "src/Data-Edison-Assoc-AssocList.html#count",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "count",
          "normalized": "a-\u003eFM a b-\u003eInt",
          "package": "EdisonCore",
          "signature": "k-\u003eFM k a-\u003eInt",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:count"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "delete",
          "package": "EdisonCore",
          "signature": "k -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-AssocList.html#delete",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "delete",
          "normalized": "a-\u003eFM a b-\u003eFM a b",
          "package": "EdisonCore",
          "signature": "k-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:delete"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "deleteAll",
          "package": "EdisonCore",
          "signature": "k -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-AssocList.html#deleteAll",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "deleteAll",
          "normalized": "a-\u003eFM a b-\u003eFM a b",
          "package": "EdisonCore",
          "partial": "All",
          "signature": "k-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:deleteAll"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "deleteMax",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-AssocList.html#deleteMax",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "deleteMax",
          "normalized": "FM a b-\u003eFM a b",
          "package": "EdisonCore",
          "partial": "Max",
          "signature": "FM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:deleteMax"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "deleteMin",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-AssocList.html#deleteMin",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "deleteMin",
          "normalized": "FM a b-\u003eFM a b",
          "package": "EdisonCore",
          "partial": "Min",
          "signature": "FM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:deleteMin"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "deleteSeq",
          "package": "EdisonCore",
          "signature": "seq k -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-AssocList.html#deleteSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "deleteSeq",
          "normalized": "a b-\u003eFM b c-\u003eFM b c",
          "package": "EdisonCore",
          "partial": "Seq",
          "signature": "seq k-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:deleteSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "difference",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e FM k b -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-AssocList.html#difference",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "difference",
          "normalized": "FM a b-\u003eFM a c-\u003eFM a b",
          "package": "EdisonCore",
          "signature": "FM k a-\u003eFM k b-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:difference"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "elements",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e seq a",
          "source": "src/Data-Edison-Assoc-AssocList.html#elements",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "elements",
          "normalized": "FM a b-\u003ec b",
          "package": "EdisonCore",
          "signature": "FM k a-\u003eseq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:elements"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "empty",
          "package": "EdisonCore",
          "signature": "FM k a",
          "source": "src/Data-Edison-Assoc-AssocList.html#empty",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "empty",
          "package": "EdisonCore",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:empty"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "filter",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-AssocList.html#filter",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "filter",
          "normalized": "(a-\u003eBool)-\u003eFM b a-\u003eFM b a",
          "package": "EdisonCore",
          "signature": "(a-\u003eBool)-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:filter"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "filterGE",
          "package": "EdisonCore",
          "signature": "k -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-AssocList.html#filterGE",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "filterGE",
          "normalized": "a-\u003eFM a b-\u003eFM a b",
          "package": "EdisonCore",
          "partial": "GE",
          "signature": "k-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:filterGE"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "filterGT",
          "package": "EdisonCore",
          "signature": "k -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-AssocList.html#filterGT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "filterGT",
          "normalized": "a-\u003eFM a b-\u003eFM a b",
          "package": "EdisonCore",
          "partial": "GT",
          "signature": "k-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:filterGT"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "filterLE",
          "package": "EdisonCore",
          "signature": "k -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-AssocList.html#filterLE",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "filterLE",
          "normalized": "a-\u003eFM a b-\u003eFM a b",
          "package": "EdisonCore",
          "partial": "LE",
          "signature": "k-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:filterLE"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "filterLT",
          "package": "EdisonCore",
          "signature": "k -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-AssocList.html#filterLT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "filterLT",
          "normalized": "a-\u003eFM a b-\u003eFM a b",
          "package": "EdisonCore",
          "partial": "LT",
          "signature": "k-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:filterLT"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "filterWithKey",
          "package": "EdisonCore",
          "signature": "(k -\u003e a -\u003e Bool) -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-AssocList.html#filterWithKey",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "filterWithKey",
          "normalized": "(a-\u003eb-\u003eBool)-\u003eFM a b-\u003eFM a b",
          "package": "EdisonCore",
          "partial": "With Key",
          "signature": "(k-\u003ea-\u003eBool)-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:filterWithKey"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "fold",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e FM k a -\u003e b",
          "source": "src/Data-Edison-Assoc-AssocList.html#fold",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "fold",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eFM c a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eFM k a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:fold"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "fold'",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e FM k a -\u003e b",
          "source": "src/Data-Edison-Assoc-AssocList.html#fold%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "fold'",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eFM c a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eFM k a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:fold-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "fold1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e FM k a -\u003e a",
          "source": "src/Data-Edison-Assoc-AssocList.html#fold1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "fold1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eFM b a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eFM k a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:fold1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "fold1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e FM k a -\u003e a",
          "source": "src/Data-Edison-Assoc-AssocList.html#fold1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "fold1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eFM b a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eFM k a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:fold1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "foldWithKey",
          "package": "EdisonCore",
          "signature": "(k -\u003e a -\u003e b -\u003e b) -\u003e b -\u003e FM k a -\u003e b",
          "source": "src/Data-Edison-Assoc-AssocList.html#foldWithKey",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "foldWithKey",
          "normalized": "(a-\u003eb-\u003ec-\u003ec)-\u003ec-\u003eFM a b-\u003ec",
          "package": "EdisonCore",
          "partial": "With Key",
          "signature": "(k-\u003ea-\u003eb-\u003eb)-\u003eb-\u003eFM k a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:foldWithKey"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "foldWithKey'",
          "package": "EdisonCore",
          "signature": "(k -\u003e a -\u003e b -\u003e b) -\u003e b -\u003e FM k a -\u003e b",
          "source": "src/Data-Edison-Assoc-AssocList.html#foldWithKey%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "foldWithKey'",
          "normalized": "(a-\u003eb-\u003ec-\u003ec)-\u003ec-\u003eFM a b-\u003ec",
          "package": "EdisonCore",
          "partial": "With Key'",
          "signature": "(k-\u003ea-\u003eb-\u003eb)-\u003eb-\u003eFM k a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:foldWithKey-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "foldl",
          "package": "EdisonCore",
          "signature": "(b -\u003e a -\u003e b) -\u003e b -\u003e FM k a -\u003e b",
          "source": "src/Data-Edison-Assoc-AssocList.html#foldl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "foldl",
          "normalized": "(a-\u003eb-\u003ea)-\u003ea-\u003eFM c b-\u003ea",
          "package": "EdisonCore",
          "signature": "(b-\u003ea-\u003eb)-\u003eb-\u003eFM k a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:foldl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "foldl'",
          "package": "EdisonCore",
          "signature": "(b -\u003e a -\u003e b) -\u003e b -\u003e FM k a -\u003e b",
          "source": "src/Data-Edison-Assoc-AssocList.html#foldl%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "foldl'",
          "normalized": "(a-\u003eb-\u003ea)-\u003ea-\u003eFM c b-\u003ea",
          "package": "EdisonCore",
          "signature": "(b-\u003ea-\u003eb)-\u003eb-\u003eFM k a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:foldl-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "foldl1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e FM k a -\u003e a",
          "source": "src/Data-Edison-Assoc-AssocList.html#foldl1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "foldl1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eFM b a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eFM k a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:foldl1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "foldl1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e FM k a -\u003e a",
          "source": "src/Data-Edison-Assoc-AssocList.html#foldl1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "foldl1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eFM b a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eFM k a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:foldl1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "foldlWithKey",
          "package": "EdisonCore",
          "signature": "(b -\u003e k -\u003e a -\u003e b) -\u003e b -\u003e FM k a -\u003e b",
          "source": "src/Data-Edison-Assoc-AssocList.html#foldlWithKey",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "foldlWithKey",
          "normalized": "(a-\u003eb-\u003ec-\u003ea)-\u003ea-\u003eFM b c-\u003ea",
          "package": "EdisonCore",
          "partial": "With Key",
          "signature": "(b-\u003ek-\u003ea-\u003eb)-\u003eb-\u003eFM k a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:foldlWithKey"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "foldlWithKey'",
          "package": "EdisonCore",
          "signature": "(b -\u003e k -\u003e a -\u003e b) -\u003e b -\u003e FM k a -\u003e b",
          "source": "src/Data-Edison-Assoc-AssocList.html#foldlWithKey%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "foldlWithKey'",
          "normalized": "(a-\u003eb-\u003ec-\u003ea)-\u003ea-\u003eFM b c-\u003ea",
          "package": "EdisonCore",
          "partial": "With Key'",
          "signature": "(b-\u003ek-\u003ea-\u003eb)-\u003eb-\u003eFM k a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:foldlWithKey-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "foldr",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e FM k a -\u003e b",
          "source": "src/Data-Edison-Assoc-AssocList.html#foldr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "foldr",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eFM c a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eFM k a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:foldr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "foldr'",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e FM k a -\u003e b",
          "source": "src/Data-Edison-Assoc-AssocList.html#foldr%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "foldr'",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eFM c a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eFM k a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:foldr-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "foldr1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e FM k a -\u003e a",
          "source": "src/Data-Edison-Assoc-AssocList.html#foldr1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "foldr1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eFM b a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eFM k a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:foldr1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "foldr1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e FM k a -\u003e a",
          "source": "src/Data-Edison-Assoc-AssocList.html#foldr1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "foldr1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eFM b a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eFM k a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:foldr1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "foldrWithKey",
          "package": "EdisonCore",
          "signature": "(k -\u003e a -\u003e b -\u003e b) -\u003e b -\u003e FM k a -\u003e b",
          "source": "src/Data-Edison-Assoc-AssocList.html#foldrWithKey",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "foldrWithKey",
          "normalized": "(a-\u003eb-\u003ec-\u003ec)-\u003ec-\u003eFM a b-\u003ec",
          "package": "EdisonCore",
          "partial": "With Key",
          "signature": "(k-\u003ea-\u003eb-\u003eb)-\u003eb-\u003eFM k a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:foldrWithKey"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "foldrWithKey'",
          "package": "EdisonCore",
          "signature": "(k -\u003e a -\u003e b -\u003e b) -\u003e b -\u003e FM k a -\u003e b",
          "source": "src/Data-Edison-Assoc-AssocList.html#foldrWithKey%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "foldrWithKey'",
          "normalized": "(a-\u003eb-\u003ec-\u003ec)-\u003ec-\u003eFM a b-\u003ec",
          "package": "EdisonCore",
          "partial": "With Key'",
          "signature": "(k-\u003ea-\u003eb-\u003eb)-\u003eb-\u003eFM k a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:foldrWithKey-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "fromSeq",
          "package": "EdisonCore",
          "signature": "seq (k, a) -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-AssocList.html#fromSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "fromSeq",
          "normalized": "a(b,c)-\u003eFM b c",
          "package": "EdisonCore",
          "partial": "Seq",
          "signature": "seq(k,a)-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:fromSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "fromSeqWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e seq (k, a) -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-AssocList.html#fromSeqWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "fromSeqWith",
          "normalized": "(a-\u003ea-\u003ea)-\u003eb(c,a)-\u003eFM c a",
          "package": "EdisonCore",
          "partial": "Seq With",
          "signature": "(a-\u003ea-\u003ea)-\u003eseq(k,a)-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:fromSeqWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "fromSeqWithKey",
          "package": "EdisonCore",
          "signature": "(k -\u003e a -\u003e a -\u003e a) -\u003e seq (k, a) -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-AssocList.html#fromSeqWithKey",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "fromSeqWithKey",
          "normalized": "(a-\u003eb-\u003eb-\u003eb)-\u003ec(a,b)-\u003eFM a b",
          "package": "EdisonCore",
          "partial": "Seq With Key",
          "signature": "(k-\u003ea-\u003ea-\u003ea)-\u003eseq(k,a)-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:fromSeqWithKey"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "insert",
          "package": "EdisonCore",
          "signature": "k -\u003e a -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-AssocList.html#insert",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "insert",
          "normalized": "a-\u003eb-\u003eFM a b-\u003eFM a b",
          "package": "EdisonCore",
          "signature": "k-\u003ea-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:insert"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "insertSeq",
          "package": "EdisonCore",
          "signature": "seq (k, a) -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-AssocList.html#insertSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "insertSeq",
          "normalized": "a(b,c)-\u003eFM b c-\u003eFM b c",
          "package": "EdisonCore",
          "partial": "Seq",
          "signature": "seq(k,a)-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:insertSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "insertSeqWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e seq (k, a) -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-AssocList.html#insertSeqWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "insertSeqWith",
          "normalized": "(a-\u003ea-\u003ea)-\u003eb(c,a)-\u003eFM c a-\u003eFM c a",
          "package": "EdisonCore",
          "partial": "Seq With",
          "signature": "(a-\u003ea-\u003ea)-\u003eseq(k,a)-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:insertSeqWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "insertSeqWithKey",
          "package": "EdisonCore",
          "signature": "(k -\u003e a -\u003e a -\u003e a) -\u003e seq (k, a) -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-AssocList.html#insertSeqWithKey",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "insertSeqWithKey",
          "normalized": "(a-\u003eb-\u003eb-\u003eb)-\u003ec(a,b)-\u003eFM a b-\u003eFM a b",
          "package": "EdisonCore",
          "partial": "Seq With Key",
          "signature": "(k-\u003ea-\u003ea-\u003ea)-\u003eseq(k,a)-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:insertSeqWithKey"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "insertWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e k -\u003e a -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-AssocList.html#insertWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "insertWith",
          "normalized": "(a-\u003ea-\u003ea)-\u003eb-\u003ea-\u003eFM b a-\u003eFM b a",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003ea-\u003ea)-\u003ek-\u003ea-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:insertWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "insertWithKey",
          "package": "EdisonCore",
          "signature": "(k -\u003e a -\u003e a -\u003e a) -\u003e k -\u003e a -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-AssocList.html#insertWithKey",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "insertWithKey",
          "normalized": "(a-\u003eb-\u003eb-\u003eb)-\u003ea-\u003eb-\u003eFM a b-\u003eFM a b",
          "package": "EdisonCore",
          "partial": "With Key",
          "signature": "(k-\u003ea-\u003ea-\u003ea)-\u003ek-\u003ea-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:insertWithKey"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "intersectionWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e c) -\u003e FM k a -\u003e FM k b -\u003e FM k c",
          "source": "src/Data-Edison-Assoc-AssocList.html#intersectionWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "intersectionWith",
          "normalized": "(a-\u003eb-\u003ec)-\u003eFM d a-\u003eFM d b-\u003eFM d c",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003eb-\u003ec)-\u003eFM k a-\u003eFM k b-\u003eFM k c",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:intersectionWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "intersectionWithKey",
          "package": "EdisonCore",
          "signature": "(k -\u003e a -\u003e b -\u003e c) -\u003e FM k a -\u003e FM k b -\u003e FM k c",
          "source": "src/Data-Edison-Assoc-AssocList.html#intersectionWithKey",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "intersectionWithKey",
          "normalized": "(a-\u003eb-\u003ec-\u003ed)-\u003eFM a b-\u003eFM a c-\u003eFM a d",
          "package": "EdisonCore",
          "partial": "With Key",
          "signature": "(k-\u003ea-\u003eb-\u003ec)-\u003eFM k a-\u003eFM k b-\u003eFM k c",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:intersectionWithKey"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "keys",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e seq k",
          "source": "src/Data-Edison-Assoc-AssocList.html#keys",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "keys",
          "normalized": "FM a b-\u003ec a",
          "package": "EdisonCore",
          "signature": "FM k a-\u003eseq k",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:keys"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "lookup",
          "package": "EdisonCore",
          "signature": "k -\u003e FM k a -\u003e a",
          "source": "src/Data-Edison-Assoc-AssocList.html#lookup",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "lookup",
          "normalized": "a-\u003eFM a b-\u003eb",
          "package": "EdisonCore",
          "signature": "k-\u003eFM k a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:lookup"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "lookupAll",
          "package": "EdisonCore",
          "signature": "k -\u003e FM k a -\u003e seq a",
          "source": "src/Data-Edison-Assoc-AssocList.html#lookupAll",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "lookupAll",
          "normalized": "a-\u003eFM a b-\u003ec b",
          "package": "EdisonCore",
          "partial": "All",
          "signature": "k-\u003eFM k a-\u003eseq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:lookupAll"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "lookupAndDelete",
          "package": "EdisonCore",
          "signature": "k -\u003e FM k a -\u003e (a, FM k a)",
          "source": "src/Data-Edison-Assoc-AssocList.html#lookupAndDelete",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "lookupAndDelete",
          "normalized": "a-\u003eFM a b-\u003e(b,FM a b)",
          "package": "EdisonCore",
          "partial": "And Delete",
          "signature": "k-\u003eFM k a-\u003e(a,FM k a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:lookupAndDelete"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "lookupAndDeleteAll",
          "package": "EdisonCore",
          "signature": "k -\u003e FM k a -\u003e (seq a, FM k a)",
          "source": "src/Data-Edison-Assoc-AssocList.html#lookupAndDeleteAll",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "lookupAndDeleteAll",
          "normalized": "a-\u003eFM a b-\u003e(c b,FM a b)",
          "package": "EdisonCore",
          "partial": "And Delete All",
          "signature": "k-\u003eFM k a-\u003e(seq a,FM k a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:lookupAndDeleteAll"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "lookupAndDeleteM",
          "package": "EdisonCore",
          "signature": "k -\u003e FM k a -\u003e rm (a, FM k a)",
          "source": "src/Data-Edison-Assoc-AssocList.html#lookupAndDeleteM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "lookupAndDeleteM",
          "normalized": "a-\u003eFM a b-\u003ec(b,FM a b)",
          "package": "EdisonCore",
          "partial": "And Delete",
          "signature": "k-\u003eFM k a-\u003erm(a,FM k a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:lookupAndDeleteM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "lookupM",
          "package": "EdisonCore",
          "signature": "k -\u003e FM k a -\u003e rm a",
          "source": "src/Data-Edison-Assoc-AssocList.html#lookupM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "lookupM",
          "normalized": "a-\u003eFM a b-\u003ec b",
          "package": "EdisonCore",
          "signature": "k-\u003eFM k a-\u003erm a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:lookupM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "lookupWithDefault",
          "package": "EdisonCore",
          "signature": "a -\u003e k -\u003e FM k a -\u003e a",
          "source": "src/Data-Edison-Assoc-AssocList.html#lookupWithDefault",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "lookupWithDefault",
          "normalized": "a-\u003eb-\u003eFM b a-\u003ea",
          "package": "EdisonCore",
          "partial": "With Default",
          "signature": "a-\u003ek-\u003eFM k a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:lookupWithDefault"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "map",
          "package": "EdisonCore",
          "signature": "(a -\u003e b) -\u003e FM k a -\u003e FM k b",
          "source": "src/Data-Edison-Assoc-AssocList.html#map",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "map",
          "normalized": "(a-\u003eb)-\u003eFM c a-\u003eFM c b",
          "package": "EdisonCore",
          "signature": "(a-\u003eb)-\u003eFM k a-\u003eFM k b",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:map"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "mapWithKey",
          "package": "EdisonCore",
          "signature": "(k -\u003e a -\u003e b) -\u003e FM k a -\u003e FM k b",
          "source": "src/Data-Edison-Assoc-AssocList.html#mapWithKey",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "mapWithKey",
          "normalized": "(a-\u003eb-\u003ec)-\u003eFM a b-\u003eFM a c",
          "package": "EdisonCore",
          "partial": "With Key",
          "signature": "(k-\u003ea-\u003eb)-\u003eFM k a-\u003eFM k b",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:mapWithKey"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "maxElem",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e a",
          "source": "src/Data-Edison-Assoc-AssocList.html#maxElem",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "maxElem",
          "normalized": "FM a b-\u003eb",
          "package": "EdisonCore",
          "partial": "Elem",
          "signature": "FM k a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:maxElem"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "maxElemWithKey",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e (k, a)",
          "source": "src/Data-Edison-Assoc-AssocList.html#maxElemWithKey",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "maxElemWithKey",
          "normalized": "FM a b-\u003e(a,b)",
          "package": "EdisonCore",
          "partial": "Elem With Key",
          "signature": "FM k a-\u003e(k,a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:maxElemWithKey"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "maxView",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e m (a, FM k a)",
          "source": "src/Data-Edison-Assoc-AssocList.html#maxView",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "maxView",
          "normalized": "FM a b-\u003ec(b,FM a b)",
          "package": "EdisonCore",
          "partial": "View",
          "signature": "FM k a-\u003em(a,FM k a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:maxView"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "maxViewWithKey",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e m ((k, a), FM k a)",
          "source": "src/Data-Edison-Assoc-AssocList.html#maxViewWithKey",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "maxViewWithKey",
          "normalized": "FM a b-\u003ec((a,b),FM a b)",
          "package": "EdisonCore",
          "partial": "View With Key",
          "signature": "FM k a-\u003em((k,a),FM k a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:maxViewWithKey"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "member",
          "package": "EdisonCore",
          "signature": "k -\u003e FM k a -\u003e Bool",
          "source": "src/Data-Edison-Assoc-AssocList.html#member",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "member",
          "normalized": "a-\u003eFM a b-\u003eBool",
          "package": "EdisonCore",
          "signature": "k-\u003eFM k a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:member"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "minElem",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e a",
          "source": "src/Data-Edison-Assoc-AssocList.html#minElem",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "minElem",
          "normalized": "FM a b-\u003eb",
          "package": "EdisonCore",
          "partial": "Elem",
          "signature": "FM k a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:minElem"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "minElemWithKey",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e (k, a)",
          "source": "src/Data-Edison-Assoc-AssocList.html#minElemWithKey",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "minElemWithKey",
          "normalized": "FM a b-\u003e(a,b)",
          "package": "EdisonCore",
          "partial": "Elem With Key",
          "signature": "FM k a-\u003e(k,a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:minElemWithKey"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "minView",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e m (a, FM k a)",
          "source": "src/Data-Edison-Assoc-AssocList.html#minView",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "minView",
          "normalized": "FM a b-\u003ec(b,FM a b)",
          "package": "EdisonCore",
          "partial": "View",
          "signature": "FM k a-\u003em(a,FM k a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:minView"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "minViewWithKey",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e m ((k, a), FM k a)",
          "source": "src/Data-Edison-Assoc-AssocList.html#minViewWithKey",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "minViewWithKey",
          "normalized": "FM a b-\u003ec((a,b),FM a b)",
          "package": "EdisonCore",
          "partial": "View With Key",
          "signature": "FM k a-\u003em((k,a),FM k a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:minViewWithKey"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "moduleName",
          "package": "EdisonCore",
          "signature": "String",
          "source": "src/Data-Edison-Assoc-AssocList.html#moduleName",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "moduleName",
          "package": "EdisonCore",
          "partial": "Name",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:moduleName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "null",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e Bool",
          "source": "src/Data-Edison-Assoc-AssocList.html#null",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "null",
          "normalized": "FM a b-\u003eBool",
          "package": "EdisonCore",
          "signature": "FM k a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:null"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "partition",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e FM k a -\u003e (FM k a, FM k a)",
          "source": "src/Data-Edison-Assoc-AssocList.html#partition",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "partition",
          "normalized": "(a-\u003eBool)-\u003eFM b a-\u003e(FM b a,FM b a)",
          "package": "EdisonCore",
          "signature": "(a-\u003eBool)-\u003eFM k a-\u003e(FM k a,FM k a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:partition"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "partitionLE_GT",
          "package": "EdisonCore",
          "signature": "k -\u003e FM k a -\u003e (FM k a, FM k a)",
          "source": "src/Data-Edison-Assoc-AssocList.html#partitionLE_GT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "partitionLE_GT",
          "normalized": "a-\u003eFM a b-\u003e(FM a b,FM a b)",
          "package": "EdisonCore",
          "partial": "LE GT",
          "signature": "k-\u003eFM k a-\u003e(FM k a,FM k a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:partitionLE_GT"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "partitionLT_GE",
          "package": "EdisonCore",
          "signature": "k -\u003e FM k a -\u003e (FM k a, FM k a)",
          "source": "src/Data-Edison-Assoc-AssocList.html#partitionLT_GE",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "partitionLT_GE",
          "normalized": "a-\u003eFM a b-\u003e(FM a b,FM a b)",
          "package": "EdisonCore",
          "partial": "LT GE",
          "signature": "k-\u003eFM k a-\u003e(FM k a,FM k a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:partitionLT_GE"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "partitionLT_GT",
          "package": "EdisonCore",
          "signature": "k -\u003e FM k a -\u003e (FM k a, FM k a)",
          "source": "src/Data-Edison-Assoc-AssocList.html#partitionLT_GT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "partitionLT_GT",
          "normalized": "a-\u003eFM a b-\u003e(FM a b,FM a b)",
          "package": "EdisonCore",
          "partial": "LT GT",
          "signature": "k-\u003eFM k a-\u003e(FM k a,FM k a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:partitionLT_GT"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "partitionWithKey",
          "package": "EdisonCore",
          "signature": "(k -\u003e a -\u003e Bool) -\u003e FM k a -\u003e (FM k a, FM k a)",
          "source": "src/Data-Edison-Assoc-AssocList.html#partitionWithKey",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "partitionWithKey",
          "normalized": "(a-\u003eb-\u003eBool)-\u003eFM a b-\u003e(FM a b,FM a b)",
          "package": "EdisonCore",
          "partial": "With Key",
          "signature": "(k-\u003ea-\u003eBool)-\u003eFM k a-\u003e(FM k a,FM k a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:partitionWithKey"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "properSubmap",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e FM k a -\u003e Bool",
          "source": "src/Data-Edison-Assoc-AssocList.html#properSubmap",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "properSubmap",
          "normalized": "FM a b-\u003eFM a b-\u003eBool",
          "package": "EdisonCore",
          "partial": "Submap",
          "signature": "FM k a-\u003eFM k a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:properSubmap"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "properSubmapBy",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e Bool) -\u003e FM k a -\u003e FM k a -\u003e Bool",
          "source": "src/Data-Edison-Assoc-AssocList.html#properSubmapBy",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "properSubmapBy",
          "normalized": "(a-\u003ea-\u003eBool)-\u003eFM b a-\u003eFM b a-\u003eBool",
          "package": "EdisonCore",
          "partial": "Submap By",
          "signature": "(a-\u003ea-\u003eBool)-\u003eFM k a-\u003eFM k a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:properSubmapBy"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "properSubset",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e FM k b -\u003e Bool",
          "source": "src/Data-Edison-Assoc-AssocList.html#properSubset",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "properSubset",
          "normalized": "FM a b-\u003eFM a c-\u003eBool",
          "package": "EdisonCore",
          "partial": "Subset",
          "signature": "FM k a-\u003eFM k b-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:properSubset"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "sameMap",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e FM k a -\u003e Bool",
          "source": "src/Data-Edison-Assoc-AssocList.html#sameMap",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "sameMap",
          "normalized": "FM a b-\u003eFM a b-\u003eBool",
          "package": "EdisonCore",
          "partial": "Map",
          "signature": "FM k a-\u003eFM k a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:sameMap"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "sameMapBy",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e Bool) -\u003e FM k a -\u003e FM k a -\u003e Bool",
          "source": "src/Data-Edison-Assoc-AssocList.html#sameMapBy",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "sameMapBy",
          "normalized": "(a-\u003ea-\u003eBool)-\u003eFM b a-\u003eFM b a-\u003eBool",
          "package": "EdisonCore",
          "partial": "Map By",
          "signature": "(a-\u003ea-\u003eBool)-\u003eFM k a-\u003eFM k a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:sameMapBy"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "singleton",
          "package": "EdisonCore",
          "signature": "k -\u003e a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-AssocList.html#singleton",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "singleton",
          "normalized": "a-\u003eb-\u003eFM a b",
          "package": "EdisonCore",
          "signature": "k-\u003ea-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:singleton"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "size",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e Int",
          "source": "src/Data-Edison-Assoc-AssocList.html#size",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "size",
          "normalized": "FM a b-\u003eInt",
          "package": "EdisonCore",
          "signature": "FM k a-\u003eInt",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:size"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "strict",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-AssocList.html#strict",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "strict",
          "normalized": "FM a b-\u003eFM a b",
          "package": "EdisonCore",
          "signature": "FM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:strict"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "strictWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e b) -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-AssocList.html#strictWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "strictWith",
          "normalized": "(a-\u003eb)-\u003eFM c a-\u003eFM c a",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003eb)-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:strictWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "structuralInvariant",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e Bool",
          "source": "src/Data-Edison-Assoc-AssocList.html#structuralInvariant",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "structuralInvariant",
          "normalized": "FM a b-\u003eBool",
          "package": "EdisonCore",
          "partial": "Invariant",
          "signature": "FM k a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:structuralInvariant"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "submap",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e FM k a -\u003e Bool",
          "source": "src/Data-Edison-Assoc-AssocList.html#submap",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "submap",
          "normalized": "FM a b-\u003eFM a b-\u003eBool",
          "package": "EdisonCore",
          "signature": "FM k a-\u003eFM k a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:submap"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "submapBy",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e Bool) -\u003e FM k a -\u003e FM k a -\u003e Bool",
          "source": "src/Data-Edison-Assoc-AssocList.html#submapBy",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "submapBy",
          "normalized": "(a-\u003ea-\u003eBool)-\u003eFM b a-\u003eFM b a-\u003eBool",
          "package": "EdisonCore",
          "partial": "By",
          "signature": "(a-\u003ea-\u003eBool)-\u003eFM k a-\u003eFM k a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:submapBy"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "subset",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e FM k b -\u003e Bool",
          "source": "src/Data-Edison-Assoc-AssocList.html#subset",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "subset",
          "normalized": "FM a b-\u003eFM a c-\u003eBool",
          "package": "EdisonCore",
          "signature": "FM k a-\u003eFM k b-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:subset"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "toOrdSeq",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e seq (k, a)",
          "source": "src/Data-Edison-Assoc-AssocList.html#toOrdSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "toOrdSeq",
          "normalized": "FM a b-\u003ec(a,b)",
          "package": "EdisonCore",
          "partial": "Ord Seq",
          "signature": "FM k a-\u003eseq(k,a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:toOrdSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "toSeq",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e seq (k, a)",
          "source": "src/Data-Edison-Assoc-AssocList.html#toSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "toSeq",
          "normalized": "FM a b-\u003ec(a,b)",
          "package": "EdisonCore",
          "partial": "Seq",
          "signature": "FM k a-\u003eseq(k,a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:toSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "union",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-AssocList.html#union",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "union",
          "normalized": "FM a b-\u003eFM a b-\u003eFM a b",
          "package": "EdisonCore",
          "signature": "FM k a-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:union"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "unionSeq",
          "package": "EdisonCore",
          "signature": "seq (FM k a) -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-AssocList.html#unionSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "unionSeq",
          "normalized": "a(FM b c)-\u003eFM b c",
          "package": "EdisonCore",
          "partial": "Seq",
          "signature": "seq(FM k a)-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:unionSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "unionSeqWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e seq (FM k a) -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-AssocList.html#unionSeqWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "unionSeqWith",
          "normalized": "(a-\u003ea-\u003ea)-\u003eb(FM c a)-\u003eFM c a",
          "package": "EdisonCore",
          "partial": "Seq With",
          "signature": "(a-\u003ea-\u003ea)-\u003eseq(FM k a)-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:unionSeqWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "unionSeqWithKey",
          "package": "EdisonCore",
          "signature": "(k -\u003e a -\u003e a -\u003e a) -\u003e seq (FM k a) -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-AssocList.html#unionSeqWithKey",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "unionSeqWithKey",
          "normalized": "(a-\u003eb-\u003eb-\u003eb)-\u003ec(FM a b)-\u003eFM a b",
          "package": "EdisonCore",
          "partial": "Seq With Key",
          "signature": "(k-\u003ea-\u003ea-\u003ea)-\u003eseq(FM k a)-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:unionSeqWithKey"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "unionWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e FM k a -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-AssocList.html#unionWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "unionWith",
          "normalized": "(a-\u003ea-\u003ea)-\u003eFM b a-\u003eFM b a-\u003eFM b a",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003ea-\u003ea)-\u003eFM k a-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:unionWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "unionWithKey",
          "package": "EdisonCore",
          "signature": "(k -\u003e a -\u003e a -\u003e a) -\u003e FM k a -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-AssocList.html#unionWithKey",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "unionWithKey",
          "normalized": "(a-\u003eb-\u003eb-\u003eb)-\u003eFM a b-\u003eFM a b-\u003eFM a b",
          "package": "EdisonCore",
          "partial": "With Key",
          "signature": "(k-\u003ea-\u003ea-\u003ea)-\u003eFM k a-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:unionWithKey"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "unionl",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-AssocList.html#unionl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "unionl",
          "normalized": "FM a b-\u003eFM a b-\u003eFM a b",
          "package": "EdisonCore",
          "signature": "FM k a-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:unionl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "unionr",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-AssocList.html#unionr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "unionr",
          "normalized": "FM a b-\u003eFM a b-\u003eFM a b",
          "package": "EdisonCore",
          "signature": "FM k a-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:unionr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "unsafeAppend",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-AssocList.html#unsafeAppend",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "unsafeAppend",
          "normalized": "FM a b-\u003eFM a b-\u003eFM a b",
          "package": "EdisonCore",
          "partial": "Append",
          "signature": "FM k a-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:unsafeAppend"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "unsafeFromOrdSeq",
          "package": "EdisonCore",
          "signature": "seq (k, a) -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-AssocList.html#unsafeFromOrdSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "unsafeFromOrdSeq",
          "normalized": "a(b,c)-\u003eFM b c",
          "package": "EdisonCore",
          "partial": "From Ord Seq",
          "signature": "seq(k,a)-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:unsafeFromOrdSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "unsafeInsertMax",
          "package": "EdisonCore",
          "signature": "k -\u003e a -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-AssocList.html#unsafeInsertMax",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "unsafeInsertMax",
          "normalized": "a-\u003eb-\u003eFM a b-\u003eFM a b",
          "package": "EdisonCore",
          "partial": "Insert Max",
          "signature": "k-\u003ea-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:unsafeInsertMax"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.AssocList",
          "name": "unsafeInsertMin",
          "package": "EdisonCore",
          "signature": "k -\u003e a -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-AssocList.html#unsafeInsertMin",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc AssocList",
          "module": "Data.Edison.Assoc.AssocList",
          "name": "unsafeInsertMin",
          "normalized": "a-\u003eb-\u003eFM a b-\u003eFM a b",
          "package": "EdisonCore",
          "partial": "Insert Min",
          "signature": "k-\u003ea-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-AssocList.html#v:unsafeInsertMin"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThis module provides default implementations of many of the associative\n   collection operations.  These function are used to fill in collection\n   implementations and are not intended to be used directly by end users.\n\u003c/p\u003e\u003c/div\u003e",
          "module": "Data.Edison.Assoc.Defaults",
          "name": "Defaults",
          "package": "EdisonCore",
          "source": "src/Data-Edison-Assoc-Defaults.html",
          "type": "module"
        },
        "index": {
          "description": "This module provides default implementations of many of the associative collection operations These function are used to fill in collection implementations and are not intended to be used directly by end users",
          "hierarchy": "Data Edison Assoc Defaults",
          "module": "Data.Edison.Assoc.Defaults",
          "name": "Defaults",
          "package": "EdisonCore",
          "partial": "Defaults",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-Defaults.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.Defaults",
          "name": "adjustOrDeleteAllDefault",
          "package": "EdisonCore",
          "signature": "(a -\u003e Maybe a) -\u003e k -\u003e m a -\u003e m a",
          "source": "src/Data-Edison-Assoc-Defaults.html#adjustOrDeleteAllDefault",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc Defaults",
          "module": "Data.Edison.Assoc.Defaults",
          "name": "adjustOrDeleteAllDefault",
          "normalized": "(a-\u003eMaybe a)-\u003eb-\u003ec a-\u003ec a",
          "package": "EdisonCore",
          "partial": "Or Delete All Default",
          "signature": "(a-\u003eMaybe a)-\u003ek-\u003em a-\u003em a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-Defaults.html#v:adjustOrDeleteAllDefault"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.Defaults",
          "name": "adjustOrDeleteDefault",
          "package": "EdisonCore",
          "signature": "(a -\u003e Maybe a) -\u003e k -\u003e m a -\u003e m a",
          "source": "src/Data-Edison-Assoc-Defaults.html#adjustOrDeleteDefault",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc Defaults",
          "module": "Data.Edison.Assoc.Defaults",
          "name": "adjustOrDeleteDefault",
          "normalized": "(a-\u003eMaybe a)-\u003eb-\u003ec a-\u003ec a",
          "package": "EdisonCore",
          "partial": "Or Delete Default",
          "signature": "(a-\u003eMaybe a)-\u003ek-\u003em a-\u003em a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-Defaults.html#v:adjustOrDeleteDefault"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.Defaults",
          "name": "adjustOrInsertUsingMember",
          "package": "EdisonCore",
          "signature": "(a -\u003e a) -\u003e a -\u003e k -\u003e m a -\u003e m a",
          "source": "src/Data-Edison-Assoc-Defaults.html#adjustOrInsertUsingMember",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc Defaults",
          "module": "Data.Edison.Assoc.Defaults",
          "name": "adjustOrInsertUsingMember",
          "normalized": "(a-\u003ea)-\u003ea-\u003eb-\u003ec a-\u003ec a",
          "package": "EdisonCore",
          "partial": "Or Insert Using Member",
          "signature": "(a-\u003ea)-\u003ea-\u003ek-\u003em a-\u003em a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-Defaults.html#v:adjustOrInsertUsingMember"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.Defaults",
          "name": "compareUsingToOrdList",
          "package": "EdisonCore",
          "signature": "m a -\u003e m a -\u003e Ordering",
          "source": "src/Data-Edison-Assoc-Defaults.html#compareUsingToOrdList",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc Defaults",
          "module": "Data.Edison.Assoc.Defaults",
          "name": "compareUsingToOrdList",
          "normalized": "a b-\u003ea b-\u003eOrdering",
          "package": "EdisonCore",
          "partial": "Using To Ord List",
          "signature": "m a-\u003em a-\u003eOrdering",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-Defaults.html#v:compareUsingToOrdList"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.Defaults",
          "name": "countUsingMember",
          "package": "EdisonCore",
          "signature": "k -\u003e m a -\u003e Int",
          "source": "src/Data-Edison-Assoc-Defaults.html#countUsingMember",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc Defaults",
          "module": "Data.Edison.Assoc.Defaults",
          "name": "countUsingMember",
          "normalized": "a-\u003eb c-\u003eInt",
          "package": "EdisonCore",
          "partial": "Using Member",
          "signature": "k-\u003em a-\u003eInt",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-Defaults.html#v:countUsingMember"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.Defaults",
          "name": "deleteMaxUsingMaxView",
          "package": "EdisonCore",
          "signature": "m a -\u003e m a",
          "source": "src/Data-Edison-Assoc-Defaults.html#deleteMaxUsingMaxView",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc Defaults",
          "module": "Data.Edison.Assoc.Defaults",
          "name": "deleteMaxUsingMaxView",
          "normalized": "a b-\u003ea b",
          "package": "EdisonCore",
          "partial": "Max Using Max View",
          "signature": "m a-\u003em a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-Defaults.html#v:deleteMaxUsingMaxView"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.Defaults",
          "name": "deleteMinUsingMinView",
          "package": "EdisonCore",
          "signature": "m a -\u003e m a",
          "source": "src/Data-Edison-Assoc-Defaults.html#deleteMinUsingMinView",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc Defaults",
          "module": "Data.Edison.Assoc.Defaults",
          "name": "deleteMinUsingMinView",
          "normalized": "a b-\u003ea b",
          "package": "EdisonCore",
          "partial": "Min Using Min View",
          "signature": "m a-\u003em a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-Defaults.html#v:deleteMinUsingMinView"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.Defaults",
          "name": "deleteSeqUsingFoldr",
          "package": "EdisonCore",
          "signature": "seq k -\u003e m a -\u003e m a",
          "source": "src/Data-Edison-Assoc-Defaults.html#deleteSeqUsingFoldr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc Defaults",
          "module": "Data.Edison.Assoc.Defaults",
          "name": "deleteSeqUsingFoldr",
          "normalized": "a b-\u003ec d-\u003ec d",
          "package": "EdisonCore",
          "partial": "Seq Using Foldr",
          "signature": "seq k-\u003em a-\u003em a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-Defaults.html#v:deleteSeqUsingFoldr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.Defaults",
          "name": "differenceUsingDelete",
          "package": "EdisonCore",
          "signature": "m a -\u003e m b -\u003e m a",
          "source": "src/Data-Edison-Assoc-Defaults.html#differenceUsingDelete",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc Defaults",
          "module": "Data.Edison.Assoc.Defaults",
          "name": "differenceUsingDelete",
          "normalized": "a b-\u003ea c-\u003ea b",
          "package": "EdisonCore",
          "partial": "Using Delete",
          "signature": "m a-\u003em b-\u003em a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-Defaults.html#v:differenceUsingDelete"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.Defaults",
          "name": "elementsUsingFold",
          "package": "EdisonCore",
          "signature": "m a -\u003e seq a",
          "source": "src/Data-Edison-Assoc-Defaults.html#elementsUsingFold",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc Defaults",
          "module": "Data.Edison.Assoc.Defaults",
          "name": "elementsUsingFold",
          "normalized": "a b-\u003ec b",
          "package": "EdisonCore",
          "partial": "Using Fold",
          "signature": "m a-\u003eseq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-Defaults.html#v:elementsUsingFold"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.Defaults",
          "name": "fold1UsingElements",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e m a -\u003e a",
          "source": "src/Data-Edison-Assoc-Defaults.html#fold1UsingElements",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc Defaults",
          "module": "Data.Edison.Assoc.Defaults",
          "name": "fold1UsingElements",
          "normalized": "(a-\u003ea-\u003ea)-\u003eb a-\u003ea",
          "package": "EdisonCore",
          "partial": "Using Elements",
          "signature": "(a-\u003ea-\u003ea)-\u003em a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-Defaults.html#v:fold1UsingElements"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.Defaults",
          "name": "fromSeqUsingInsertSeq",
          "package": "EdisonCore",
          "signature": "seq (k, a) -\u003e m a",
          "source": "src/Data-Edison-Assoc-Defaults.html#fromSeqUsingInsertSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc Defaults",
          "module": "Data.Edison.Assoc.Defaults",
          "name": "fromSeqUsingInsertSeq",
          "normalized": "a(b,c)-\u003ed c",
          "package": "EdisonCore",
          "partial": "Seq Using Insert Seq",
          "signature": "seq(k,a)-\u003em a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-Defaults.html#v:fromSeqUsingInsertSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.Defaults",
          "name": "fromSeqWithKeyUsingInsertSeqWithKey",
          "package": "EdisonCore",
          "signature": "(k -\u003e a -\u003e a -\u003e a) -\u003e seq (k, a) -\u003e m a",
          "source": "src/Data-Edison-Assoc-Defaults.html#fromSeqWithKeyUsingInsertSeqWithKey",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc Defaults",
          "module": "Data.Edison.Assoc.Defaults",
          "name": "fromSeqWithKeyUsingInsertSeqWithKey",
          "normalized": "(a-\u003eb-\u003eb-\u003eb)-\u003ec(a,b)-\u003ed b",
          "package": "EdisonCore",
          "partial": "Seq With Key Using Insert Seq With Key",
          "signature": "(k-\u003ea-\u003ea-\u003ea)-\u003eseq(k,a)-\u003em a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-Defaults.html#v:fromSeqWithKeyUsingInsertSeqWithKey"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.Defaults",
          "name": "fromSeqWithUsingInsertSeqWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e seq (k, a) -\u003e m a",
          "source": "src/Data-Edison-Assoc-Defaults.html#fromSeqWithUsingInsertSeqWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc Defaults",
          "module": "Data.Edison.Assoc.Defaults",
          "name": "fromSeqWithUsingInsertSeqWith",
          "normalized": "(a-\u003ea-\u003ea)-\u003eb(c,a)-\u003ed a",
          "package": "EdisonCore",
          "partial": "Seq With Using Insert Seq With",
          "signature": "(a-\u003ea-\u003ea)-\u003eseq(k,a)-\u003em a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-Defaults.html#v:fromSeqWithUsingInsertSeqWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.Defaults",
          "name": "insertSeqUsingFoldr",
          "package": "EdisonCore",
          "signature": "seq (k, a) -\u003e m a -\u003e m a",
          "source": "src/Data-Edison-Assoc-Defaults.html#insertSeqUsingFoldr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc Defaults",
          "module": "Data.Edison.Assoc.Defaults",
          "name": "insertSeqUsingFoldr",
          "normalized": "a(b,c)-\u003ed c-\u003ed c",
          "package": "EdisonCore",
          "partial": "Seq Using Foldr",
          "signature": "seq(k,a)-\u003em a-\u003em a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-Defaults.html#v:insertSeqUsingFoldr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.Defaults",
          "name": "insertSeqWithKeyUsingInsertWithKey",
          "package": "EdisonCore",
          "signature": "(k -\u003e a -\u003e a -\u003e a) -\u003e seq (k, a) -\u003e m a -\u003e m a",
          "source": "src/Data-Edison-Assoc-Defaults.html#insertSeqWithKeyUsingInsertWithKey",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc Defaults",
          "module": "Data.Edison.Assoc.Defaults",
          "name": "insertSeqWithKeyUsingInsertWithKey",
          "normalized": "(a-\u003eb-\u003eb-\u003eb)-\u003ec(a,b)-\u003ed b-\u003ed b",
          "package": "EdisonCore",
          "partial": "Seq With Key Using Insert With Key",
          "signature": "(k-\u003ea-\u003ea-\u003ea)-\u003eseq(k,a)-\u003em a-\u003em a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-Defaults.html#v:insertSeqWithKeyUsingInsertWithKey"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.Defaults",
          "name": "insertSeqWithUsingInsertWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e seq (k, a) -\u003e m a -\u003e m a",
          "source": "src/Data-Edison-Assoc-Defaults.html#insertSeqWithUsingInsertWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc Defaults",
          "module": "Data.Edison.Assoc.Defaults",
          "name": "insertSeqWithUsingInsertWith",
          "normalized": "(a-\u003ea-\u003ea)-\u003eb(c,a)-\u003ed a-\u003ed a",
          "package": "EdisonCore",
          "partial": "Seq With Using Insert With",
          "signature": "(a-\u003ea-\u003ea)-\u003eseq(k,a)-\u003em a-\u003em a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-Defaults.html#v:insertSeqWithUsingInsertWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.Defaults",
          "name": "insertWithKeyUsingInsertWith",
          "package": "EdisonCore",
          "signature": "(k -\u003e a -\u003e a -\u003e a) -\u003e k -\u003e a -\u003e m a -\u003e m a",
          "source": "src/Data-Edison-Assoc-Defaults.html#insertWithKeyUsingInsertWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc Defaults",
          "module": "Data.Edison.Assoc.Defaults",
          "name": "insertWithKeyUsingInsertWith",
          "normalized": "(a-\u003eb-\u003eb-\u003eb)-\u003ea-\u003eb-\u003ec b-\u003ec b",
          "package": "EdisonCore",
          "partial": "With Key Using Insert With",
          "signature": "(k-\u003ea-\u003ea-\u003ea)-\u003ek-\u003ea-\u003em a-\u003em a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-Defaults.html#v:insertWithKeyUsingInsertWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.Defaults",
          "name": "insertWithUsingLookupM",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e k -\u003e a -\u003e m a -\u003e m a",
          "source": "src/Data-Edison-Assoc-Defaults.html#insertWithUsingLookupM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc Defaults",
          "module": "Data.Edison.Assoc.Defaults",
          "name": "insertWithUsingLookupM",
          "normalized": "(a-\u003ea-\u003ea)-\u003eb-\u003ea-\u003ec a-\u003ec a",
          "package": "EdisonCore",
          "partial": "With Using Lookup",
          "signature": "(a-\u003ea-\u003ea)-\u003ek-\u003ea-\u003em a-\u003em a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-Defaults.html#v:insertWithUsingLookupM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.Defaults",
          "name": "intersectionWithKeyUsingLookupM",
          "package": "EdisonCore",
          "signature": "(k -\u003e a -\u003e b -\u003e c) -\u003e m a -\u003e m b -\u003e m c",
          "source": "src/Data-Edison-Assoc-Defaults.html#intersectionWithKeyUsingLookupM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc Defaults",
          "module": "Data.Edison.Assoc.Defaults",
          "name": "intersectionWithKeyUsingLookupM",
          "normalized": "(a-\u003eb-\u003ec-\u003ed)-\u003ee b-\u003ee c-\u003ee d",
          "package": "EdisonCore",
          "partial": "With Key Using Lookup",
          "signature": "(k-\u003ea-\u003eb-\u003ec)-\u003em a-\u003em b-\u003em c",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-Defaults.html#v:intersectionWithKeyUsingLookupM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.Defaults",
          "name": "intersectionWithUsingLookupM",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e c) -\u003e m a -\u003e m b -\u003e m c",
          "source": "src/Data-Edison-Assoc-Defaults.html#intersectionWithUsingLookupM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc Defaults",
          "module": "Data.Edison.Assoc.Defaults",
          "name": "intersectionWithUsingLookupM",
          "normalized": "(a-\u003eb-\u003ec)-\u003ed a-\u003ed b-\u003ed c",
          "package": "EdisonCore",
          "partial": "With Using Lookup",
          "signature": "(a-\u003eb-\u003ec)-\u003em a-\u003em b-\u003em c",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-Defaults.html#v:intersectionWithUsingLookupM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.Defaults",
          "name": "keysUsingFoldWithKey",
          "package": "EdisonCore",
          "signature": "m a -\u003e seq k",
          "source": "src/Data-Edison-Assoc-Defaults.html#keysUsingFoldWithKey",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc Defaults",
          "module": "Data.Edison.Assoc.Defaults",
          "name": "keysUsingFoldWithKey",
          "normalized": "a b-\u003ec d",
          "package": "EdisonCore",
          "partial": "Using Fold With Key",
          "signature": "m a-\u003eseq k",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-Defaults.html#v:keysUsingFoldWithKey"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.Defaults",
          "name": "lookupAllUsingLookupM",
          "package": "EdisonCore",
          "signature": "k -\u003e m a -\u003e seq a",
          "source": "src/Data-Edison-Assoc-Defaults.html#lookupAllUsingLookupM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc Defaults",
          "module": "Data.Edison.Assoc.Defaults",
          "name": "lookupAllUsingLookupM",
          "normalized": "a-\u003eb c-\u003ed c",
          "package": "EdisonCore",
          "partial": "All Using Lookup",
          "signature": "k-\u003em a-\u003eseq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-Defaults.html#v:lookupAllUsingLookupM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.Defaults",
          "name": "lookupAndDeleteAllDefault",
          "package": "EdisonCore",
          "signature": "k -\u003e m a -\u003e (seq a, m a)",
          "source": "src/Data-Edison-Assoc-Defaults.html#lookupAndDeleteAllDefault",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc Defaults",
          "module": "Data.Edison.Assoc.Defaults",
          "name": "lookupAndDeleteAllDefault",
          "normalized": "a-\u003eb c-\u003e(d c,b c)",
          "package": "EdisonCore",
          "partial": "And Delete All Default",
          "signature": "k-\u003em a-\u003e(seq a,m a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-Defaults.html#v:lookupAndDeleteAllDefault"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.Defaults",
          "name": "lookupAndDeleteDefault",
          "package": "EdisonCore",
          "signature": "k -\u003e m a -\u003e (a, m a)",
          "source": "src/Data-Edison-Assoc-Defaults.html#lookupAndDeleteDefault",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc Defaults",
          "module": "Data.Edison.Assoc.Defaults",
          "name": "lookupAndDeleteDefault",
          "normalized": "a-\u003eb c-\u003e(c,b c)",
          "package": "EdisonCore",
          "partial": "And Delete Default",
          "signature": "k-\u003em a-\u003e(a,m a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-Defaults.html#v:lookupAndDeleteDefault"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.Defaults",
          "name": "lookupAndDeleteMDefault",
          "package": "EdisonCore",
          "signature": "k -\u003e m a -\u003e rm (a, m a)",
          "source": "src/Data-Edison-Assoc-Defaults.html#lookupAndDeleteMDefault",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc Defaults",
          "module": "Data.Edison.Assoc.Defaults",
          "name": "lookupAndDeleteMDefault",
          "normalized": "a-\u003eb c-\u003ed(c,b c)",
          "package": "EdisonCore",
          "partial": "And Delete MDefault",
          "signature": "k-\u003em a-\u003erm(a,m a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-Defaults.html#v:lookupAndDeleteMDefault"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.Defaults",
          "name": "lookupWithDefaultUsingLookupM",
          "package": "EdisonCore",
          "signature": "a -\u003e k -\u003e m a -\u003e a",
          "source": "src/Data-Edison-Assoc-Defaults.html#lookupWithDefaultUsingLookupM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc Defaults",
          "module": "Data.Edison.Assoc.Defaults",
          "name": "lookupWithDefaultUsingLookupM",
          "normalized": "a-\u003eb-\u003ec a-\u003ea",
          "package": "EdisonCore",
          "partial": "With Default Using Lookup",
          "signature": "a-\u003ek-\u003em a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-Defaults.html#v:lookupWithDefaultUsingLookupM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.Defaults",
          "name": "maxElemUsingMaxView",
          "package": "EdisonCore",
          "signature": "m a -\u003e a",
          "source": "src/Data-Edison-Assoc-Defaults.html#maxElemUsingMaxView",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc Defaults",
          "module": "Data.Edison.Assoc.Defaults",
          "name": "maxElemUsingMaxView",
          "normalized": "a b-\u003eb",
          "package": "EdisonCore",
          "partial": "Elem Using Max View",
          "signature": "m a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-Defaults.html#v:maxElemUsingMaxView"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.Defaults",
          "name": "maxElemWithKeyUsingMaxViewWithKey",
          "package": "EdisonCore",
          "signature": "m a -\u003e (k, a)",
          "source": "src/Data-Edison-Assoc-Defaults.html#maxElemWithKeyUsingMaxViewWithKey",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc Defaults",
          "module": "Data.Edison.Assoc.Defaults",
          "name": "maxElemWithKeyUsingMaxViewWithKey",
          "normalized": "a b-\u003e(c,b)",
          "package": "EdisonCore",
          "partial": "Elem With Key Using Max View With Key",
          "signature": "m a-\u003e(k,a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-Defaults.html#v:maxElemWithKeyUsingMaxViewWithKey"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.Defaults",
          "name": "memberUsingLookupM",
          "package": "EdisonCore",
          "signature": "k -\u003e m a -\u003e Bool",
          "source": "src/Data-Edison-Assoc-Defaults.html#memberUsingLookupM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc Defaults",
          "module": "Data.Edison.Assoc.Defaults",
          "name": "memberUsingLookupM",
          "normalized": "a-\u003eb c-\u003eBool",
          "package": "EdisonCore",
          "partial": "Using Lookup",
          "signature": "k-\u003em a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-Defaults.html#v:memberUsingLookupM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.Defaults",
          "name": "minElemUsingMinView",
          "package": "EdisonCore",
          "signature": "m a -\u003e a",
          "source": "src/Data-Edison-Assoc-Defaults.html#minElemUsingMinView",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc Defaults",
          "module": "Data.Edison.Assoc.Defaults",
          "name": "minElemUsingMinView",
          "normalized": "a b-\u003eb",
          "package": "EdisonCore",
          "partial": "Elem Using Min View",
          "signature": "m a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-Defaults.html#v:minElemUsingMinView"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.Defaults",
          "name": "minElemWithKeyUsingMinViewWithKey",
          "package": "EdisonCore",
          "signature": "m a -\u003e (k, a)",
          "source": "src/Data-Edison-Assoc-Defaults.html#minElemWithKeyUsingMinViewWithKey",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc Defaults",
          "module": "Data.Edison.Assoc.Defaults",
          "name": "minElemWithKeyUsingMinViewWithKey",
          "normalized": "a b-\u003e(c,b)",
          "package": "EdisonCore",
          "partial": "Elem With Key Using Min View With Key",
          "signature": "m a-\u003e(k,a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-Defaults.html#v:minElemWithKeyUsingMinViewWithKey"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.Defaults",
          "name": "nullUsingElements",
          "package": "EdisonCore",
          "signature": "m a -\u003e Bool",
          "source": "src/Data-Edison-Assoc-Defaults.html#nullUsingElements",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc Defaults",
          "module": "Data.Edison.Assoc.Defaults",
          "name": "nullUsingElements",
          "normalized": "a b-\u003eBool",
          "package": "EdisonCore",
          "partial": "Using Elements",
          "signature": "m a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-Defaults.html#v:nullUsingElements"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.Defaults",
          "name": "partitionUsingFilter",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e m a -\u003e (m a, m a)",
          "source": "src/Data-Edison-Assoc-Defaults.html#partitionUsingFilter",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc Defaults",
          "module": "Data.Edison.Assoc.Defaults",
          "name": "partitionUsingFilter",
          "normalized": "(a-\u003eBool)-\u003eb a-\u003e(b a,b a)",
          "package": "EdisonCore",
          "partial": "Using Filter",
          "signature": "(a-\u003eBool)-\u003em a-\u003e(m a,m a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-Defaults.html#v:partitionUsingFilter"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.Defaults",
          "name": "properSubmapByUsingSubmapBy",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e Bool) -\u003e m a -\u003e m a -\u003e Bool",
          "source": "src/Data-Edison-Assoc-Defaults.html#properSubmapByUsingSubmapBy",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc Defaults",
          "module": "Data.Edison.Assoc.Defaults",
          "name": "properSubmapByUsingSubmapBy",
          "normalized": "(a-\u003ea-\u003eBool)-\u003eb a-\u003eb a-\u003eBool",
          "package": "EdisonCore",
          "partial": "Submap By Using Submap By",
          "signature": "(a-\u003ea-\u003eBool)-\u003em a-\u003em a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-Defaults.html#v:properSubmapByUsingSubmapBy"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.Defaults",
          "name": "properSubsetUsingSubset",
          "package": "EdisonCore",
          "signature": "m a -\u003e m b -\u003e Bool",
          "source": "src/Data-Edison-Assoc-Defaults.html#properSubsetUsingSubset",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc Defaults",
          "module": "Data.Edison.Assoc.Defaults",
          "name": "properSubsetUsingSubset",
          "normalized": "a b-\u003ea c-\u003eBool",
          "package": "EdisonCore",
          "partial": "Subset Using Subset",
          "signature": "m a-\u003em b-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-Defaults.html#v:properSubsetUsingSubset"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.Defaults",
          "name": "readsPrecUsingFromList",
          "package": "EdisonCore",
          "signature": "Int -\u003e ReadS (m a)",
          "source": "src/Data-Edison-Assoc-Defaults.html#readsPrecUsingFromList",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc Defaults",
          "module": "Data.Edison.Assoc.Defaults",
          "name": "readsPrecUsingFromList",
          "normalized": "Int-\u003eReadS(a b)",
          "package": "EdisonCore",
          "partial": "Prec Using From List",
          "signature": "Int-\u003eReadS(m a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-Defaults.html#v:readsPrecUsingFromList"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.Defaults",
          "name": "readsPrecUsingUnsafeFromOrdSeq",
          "package": "EdisonCore",
          "signature": "Int -\u003e ReadS (m a)",
          "source": "src/Data-Edison-Assoc-Defaults.html#readsPrecUsingUnsafeFromOrdSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc Defaults",
          "module": "Data.Edison.Assoc.Defaults",
          "name": "readsPrecUsingUnsafeFromOrdSeq",
          "normalized": "Int-\u003eReadS(a b)",
          "package": "EdisonCore",
          "partial": "Prec Using Unsafe From Ord Seq",
          "signature": "Int-\u003eReadS(m a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-Defaults.html#v:readsPrecUsingUnsafeFromOrdSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.Defaults",
          "name": "sameMapByUsingOrdLists",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e Bool) -\u003e m a -\u003e m a -\u003e Bool",
          "source": "src/Data-Edison-Assoc-Defaults.html#sameMapByUsingOrdLists",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc Defaults",
          "module": "Data.Edison.Assoc.Defaults",
          "name": "sameMapByUsingOrdLists",
          "normalized": "(a-\u003ea-\u003eBool)-\u003eb a-\u003eb a-\u003eBool",
          "package": "EdisonCore",
          "partial": "Map By Using Ord Lists",
          "signature": "(a-\u003ea-\u003eBool)-\u003em a-\u003em a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-Defaults.html#v:sameMapByUsingOrdLists"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.Defaults",
          "name": "sameMapByUsingSubmapBy",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e Bool) -\u003e m a -\u003e m a -\u003e Bool",
          "source": "src/Data-Edison-Assoc-Defaults.html#sameMapByUsingSubmapBy",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc Defaults",
          "module": "Data.Edison.Assoc.Defaults",
          "name": "sameMapByUsingSubmapBy",
          "normalized": "(a-\u003ea-\u003eBool)-\u003eb a-\u003eb a-\u003eBool",
          "package": "EdisonCore",
          "partial": "Map By Using Submap By",
          "signature": "(a-\u003ea-\u003eBool)-\u003em a-\u003em a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-Defaults.html#v:sameMapByUsingSubmapBy"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.Defaults",
          "name": "showsPrecUsingToList",
          "package": "EdisonCore",
          "signature": "Int -\u003e m a -\u003e ShowS",
          "source": "src/Data-Edison-Assoc-Defaults.html#showsPrecUsingToList",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc Defaults",
          "module": "Data.Edison.Assoc.Defaults",
          "name": "showsPrecUsingToList",
          "normalized": "Int-\u003ea b-\u003eShowS",
          "package": "EdisonCore",
          "partial": "Prec Using To List",
          "signature": "Int-\u003em a-\u003eShowS",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-Defaults.html#v:showsPrecUsingToList"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.Defaults",
          "name": "showsPrecUsingToOrdList",
          "package": "EdisonCore",
          "signature": "Int -\u003e m a -\u003e ShowS",
          "source": "src/Data-Edison-Assoc-Defaults.html#showsPrecUsingToOrdList",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc Defaults",
          "module": "Data.Edison.Assoc.Defaults",
          "name": "showsPrecUsingToOrdList",
          "normalized": "Int-\u003ea b-\u003eShowS",
          "package": "EdisonCore",
          "partial": "Prec Using To Ord List",
          "signature": "Int-\u003em a-\u003eShowS",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-Defaults.html#v:showsPrecUsingToOrdList"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.Defaults",
          "name": "singletonUsingInsert",
          "package": "EdisonCore",
          "signature": "k -\u003e a -\u003e m a",
          "source": "src/Data-Edison-Assoc-Defaults.html#singletonUsingInsert",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc Defaults",
          "module": "Data.Edison.Assoc.Defaults",
          "name": "singletonUsingInsert",
          "normalized": "a-\u003eb-\u003ec b",
          "package": "EdisonCore",
          "partial": "Using Insert",
          "signature": "k-\u003ea-\u003em a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-Defaults.html#v:singletonUsingInsert"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.Defaults",
          "name": "sizeUsingElements",
          "package": "EdisonCore",
          "signature": "m a -\u003e Int",
          "source": "src/Data-Edison-Assoc-Defaults.html#sizeUsingElements",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc Defaults",
          "module": "Data.Edison.Assoc.Defaults",
          "name": "sizeUsingElements",
          "normalized": "a b-\u003eInt",
          "package": "EdisonCore",
          "partial": "Using Elements",
          "signature": "m a-\u003eInt",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-Defaults.html#v:sizeUsingElements"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.Defaults",
          "name": "submapByUsingLookupM",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e Bool) -\u003e m a -\u003e m a -\u003e Bool",
          "source": "src/Data-Edison-Assoc-Defaults.html#submapByUsingLookupM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc Defaults",
          "module": "Data.Edison.Assoc.Defaults",
          "name": "submapByUsingLookupM",
          "normalized": "(a-\u003ea-\u003eBool)-\u003eb a-\u003eb a-\u003eBool",
          "package": "EdisonCore",
          "partial": "By Using Lookup",
          "signature": "(a-\u003ea-\u003eBool)-\u003em a-\u003em a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-Defaults.html#v:submapByUsingLookupM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.Defaults",
          "name": "subsetUsingMember",
          "package": "EdisonCore",
          "signature": "m a -\u003e m b -\u003e Bool",
          "source": "src/Data-Edison-Assoc-Defaults.html#subsetUsingMember",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc Defaults",
          "module": "Data.Edison.Assoc.Defaults",
          "name": "subsetUsingMember",
          "normalized": "a b-\u003ea c-\u003eBool",
          "package": "EdisonCore",
          "partial": "Using Member",
          "signature": "m a-\u003em b-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-Defaults.html#v:subsetUsingMember"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.Defaults",
          "name": "toOrdSeqUsingFoldrWithKey",
          "package": "EdisonCore",
          "signature": "m a -\u003e seq (k, a)",
          "source": "src/Data-Edison-Assoc-Defaults.html#toOrdSeqUsingFoldrWithKey",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc Defaults",
          "module": "Data.Edison.Assoc.Defaults",
          "name": "toOrdSeqUsingFoldrWithKey",
          "normalized": "a b-\u003ec(d,b)",
          "package": "EdisonCore",
          "partial": "Ord Seq Using Foldr With Key",
          "signature": "m a-\u003eseq(k,a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-Defaults.html#v:toOrdSeqUsingFoldrWithKey"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.Defaults",
          "name": "toSeqUsingFoldWithKey",
          "package": "EdisonCore",
          "signature": "m a -\u003e seq (k, a)",
          "source": "src/Data-Edison-Assoc-Defaults.html#toSeqUsingFoldWithKey",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc Defaults",
          "module": "Data.Edison.Assoc.Defaults",
          "name": "toSeqUsingFoldWithKey",
          "normalized": "a b-\u003ec(d,b)",
          "package": "EdisonCore",
          "partial": "Seq Using Fold With Key",
          "signature": "m a-\u003eseq(k,a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-Defaults.html#v:toSeqUsingFoldWithKey"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.Defaults",
          "name": "unionSeqUsingReduce",
          "package": "EdisonCore",
          "signature": "seq (m a) -\u003e m a",
          "source": "src/Data-Edison-Assoc-Defaults.html#unionSeqUsingReduce",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc Defaults",
          "module": "Data.Edison.Assoc.Defaults",
          "name": "unionSeqUsingReduce",
          "normalized": "a(b c)-\u003eb c",
          "package": "EdisonCore",
          "partial": "Seq Using Reduce",
          "signature": "seq(m a)-\u003em a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-Defaults.html#v:unionSeqUsingReduce"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.Defaults",
          "name": "unionSeqWithKeyUsingFoldr",
          "package": "EdisonCore",
          "signature": "(k -\u003e a -\u003e a -\u003e a) -\u003e seq (m a) -\u003e m a",
          "source": "src/Data-Edison-Assoc-Defaults.html#unionSeqWithKeyUsingFoldr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc Defaults",
          "module": "Data.Edison.Assoc.Defaults",
          "name": "unionSeqWithKeyUsingFoldr",
          "normalized": "(a-\u003eb-\u003eb-\u003eb)-\u003ec(d b)-\u003ed b",
          "package": "EdisonCore",
          "partial": "Seq With Key Using Foldr",
          "signature": "(k-\u003ea-\u003ea-\u003ea)-\u003eseq(m a)-\u003em a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-Defaults.html#v:unionSeqWithKeyUsingFoldr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.Defaults",
          "name": "unionSeqWithKeyUsingReduce",
          "package": "EdisonCore",
          "signature": "(k -\u003e a -\u003e a -\u003e a) -\u003e seq (m a) -\u003e m a",
          "source": "src/Data-Edison-Assoc-Defaults.html#unionSeqWithKeyUsingReduce",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc Defaults",
          "module": "Data.Edison.Assoc.Defaults",
          "name": "unionSeqWithKeyUsingReduce",
          "normalized": "(a-\u003eb-\u003eb-\u003eb)-\u003ec(d b)-\u003ed b",
          "package": "EdisonCore",
          "partial": "Seq With Key Using Reduce",
          "signature": "(k-\u003ea-\u003ea-\u003ea)-\u003eseq(m a)-\u003em a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-Defaults.html#v:unionSeqWithKeyUsingReduce"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.Defaults",
          "name": "unionSeqWithUsingFoldr",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e seq (m a) -\u003e m a",
          "source": "src/Data-Edison-Assoc-Defaults.html#unionSeqWithUsingFoldr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc Defaults",
          "module": "Data.Edison.Assoc.Defaults",
          "name": "unionSeqWithUsingFoldr",
          "normalized": "(a-\u003ea-\u003ea)-\u003eb(c a)-\u003ec a",
          "package": "EdisonCore",
          "partial": "Seq With Using Foldr",
          "signature": "(a-\u003ea-\u003ea)-\u003eseq(m a)-\u003em a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-Defaults.html#v:unionSeqWithUsingFoldr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.Defaults",
          "name": "unionSeqWithUsingReduce",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e seq (m a) -\u003e m a",
          "source": "src/Data-Edison-Assoc-Defaults.html#unionSeqWithUsingReduce",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc Defaults",
          "module": "Data.Edison.Assoc.Defaults",
          "name": "unionSeqWithUsingReduce",
          "normalized": "(a-\u003ea-\u003ea)-\u003eb(c a)-\u003ec a",
          "package": "EdisonCore",
          "partial": "Seq With Using Reduce",
          "signature": "(a-\u003ea-\u003ea)-\u003eseq(m a)-\u003em a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-Defaults.html#v:unionSeqWithUsingReduce"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.Defaults",
          "name": "unionWithKeyUsingInsertWithKey",
          "package": "EdisonCore",
          "signature": "(k -\u003e a -\u003e a -\u003e a) -\u003e m a -\u003e m a -\u003e m a",
          "source": "src/Data-Edison-Assoc-Defaults.html#unionWithKeyUsingInsertWithKey",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc Defaults",
          "module": "Data.Edison.Assoc.Defaults",
          "name": "unionWithKeyUsingInsertWithKey",
          "normalized": "(a-\u003eb-\u003eb-\u003eb)-\u003ec b-\u003ec b-\u003ec b",
          "package": "EdisonCore",
          "partial": "With Key Using Insert With Key",
          "signature": "(k-\u003ea-\u003ea-\u003ea)-\u003em a-\u003em a-\u003em a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-Defaults.html#v:unionWithKeyUsingInsertWithKey"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.Defaults",
          "name": "unionWithUsingInsertWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e m a -\u003e m a -\u003e m a",
          "source": "src/Data-Edison-Assoc-Defaults.html#unionWithUsingInsertWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc Defaults",
          "module": "Data.Edison.Assoc.Defaults",
          "name": "unionWithUsingInsertWith",
          "normalized": "(a-\u003ea-\u003ea)-\u003eb a-\u003eb a-\u003eb a",
          "package": "EdisonCore",
          "partial": "With Using Insert With",
          "signature": "(a-\u003ea-\u003ea)-\u003em a-\u003em a-\u003em a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-Defaults.html#v:unionWithUsingInsertWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eFinite maps implemented as little-endian Patricia trees.\n\u003c/p\u003e\u003cp\u003e\u003cem\u003eReferences:\u003c/em\u003e\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e Chris Okasaki and Any Gill.  \"Fast Mergeable Integer Maps\".\n   Workshop on ML, September 1998, pages 77-86.\n\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "PatriciaLoMap",
          "package": "EdisonCore",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html",
          "type": "module"
        },
        "index": {
          "description": "Finite maps implemented as little-endian Patricia trees References Chris Okasaki and Any Gill Fast Mergeable Integer Maps Workshop on ML September pages",
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "PatriciaLoMap",
          "package": "EdisonCore",
          "partial": "Patricia Lo Map",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "FM",
          "package": "EdisonCore",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#FM",
          "type": "data"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "FM",
          "package": "EdisonCore",
          "partial": "FM",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#t:FM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "adjust",
          "package": "EdisonCore",
          "signature": "(a -\u003e a) -\u003e Int -\u003e FM a -\u003e FM a",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#adjust",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "adjust",
          "normalized": "(a-\u003ea)-\u003eInt-\u003eFM a-\u003eFM a",
          "package": "EdisonCore",
          "signature": "(a-\u003ea)-\u003eInt-\u003eFM a-\u003eFM a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:adjust"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "adjustAll",
          "package": "EdisonCore",
          "signature": "(a -\u003e a) -\u003e Int -\u003e FM a -\u003e FM a",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#adjustAll",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "adjustAll",
          "normalized": "(a-\u003ea)-\u003eInt-\u003eFM a-\u003eFM a",
          "package": "EdisonCore",
          "partial": "All",
          "signature": "(a-\u003ea)-\u003eInt-\u003eFM a-\u003eFM a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:adjustAll"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "adjustAllOrInsert",
          "package": "EdisonCore",
          "signature": "(a -\u003e a) -\u003e a -\u003e Int -\u003e FM a -\u003e FM a",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#adjustAllOrInsert",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "adjustAllOrInsert",
          "normalized": "(a-\u003ea)-\u003ea-\u003eInt-\u003eFM a-\u003eFM a",
          "package": "EdisonCore",
          "partial": "All Or Insert",
          "signature": "(a-\u003ea)-\u003ea-\u003eInt-\u003eFM a-\u003eFM a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:adjustAllOrInsert"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "adjustOrInsert",
          "package": "EdisonCore",
          "signature": "(a -\u003e a) -\u003e a -\u003e Int -\u003e FM a -\u003e FM a",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#adjustOrInsert",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "adjustOrInsert",
          "normalized": "(a-\u003ea)-\u003ea-\u003eInt-\u003eFM a-\u003eFM a",
          "package": "EdisonCore",
          "partial": "Or Insert",
          "signature": "(a-\u003ea)-\u003ea-\u003eInt-\u003eFM a-\u003eFM a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:adjustOrInsert"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "count",
          "package": "EdisonCore",
          "signature": "Int -\u003e FM a -\u003e Int",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#count",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "count",
          "normalized": "Int-\u003eFM a-\u003eInt",
          "package": "EdisonCore",
          "signature": "Int-\u003eFM a-\u003eInt",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:count"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "delete",
          "package": "EdisonCore",
          "signature": "Int -\u003e FM a -\u003e FM a",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#delete",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "delete",
          "normalized": "Int-\u003eFM a-\u003eFM a",
          "package": "EdisonCore",
          "signature": "Int-\u003eFM a-\u003eFM a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:delete"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "deleteAll",
          "package": "EdisonCore",
          "signature": "Int -\u003e FM a -\u003e FM a",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#deleteAll",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "deleteAll",
          "normalized": "Int-\u003eFM a-\u003eFM a",
          "package": "EdisonCore",
          "partial": "All",
          "signature": "Int-\u003eFM a-\u003eFM a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:deleteAll"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "deleteMax",
          "package": "EdisonCore",
          "signature": "FM a -\u003e FM a",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#deleteMax",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "deleteMax",
          "normalized": "FM a-\u003eFM a",
          "package": "EdisonCore",
          "partial": "Max",
          "signature": "FM a-\u003eFM a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:deleteMax"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "deleteMin",
          "package": "EdisonCore",
          "signature": "FM a -\u003e FM a",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#deleteMin",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "deleteMin",
          "normalized": "FM a-\u003eFM a",
          "package": "EdisonCore",
          "partial": "Min",
          "signature": "FM a-\u003eFM a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:deleteMin"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "deleteSeq",
          "package": "EdisonCore",
          "signature": "seq Int -\u003e FM a -\u003e FM a",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#deleteSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "deleteSeq",
          "normalized": "a Int-\u003eFM b-\u003eFM b",
          "package": "EdisonCore",
          "partial": "Seq",
          "signature": "seq Int-\u003eFM a-\u003eFM a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:deleteSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "difference",
          "package": "EdisonCore",
          "signature": "FM a -\u003e FM b -\u003e FM a",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#difference",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "difference",
          "normalized": "FM a-\u003eFM b-\u003eFM a",
          "package": "EdisonCore",
          "signature": "FM a-\u003eFM b-\u003eFM a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:difference"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "elements",
          "package": "EdisonCore",
          "signature": "FM a -\u003e seq a",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#elements",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "elements",
          "normalized": "FM a-\u003eb a",
          "package": "EdisonCore",
          "signature": "FM a-\u003eseq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:elements"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "empty",
          "package": "EdisonCore",
          "signature": "FM a",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#empty",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "empty",
          "package": "EdisonCore",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:empty"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "filter",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e FM a -\u003e FM a",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#filter",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "filter",
          "normalized": "(a-\u003eBool)-\u003eFM a-\u003eFM a",
          "package": "EdisonCore",
          "signature": "(a-\u003eBool)-\u003eFM a-\u003eFM a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:filter"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "filterGE",
          "package": "EdisonCore",
          "signature": "Int -\u003e FM a -\u003e FM a",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#filterGE",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "filterGE",
          "normalized": "Int-\u003eFM a-\u003eFM a",
          "package": "EdisonCore",
          "partial": "GE",
          "signature": "Int-\u003eFM a-\u003eFM a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:filterGE"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "filterGT",
          "package": "EdisonCore",
          "signature": "Int -\u003e FM a -\u003e FM a",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#filterGT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "filterGT",
          "normalized": "Int-\u003eFM a-\u003eFM a",
          "package": "EdisonCore",
          "partial": "GT",
          "signature": "Int-\u003eFM a-\u003eFM a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:filterGT"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "filterLE",
          "package": "EdisonCore",
          "signature": "Int -\u003e FM a -\u003e FM a",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#filterLE",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "filterLE",
          "normalized": "Int-\u003eFM a-\u003eFM a",
          "package": "EdisonCore",
          "partial": "LE",
          "signature": "Int-\u003eFM a-\u003eFM a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:filterLE"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "filterLT",
          "package": "EdisonCore",
          "signature": "Int -\u003e FM a -\u003e FM a",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#filterLT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "filterLT",
          "normalized": "Int-\u003eFM a-\u003eFM a",
          "package": "EdisonCore",
          "partial": "LT",
          "signature": "Int-\u003eFM a-\u003eFM a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:filterLT"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "filterWithKey",
          "package": "EdisonCore",
          "signature": "(Int -\u003e a -\u003e Bool) -\u003e FM a -\u003e FM a",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#filterWithKey",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "filterWithKey",
          "normalized": "(Int-\u003ea-\u003eBool)-\u003eFM a-\u003eFM a",
          "package": "EdisonCore",
          "partial": "With Key",
          "signature": "(Int-\u003ea-\u003eBool)-\u003eFM a-\u003eFM a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:filterWithKey"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "fold",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e FM a -\u003e b",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#fold",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "fold",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eFM a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eFM a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:fold"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "fold'",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e FM a -\u003e b",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#fold%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "fold'",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eFM a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eFM a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:fold-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "fold1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e FM a -\u003e a",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#fold1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "fold1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eFM a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eFM a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:fold1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "fold1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e FM a -\u003e a",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#fold1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "fold1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eFM a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eFM a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:fold1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "foldWithKey",
          "package": "EdisonCore",
          "signature": "(Int -\u003e a -\u003e b -\u003e b) -\u003e b -\u003e FM a -\u003e b",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#foldWithKey",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "foldWithKey",
          "normalized": "(Int-\u003ea-\u003eb-\u003eb)-\u003eb-\u003eFM a-\u003eb",
          "package": "EdisonCore",
          "partial": "With Key",
          "signature": "(Int-\u003ea-\u003eb-\u003eb)-\u003eb-\u003eFM a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:foldWithKey"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "foldWithKey'",
          "package": "EdisonCore",
          "signature": "(Int -\u003e a -\u003e b -\u003e b) -\u003e b -\u003e FM a -\u003e b",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#foldWithKey%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "foldWithKey'",
          "normalized": "(Int-\u003ea-\u003eb-\u003eb)-\u003eb-\u003eFM a-\u003eb",
          "package": "EdisonCore",
          "partial": "With Key'",
          "signature": "(Int-\u003ea-\u003eb-\u003eb)-\u003eb-\u003eFM a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:foldWithKey-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "foldl",
          "package": "EdisonCore",
          "signature": "(b -\u003e a -\u003e b) -\u003e b -\u003e FM a -\u003e b",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#foldl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "foldl",
          "normalized": "(a-\u003eb-\u003ea)-\u003ea-\u003eFM b-\u003ea",
          "package": "EdisonCore",
          "signature": "(b-\u003ea-\u003eb)-\u003eb-\u003eFM a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:foldl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "foldl'",
          "package": "EdisonCore",
          "signature": "(b -\u003e a -\u003e b) -\u003e b -\u003e FM a -\u003e b",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#foldl%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "foldl'",
          "normalized": "(a-\u003eb-\u003ea)-\u003ea-\u003eFM b-\u003ea",
          "package": "EdisonCore",
          "signature": "(b-\u003ea-\u003eb)-\u003eb-\u003eFM a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:foldl-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "foldl1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e FM a -\u003e a",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#foldl1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "foldl1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eFM a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eFM a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:foldl1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "foldl1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e FM a -\u003e a",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#foldl1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "foldl1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eFM a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eFM a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:foldl1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "foldlWithKey",
          "package": "EdisonCore",
          "signature": "(b -\u003e Int -\u003e a -\u003e b) -\u003e b -\u003e FM a -\u003e b",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#foldlWithKey",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "foldlWithKey",
          "normalized": "(a-\u003eInt-\u003eb-\u003ea)-\u003ea-\u003eFM b-\u003ea",
          "package": "EdisonCore",
          "partial": "With Key",
          "signature": "(b-\u003eInt-\u003ea-\u003eb)-\u003eb-\u003eFM a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:foldlWithKey"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "foldlWithKey'",
          "package": "EdisonCore",
          "signature": "(b -\u003e Int -\u003e a -\u003e b) -\u003e b -\u003e FM a -\u003e b",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#foldlWithKey%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "foldlWithKey'",
          "normalized": "(a-\u003eInt-\u003eb-\u003ea)-\u003ea-\u003eFM b-\u003ea",
          "package": "EdisonCore",
          "partial": "With Key'",
          "signature": "(b-\u003eInt-\u003ea-\u003eb)-\u003eb-\u003eFM a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:foldlWithKey-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "foldr",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e FM a -\u003e b",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#foldr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "foldr",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eFM a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eFM a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:foldr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "foldr'",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e FM a -\u003e b",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#foldr%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "foldr'",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eFM a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eFM a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:foldr-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "foldr1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e FM a -\u003e a",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#foldr1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "foldr1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eFM a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eFM a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:foldr1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "foldr1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e FM a -\u003e a",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#foldr1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "foldr1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eFM a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eFM a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:foldr1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "foldrWithKey",
          "package": "EdisonCore",
          "signature": "(Int -\u003e a -\u003e b -\u003e b) -\u003e b -\u003e FM a -\u003e b",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#foldrWithKey",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "foldrWithKey",
          "normalized": "(Int-\u003ea-\u003eb-\u003eb)-\u003eb-\u003eFM a-\u003eb",
          "package": "EdisonCore",
          "partial": "With Key",
          "signature": "(Int-\u003ea-\u003eb-\u003eb)-\u003eb-\u003eFM a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:foldrWithKey"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "foldrWithKey'",
          "package": "EdisonCore",
          "signature": "(Int -\u003e a -\u003e b -\u003e b) -\u003e b -\u003e FM a -\u003e b",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#foldrWithKey%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "foldrWithKey'",
          "normalized": "(Int-\u003ea-\u003eb-\u003eb)-\u003eb-\u003eFM a-\u003eb",
          "package": "EdisonCore",
          "partial": "With Key'",
          "signature": "(Int-\u003ea-\u003eb-\u003eb)-\u003eb-\u003eFM a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:foldrWithKey-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "fromSeq",
          "package": "EdisonCore",
          "signature": "seq (Int, a) -\u003e FM a",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#fromSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "fromSeq",
          "normalized": "a(Int,b)-\u003eFM b",
          "package": "EdisonCore",
          "partial": "Seq",
          "signature": "seq(Int,a)-\u003eFM a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:fromSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "fromSeqWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e seq (Int, a) -\u003e FM a",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#fromSeqWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "fromSeqWith",
          "normalized": "(a-\u003ea-\u003ea)-\u003eb(Int,a)-\u003eFM a",
          "package": "EdisonCore",
          "partial": "Seq With",
          "signature": "(a-\u003ea-\u003ea)-\u003eseq(Int,a)-\u003eFM a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:fromSeqWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "fromSeqWithKey",
          "package": "EdisonCore",
          "signature": "(Int -\u003e a -\u003e a -\u003e a) -\u003e seq (Int, a) -\u003e FM a",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#fromSeqWithKey",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "fromSeqWithKey",
          "normalized": "(Int-\u003ea-\u003ea-\u003ea)-\u003eb(Int,a)-\u003eFM a",
          "package": "EdisonCore",
          "partial": "Seq With Key",
          "signature": "(Int-\u003ea-\u003ea-\u003ea)-\u003eseq(Int,a)-\u003eFM a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:fromSeqWithKey"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "insert",
          "package": "EdisonCore",
          "signature": "Int -\u003e a -\u003e FM a -\u003e FM a",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#insert",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "insert",
          "normalized": "Int-\u003ea-\u003eFM a-\u003eFM a",
          "package": "EdisonCore",
          "signature": "Int-\u003ea-\u003eFM a-\u003eFM a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:insert"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "insertSeq",
          "package": "EdisonCore",
          "signature": "seq (Int, a) -\u003e FM a -\u003e FM a",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#insertSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "insertSeq",
          "normalized": "a(Int,b)-\u003eFM b-\u003eFM b",
          "package": "EdisonCore",
          "partial": "Seq",
          "signature": "seq(Int,a)-\u003eFM a-\u003eFM a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:insertSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "insertSeqWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e seq (Int, a) -\u003e FM a -\u003e FM a",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#insertSeqWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "insertSeqWith",
          "normalized": "(a-\u003ea-\u003ea)-\u003eb(Int,a)-\u003eFM a-\u003eFM a",
          "package": "EdisonCore",
          "partial": "Seq With",
          "signature": "(a-\u003ea-\u003ea)-\u003eseq(Int,a)-\u003eFM a-\u003eFM a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:insertSeqWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "insertSeqWithKey",
          "package": "EdisonCore",
          "signature": "(Int -\u003e a -\u003e a -\u003e a) -\u003e seq (Int, a) -\u003e FM a -\u003e FM a",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#insertSeqWithKey",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "insertSeqWithKey",
          "normalized": "(Int-\u003ea-\u003ea-\u003ea)-\u003eb(Int,a)-\u003eFM a-\u003eFM a",
          "package": "EdisonCore",
          "partial": "Seq With Key",
          "signature": "(Int-\u003ea-\u003ea-\u003ea)-\u003eseq(Int,a)-\u003eFM a-\u003eFM a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:insertSeqWithKey"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "insertWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Int -\u003e a -\u003e FM a -\u003e FM a",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#insertWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "insertWith",
          "normalized": "(a-\u003ea-\u003ea)-\u003eInt-\u003ea-\u003eFM a-\u003eFM a",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003ea-\u003ea)-\u003eInt-\u003ea-\u003eFM a-\u003eFM a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:insertWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "insertWithKey",
          "package": "EdisonCore",
          "signature": "(Int -\u003e a -\u003e a -\u003e a) -\u003e Int -\u003e a -\u003e FM a -\u003e FM a",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#insertWithKey",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "insertWithKey",
          "normalized": "(Int-\u003ea-\u003ea-\u003ea)-\u003eInt-\u003ea-\u003eFM a-\u003eFM a",
          "package": "EdisonCore",
          "partial": "With Key",
          "signature": "(Int-\u003ea-\u003ea-\u003ea)-\u003eInt-\u003ea-\u003eFM a-\u003eFM a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:insertWithKey"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "intersectionWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e c) -\u003e FM a -\u003e FM b -\u003e FM c",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#intersectionWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "intersectionWith",
          "normalized": "(a-\u003eb-\u003ec)-\u003eFM a-\u003eFM b-\u003eFM c",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003eb-\u003ec)-\u003eFM a-\u003eFM b-\u003eFM c",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:intersectionWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "intersectionWithKey",
          "package": "EdisonCore",
          "signature": "(Int -\u003e a -\u003e b -\u003e c) -\u003e FM a -\u003e FM b -\u003e FM c",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#intersectionWithKey",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "intersectionWithKey",
          "normalized": "(Int-\u003ea-\u003eb-\u003ec)-\u003eFM a-\u003eFM b-\u003eFM c",
          "package": "EdisonCore",
          "partial": "With Key",
          "signature": "(Int-\u003ea-\u003eb-\u003ec)-\u003eFM a-\u003eFM b-\u003eFM c",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:intersectionWithKey"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "keys",
          "package": "EdisonCore",
          "signature": "FM a -\u003e seq Int",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#keys",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "keys",
          "normalized": "FM a-\u003eb Int",
          "package": "EdisonCore",
          "signature": "FM a-\u003eseq Int",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:keys"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "lookup",
          "package": "EdisonCore",
          "signature": "Int -\u003e FM a -\u003e a",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#lookup",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "lookup",
          "normalized": "Int-\u003eFM a-\u003ea",
          "package": "EdisonCore",
          "signature": "Int-\u003eFM a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:lookup"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "lookupAll",
          "package": "EdisonCore",
          "signature": "Int -\u003e FM a -\u003e seq a",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#lookupAll",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "lookupAll",
          "normalized": "Int-\u003eFM a-\u003eb a",
          "package": "EdisonCore",
          "partial": "All",
          "signature": "Int-\u003eFM a-\u003eseq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:lookupAll"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "lookupAndDelete",
          "package": "EdisonCore",
          "signature": "Int -\u003e FM a -\u003e (a, FM a)",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#lookupAndDelete",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "lookupAndDelete",
          "normalized": "Int-\u003eFM a-\u003e(a,FM a)",
          "package": "EdisonCore",
          "partial": "And Delete",
          "signature": "Int-\u003eFM a-\u003e(a,FM a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:lookupAndDelete"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "lookupAndDeleteAll",
          "package": "EdisonCore",
          "signature": "Int -\u003e FM a -\u003e (seq a, FM a)",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#lookupAndDeleteAll",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "lookupAndDeleteAll",
          "normalized": "Int-\u003eFM a-\u003e(b a,FM a)",
          "package": "EdisonCore",
          "partial": "And Delete All",
          "signature": "Int-\u003eFM a-\u003e(seq a,FM a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:lookupAndDeleteAll"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "lookupAndDeleteM",
          "package": "EdisonCore",
          "signature": "Int -\u003e FM a -\u003e m (a, FM a)",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#lookupAndDeleteM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "lookupAndDeleteM",
          "normalized": "Int-\u003eFM a-\u003eb(a,FM a)",
          "package": "EdisonCore",
          "partial": "And Delete",
          "signature": "Int-\u003eFM a-\u003em(a,FM a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:lookupAndDeleteM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "lookupM",
          "package": "EdisonCore",
          "signature": "Int -\u003e FM a -\u003e rm a",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#lookupM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "lookupM",
          "normalized": "Int-\u003eFM a-\u003eb a",
          "package": "EdisonCore",
          "signature": "Int-\u003eFM a-\u003erm a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:lookupM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "lookupWithDefault",
          "package": "EdisonCore",
          "signature": "a -\u003e Int -\u003e FM a -\u003e a",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#lookupWithDefault",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "lookupWithDefault",
          "normalized": "a-\u003eInt-\u003eFM a-\u003ea",
          "package": "EdisonCore",
          "partial": "With Default",
          "signature": "a-\u003eInt-\u003eFM a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:lookupWithDefault"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "map",
          "package": "EdisonCore",
          "signature": "(a -\u003e b) -\u003e FM a -\u003e FM b",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#map",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "map",
          "normalized": "(a-\u003eb)-\u003eFM a-\u003eFM b",
          "package": "EdisonCore",
          "signature": "(a-\u003eb)-\u003eFM a-\u003eFM b",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:map"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "mapWithKey",
          "package": "EdisonCore",
          "signature": "(Int -\u003e a -\u003e b) -\u003e FM a -\u003e FM b",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#mapWithKey",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "mapWithKey",
          "normalized": "(Int-\u003ea-\u003eb)-\u003eFM a-\u003eFM b",
          "package": "EdisonCore",
          "partial": "With Key",
          "signature": "(Int-\u003ea-\u003eb)-\u003eFM a-\u003eFM b",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:mapWithKey"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "maxElem",
          "package": "EdisonCore",
          "signature": "FM a -\u003e a",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#maxElem",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "maxElem",
          "normalized": "FM a-\u003ea",
          "package": "EdisonCore",
          "partial": "Elem",
          "signature": "FM a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:maxElem"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "maxElemWithKey",
          "package": "EdisonCore",
          "signature": "FM a -\u003e (Int, a)",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#maxElemWithKey",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "maxElemWithKey",
          "normalized": "FM a-\u003e(Int,a)",
          "package": "EdisonCore",
          "partial": "Elem With Key",
          "signature": "FM a-\u003e(Int,a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:maxElemWithKey"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "maxView",
          "package": "EdisonCore",
          "signature": "FM a -\u003e m (a, FM a)",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#maxView",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "maxView",
          "normalized": "FM a-\u003eb(a,FM a)",
          "package": "EdisonCore",
          "partial": "View",
          "signature": "FM a-\u003em(a,FM a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:maxView"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "maxViewWithKey",
          "package": "EdisonCore",
          "signature": "FM a -\u003e m ((Int, a), FM a)",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#maxViewWithKey",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "maxViewWithKey",
          "normalized": "FM a-\u003eb((Int,a),FM a)",
          "package": "EdisonCore",
          "partial": "View With Key",
          "signature": "FM a-\u003em((Int,a),FM a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:maxViewWithKey"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "member",
          "package": "EdisonCore",
          "signature": "Int -\u003e FM a -\u003e Bool",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#member",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "member",
          "normalized": "Int-\u003eFM a-\u003eBool",
          "package": "EdisonCore",
          "signature": "Int-\u003eFM a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:member"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "minElem",
          "package": "EdisonCore",
          "signature": "FM a -\u003e a",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#minElem",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "minElem",
          "normalized": "FM a-\u003ea",
          "package": "EdisonCore",
          "partial": "Elem",
          "signature": "FM a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:minElem"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "minElemWithKey",
          "package": "EdisonCore",
          "signature": "FM a -\u003e (Int, a)",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#minElemWithKey",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "minElemWithKey",
          "normalized": "FM a-\u003e(Int,a)",
          "package": "EdisonCore",
          "partial": "Elem With Key",
          "signature": "FM a-\u003e(Int,a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:minElemWithKey"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "minView",
          "package": "EdisonCore",
          "signature": "FM a -\u003e m (a, FM a)",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#minView",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "minView",
          "normalized": "FM a-\u003eb(a,FM a)",
          "package": "EdisonCore",
          "partial": "View",
          "signature": "FM a-\u003em(a,FM a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:minView"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "minViewWithKey",
          "package": "EdisonCore",
          "signature": "FM a -\u003e m ((Int, a), FM a)",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#minViewWithKey",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "minViewWithKey",
          "normalized": "FM a-\u003eb((Int,a),FM a)",
          "package": "EdisonCore",
          "partial": "View With Key",
          "signature": "FM a-\u003em((Int,a),FM a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:minViewWithKey"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "moduleName",
          "package": "EdisonCore",
          "signature": "String",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#moduleName",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "moduleName",
          "package": "EdisonCore",
          "partial": "Name",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:moduleName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "null",
          "package": "EdisonCore",
          "signature": "FM a -\u003e Bool",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#null",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "null",
          "normalized": "FM a-\u003eBool",
          "package": "EdisonCore",
          "signature": "FM a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:null"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "partition",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e FM a -\u003e (FM a, FM a)",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#partition",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "partition",
          "normalized": "(a-\u003eBool)-\u003eFM a-\u003e(FM a,FM a)",
          "package": "EdisonCore",
          "signature": "(a-\u003eBool)-\u003eFM a-\u003e(FM a,FM a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:partition"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "partitionLE_GT",
          "package": "EdisonCore",
          "signature": "Int -\u003e FM a -\u003e (FM a, FM a)",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#partitionLE_GT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "partitionLE_GT",
          "normalized": "Int-\u003eFM a-\u003e(FM a,FM a)",
          "package": "EdisonCore",
          "partial": "LE GT",
          "signature": "Int-\u003eFM a-\u003e(FM a,FM a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:partitionLE_GT"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "partitionLT_GE",
          "package": "EdisonCore",
          "signature": "Int -\u003e FM a -\u003e (FM a, FM a)",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#partitionLT_GE",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "partitionLT_GE",
          "normalized": "Int-\u003eFM a-\u003e(FM a,FM a)",
          "package": "EdisonCore",
          "partial": "LT GE",
          "signature": "Int-\u003eFM a-\u003e(FM a,FM a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:partitionLT_GE"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "partitionLT_GT",
          "package": "EdisonCore",
          "signature": "Int -\u003e FM a -\u003e (FM a, FM a)",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#partitionLT_GT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "partitionLT_GT",
          "normalized": "Int-\u003eFM a-\u003e(FM a,FM a)",
          "package": "EdisonCore",
          "partial": "LT GT",
          "signature": "Int-\u003eFM a-\u003e(FM a,FM a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:partitionLT_GT"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "partitionWithKey",
          "package": "EdisonCore",
          "signature": "(Int -\u003e a -\u003e Bool) -\u003e FM a -\u003e (FM a, FM a)",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#partitionWithKey",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "partitionWithKey",
          "normalized": "(Int-\u003ea-\u003eBool)-\u003eFM a-\u003e(FM a,FM a)",
          "package": "EdisonCore",
          "partial": "With Key",
          "signature": "(Int-\u003ea-\u003eBool)-\u003eFM a-\u003e(FM a,FM a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:partitionWithKey"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "properSubmap",
          "package": "EdisonCore",
          "signature": "FM a -\u003e FM a -\u003e Bool",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#properSubmap",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "properSubmap",
          "normalized": "FM a-\u003eFM a-\u003eBool",
          "package": "EdisonCore",
          "partial": "Submap",
          "signature": "FM a-\u003eFM a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:properSubmap"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "properSubmapBy",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e Bool) -\u003e FM a -\u003e FM a -\u003e Bool",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#properSubmapBy",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "properSubmapBy",
          "normalized": "(a-\u003ea-\u003eBool)-\u003eFM a-\u003eFM a-\u003eBool",
          "package": "EdisonCore",
          "partial": "Submap By",
          "signature": "(a-\u003ea-\u003eBool)-\u003eFM a-\u003eFM a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:properSubmapBy"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "properSubset",
          "package": "EdisonCore",
          "signature": "FM a -\u003e FM b -\u003e Bool",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#properSubset",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "properSubset",
          "normalized": "FM a-\u003eFM b-\u003eBool",
          "package": "EdisonCore",
          "partial": "Subset",
          "signature": "FM a-\u003eFM b-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:properSubset"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "sameMap",
          "package": "EdisonCore",
          "signature": "FM a -\u003e FM a -\u003e Bool",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#sameMap",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "sameMap",
          "normalized": "FM a-\u003eFM a-\u003eBool",
          "package": "EdisonCore",
          "partial": "Map",
          "signature": "FM a-\u003eFM a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:sameMap"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "sameMapBy",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e Bool) -\u003e FM a -\u003e FM a -\u003e Bool",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#sameMapBy",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "sameMapBy",
          "normalized": "(a-\u003ea-\u003eBool)-\u003eFM a-\u003eFM a-\u003eBool",
          "package": "EdisonCore",
          "partial": "Map By",
          "signature": "(a-\u003ea-\u003eBool)-\u003eFM a-\u003eFM a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:sameMapBy"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "singleton",
          "package": "EdisonCore",
          "signature": "Int -\u003e a -\u003e FM a",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#singleton",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "singleton",
          "normalized": "Int-\u003ea-\u003eFM a",
          "package": "EdisonCore",
          "signature": "Int-\u003ea-\u003eFM a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:singleton"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "size",
          "package": "EdisonCore",
          "signature": "FM a -\u003e Int",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#size",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "size",
          "normalized": "FM a-\u003eInt",
          "package": "EdisonCore",
          "signature": "FM a-\u003eInt",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:size"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "strict",
          "package": "EdisonCore",
          "signature": "t -\u003e t",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#strict",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "strict",
          "normalized": "a-\u003ea",
          "package": "EdisonCore",
          "signature": "t-\u003et",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:strict"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "strictWith",
          "package": "EdisonCore",
          "signature": "(t -\u003e a) -\u003e FM t -\u003e FM t",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#strictWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "strictWith",
          "normalized": "(a-\u003eb)-\u003eFM a-\u003eFM a",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(t-\u003ea)-\u003eFM t-\u003eFM t",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:strictWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "structuralInvariant",
          "package": "EdisonCore",
          "signature": "FM a -\u003e Bool",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#structuralInvariant",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "structuralInvariant",
          "normalized": "FM a-\u003eBool",
          "package": "EdisonCore",
          "partial": "Invariant",
          "signature": "FM a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:structuralInvariant"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "submap",
          "package": "EdisonCore",
          "signature": "FM a -\u003e FM a -\u003e Bool",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#submap",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "submap",
          "normalized": "FM a-\u003eFM a-\u003eBool",
          "package": "EdisonCore",
          "signature": "FM a-\u003eFM a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:submap"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "submapBy",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e Bool) -\u003e FM a -\u003e FM a -\u003e Bool",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#submapBy",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "submapBy",
          "normalized": "(a-\u003ea-\u003eBool)-\u003eFM a-\u003eFM a-\u003eBool",
          "package": "EdisonCore",
          "partial": "By",
          "signature": "(a-\u003ea-\u003eBool)-\u003eFM a-\u003eFM a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:submapBy"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "subset",
          "package": "EdisonCore",
          "signature": "FM a -\u003e FM b -\u003e Bool",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#subset",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "subset",
          "normalized": "FM a-\u003eFM b-\u003eBool",
          "package": "EdisonCore",
          "signature": "FM a-\u003eFM b-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:subset"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "toOrdSeq",
          "package": "EdisonCore",
          "signature": "FM a -\u003e seq (Int, a)",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#toOrdSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "toOrdSeq",
          "normalized": "FM a-\u003eb(Int,a)",
          "package": "EdisonCore",
          "partial": "Ord Seq",
          "signature": "FM a-\u003eseq(Int,a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:toOrdSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "toSeq",
          "package": "EdisonCore",
          "signature": "FM a -\u003e seq (Int, a)",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#toSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "toSeq",
          "normalized": "FM a-\u003eb(Int,a)",
          "package": "EdisonCore",
          "partial": "Seq",
          "signature": "FM a-\u003eseq(Int,a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:toSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "union",
          "package": "EdisonCore",
          "signature": "FM a -\u003e FM a -\u003e FM a",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#union",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "union",
          "normalized": "FM a-\u003eFM a-\u003eFM a",
          "package": "EdisonCore",
          "signature": "FM a-\u003eFM a-\u003eFM a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:union"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "unionSeq",
          "package": "EdisonCore",
          "signature": "seq (FM a) -\u003e FM a",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#unionSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "unionSeq",
          "normalized": "a(FM b)-\u003eFM b",
          "package": "EdisonCore",
          "partial": "Seq",
          "signature": "seq(FM a)-\u003eFM a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:unionSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "unionSeqWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e seq (FM a) -\u003e FM a",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#unionSeqWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "unionSeqWith",
          "normalized": "(a-\u003ea-\u003ea)-\u003eb(FM a)-\u003eFM a",
          "package": "EdisonCore",
          "partial": "Seq With",
          "signature": "(a-\u003ea-\u003ea)-\u003eseq(FM a)-\u003eFM a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:unionSeqWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "unionSeqWithKey",
          "package": "EdisonCore",
          "signature": "(Int -\u003e a -\u003e a -\u003e a) -\u003e seq (FM a) -\u003e FM a",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#unionSeqWithKey",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "unionSeqWithKey",
          "normalized": "(Int-\u003ea-\u003ea-\u003ea)-\u003eb(FM a)-\u003eFM a",
          "package": "EdisonCore",
          "partial": "Seq With Key",
          "signature": "(Int-\u003ea-\u003ea-\u003ea)-\u003eseq(FM a)-\u003eFM a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:unionSeqWithKey"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "unionWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e FM a -\u003e FM a -\u003e FM a",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#unionWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "unionWith",
          "normalized": "(a-\u003ea-\u003ea)-\u003eFM a-\u003eFM a-\u003eFM a",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003ea-\u003ea)-\u003eFM a-\u003eFM a-\u003eFM a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:unionWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "unionWithKey",
          "package": "EdisonCore",
          "signature": "(Int -\u003e a -\u003e a -\u003e a) -\u003e FM a -\u003e FM a -\u003e FM a",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#unionWithKey",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "unionWithKey",
          "normalized": "(Int-\u003ea-\u003ea-\u003ea)-\u003eFM a-\u003eFM a-\u003eFM a",
          "package": "EdisonCore",
          "partial": "With Key",
          "signature": "(Int-\u003ea-\u003ea-\u003ea)-\u003eFM a-\u003eFM a-\u003eFM a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:unionWithKey"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "unionl",
          "package": "EdisonCore",
          "signature": "FM a -\u003e FM a -\u003e FM a",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#unionl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "unionl",
          "normalized": "FM a-\u003eFM a-\u003eFM a",
          "package": "EdisonCore",
          "signature": "FM a-\u003eFM a-\u003eFM a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:unionl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "unionr",
          "package": "EdisonCore",
          "signature": "FM a -\u003e FM a -\u003e FM a",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#unionr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "unionr",
          "normalized": "FM a-\u003eFM a-\u003eFM a",
          "package": "EdisonCore",
          "signature": "FM a-\u003eFM a-\u003eFM a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:unionr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "unsafeAppend",
          "package": "EdisonCore",
          "signature": "FM a -\u003e FM a -\u003e FM a",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#unsafeAppend",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "unsafeAppend",
          "normalized": "FM a-\u003eFM a-\u003eFM a",
          "package": "EdisonCore",
          "partial": "Append",
          "signature": "FM a-\u003eFM a-\u003eFM a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:unsafeAppend"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "unsafeFromOrdSeq",
          "package": "EdisonCore",
          "signature": "seq (Int, a) -\u003e FM a",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#unsafeFromOrdSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "unsafeFromOrdSeq",
          "normalized": "a(Int,b)-\u003eFM b",
          "package": "EdisonCore",
          "partial": "From Ord Seq",
          "signature": "seq(Int,a)-\u003eFM a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:unsafeFromOrdSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "unsafeInsertMax",
          "package": "EdisonCore",
          "signature": "Int -\u003e a -\u003e FM a -\u003e FM a",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#unsafeInsertMax",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "unsafeInsertMax",
          "normalized": "Int-\u003ea-\u003eFM a-\u003eFM a",
          "package": "EdisonCore",
          "partial": "Insert Max",
          "signature": "Int-\u003ea-\u003eFM a-\u003eFM a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:unsafeInsertMax"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "unsafeInsertMin",
          "package": "EdisonCore",
          "signature": "Int -\u003e a -\u003e FM a -\u003e FM a",
          "source": "src/Data-Edison-Assoc-PatriciaLoMap.html#unsafeInsertMin",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc PatriciaLoMap",
          "module": "Data.Edison.Assoc.PatriciaLoMap",
          "name": "unsafeInsertMin",
          "normalized": "Int-\u003ea-\u003eFM a-\u003eFM a",
          "package": "EdisonCore",
          "partial": "Insert Min",
          "signature": "Int-\u003ea-\u003eFM a-\u003eFM a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-PatriciaLoMap.html#v:unsafeInsertMin"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThe standard library \u003ca\u003eData.Map\u003c/a\u003e repackaged as an Edison\n   associative collection.\n\u003c/p\u003e\u003c/div\u003e",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "StandardMap",
          "package": "EdisonCore",
          "source": "src/Data-Edison-Assoc-StandardMap.html",
          "type": "module"
        },
        "index": {
          "description": "The standard library Data.Map repackaged as an Edison associative collection",
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "StandardMap",
          "package": "EdisonCore",
          "partial": "Standard Map",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "FM",
          "package": "EdisonCore",
          "source": "src/Data-Edison-Assoc-StandardMap.html#FM",
          "type": "type"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "FM",
          "package": "EdisonCore",
          "partial": "FM",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#t:FM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "adjust",
          "package": "EdisonCore",
          "signature": "(a -\u003e a) -\u003e k -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-StandardMap.html#adjust",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "adjust",
          "normalized": "(a-\u003ea)-\u003eb-\u003eFM b a-\u003eFM b a",
          "package": "EdisonCore",
          "signature": "(a-\u003ea)-\u003ek-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:adjust"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "adjustAll",
          "package": "EdisonCore",
          "signature": "(a -\u003e a) -\u003e k -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-StandardMap.html#adjustAll",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "adjustAll",
          "normalized": "(a-\u003ea)-\u003eb-\u003eFM b a-\u003eFM b a",
          "package": "EdisonCore",
          "partial": "All",
          "signature": "(a-\u003ea)-\u003ek-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:adjustAll"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "adjustAllOrInsert",
          "package": "EdisonCore",
          "signature": "(a -\u003e a) -\u003e a -\u003e k -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-StandardMap.html#adjustAllOrInsert",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "adjustAllOrInsert",
          "normalized": "(a-\u003ea)-\u003ea-\u003eb-\u003eFM b a-\u003eFM b a",
          "package": "EdisonCore",
          "partial": "All Or Insert",
          "signature": "(a-\u003ea)-\u003ea-\u003ek-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:adjustAllOrInsert"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "adjustOrDelete",
          "package": "EdisonCore",
          "signature": "(a -\u003e Maybe a) -\u003e k -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-StandardMap.html#adjustOrDelete",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "adjustOrDelete",
          "normalized": "(a-\u003eMaybe a)-\u003eb-\u003eFM b a-\u003eFM b a",
          "package": "EdisonCore",
          "partial": "Or Delete",
          "signature": "(a-\u003eMaybe a)-\u003ek-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:adjustOrDelete"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "adjustOrDeleteAll",
          "package": "EdisonCore",
          "signature": "(a -\u003e Maybe a) -\u003e k -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-StandardMap.html#adjustOrDeleteAll",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "adjustOrDeleteAll",
          "normalized": "(a-\u003eMaybe a)-\u003eb-\u003eFM b a-\u003eFM b a",
          "package": "EdisonCore",
          "partial": "Or Delete All",
          "signature": "(a-\u003eMaybe a)-\u003ek-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:adjustOrDeleteAll"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "adjustOrInsert",
          "package": "EdisonCore",
          "signature": "(a -\u003e a) -\u003e a -\u003e k -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-StandardMap.html#adjustOrInsert",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "adjustOrInsert",
          "normalized": "(a-\u003ea)-\u003ea-\u003eb-\u003eFM b a-\u003eFM b a",
          "package": "EdisonCore",
          "partial": "Or Insert",
          "signature": "(a-\u003ea)-\u003ea-\u003ek-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:adjustOrInsert"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "count",
          "package": "EdisonCore",
          "signature": "k -\u003e FM k a -\u003e Int",
          "source": "src/Data-Edison-Assoc-StandardMap.html#count",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "count",
          "normalized": "a-\u003eFM a b-\u003eInt",
          "package": "EdisonCore",
          "signature": "k-\u003eFM k a-\u003eInt",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:count"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "delete",
          "package": "EdisonCore",
          "signature": "k -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-StandardMap.html#delete",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "delete",
          "normalized": "a-\u003eFM a b-\u003eFM a b",
          "package": "EdisonCore",
          "signature": "k-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:delete"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "deleteAll",
          "package": "EdisonCore",
          "signature": "k -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-StandardMap.html#deleteAll",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "deleteAll",
          "normalized": "a-\u003eFM a b-\u003eFM a b",
          "package": "EdisonCore",
          "partial": "All",
          "signature": "k-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:deleteAll"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "deleteMax",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-StandardMap.html#deleteMax",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "deleteMax",
          "normalized": "FM a b-\u003eFM a b",
          "package": "EdisonCore",
          "partial": "Max",
          "signature": "FM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:deleteMax"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "deleteMin",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-StandardMap.html#deleteMin",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "deleteMin",
          "normalized": "FM a b-\u003eFM a b",
          "package": "EdisonCore",
          "partial": "Min",
          "signature": "FM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:deleteMin"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "deleteSeq",
          "package": "EdisonCore",
          "signature": "seq k -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-StandardMap.html#deleteSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "deleteSeq",
          "normalized": "a b-\u003eFM b c-\u003eFM b c",
          "package": "EdisonCore",
          "partial": "Seq",
          "signature": "seq k-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:deleteSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "difference",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e FM k b -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-StandardMap.html#difference",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "difference",
          "normalized": "FM a b-\u003eFM a c-\u003eFM a b",
          "package": "EdisonCore",
          "signature": "FM k a-\u003eFM k b-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:difference"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "elements",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e seq a",
          "source": "src/Data-Edison-Assoc-StandardMap.html#elements",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "elements",
          "normalized": "FM a b-\u003ec b",
          "package": "EdisonCore",
          "signature": "FM k a-\u003eseq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:elements"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "empty",
          "package": "EdisonCore",
          "signature": "FM k a",
          "source": "src/Data-Edison-Assoc-StandardMap.html#empty",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "empty",
          "package": "EdisonCore",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:empty"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "filter",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-StandardMap.html#filter",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "filter",
          "normalized": "(a-\u003eBool)-\u003eFM b a-\u003eFM b a",
          "package": "EdisonCore",
          "signature": "(a-\u003eBool)-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:filter"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "filterGE",
          "package": "EdisonCore",
          "signature": "k -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-StandardMap.html#filterGE",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "filterGE",
          "normalized": "a-\u003eFM a b-\u003eFM a b",
          "package": "EdisonCore",
          "partial": "GE",
          "signature": "k-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:filterGE"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "filterGT",
          "package": "EdisonCore",
          "signature": "k -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-StandardMap.html#filterGT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "filterGT",
          "normalized": "a-\u003eFM a b-\u003eFM a b",
          "package": "EdisonCore",
          "partial": "GT",
          "signature": "k-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:filterGT"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "filterLE",
          "package": "EdisonCore",
          "signature": "k -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-StandardMap.html#filterLE",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "filterLE",
          "normalized": "a-\u003eFM a b-\u003eFM a b",
          "package": "EdisonCore",
          "partial": "LE",
          "signature": "k-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:filterLE"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "filterLT",
          "package": "EdisonCore",
          "signature": "k -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-StandardMap.html#filterLT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "filterLT",
          "normalized": "a-\u003eFM a b-\u003eFM a b",
          "package": "EdisonCore",
          "partial": "LT",
          "signature": "k-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:filterLT"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "filterWithKey",
          "package": "EdisonCore",
          "signature": "(k -\u003e a -\u003e Bool) -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-StandardMap.html#filterWithKey",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "filterWithKey",
          "normalized": "(a-\u003eb-\u003eBool)-\u003eFM a b-\u003eFM a b",
          "package": "EdisonCore",
          "partial": "With Key",
          "signature": "(k-\u003ea-\u003eBool)-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:filterWithKey"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "fold",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e FM k a -\u003e b",
          "source": "src/Data-Edison-Assoc-StandardMap.html#fold",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "fold",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eFM c a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eFM k a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:fold"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "fold'",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e FM k a -\u003e b",
          "source": "src/Data-Edison-Assoc-StandardMap.html#fold%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "fold'",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eFM c a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eFM k a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:fold-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "fold1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e FM k a -\u003e a",
          "source": "src/Data-Edison-Assoc-StandardMap.html#fold1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "fold1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eFM b a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eFM k a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:fold1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "fold1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e FM k a -\u003e a",
          "source": "src/Data-Edison-Assoc-StandardMap.html#fold1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "fold1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eFM b a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eFM k a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:fold1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "foldWithKey",
          "package": "EdisonCore",
          "signature": "(k -\u003e a -\u003e b -\u003e b) -\u003e b -\u003e FM k a -\u003e b",
          "source": "src/Data-Edison-Assoc-StandardMap.html#foldWithKey",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "foldWithKey",
          "normalized": "(a-\u003eb-\u003ec-\u003ec)-\u003ec-\u003eFM a b-\u003ec",
          "package": "EdisonCore",
          "partial": "With Key",
          "signature": "(k-\u003ea-\u003eb-\u003eb)-\u003eb-\u003eFM k a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:foldWithKey"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "foldWithKey'",
          "package": "EdisonCore",
          "signature": "(k -\u003e a -\u003e b -\u003e b) -\u003e b -\u003e FM k a -\u003e b",
          "source": "src/Data-Edison-Assoc-StandardMap.html#foldWithKey%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "foldWithKey'",
          "normalized": "(a-\u003eb-\u003ec-\u003ec)-\u003ec-\u003eFM a b-\u003ec",
          "package": "EdisonCore",
          "partial": "With Key'",
          "signature": "(k-\u003ea-\u003eb-\u003eb)-\u003eb-\u003eFM k a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:foldWithKey-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "foldl",
          "package": "EdisonCore",
          "signature": "(b -\u003e a -\u003e b) -\u003e b -\u003e FM k a -\u003e b",
          "source": "src/Data-Edison-Assoc-StandardMap.html#foldl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "foldl",
          "normalized": "(a-\u003eb-\u003ea)-\u003ea-\u003eFM c b-\u003ea",
          "package": "EdisonCore",
          "signature": "(b-\u003ea-\u003eb)-\u003eb-\u003eFM k a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:foldl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "foldl'",
          "package": "EdisonCore",
          "signature": "(b -\u003e a -\u003e b) -\u003e b -\u003e FM k a -\u003e b",
          "source": "src/Data-Edison-Assoc-StandardMap.html#foldl%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "foldl'",
          "normalized": "(a-\u003eb-\u003ea)-\u003ea-\u003eFM c b-\u003ea",
          "package": "EdisonCore",
          "signature": "(b-\u003ea-\u003eb)-\u003eb-\u003eFM k a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:foldl-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "foldl1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e FM k a -\u003e a",
          "source": "src/Data-Edison-Assoc-StandardMap.html#foldl1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "foldl1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eFM b a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eFM k a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:foldl1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "foldl1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e FM k a -\u003e a",
          "source": "src/Data-Edison-Assoc-StandardMap.html#foldl1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "foldl1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eFM b a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eFM k a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:foldl1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "foldlWithKey",
          "package": "EdisonCore",
          "signature": "(b -\u003e k -\u003e a -\u003e b) -\u003e b -\u003e FM k a -\u003e b",
          "source": "src/Data-Edison-Assoc-StandardMap.html#foldlWithKey",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "foldlWithKey",
          "normalized": "(a-\u003eb-\u003ec-\u003ea)-\u003ea-\u003eFM b c-\u003ea",
          "package": "EdisonCore",
          "partial": "With Key",
          "signature": "(b-\u003ek-\u003ea-\u003eb)-\u003eb-\u003eFM k a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:foldlWithKey"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "foldlWithKey'",
          "package": "EdisonCore",
          "signature": "(b -\u003e k -\u003e a -\u003e b) -\u003e b -\u003e FM k a -\u003e b",
          "source": "src/Data-Edison-Assoc-StandardMap.html#foldlWithKey%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "foldlWithKey'",
          "normalized": "(a-\u003eb-\u003ec-\u003ea)-\u003ea-\u003eFM b c-\u003ea",
          "package": "EdisonCore",
          "partial": "With Key'",
          "signature": "(b-\u003ek-\u003ea-\u003eb)-\u003eb-\u003eFM k a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:foldlWithKey-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "foldr",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e FM k a -\u003e b",
          "source": "src/Data-Edison-Assoc-StandardMap.html#foldr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "foldr",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eFM c a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eFM k a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:foldr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "foldr'",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e FM k a -\u003e b",
          "source": "src/Data-Edison-Assoc-StandardMap.html#foldr%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "foldr'",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eFM c a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eFM k a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:foldr-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "foldr1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e FM k a -\u003e a",
          "source": "src/Data-Edison-Assoc-StandardMap.html#foldr1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "foldr1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eFM b a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eFM k a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:foldr1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "foldr1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e FM k a -\u003e a",
          "source": "src/Data-Edison-Assoc-StandardMap.html#foldr1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "foldr1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eFM b a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eFM k a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:foldr1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "foldrWithKey",
          "package": "EdisonCore",
          "signature": "(k -\u003e a -\u003e b -\u003e b) -\u003e b -\u003e FM k a -\u003e b",
          "source": "src/Data-Edison-Assoc-StandardMap.html#foldrWithKey",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "foldrWithKey",
          "normalized": "(a-\u003eb-\u003ec-\u003ec)-\u003ec-\u003eFM a b-\u003ec",
          "package": "EdisonCore",
          "partial": "With Key",
          "signature": "(k-\u003ea-\u003eb-\u003eb)-\u003eb-\u003eFM k a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:foldrWithKey"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "foldrWithKey'",
          "package": "EdisonCore",
          "signature": "(k -\u003e a -\u003e b -\u003e b) -\u003e b -\u003e FM k a -\u003e b",
          "source": "src/Data-Edison-Assoc-StandardMap.html#foldrWithKey%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "foldrWithKey'",
          "normalized": "(a-\u003eb-\u003ec-\u003ec)-\u003ec-\u003eFM a b-\u003ec",
          "package": "EdisonCore",
          "partial": "With Key'",
          "signature": "(k-\u003ea-\u003eb-\u003eb)-\u003eb-\u003eFM k a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:foldrWithKey-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "fromSeq",
          "package": "EdisonCore",
          "signature": "seq (k, a) -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-StandardMap.html#fromSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "fromSeq",
          "normalized": "a(b,c)-\u003eFM b c",
          "package": "EdisonCore",
          "partial": "Seq",
          "signature": "seq(k,a)-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:fromSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "fromSeqWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e seq (k, a) -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-StandardMap.html#fromSeqWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "fromSeqWith",
          "normalized": "(a-\u003ea-\u003ea)-\u003eb(c,a)-\u003eFM c a",
          "package": "EdisonCore",
          "partial": "Seq With",
          "signature": "(a-\u003ea-\u003ea)-\u003eseq(k,a)-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:fromSeqWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "fromSeqWithKey",
          "package": "EdisonCore",
          "signature": "(k -\u003e a -\u003e a -\u003e a) -\u003e seq (k, a) -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-StandardMap.html#fromSeqWithKey",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "fromSeqWithKey",
          "normalized": "(a-\u003eb-\u003eb-\u003eb)-\u003ec(a,b)-\u003eFM a b",
          "package": "EdisonCore",
          "partial": "Seq With Key",
          "signature": "(k-\u003ea-\u003ea-\u003ea)-\u003eseq(k,a)-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:fromSeqWithKey"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "insert",
          "package": "EdisonCore",
          "signature": "k -\u003e a -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-StandardMap.html#insert",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "insert",
          "normalized": "a-\u003eb-\u003eFM a b-\u003eFM a b",
          "package": "EdisonCore",
          "signature": "k-\u003ea-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:insert"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "insertSeq",
          "package": "EdisonCore",
          "signature": "seq (k, a) -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-StandardMap.html#insertSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "insertSeq",
          "normalized": "a(b,c)-\u003eFM b c-\u003eFM b c",
          "package": "EdisonCore",
          "partial": "Seq",
          "signature": "seq(k,a)-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:insertSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "insertSeqWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e seq (k, a) -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-StandardMap.html#insertSeqWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "insertSeqWith",
          "normalized": "(a-\u003ea-\u003ea)-\u003eb(c,a)-\u003eFM c a-\u003eFM c a",
          "package": "EdisonCore",
          "partial": "Seq With",
          "signature": "(a-\u003ea-\u003ea)-\u003eseq(k,a)-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:insertSeqWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "insertSeqWithKey",
          "package": "EdisonCore",
          "signature": "(k -\u003e a -\u003e a -\u003e a) -\u003e seq (k, a) -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-StandardMap.html#insertSeqWithKey",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "insertSeqWithKey",
          "normalized": "(a-\u003eb-\u003eb-\u003eb)-\u003ec(a,b)-\u003eFM a b-\u003eFM a b",
          "package": "EdisonCore",
          "partial": "Seq With Key",
          "signature": "(k-\u003ea-\u003ea-\u003ea)-\u003eseq(k,a)-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:insertSeqWithKey"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "insertWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e k -\u003e a -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-StandardMap.html#insertWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "insertWith",
          "normalized": "(a-\u003ea-\u003ea)-\u003eb-\u003ea-\u003eFM b a-\u003eFM b a",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003ea-\u003ea)-\u003ek-\u003ea-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:insertWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "insertWithKey",
          "package": "EdisonCore",
          "signature": "(k -\u003e a -\u003e a -\u003e a) -\u003e k -\u003e a -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-StandardMap.html#insertWithKey",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "insertWithKey",
          "normalized": "(a-\u003eb-\u003eb-\u003eb)-\u003ea-\u003eb-\u003eFM a b-\u003eFM a b",
          "package": "EdisonCore",
          "partial": "With Key",
          "signature": "(k-\u003ea-\u003ea-\u003ea)-\u003ek-\u003ea-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:insertWithKey"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "intersectionWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e c) -\u003e FM k a -\u003e FM k b -\u003e FM k c",
          "source": "src/Data-Edison-Assoc-StandardMap.html#intersectionWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "intersectionWith",
          "normalized": "(a-\u003eb-\u003ec)-\u003eFM d a-\u003eFM d b-\u003eFM d c",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003eb-\u003ec)-\u003eFM k a-\u003eFM k b-\u003eFM k c",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:intersectionWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "intersectionWithKey",
          "package": "EdisonCore",
          "signature": "(k -\u003e a -\u003e b -\u003e c) -\u003e FM k a -\u003e FM k b -\u003e FM k c",
          "source": "src/Data-Edison-Assoc-StandardMap.html#intersectionWithKey",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "intersectionWithKey",
          "normalized": "(a-\u003eb-\u003ec-\u003ed)-\u003eFM a b-\u003eFM a c-\u003eFM a d",
          "package": "EdisonCore",
          "partial": "With Key",
          "signature": "(k-\u003ea-\u003eb-\u003ec)-\u003eFM k a-\u003eFM k b-\u003eFM k c",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:intersectionWithKey"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "keys",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e seq k",
          "source": "src/Data-Edison-Assoc-StandardMap.html#keys",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "keys",
          "normalized": "FM a b-\u003ec a",
          "package": "EdisonCore",
          "signature": "FM k a-\u003eseq k",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:keys"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "lookup",
          "package": "EdisonCore",
          "signature": "k -\u003e FM k a -\u003e a",
          "source": "src/Data-Edison-Assoc-StandardMap.html#lookup",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "lookup",
          "normalized": "a-\u003eFM a b-\u003eb",
          "package": "EdisonCore",
          "signature": "k-\u003eFM k a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:lookup"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "lookupAll",
          "package": "EdisonCore",
          "signature": "k -\u003e FM k a -\u003e seq a",
          "source": "src/Data-Edison-Assoc-StandardMap.html#lookupAll",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "lookupAll",
          "normalized": "a-\u003eFM a b-\u003ec b",
          "package": "EdisonCore",
          "partial": "All",
          "signature": "k-\u003eFM k a-\u003eseq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:lookupAll"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "lookupAndDelete",
          "package": "EdisonCore",
          "signature": "k -\u003e FM k a -\u003e (a, FM k a)",
          "source": "src/Data-Edison-Assoc-StandardMap.html#lookupAndDelete",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "lookupAndDelete",
          "normalized": "a-\u003eFM a b-\u003e(b,FM a b)",
          "package": "EdisonCore",
          "partial": "And Delete",
          "signature": "k-\u003eFM k a-\u003e(a,FM k a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:lookupAndDelete"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "lookupAndDeleteAll",
          "package": "EdisonCore",
          "signature": "k -\u003e FM k a -\u003e (seq a, FM k a)",
          "source": "src/Data-Edison-Assoc-StandardMap.html#lookupAndDeleteAll",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "lookupAndDeleteAll",
          "normalized": "a-\u003eFM a b-\u003e(c b,FM a b)",
          "package": "EdisonCore",
          "partial": "And Delete All",
          "signature": "k-\u003eFM k a-\u003e(seq a,FM k a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:lookupAndDeleteAll"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "lookupAndDeleteM",
          "package": "EdisonCore",
          "signature": "k -\u003e FM k a -\u003e m (a, FM k a)",
          "source": "src/Data-Edison-Assoc-StandardMap.html#lookupAndDeleteM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "lookupAndDeleteM",
          "normalized": "a-\u003eFM a b-\u003ec(b,FM a b)",
          "package": "EdisonCore",
          "partial": "And Delete",
          "signature": "k-\u003eFM k a-\u003em(a,FM k a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:lookupAndDeleteM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "lookupM",
          "package": "EdisonCore",
          "signature": "k -\u003e FM k a -\u003e m a",
          "source": "src/Data-Edison-Assoc-StandardMap.html#lookupM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "lookupM",
          "normalized": "a-\u003eFM a b-\u003ec b",
          "package": "EdisonCore",
          "signature": "k-\u003eFM k a-\u003em a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:lookupM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "lookupWithDefault",
          "package": "EdisonCore",
          "signature": "a -\u003e k -\u003e FM k a -\u003e a",
          "source": "src/Data-Edison-Assoc-StandardMap.html#lookupWithDefault",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "lookupWithDefault",
          "normalized": "a-\u003eb-\u003eFM b a-\u003ea",
          "package": "EdisonCore",
          "partial": "With Default",
          "signature": "a-\u003ek-\u003eFM k a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:lookupWithDefault"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "map",
          "package": "EdisonCore",
          "signature": "(a -\u003e b) -\u003e FM k a -\u003e FM k b",
          "source": "src/Data-Edison-Assoc-StandardMap.html#map",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "map",
          "normalized": "(a-\u003eb)-\u003eFM c a-\u003eFM c b",
          "package": "EdisonCore",
          "signature": "(a-\u003eb)-\u003eFM k a-\u003eFM k b",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:map"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "mapWithKey",
          "package": "EdisonCore",
          "signature": "(k -\u003e a -\u003e b) -\u003e FM k a -\u003e FM k b",
          "source": "src/Data-Edison-Assoc-StandardMap.html#mapWithKey",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "mapWithKey",
          "normalized": "(a-\u003eb-\u003ec)-\u003eFM a b-\u003eFM a c",
          "package": "EdisonCore",
          "partial": "With Key",
          "signature": "(k-\u003ea-\u003eb)-\u003eFM k a-\u003eFM k b",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:mapWithKey"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "maxElem",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e a",
          "source": "src/Data-Edison-Assoc-StandardMap.html#maxElem",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "maxElem",
          "normalized": "FM a b-\u003eb",
          "package": "EdisonCore",
          "partial": "Elem",
          "signature": "FM k a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:maxElem"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "maxElemWithKey",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e (k, a)",
          "source": "src/Data-Edison-Assoc-StandardMap.html#maxElemWithKey",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "maxElemWithKey",
          "normalized": "FM a b-\u003e(a,b)",
          "package": "EdisonCore",
          "partial": "Elem With Key",
          "signature": "FM k a-\u003e(k,a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:maxElemWithKey"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "maxView",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e m (a, FM k a)",
          "source": "src/Data-Edison-Assoc-StandardMap.html#maxView",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "maxView",
          "normalized": "FM a b-\u003ec(b,FM a b)",
          "package": "EdisonCore",
          "partial": "View",
          "signature": "FM k a-\u003em(a,FM k a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:maxView"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "maxViewWithKey",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e m ((k, a), FM k a)",
          "source": "src/Data-Edison-Assoc-StandardMap.html#maxViewWithKey",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "maxViewWithKey",
          "normalized": "FM a b-\u003ec((a,b),FM a b)",
          "package": "EdisonCore",
          "partial": "View With Key",
          "signature": "FM k a-\u003em((k,a),FM k a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:maxViewWithKey"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "member",
          "package": "EdisonCore",
          "signature": "k -\u003e FM k a -\u003e Bool",
          "source": "src/Data-Edison-Assoc-StandardMap.html#member",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "member",
          "normalized": "a-\u003eFM a b-\u003eBool",
          "package": "EdisonCore",
          "signature": "k-\u003eFM k a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:member"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "minElem",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e a",
          "source": "src/Data-Edison-Assoc-StandardMap.html#minElem",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "minElem",
          "normalized": "FM a b-\u003eb",
          "package": "EdisonCore",
          "partial": "Elem",
          "signature": "FM k a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:minElem"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "minElemWithKey",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e (k, a)",
          "source": "src/Data-Edison-Assoc-StandardMap.html#minElemWithKey",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "minElemWithKey",
          "normalized": "FM a b-\u003e(a,b)",
          "package": "EdisonCore",
          "partial": "Elem With Key",
          "signature": "FM k a-\u003e(k,a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:minElemWithKey"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "minView",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e m (a, FM k a)",
          "source": "src/Data-Edison-Assoc-StandardMap.html#minView",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "minView",
          "normalized": "FM a b-\u003ec(b,FM a b)",
          "package": "EdisonCore",
          "partial": "View",
          "signature": "FM k a-\u003em(a,FM k a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:minView"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "minViewWithKey",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e m ((k, a), FM k a)",
          "source": "src/Data-Edison-Assoc-StandardMap.html#minViewWithKey",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "minViewWithKey",
          "normalized": "FM a b-\u003ec((a,b),FM a b)",
          "package": "EdisonCore",
          "partial": "View With Key",
          "signature": "FM k a-\u003em((k,a),FM k a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:minViewWithKey"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "moduleName",
          "package": "EdisonCore",
          "signature": "String",
          "source": "src/Data-Edison-Assoc-StandardMap.html#moduleName",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "moduleName",
          "package": "EdisonCore",
          "partial": "Name",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:moduleName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "null",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e Bool",
          "source": "src/Data-Edison-Assoc-StandardMap.html#null",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "null",
          "normalized": "FM a b-\u003eBool",
          "package": "EdisonCore",
          "signature": "FM k a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:null"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "partition",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e FM k a -\u003e (FM k a, FM k a)",
          "source": "src/Data-Edison-Assoc-StandardMap.html#partition",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "partition",
          "normalized": "(a-\u003eBool)-\u003eFM b a-\u003e(FM b a,FM b a)",
          "package": "EdisonCore",
          "signature": "(a-\u003eBool)-\u003eFM k a-\u003e(FM k a,FM k a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:partition"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "partitionLE_GT",
          "package": "EdisonCore",
          "signature": "k -\u003e FM k a -\u003e (FM k a, FM k a)",
          "source": "src/Data-Edison-Assoc-StandardMap.html#partitionLE_GT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "partitionLE_GT",
          "normalized": "a-\u003eFM a b-\u003e(FM a b,FM a b)",
          "package": "EdisonCore",
          "partial": "LE GT",
          "signature": "k-\u003eFM k a-\u003e(FM k a,FM k a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:partitionLE_GT"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "partitionLT_GE",
          "package": "EdisonCore",
          "signature": "k -\u003e FM k a -\u003e (FM k a, FM k a)",
          "source": "src/Data-Edison-Assoc-StandardMap.html#partitionLT_GE",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "partitionLT_GE",
          "normalized": "a-\u003eFM a b-\u003e(FM a b,FM a b)",
          "package": "EdisonCore",
          "partial": "LT GE",
          "signature": "k-\u003eFM k a-\u003e(FM k a,FM k a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:partitionLT_GE"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "partitionLT_GT",
          "package": "EdisonCore",
          "signature": "k -\u003e FM k a -\u003e (FM k a, FM k a)",
          "source": "src/Data-Edison-Assoc-StandardMap.html#partitionLT_GT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "partitionLT_GT",
          "normalized": "a-\u003eFM a b-\u003e(FM a b,FM a b)",
          "package": "EdisonCore",
          "partial": "LT GT",
          "signature": "k-\u003eFM k a-\u003e(FM k a,FM k a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:partitionLT_GT"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "partitionWithKey",
          "package": "EdisonCore",
          "signature": "(k -\u003e a -\u003e Bool) -\u003e FM k a -\u003e (FM k a, FM k a)",
          "source": "src/Data-Edison-Assoc-StandardMap.html#partitionWithKey",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "partitionWithKey",
          "normalized": "(a-\u003eb-\u003eBool)-\u003eFM a b-\u003e(FM a b,FM a b)",
          "package": "EdisonCore",
          "partial": "With Key",
          "signature": "(k-\u003ea-\u003eBool)-\u003eFM k a-\u003e(FM k a,FM k a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:partitionWithKey"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "properSubmap",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e FM k a -\u003e Bool",
          "source": "src/Data-Edison-Assoc-StandardMap.html#properSubmap",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "properSubmap",
          "normalized": "FM a b-\u003eFM a b-\u003eBool",
          "package": "EdisonCore",
          "partial": "Submap",
          "signature": "FM k a-\u003eFM k a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:properSubmap"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "properSubmapBy",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e Bool) -\u003e FM k a -\u003e FM k a -\u003e Bool",
          "source": "src/Data-Edison-Assoc-StandardMap.html#properSubmapBy",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "properSubmapBy",
          "normalized": "(a-\u003ea-\u003eBool)-\u003eFM b a-\u003eFM b a-\u003eBool",
          "package": "EdisonCore",
          "partial": "Submap By",
          "signature": "(a-\u003ea-\u003eBool)-\u003eFM k a-\u003eFM k a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:properSubmapBy"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "properSubset",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e FM k b -\u003e Bool",
          "source": "src/Data-Edison-Assoc-StandardMap.html#properSubset",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "properSubset",
          "normalized": "FM a b-\u003eFM a c-\u003eBool",
          "package": "EdisonCore",
          "partial": "Subset",
          "signature": "FM k a-\u003eFM k b-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:properSubset"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "sameMap",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e FM k a -\u003e Bool",
          "source": "src/Data-Edison-Assoc-StandardMap.html#sameMap",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "sameMap",
          "normalized": "FM a b-\u003eFM a b-\u003eBool",
          "package": "EdisonCore",
          "partial": "Map",
          "signature": "FM k a-\u003eFM k a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:sameMap"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "sameMapBy",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e Bool) -\u003e FM k a -\u003e FM k a -\u003e Bool",
          "source": "src/Data-Edison-Assoc-StandardMap.html#sameMapBy",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "sameMapBy",
          "normalized": "(a-\u003ea-\u003eBool)-\u003eFM b a-\u003eFM b a-\u003eBool",
          "package": "EdisonCore",
          "partial": "Map By",
          "signature": "(a-\u003ea-\u003eBool)-\u003eFM k a-\u003eFM k a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:sameMapBy"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "singleton",
          "package": "EdisonCore",
          "signature": "k -\u003e a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-StandardMap.html#singleton",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "singleton",
          "normalized": "a-\u003eb-\u003eFM a b",
          "package": "EdisonCore",
          "signature": "k-\u003ea-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:singleton"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "size",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e Int",
          "source": "src/Data-Edison-Assoc-StandardMap.html#size",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "size",
          "normalized": "FM a b-\u003eInt",
          "package": "EdisonCore",
          "signature": "FM k a-\u003eInt",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:size"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "strict",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-StandardMap.html#strict",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "strict",
          "normalized": "FM a b-\u003eFM a b",
          "package": "EdisonCore",
          "signature": "FM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:strict"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "strictWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e b) -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-StandardMap.html#strictWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "strictWith",
          "normalized": "(a-\u003eb)-\u003eFM c a-\u003eFM c a",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003eb)-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:strictWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "structuralInvariant",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e Bool",
          "source": "src/Data-Edison-Assoc-StandardMap.html#structuralInvariant",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "structuralInvariant",
          "normalized": "FM a b-\u003eBool",
          "package": "EdisonCore",
          "partial": "Invariant",
          "signature": "FM k a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:structuralInvariant"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "submap",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e FM k a -\u003e Bool",
          "source": "src/Data-Edison-Assoc-StandardMap.html#submap",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "submap",
          "normalized": "FM a b-\u003eFM a b-\u003eBool",
          "package": "EdisonCore",
          "signature": "FM k a-\u003eFM k a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:submap"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "submapBy",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e Bool) -\u003e FM k a -\u003e FM k a -\u003e Bool",
          "source": "src/Data-Edison-Assoc-StandardMap.html#submapBy",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "submapBy",
          "normalized": "(a-\u003ea-\u003eBool)-\u003eFM b a-\u003eFM b a-\u003eBool",
          "package": "EdisonCore",
          "partial": "By",
          "signature": "(a-\u003ea-\u003eBool)-\u003eFM k a-\u003eFM k a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:submapBy"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "subset",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e FM k b -\u003e Bool",
          "source": "src/Data-Edison-Assoc-StandardMap.html#subset",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "subset",
          "normalized": "FM a b-\u003eFM a c-\u003eBool",
          "package": "EdisonCore",
          "signature": "FM k a-\u003eFM k b-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:subset"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "toOrdSeq",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e seq (k, a)",
          "source": "src/Data-Edison-Assoc-StandardMap.html#toOrdSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "toOrdSeq",
          "normalized": "FM a b-\u003ec(a,b)",
          "package": "EdisonCore",
          "partial": "Ord Seq",
          "signature": "FM k a-\u003eseq(k,a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:toOrdSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "toSeq",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e seq (k, a)",
          "source": "src/Data-Edison-Assoc-StandardMap.html#toSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "toSeq",
          "normalized": "FM a b-\u003ec(a,b)",
          "package": "EdisonCore",
          "partial": "Seq",
          "signature": "FM k a-\u003eseq(k,a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:toSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "union",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-StandardMap.html#union",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "union",
          "normalized": "FM a b-\u003eFM a b-\u003eFM a b",
          "package": "EdisonCore",
          "signature": "FM k a-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:union"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "unionSeq",
          "package": "EdisonCore",
          "signature": "seq (FM k a) -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-StandardMap.html#unionSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "unionSeq",
          "normalized": "a(FM b c)-\u003eFM b c",
          "package": "EdisonCore",
          "partial": "Seq",
          "signature": "seq(FM k a)-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:unionSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "unionSeqWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e seq (FM k a) -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-StandardMap.html#unionSeqWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "unionSeqWith",
          "normalized": "(a-\u003ea-\u003ea)-\u003eb(FM c a)-\u003eFM c a",
          "package": "EdisonCore",
          "partial": "Seq With",
          "signature": "(a-\u003ea-\u003ea)-\u003eseq(FM k a)-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:unionSeqWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "unionSeqWithKey",
          "package": "EdisonCore",
          "signature": "(k -\u003e a -\u003e a -\u003e a) -\u003e seq (FM k a) -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-StandardMap.html#unionSeqWithKey",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "unionSeqWithKey",
          "normalized": "(a-\u003eb-\u003eb-\u003eb)-\u003ec(FM a b)-\u003eFM a b",
          "package": "EdisonCore",
          "partial": "Seq With Key",
          "signature": "(k-\u003ea-\u003ea-\u003ea)-\u003eseq(FM k a)-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:unionSeqWithKey"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "unionWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e FM k a -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-StandardMap.html#unionWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "unionWith",
          "normalized": "(a-\u003ea-\u003ea)-\u003eFM b a-\u003eFM b a-\u003eFM b a",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003ea-\u003ea)-\u003eFM k a-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:unionWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "unionWithKey",
          "package": "EdisonCore",
          "signature": "(k -\u003e a -\u003e a -\u003e a) -\u003e FM k a -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-StandardMap.html#unionWithKey",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "unionWithKey",
          "normalized": "(a-\u003eb-\u003eb-\u003eb)-\u003eFM a b-\u003eFM a b-\u003eFM a b",
          "package": "EdisonCore",
          "partial": "With Key",
          "signature": "(k-\u003ea-\u003ea-\u003ea)-\u003eFM k a-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:unionWithKey"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "unionl",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-StandardMap.html#unionl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "unionl",
          "normalized": "FM a b-\u003eFM a b-\u003eFM a b",
          "package": "EdisonCore",
          "signature": "FM k a-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:unionl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "unionr",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-StandardMap.html#unionr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "unionr",
          "normalized": "FM a b-\u003eFM a b-\u003eFM a b",
          "package": "EdisonCore",
          "signature": "FM k a-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:unionr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "unsafeAppend",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-StandardMap.html#unsafeAppend",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "unsafeAppend",
          "normalized": "FM a b-\u003eFM a b-\u003eFM a b",
          "package": "EdisonCore",
          "partial": "Append",
          "signature": "FM k a-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:unsafeAppend"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "unsafeFromOrdSeq",
          "package": "EdisonCore",
          "signature": "seq (k, a) -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-StandardMap.html#unsafeFromOrdSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "unsafeFromOrdSeq",
          "normalized": "a(b,c)-\u003eFM b c",
          "package": "EdisonCore",
          "partial": "From Ord Seq",
          "signature": "seq(k,a)-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:unsafeFromOrdSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "unsafeInsertMax",
          "package": "EdisonCore",
          "signature": "k -\u003e a -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-StandardMap.html#unsafeInsertMax",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "unsafeInsertMax",
          "normalized": "a-\u003eb-\u003eFM a b-\u003eFM a b",
          "package": "EdisonCore",
          "partial": "Insert Max",
          "signature": "k-\u003ea-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:unsafeInsertMax"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "unsafeInsertMin",
          "package": "EdisonCore",
          "signature": "k -\u003e a -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-StandardMap.html#unsafeInsertMin",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc StandardMap",
          "module": "Data.Edison.Assoc.StandardMap",
          "name": "unsafeInsertMin",
          "normalized": "a-\u003eb-\u003eFM a b-\u003eFM a b",
          "package": "EdisonCore",
          "partial": "Insert Min",
          "signature": "k-\u003ea-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-StandardMap.html#v:unsafeInsertMin"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eFinite maps implemented as ternary search tries\n\u003c/p\u003e\u003c/div\u003e",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "TernaryTrie",
          "package": "EdisonCore",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html",
          "type": "module"
        },
        "index": {
          "description": "Finite maps implemented as ternary search tries",
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "TernaryTrie",
          "package": "EdisonCore",
          "partial": "Ternary Trie",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "FM",
          "package": "EdisonCore",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#FM",
          "type": "data"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "FM",
          "package": "EdisonCore",
          "partial": "FM",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#t:FM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "adjust",
          "package": "EdisonCore",
          "signature": "(a -\u003e a) -\u003e [k] -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#adjust",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "adjust",
          "normalized": "(a-\u003ea)-\u003e[b]-\u003eFM b a-\u003eFM b a",
          "package": "EdisonCore",
          "signature": "(a-\u003ea)-\u003e[k]-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:adjust"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "adjustAll",
          "package": "EdisonCore",
          "signature": "(a -\u003e a) -\u003e [k] -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#adjustAll",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "adjustAll",
          "normalized": "(a-\u003ea)-\u003e[b]-\u003eFM b a-\u003eFM b a",
          "package": "EdisonCore",
          "partial": "All",
          "signature": "(a-\u003ea)-\u003e[k]-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:adjustAll"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "adjustAllOrInsert",
          "package": "EdisonCore",
          "signature": "(a -\u003e a) -\u003e a -\u003e [k] -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#adjustAllOrInsert",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "adjustAllOrInsert",
          "normalized": "(a-\u003ea)-\u003ea-\u003e[b]-\u003eFM b a-\u003eFM b a",
          "package": "EdisonCore",
          "partial": "All Or Insert",
          "signature": "(a-\u003ea)-\u003ea-\u003e[k]-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:adjustAllOrInsert"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "adjustOrDelete",
          "package": "EdisonCore",
          "signature": "(a -\u003e Maybe a) -\u003e [k] -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#adjustOrDelete",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "adjustOrDelete",
          "normalized": "(a-\u003eMaybe a)-\u003e[b]-\u003eFM b a-\u003eFM b a",
          "package": "EdisonCore",
          "partial": "Or Delete",
          "signature": "(a-\u003eMaybe a)-\u003e[k]-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:adjustOrDelete"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "adjustOrDeleteAll",
          "package": "EdisonCore",
          "signature": "(a -\u003e Maybe a) -\u003e [k] -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#adjustOrDeleteAll",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "adjustOrDeleteAll",
          "normalized": "(a-\u003eMaybe a)-\u003e[b]-\u003eFM b a-\u003eFM b a",
          "package": "EdisonCore",
          "partial": "Or Delete All",
          "signature": "(a-\u003eMaybe a)-\u003e[k]-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:adjustOrDeleteAll"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "adjustOrInsert",
          "package": "EdisonCore",
          "signature": "(a -\u003e a) -\u003e a -\u003e [k] -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#adjustOrInsert",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "adjustOrInsert",
          "normalized": "(a-\u003ea)-\u003ea-\u003e[b]-\u003eFM b a-\u003eFM b a",
          "package": "EdisonCore",
          "partial": "Or Insert",
          "signature": "(a-\u003ea)-\u003ea-\u003e[k]-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:adjustOrInsert"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "count",
          "package": "EdisonCore",
          "signature": "[k] -\u003e FM k a -\u003e Int",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#count",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "count",
          "normalized": "[a]-\u003eFM a b-\u003eInt",
          "package": "EdisonCore",
          "signature": "[k]-\u003eFM k a-\u003eInt",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:count"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "delete",
          "package": "EdisonCore",
          "signature": "[k] -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#delete",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "delete",
          "normalized": "[a]-\u003eFM a b-\u003eFM a b",
          "package": "EdisonCore",
          "signature": "[k]-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:delete"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "deleteAll",
          "package": "EdisonCore",
          "signature": "[k] -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#deleteAll",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "deleteAll",
          "normalized": "[a]-\u003eFM a b-\u003eFM a b",
          "package": "EdisonCore",
          "partial": "All",
          "signature": "[k]-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:deleteAll"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "deleteMax",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#deleteMax",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "deleteMax",
          "normalized": "FM a b-\u003eFM a b",
          "package": "EdisonCore",
          "partial": "Max",
          "signature": "FM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:deleteMax"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "deleteMin",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#deleteMin",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "deleteMin",
          "normalized": "FM a b-\u003eFM a b",
          "package": "EdisonCore",
          "partial": "Min",
          "signature": "FM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:deleteMin"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "deleteSeq",
          "package": "EdisonCore",
          "signature": "seq [k] -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#deleteSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "deleteSeq",
          "normalized": "a[b]-\u003eFM b c-\u003eFM b c",
          "package": "EdisonCore",
          "partial": "Seq",
          "signature": "seq[k]-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:deleteSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "difference",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e FM k b -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#difference",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "difference",
          "normalized": "FM a b-\u003eFM a c-\u003eFM a b",
          "package": "EdisonCore",
          "signature": "FM k a-\u003eFM k b-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:difference"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "elements",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e seq a",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#elements",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "elements",
          "normalized": "FM a b-\u003ec b",
          "package": "EdisonCore",
          "signature": "FM k a-\u003eseq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:elements"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "empty",
          "package": "EdisonCore",
          "signature": "FM k a",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#empty",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "empty",
          "package": "EdisonCore",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:empty"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "filter",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#filter",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "filter",
          "normalized": "(a-\u003eBool)-\u003eFM b a-\u003eFM b a",
          "package": "EdisonCore",
          "signature": "(a-\u003eBool)-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:filter"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "filterGE",
          "package": "EdisonCore",
          "signature": "[k] -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#filterGE",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "filterGE",
          "normalized": "[a]-\u003eFM a b-\u003eFM a b",
          "package": "EdisonCore",
          "partial": "GE",
          "signature": "[k]-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:filterGE"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "filterGT",
          "package": "EdisonCore",
          "signature": "[k] -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#filterGT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "filterGT",
          "normalized": "[a]-\u003eFM a b-\u003eFM a b",
          "package": "EdisonCore",
          "partial": "GT",
          "signature": "[k]-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:filterGT"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "filterLE",
          "package": "EdisonCore",
          "signature": "[k] -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#filterLE",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "filterLE",
          "normalized": "[a]-\u003eFM a b-\u003eFM a b",
          "package": "EdisonCore",
          "partial": "LE",
          "signature": "[k]-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:filterLE"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "filterLT",
          "package": "EdisonCore",
          "signature": "[k] -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#filterLT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "filterLT",
          "normalized": "[a]-\u003eFM a b-\u003eFM a b",
          "package": "EdisonCore",
          "partial": "LT",
          "signature": "[k]-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:filterLT"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "filterWithKey",
          "package": "EdisonCore",
          "signature": "([k] -\u003e a -\u003e Bool) -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#filterWithKey",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "filterWithKey",
          "normalized": "([a]-\u003eb-\u003eBool)-\u003eFM a b-\u003eFM a b",
          "package": "EdisonCore",
          "partial": "With Key",
          "signature": "([k]-\u003ea-\u003eBool)-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:filterWithKey"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "fold",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e FM k a -\u003e b",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#fold",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "fold",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eFM c a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eFM k a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:fold"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "fold'",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e FM k a -\u003e b",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#fold%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "fold'",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eFM c a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eFM k a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:fold-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "fold1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e FM k a -\u003e a",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#fold1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "fold1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eFM b a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eFM k a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:fold1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "fold1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e FM k a -\u003e a",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#fold1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "fold1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eFM b a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eFM k a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:fold1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "foldWithKey",
          "package": "EdisonCore",
          "signature": "([k] -\u003e a -\u003e b -\u003e b) -\u003e b -\u003e FM k a -\u003e b",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#foldWithKey",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "foldWithKey",
          "normalized": "([a]-\u003eb-\u003ec-\u003ec)-\u003ec-\u003eFM a b-\u003ec",
          "package": "EdisonCore",
          "partial": "With Key",
          "signature": "([k]-\u003ea-\u003eb-\u003eb)-\u003eb-\u003eFM k a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:foldWithKey"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "foldWithKey'",
          "package": "EdisonCore",
          "signature": "([k] -\u003e a -\u003e b -\u003e b) -\u003e b -\u003e FM k a -\u003e b",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#foldWithKey%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "foldWithKey'",
          "normalized": "([a]-\u003eb-\u003ec-\u003ec)-\u003ec-\u003eFM a b-\u003ec",
          "package": "EdisonCore",
          "partial": "With Key'",
          "signature": "([k]-\u003ea-\u003eb-\u003eb)-\u003eb-\u003eFM k a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:foldWithKey-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "foldl",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e a) -\u003e a -\u003e FM t b -\u003e a",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#foldl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "foldl",
          "normalized": "(a-\u003eb-\u003ea)-\u003ea-\u003eFM c b-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003ea)-\u003ea-\u003eFM t b-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:foldl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "foldl'",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e a) -\u003e a -\u003e FM t b -\u003e a",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#foldl%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "foldl'",
          "normalized": "(a-\u003eb-\u003ea)-\u003ea-\u003eFM c b-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003ea)-\u003ea-\u003eFM t b-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:foldl-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "foldl1",
          "package": "EdisonCore",
          "signature": "(b -\u003e b -\u003e b) -\u003e FM k b -\u003e b",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#foldl1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "foldl1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eFM b a-\u003ea",
          "package": "EdisonCore",
          "signature": "(b-\u003eb-\u003eb)-\u003eFM k b-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:foldl1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "foldl1'",
          "package": "EdisonCore",
          "signature": "(b -\u003e b -\u003e b) -\u003e FM k b -\u003e b",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#foldl1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "foldl1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eFM b a-\u003ea",
          "package": "EdisonCore",
          "signature": "(b-\u003eb-\u003eb)-\u003eFM k b-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:foldl1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "foldlWithKey",
          "package": "EdisonCore",
          "signature": "(b -\u003e [k] -\u003e a -\u003e b) -\u003e b -\u003e FM k a -\u003e b",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#foldlWithKey",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "foldlWithKey",
          "normalized": "(a-\u003e[b]-\u003ec-\u003ea)-\u003ea-\u003eFM b c-\u003ea",
          "package": "EdisonCore",
          "partial": "With Key",
          "signature": "(b-\u003e[k]-\u003ea-\u003eb)-\u003eb-\u003eFM k a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:foldlWithKey"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "foldlWithKey'",
          "package": "EdisonCore",
          "signature": "(b -\u003e [k] -\u003e a -\u003e b) -\u003e b -\u003e FM k a -\u003e b",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#foldlWithKey%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "foldlWithKey'",
          "normalized": "(a-\u003e[b]-\u003ec-\u003ea)-\u003ea-\u003eFM b c-\u003ea",
          "package": "EdisonCore",
          "partial": "With Key'",
          "signature": "(b-\u003e[k]-\u003ea-\u003eb)-\u003eb-\u003eFM k a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:foldlWithKey-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "foldr",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e FM k a -\u003e b",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#foldr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "foldr",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eFM c a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eFM k a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:foldr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "foldr'",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e FM k a -\u003e b",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#foldr%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "foldr'",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eFM c a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eFM k a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:foldr-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "foldr1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e FM k a -\u003e a",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#foldr1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "foldr1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eFM b a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eFM k a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:foldr1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "foldr1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e FM k a -\u003e a",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#foldr1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "foldr1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eFM b a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eFM k a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:foldr1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "foldrWithKey",
          "package": "EdisonCore",
          "signature": "([k] -\u003e a -\u003e b -\u003e b) -\u003e b -\u003e FM k a -\u003e b",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#foldrWithKey",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "foldrWithKey",
          "normalized": "([a]-\u003eb-\u003ec-\u003ec)-\u003ec-\u003eFM a b-\u003ec",
          "package": "EdisonCore",
          "partial": "With Key",
          "signature": "([k]-\u003ea-\u003eb-\u003eb)-\u003eb-\u003eFM k a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:foldrWithKey"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "foldrWithKey'",
          "package": "EdisonCore",
          "signature": "([k] -\u003e a -\u003e b -\u003e b) -\u003e b -\u003e FM k a -\u003e b",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#foldrWithKey%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "foldrWithKey'",
          "normalized": "([a]-\u003eb-\u003ec-\u003ec)-\u003ec-\u003eFM a b-\u003ec",
          "package": "EdisonCore",
          "partial": "With Key'",
          "signature": "([k]-\u003ea-\u003eb-\u003eb)-\u003eb-\u003eFM k a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:foldrWithKey-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "fromSeq",
          "package": "EdisonCore",
          "signature": "seq ([k], a) -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#fromSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "fromSeq",
          "normalized": "a([b],c)-\u003eFM b c",
          "package": "EdisonCore",
          "partial": "Seq",
          "signature": "seq([k],a)-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:fromSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "fromSeqWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e seq ([k], a) -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#fromSeqWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "fromSeqWith",
          "normalized": "(a-\u003ea-\u003ea)-\u003eb([c],a)-\u003eFM c a",
          "package": "EdisonCore",
          "partial": "Seq With",
          "signature": "(a-\u003ea-\u003ea)-\u003eseq([k],a)-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:fromSeqWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "fromSeqWithKey",
          "package": "EdisonCore",
          "signature": "([k] -\u003e a -\u003e a -\u003e a) -\u003e seq ([k], a) -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#fromSeqWithKey",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "fromSeqWithKey",
          "normalized": "([a]-\u003eb-\u003eb-\u003eb)-\u003ec([a],b)-\u003eFM a b",
          "package": "EdisonCore",
          "partial": "Seq With Key",
          "signature": "([k]-\u003ea-\u003ea-\u003ea)-\u003eseq([k],a)-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:fromSeqWithKey"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "insert",
          "package": "EdisonCore",
          "signature": "[k] -\u003e a -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#insert",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "insert",
          "normalized": "[a]-\u003eb-\u003eFM a b-\u003eFM a b",
          "package": "EdisonCore",
          "signature": "[k]-\u003ea-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:insert"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "insertSeq",
          "package": "EdisonCore",
          "signature": "seq ([k], a) -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#insertSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "insertSeq",
          "normalized": "a([b],c)-\u003eFM b c-\u003eFM b c",
          "package": "EdisonCore",
          "partial": "Seq",
          "signature": "seq([k],a)-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:insertSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "insertSeqWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e seq ([k], a) -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#insertSeqWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "insertSeqWith",
          "normalized": "(a-\u003ea-\u003ea)-\u003eb([c],a)-\u003eFM c a-\u003eFM c a",
          "package": "EdisonCore",
          "partial": "Seq With",
          "signature": "(a-\u003ea-\u003ea)-\u003eseq([k],a)-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:insertSeqWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "insertSeqWithKey",
          "package": "EdisonCore",
          "signature": "([k] -\u003e a -\u003e a -\u003e a) -\u003e seq ([k], a) -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#insertSeqWithKey",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "insertSeqWithKey",
          "normalized": "([a]-\u003eb-\u003eb-\u003eb)-\u003ec([a],b)-\u003eFM a b-\u003eFM a b",
          "package": "EdisonCore",
          "partial": "Seq With Key",
          "signature": "([k]-\u003ea-\u003ea-\u003ea)-\u003eseq([k],a)-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:insertSeqWithKey"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "insertWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e [k] -\u003e a -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#insertWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "insertWith",
          "normalized": "(a-\u003ea-\u003ea)-\u003e[b]-\u003ea-\u003eFM b a-\u003eFM b a",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003ea-\u003ea)-\u003e[k]-\u003ea-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:insertWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "insertWithKey",
          "package": "EdisonCore",
          "signature": "([k] -\u003e a -\u003e a -\u003e a) -\u003e [k] -\u003e a -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#insertWithKey",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "insertWithKey",
          "normalized": "([a]-\u003eb-\u003eb-\u003eb)-\u003e[a]-\u003eb-\u003eFM a b-\u003eFM a b",
          "package": "EdisonCore",
          "partial": "With Key",
          "signature": "([k]-\u003ea-\u003ea-\u003ea)-\u003e[k]-\u003ea-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:insertWithKey"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "intersectionWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e c) -\u003e FM k a -\u003e FM k b -\u003e FM k c",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#intersectionWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "intersectionWith",
          "normalized": "(a-\u003eb-\u003ec)-\u003eFM d a-\u003eFM d b-\u003eFM d c",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003eb-\u003ec)-\u003eFM k a-\u003eFM k b-\u003eFM k c",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:intersectionWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "intersectionWithKey",
          "package": "EdisonCore",
          "signature": "([k] -\u003e a -\u003e b -\u003e c) -\u003e FM k a -\u003e FM k b -\u003e FM k c",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#intersectionWithKey",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "intersectionWithKey",
          "normalized": "([a]-\u003eb-\u003ec-\u003ed)-\u003eFM a b-\u003eFM a c-\u003eFM a d",
          "package": "EdisonCore",
          "partial": "With Key",
          "signature": "([k]-\u003ea-\u003eb-\u003ec)-\u003eFM k a-\u003eFM k b-\u003eFM k c",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:intersectionWithKey"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "keys",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e seq [k]",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#keys",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "keys",
          "normalized": "FM a b-\u003ec[a]",
          "package": "EdisonCore",
          "signature": "FM k a-\u003eseq[k]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:keys"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "lookup",
          "package": "EdisonCore",
          "signature": "[k] -\u003e FM k a -\u003e a",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#lookup",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "lookup",
          "normalized": "[a]-\u003eFM a b-\u003eb",
          "package": "EdisonCore",
          "signature": "[k]-\u003eFM k a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:lookup"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "lookupAll",
          "package": "EdisonCore",
          "signature": "[k] -\u003e FM k a -\u003e seq a",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#lookupAll",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "lookupAll",
          "normalized": "[a]-\u003eFM a b-\u003ec b",
          "package": "EdisonCore",
          "partial": "All",
          "signature": "[k]-\u003eFM k a-\u003eseq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:lookupAll"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "lookupAndDelete",
          "package": "EdisonCore",
          "signature": "[k] -\u003e FM k a -\u003e (a, FM k a)",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#lookupAndDelete",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "lookupAndDelete",
          "normalized": "[a]-\u003eFM a b-\u003e(b,FM a b)",
          "package": "EdisonCore",
          "partial": "And Delete",
          "signature": "[k]-\u003eFM k a-\u003e(a,FM k a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:lookupAndDelete"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "lookupAndDeleteAll",
          "package": "EdisonCore",
          "signature": "[k] -\u003e FM k a -\u003e (seq a, FM k a)",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#lookupAndDeleteAll",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "lookupAndDeleteAll",
          "normalized": "[a]-\u003eFM a b-\u003e(c b,FM a b)",
          "package": "EdisonCore",
          "partial": "And Delete All",
          "signature": "[k]-\u003eFM k a-\u003e(seq a,FM k a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:lookupAndDeleteAll"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "lookupAndDeleteM",
          "package": "EdisonCore",
          "signature": "[k] -\u003e FM k a -\u003e rm (a, FM k a)",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#lookupAndDeleteM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "lookupAndDeleteM",
          "normalized": "[a]-\u003eFM a b-\u003ec(b,FM a b)",
          "package": "EdisonCore",
          "partial": "And Delete",
          "signature": "[k]-\u003eFM k a-\u003erm(a,FM k a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:lookupAndDeleteM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "lookupM",
          "package": "EdisonCore",
          "signature": "[k] -\u003e FM k a -\u003e rm a",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#lookupM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "lookupM",
          "normalized": "[a]-\u003eFM a b-\u003ec b",
          "package": "EdisonCore",
          "signature": "[k]-\u003eFM k a-\u003erm a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:lookupM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "lookupWithDefault",
          "package": "EdisonCore",
          "signature": "a -\u003e [k] -\u003e FM k a -\u003e a",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#lookupWithDefault",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "lookupWithDefault",
          "normalized": "a-\u003e[b]-\u003eFM b a-\u003ea",
          "package": "EdisonCore",
          "partial": "With Default",
          "signature": "a-\u003e[k]-\u003eFM k a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:lookupWithDefault"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "map",
          "package": "EdisonCore",
          "signature": "(a -\u003e b) -\u003e FM k a -\u003e FM k b",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#map",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "map",
          "normalized": "(a-\u003eb)-\u003eFM c a-\u003eFM c b",
          "package": "EdisonCore",
          "signature": "(a-\u003eb)-\u003eFM k a-\u003eFM k b",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:map"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "mapWithKey",
          "package": "EdisonCore",
          "signature": "([k] -\u003e a -\u003e b) -\u003e FM k a -\u003e FM k b",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#mapWithKey",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "mapWithKey",
          "normalized": "([a]-\u003eb-\u003ec)-\u003eFM a b-\u003eFM a c",
          "package": "EdisonCore",
          "partial": "With Key",
          "signature": "([k]-\u003ea-\u003eb)-\u003eFM k a-\u003eFM k b",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:mapWithKey"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "maxElem",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e a",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#maxElem",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "maxElem",
          "normalized": "FM a b-\u003eb",
          "package": "EdisonCore",
          "partial": "Elem",
          "signature": "FM k a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:maxElem"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "maxElemWithKey",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e ([k], a)",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#maxElemWithKey",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "maxElemWithKey",
          "normalized": "FM a b-\u003e([a],b)",
          "package": "EdisonCore",
          "partial": "Elem With Key",
          "signature": "FM k a-\u003e([k],a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:maxElemWithKey"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "maxView",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e m (a, FM k a)",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#maxView",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "maxView",
          "normalized": "FM a b-\u003ec(b,FM a b)",
          "package": "EdisonCore",
          "partial": "View",
          "signature": "FM k a-\u003em(a,FM k a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:maxView"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "maxViewWithKey",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e m (([k], a), FM k a)",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#maxViewWithKey",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "maxViewWithKey",
          "normalized": "FM a b-\u003ec(([a],b),FM a b)",
          "package": "EdisonCore",
          "partial": "View With Key",
          "signature": "FM k a-\u003em(([k],a),FM k a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:maxViewWithKey"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "member",
          "package": "EdisonCore",
          "signature": "[k] -\u003e FM k a -\u003e Bool",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#member",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "member",
          "normalized": "[a]-\u003eFM a b-\u003eBool",
          "package": "EdisonCore",
          "signature": "[k]-\u003eFM k a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:member"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "mergeKVFM",
          "package": "EdisonCore",
          "signature": "([k] -\u003e Maybe a -\u003e Maybe b -\u003e Maybe c) -\u003e FM k a -\u003e FM k b -\u003e FM k c",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#mergeKVFM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "mergeKVFM",
          "normalized": "([a]-\u003eMaybe b-\u003eMaybe c-\u003eMaybe d)-\u003eFM a b-\u003eFM a c-\u003eFM a d",
          "package": "EdisonCore",
          "partial": "KVFM",
          "signature": "([k]-\u003eMaybe a-\u003eMaybe b-\u003eMaybe c)-\u003eFM k a-\u003eFM k b-\u003eFM k c",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:mergeKVFM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "mergeVFM",
          "package": "EdisonCore",
          "signature": "(Maybe a -\u003e Maybe b -\u003e Maybe c) -\u003e FM k a -\u003e FM k b -\u003e FM k c",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#mergeVFM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "mergeVFM",
          "normalized": "(Maybe a-\u003eMaybe b-\u003eMaybe c)-\u003eFM d a-\u003eFM d b-\u003eFM d c",
          "package": "EdisonCore",
          "partial": "VFM",
          "signature": "(Maybe a-\u003eMaybe b-\u003eMaybe c)-\u003eFM k a-\u003eFM k b-\u003eFM k c",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:mergeVFM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "minElem",
          "package": "EdisonCore",
          "signature": "FM t1 t -\u003e t",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#minElem",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "minElem",
          "normalized": "FM a a-\u003ea",
          "package": "EdisonCore",
          "partial": "Elem",
          "signature": "FM t t-\u003et",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:minElem"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "minElemWithKey",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e ([k], a)",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#minElemWithKey",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "minElemWithKey",
          "normalized": "FM a b-\u003e([a],b)",
          "package": "EdisonCore",
          "partial": "Elem With Key",
          "signature": "FM k a-\u003e([k],a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:minElemWithKey"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "minView",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e m (a, FM k a)",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#minView",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "minView",
          "normalized": "FM a b-\u003ec(b,FM a b)",
          "package": "EdisonCore",
          "partial": "View",
          "signature": "FM k a-\u003em(a,FM k a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:minView"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "minViewWithKey",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e m (([k], a), FM k a)",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#minViewWithKey",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "minViewWithKey",
          "normalized": "FM a b-\u003ec(([a],b),FM a b)",
          "package": "EdisonCore",
          "partial": "View With Key",
          "signature": "FM k a-\u003em(([k],a),FM k a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:minViewWithKey"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "moduleName",
          "package": "EdisonCore",
          "signature": "String",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#moduleName",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "moduleName",
          "package": "EdisonCore",
          "partial": "Name",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:moduleName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "null",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e Bool",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#null",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "null",
          "normalized": "FM a b-\u003eBool",
          "package": "EdisonCore",
          "signature": "FM k a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:null"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "partition",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e FM k a -\u003e (FM k a, FM k a)",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#partition",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "partition",
          "normalized": "(a-\u003eBool)-\u003eFM b a-\u003e(FM b a,FM b a)",
          "package": "EdisonCore",
          "signature": "(a-\u003eBool)-\u003eFM k a-\u003e(FM k a,FM k a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:partition"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "partitionLE_GT",
          "package": "EdisonCore",
          "signature": "[k] -\u003e FM k a -\u003e (FM k a, FM k a)",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#partitionLE_GT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "partitionLE_GT",
          "normalized": "[a]-\u003eFM a b-\u003e(FM a b,FM a b)",
          "package": "EdisonCore",
          "partial": "LE GT",
          "signature": "[k]-\u003eFM k a-\u003e(FM k a,FM k a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:partitionLE_GT"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "partitionLT_GE",
          "package": "EdisonCore",
          "signature": "[k] -\u003e FM k a -\u003e (FM k a, FM k a)",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#partitionLT_GE",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "partitionLT_GE",
          "normalized": "[a]-\u003eFM a b-\u003e(FM a b,FM a b)",
          "package": "EdisonCore",
          "partial": "LT GE",
          "signature": "[k]-\u003eFM k a-\u003e(FM k a,FM k a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:partitionLT_GE"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "partitionLT_GT",
          "package": "EdisonCore",
          "signature": "[k] -\u003e FM k a -\u003e (FM k a, FM k a)",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#partitionLT_GT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "partitionLT_GT",
          "normalized": "[a]-\u003eFM a b-\u003e(FM a b,FM a b)",
          "package": "EdisonCore",
          "partial": "LT GT",
          "signature": "[k]-\u003eFM k a-\u003e(FM k a,FM k a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:partitionLT_GT"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "partitionWithKey",
          "package": "EdisonCore",
          "signature": "([k] -\u003e a -\u003e Bool) -\u003e FM k a -\u003e (FM k a, FM k a)",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#partitionWithKey",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "partitionWithKey",
          "normalized": "([a]-\u003eb-\u003eBool)-\u003eFM a b-\u003e(FM a b,FM a b)",
          "package": "EdisonCore",
          "partial": "With Key",
          "signature": "([k]-\u003ea-\u003eBool)-\u003eFM k a-\u003e(FM k a,FM k a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:partitionWithKey"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "properSubmap",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e FM k a -\u003e Bool",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#properSubmap",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "properSubmap",
          "normalized": "FM a b-\u003eFM a b-\u003eBool",
          "package": "EdisonCore",
          "partial": "Submap",
          "signature": "FM k a-\u003eFM k a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:properSubmap"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "properSubmapBy",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e Bool) -\u003e FM k a -\u003e FM k a -\u003e Bool",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#properSubmapBy",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "properSubmapBy",
          "normalized": "(a-\u003ea-\u003eBool)-\u003eFM b a-\u003eFM b a-\u003eBool",
          "package": "EdisonCore",
          "partial": "Submap By",
          "signature": "(a-\u003ea-\u003eBool)-\u003eFM k a-\u003eFM k a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:properSubmapBy"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "properSubset",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e FM k b -\u003e Bool",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#properSubset",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "properSubset",
          "normalized": "FM a b-\u003eFM a c-\u003eBool",
          "package": "EdisonCore",
          "partial": "Subset",
          "signature": "FM k a-\u003eFM k b-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:properSubset"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "sameMap",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e FM k a -\u003e Bool",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#sameMap",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "sameMap",
          "normalized": "FM a b-\u003eFM a b-\u003eBool",
          "package": "EdisonCore",
          "partial": "Map",
          "signature": "FM k a-\u003eFM k a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:sameMap"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "sameMapBy",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e Bool) -\u003e FM k a -\u003e FM k a -\u003e Bool",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#sameMapBy",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "sameMapBy",
          "normalized": "(a-\u003ea-\u003eBool)-\u003eFM b a-\u003eFM b a-\u003eBool",
          "package": "EdisonCore",
          "partial": "Map By",
          "signature": "(a-\u003ea-\u003eBool)-\u003eFM k a-\u003eFM k a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:sameMapBy"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "singleton",
          "package": "EdisonCore",
          "signature": "[k] -\u003e a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#singleton",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "singleton",
          "normalized": "[a]-\u003eb-\u003eFM a b",
          "package": "EdisonCore",
          "signature": "[k]-\u003ea-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:singleton"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "size",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e Int",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#size",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "size",
          "normalized": "FM a b-\u003eInt",
          "package": "EdisonCore",
          "signature": "FM k a-\u003eInt",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:size"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "strict",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#strict",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "strict",
          "normalized": "FM a b-\u003eFM a b",
          "package": "EdisonCore",
          "signature": "FM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:strict"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "strictWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e b) -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#strictWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "strictWith",
          "normalized": "(a-\u003eb)-\u003eFM c a-\u003eFM c a",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003eb)-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:strictWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "structuralInvariant",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e Bool",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#structuralInvariant",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "structuralInvariant",
          "normalized": "FM a b-\u003eBool",
          "package": "EdisonCore",
          "partial": "Invariant",
          "signature": "FM k a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:structuralInvariant"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "submap",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e FM k a -\u003e Bool",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#submap",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "submap",
          "normalized": "FM a b-\u003eFM a b-\u003eBool",
          "package": "EdisonCore",
          "signature": "FM k a-\u003eFM k a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:submap"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "submapBy",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e Bool) -\u003e FM k a -\u003e FM k a -\u003e Bool",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#submapBy",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "submapBy",
          "normalized": "(a-\u003ea-\u003eBool)-\u003eFM b a-\u003eFM b a-\u003eBool",
          "package": "EdisonCore",
          "partial": "By",
          "signature": "(a-\u003ea-\u003eBool)-\u003eFM k a-\u003eFM k a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:submapBy"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "subset",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e FM k b -\u003e Bool",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#subset",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "subset",
          "normalized": "FM a b-\u003eFM a c-\u003eBool",
          "package": "EdisonCore",
          "signature": "FM k a-\u003eFM k b-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:subset"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "toOrdSeq",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e seq ([k], a)",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#toOrdSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "toOrdSeq",
          "normalized": "FM a b-\u003ec([a],b)",
          "package": "EdisonCore",
          "partial": "Ord Seq",
          "signature": "FM k a-\u003eseq([k],a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:toOrdSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "toSeq",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e seq ([k], a)",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#toSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "toSeq",
          "normalized": "FM a b-\u003ec([a],b)",
          "package": "EdisonCore",
          "partial": "Seq",
          "signature": "FM k a-\u003eseq([k],a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:toSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "union",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#union",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "union",
          "normalized": "FM a b-\u003eFM a b-\u003eFM a b",
          "package": "EdisonCore",
          "signature": "FM k a-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:union"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "unionSeq",
          "package": "EdisonCore",
          "signature": "seq (FM k a) -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#unionSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "unionSeq",
          "normalized": "a(FM b c)-\u003eFM b c",
          "package": "EdisonCore",
          "partial": "Seq",
          "signature": "seq(FM k a)-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:unionSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "unionSeqWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e seq (FM k a) -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#unionSeqWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "unionSeqWith",
          "normalized": "(a-\u003ea-\u003ea)-\u003eb(FM c a)-\u003eFM c a",
          "package": "EdisonCore",
          "partial": "Seq With",
          "signature": "(a-\u003ea-\u003ea)-\u003eseq(FM k a)-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:unionSeqWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "unionSeqWithKey",
          "package": "EdisonCore",
          "signature": "([k] -\u003e a -\u003e a -\u003e a) -\u003e seq (FM k a) -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#unionSeqWithKey",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "unionSeqWithKey",
          "normalized": "([a]-\u003eb-\u003eb-\u003eb)-\u003ec(FM a b)-\u003eFM a b",
          "package": "EdisonCore",
          "partial": "Seq With Key",
          "signature": "([k]-\u003ea-\u003ea-\u003ea)-\u003eseq(FM k a)-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:unionSeqWithKey"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "unionWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e FM k a -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#unionWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "unionWith",
          "normalized": "(a-\u003ea-\u003ea)-\u003eFM b a-\u003eFM b a-\u003eFM b a",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003ea-\u003ea)-\u003eFM k a-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:unionWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "unionWithKey",
          "package": "EdisonCore",
          "signature": "([k] -\u003e a -\u003e a -\u003e a) -\u003e FM k a -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#unionWithKey",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "unionWithKey",
          "normalized": "([a]-\u003eb-\u003eb-\u003eb)-\u003eFM a b-\u003eFM a b-\u003eFM a b",
          "package": "EdisonCore",
          "partial": "With Key",
          "signature": "([k]-\u003ea-\u003ea-\u003ea)-\u003eFM k a-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:unionWithKey"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "unionl",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#unionl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "unionl",
          "normalized": "FM a b-\u003eFM a b-\u003eFM a b",
          "package": "EdisonCore",
          "signature": "FM k a-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:unionl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "unionr",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#unionr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "unionr",
          "normalized": "FM a b-\u003eFM a b-\u003eFM a b",
          "package": "EdisonCore",
          "signature": "FM k a-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:unionr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "unsafeAppend",
          "package": "EdisonCore",
          "signature": "FM k a -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#unsafeAppend",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "unsafeAppend",
          "normalized": "FM a b-\u003eFM a b-\u003eFM a b",
          "package": "EdisonCore",
          "partial": "Append",
          "signature": "FM k a-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:unsafeAppend"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "unsafeFromOrdSeq",
          "package": "EdisonCore",
          "signature": "seq ([k], a) -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#unsafeFromOrdSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "unsafeFromOrdSeq",
          "normalized": "a([b],c)-\u003eFM b c",
          "package": "EdisonCore",
          "partial": "From Ord Seq",
          "signature": "seq([k],a)-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:unsafeFromOrdSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "unsafeInsertMax",
          "package": "EdisonCore",
          "signature": "[k] -\u003e a -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#unsafeInsertMax",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "unsafeInsertMax",
          "normalized": "[a]-\u003eb-\u003eFM a b-\u003eFM a b",
          "package": "EdisonCore",
          "partial": "Insert Max",
          "signature": "[k]-\u003ea-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:unsafeInsertMax"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "unsafeInsertMin",
          "package": "EdisonCore",
          "signature": "[k] -\u003e a -\u003e FM k a -\u003e FM k a",
          "source": "src/Data-Edison-Assoc-TernaryTrie.html#unsafeInsertMin",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Assoc TernaryTrie",
          "module": "Data.Edison.Assoc.TernaryTrie",
          "name": "unsafeInsertMin",
          "normalized": "[a]-\u003eb-\u003eFM a b-\u003eFM a b",
          "package": "EdisonCore",
          "partial": "Insert Min",
          "signature": "[k]-\u003ea-\u003eFM k a-\u003eFM k a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Assoc-TernaryTrie.html#v:unsafeInsertMin"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThis module provides default implementations of many of the collection methods.  The functions\n   in this module are used to fill out collection implementations and are not intended to be\n   used directly by end users.\n\u003c/p\u003e\u003c/div\u003e",
          "module": "Data.Edison.Coll.Defaults",
          "name": "Defaults",
          "package": "EdisonCore",
          "source": "src/Data-Edison-Coll-Defaults.html",
          "type": "module"
        },
        "index": {
          "description": "This module provides default implementations of many of the collection methods The functions in this module are used to fill out collection implementations and are not intended to be used directly by end users",
          "hierarchy": "Data Edison Coll Defaults",
          "module": "Data.Edison.Coll.Defaults",
          "name": "Defaults",
          "package": "EdisonCore",
          "partial": "Defaults",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-Defaults.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.Defaults",
          "name": "compareUsingToOrdList",
          "package": "EdisonCore",
          "signature": "c -\u003e c -\u003e Ordering",
          "source": "src/Data-Edison-Coll-Defaults.html#compareUsingToOrdList",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll Defaults",
          "module": "Data.Edison.Coll.Defaults",
          "name": "compareUsingToOrdList",
          "normalized": "a-\u003ea-\u003eOrdering",
          "package": "EdisonCore",
          "partial": "Using To Ord List",
          "signature": "c-\u003ec-\u003eOrdering",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-Defaults.html#v:compareUsingToOrdList"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.Defaults",
          "name": "countUsingMember",
          "package": "EdisonCore",
          "signature": "a -\u003e c -\u003e Int",
          "source": "src/Data-Edison-Coll-Defaults.html#countUsingMember",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll Defaults",
          "module": "Data.Edison.Coll.Defaults",
          "name": "countUsingMember",
          "normalized": "a-\u003eb-\u003eInt",
          "package": "EdisonCore",
          "partial": "Using Member",
          "signature": "a-\u003ec-\u003eInt",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-Defaults.html#v:countUsingMember"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.Defaults",
          "name": "deleteMaxUsingMaxView",
          "package": "EdisonCore",
          "signature": "c -\u003e c",
          "source": "src/Data-Edison-Coll-Defaults.html#deleteMaxUsingMaxView",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll Defaults",
          "module": "Data.Edison.Coll.Defaults",
          "name": "deleteMaxUsingMaxView",
          "normalized": "a-\u003ea",
          "package": "EdisonCore",
          "partial": "Max Using Max View",
          "signature": "c-\u003ec",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-Defaults.html#v:deleteMaxUsingMaxView"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.Defaults",
          "name": "deleteSeqUsingDelete",
          "package": "EdisonCore",
          "signature": "seq a -\u003e c -\u003e c",
          "source": "src/Data-Edison-Coll-Defaults.html#deleteSeqUsingDelete",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll Defaults",
          "module": "Data.Edison.Coll.Defaults",
          "name": "deleteSeqUsingDelete",
          "normalized": "a b-\u003ec-\u003ec",
          "package": "EdisonCore",
          "partial": "Seq Using Delete",
          "signature": "seq a-\u003ec-\u003ec",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-Defaults.html#v:deleteSeqUsingDelete"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.Defaults",
          "name": "differenceUsingOrdLists",
          "package": "EdisonCore",
          "signature": "c -\u003e c -\u003e c",
          "source": "src/Data-Edison-Coll-Defaults.html#differenceUsingOrdLists",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll Defaults",
          "module": "Data.Edison.Coll.Defaults",
          "name": "differenceUsingOrdLists",
          "normalized": "a-\u003ea-\u003ea",
          "package": "EdisonCore",
          "partial": "Using Ord Lists",
          "signature": "c-\u003ec-\u003ec",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-Defaults.html#v:differenceUsingOrdLists"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.Defaults",
          "name": "disjointUsingToOrdList",
          "package": "EdisonCore",
          "signature": "c -\u003e c -\u003e Bool",
          "source": "src/Data-Edison-Coll-Defaults.html#disjointUsingToOrdList",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll Defaults",
          "module": "Data.Edison.Coll.Defaults",
          "name": "disjointUsingToOrdList",
          "normalized": "a-\u003ea-\u003eBool",
          "package": "EdisonCore",
          "partial": "Using To Ord List",
          "signature": "c-\u003ec-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-Defaults.html#v:disjointUsingToOrdList"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.Defaults",
          "name": "filterUsingOrdLists",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e c -\u003e c",
          "source": "src/Data-Edison-Coll-Defaults.html#filterUsingOrdLists",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll Defaults",
          "module": "Data.Edison.Coll.Defaults",
          "name": "filterUsingOrdLists",
          "normalized": "(a-\u003eBool)-\u003eb-\u003eb",
          "package": "EdisonCore",
          "partial": "Using Ord Lists",
          "signature": "(a-\u003eBool)-\u003ec-\u003ec",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-Defaults.html#v:filterUsingOrdLists"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.Defaults",
          "name": "fromSeqUsingFoldr",
          "package": "EdisonCore",
          "signature": "seq a -\u003e c",
          "source": "src/Data-Edison-Coll-Defaults.html#fromSeqUsingFoldr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll Defaults",
          "module": "Data.Edison.Coll.Defaults",
          "name": "fromSeqUsingFoldr",
          "normalized": "a b-\u003ec",
          "package": "EdisonCore",
          "partial": "Seq Using Foldr",
          "signature": "seq a-\u003ec",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-Defaults.html#v:fromSeqUsingFoldr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.Defaults",
          "name": "fromSeqUsingUnionSeq",
          "package": "EdisonCore",
          "signature": "seq a -\u003e c",
          "source": "src/Data-Edison-Coll-Defaults.html#fromSeqUsingUnionSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll Defaults",
          "module": "Data.Edison.Coll.Defaults",
          "name": "fromSeqUsingUnionSeq",
          "normalized": "a b-\u003ec",
          "package": "EdisonCore",
          "partial": "Seq Using Union Seq",
          "signature": "seq a-\u003ec",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-Defaults.html#v:fromSeqUsingUnionSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.Defaults",
          "name": "fromSeqWithUsingInsertWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e seq a -\u003e c",
          "source": "src/Data-Edison-Coll-Defaults.html#fromSeqWithUsingInsertWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll Defaults",
          "module": "Data.Edison.Coll.Defaults",
          "name": "fromSeqWithUsingInsertWith",
          "normalized": "(a-\u003ea-\u003ea)-\u003eb a-\u003ec",
          "package": "EdisonCore",
          "partial": "Seq With Using Insert With",
          "signature": "(a-\u003ea-\u003ea)-\u003eseq a-\u003ec",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-Defaults.html#v:fromSeqWithUsingInsertWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.Defaults",
          "name": "insertSeqUsingFoldr",
          "package": "EdisonCore",
          "signature": "seq a -\u003e c -\u003e c",
          "source": "src/Data-Edison-Coll-Defaults.html#insertSeqUsingFoldr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll Defaults",
          "module": "Data.Edison.Coll.Defaults",
          "name": "insertSeqUsingFoldr",
          "normalized": "a b-\u003ec-\u003ec",
          "package": "EdisonCore",
          "partial": "Seq Using Foldr",
          "signature": "seq a-\u003ec-\u003ec",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-Defaults.html#v:insertSeqUsingFoldr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.Defaults",
          "name": "insertSeqUsingUnion",
          "package": "EdisonCore",
          "signature": "seq a -\u003e c -\u003e c",
          "source": "src/Data-Edison-Coll-Defaults.html#insertSeqUsingUnion",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll Defaults",
          "module": "Data.Edison.Coll.Defaults",
          "name": "insertSeqUsingUnion",
          "normalized": "a b-\u003ec-\u003ec",
          "package": "EdisonCore",
          "partial": "Seq Using Union",
          "signature": "seq a-\u003ec-\u003ec",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-Defaults.html#v:insertSeqUsingUnion"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.Defaults",
          "name": "insertSeqWithUsingInsertWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e seq a -\u003e c -\u003e c",
          "source": "src/Data-Edison-Coll-Defaults.html#insertSeqWithUsingInsertWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll Defaults",
          "module": "Data.Edison.Coll.Defaults",
          "name": "insertSeqWithUsingInsertWith",
          "normalized": "(a-\u003ea-\u003ea)-\u003eb a-\u003ec-\u003ec",
          "package": "EdisonCore",
          "partial": "Seq With Using Insert With",
          "signature": "(a-\u003ea-\u003ea)-\u003eseq a-\u003ec-\u003ec",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-Defaults.html#v:insertSeqWithUsingInsertWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.Defaults",
          "name": "insertUsingInsertWith",
          "package": "EdisonCore",
          "signature": "a -\u003e c -\u003e c",
          "source": "src/Data-Edison-Coll-Defaults.html#insertUsingInsertWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll Defaults",
          "module": "Data.Edison.Coll.Defaults",
          "name": "insertUsingInsertWith",
          "normalized": "a-\u003eb-\u003eb",
          "package": "EdisonCore",
          "partial": "Using Insert With",
          "signature": "a-\u003ec-\u003ec",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-Defaults.html#v:insertUsingInsertWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.Defaults",
          "name": "intersectWitnessUsingToOrdList",
          "package": "EdisonCore",
          "signature": "c -\u003e c -\u003e m (a, a)",
          "source": "src/Data-Edison-Coll-Defaults.html#intersectWitnessUsingToOrdList",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll Defaults",
          "module": "Data.Edison.Coll.Defaults",
          "name": "intersectWitnessUsingToOrdList",
          "normalized": "a-\u003ea-\u003eb(c,c)",
          "package": "EdisonCore",
          "partial": "Witness Using To Ord List",
          "signature": "c-\u003ec-\u003em(a,a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-Defaults.html#v:intersectWitnessUsingToOrdList"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.Defaults",
          "name": "intersectionUsingIntersectionWith",
          "package": "EdisonCore",
          "signature": "c -\u003e c -\u003e c",
          "source": "src/Data-Edison-Coll-Defaults.html#intersectionUsingIntersectionWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll Defaults",
          "module": "Data.Edison.Coll.Defaults",
          "name": "intersectionUsingIntersectionWith",
          "normalized": "a-\u003ea-\u003ea",
          "package": "EdisonCore",
          "partial": "Using Intersection With",
          "signature": "c-\u003ec-\u003ec",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-Defaults.html#v:intersectionUsingIntersectionWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.Defaults",
          "name": "intersectionWithUsingOrdLists",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e c -\u003e c -\u003e c",
          "source": "src/Data-Edison-Coll-Defaults.html#intersectionWithUsingOrdLists",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll Defaults",
          "module": "Data.Edison.Coll.Defaults",
          "name": "intersectionWithUsingOrdLists",
          "normalized": "(a-\u003ea-\u003ea)-\u003eb-\u003eb-\u003eb",
          "package": "EdisonCore",
          "partial": "With Using Ord Lists",
          "signature": "(a-\u003ea-\u003ea)-\u003ec-\u003ec-\u003ec",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-Defaults.html#v:intersectionWithUsingOrdLists"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.Defaults",
          "name": "lookupAllUsingLookupM",
          "package": "EdisonCore",
          "signature": "a -\u003e c -\u003e seq a",
          "source": "src/Data-Edison-Coll-Defaults.html#lookupAllUsingLookupM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll Defaults",
          "module": "Data.Edison.Coll.Defaults",
          "name": "lookupAllUsingLookupM",
          "normalized": "a-\u003eb-\u003ec a",
          "package": "EdisonCore",
          "partial": "All Using Lookup",
          "signature": "a-\u003ec-\u003eseq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-Defaults.html#v:lookupAllUsingLookupM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.Defaults",
          "name": "lookupMUsingLookupAll",
          "package": "EdisonCore",
          "signature": "a -\u003e c -\u003e m a",
          "source": "src/Data-Edison-Coll-Defaults.html#lookupMUsingLookupAll",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll Defaults",
          "module": "Data.Edison.Coll.Defaults",
          "name": "lookupMUsingLookupAll",
          "normalized": "a-\u003eb-\u003ec a",
          "package": "EdisonCore",
          "partial": "MUsing Lookup All",
          "signature": "a-\u003ec-\u003em a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-Defaults.html#v:lookupMUsingLookupAll"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.Defaults",
          "name": "lookupUsingLookupAll",
          "package": "EdisonCore",
          "signature": "a -\u003e c -\u003e a",
          "source": "src/Data-Edison-Coll-Defaults.html#lookupUsingLookupAll",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll Defaults",
          "module": "Data.Edison.Coll.Defaults",
          "name": "lookupUsingLookupAll",
          "normalized": "a-\u003eb-\u003ea",
          "package": "EdisonCore",
          "partial": "Using Lookup All",
          "signature": "a-\u003ec-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-Defaults.html#v:lookupUsingLookupAll"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.Defaults",
          "name": "lookupUsingLookupM",
          "package": "EdisonCore",
          "signature": "a -\u003e c -\u003e a",
          "source": "src/Data-Edison-Coll-Defaults.html#lookupUsingLookupM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll Defaults",
          "module": "Data.Edison.Coll.Defaults",
          "name": "lookupUsingLookupM",
          "normalized": "a-\u003eb-\u003ea",
          "package": "EdisonCore",
          "partial": "Using Lookup",
          "signature": "a-\u003ec-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-Defaults.html#v:lookupUsingLookupM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.Defaults",
          "name": "lookupWithDefaultUsingLookupAll",
          "package": "EdisonCore",
          "signature": "a -\u003e a -\u003e c -\u003e a",
          "source": "src/Data-Edison-Coll-Defaults.html#lookupWithDefaultUsingLookupAll",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll Defaults",
          "module": "Data.Edison.Coll.Defaults",
          "name": "lookupWithDefaultUsingLookupAll",
          "normalized": "a-\u003ea-\u003eb-\u003ea",
          "package": "EdisonCore",
          "partial": "With Default Using Lookup All",
          "signature": "a-\u003ea-\u003ec-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-Defaults.html#v:lookupWithDefaultUsingLookupAll"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.Defaults",
          "name": "lookupWithDefaultUsingLookupM",
          "package": "EdisonCore",
          "signature": "a -\u003e a -\u003e c -\u003e a",
          "source": "src/Data-Edison-Coll-Defaults.html#lookupWithDefaultUsingLookupM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll Defaults",
          "module": "Data.Edison.Coll.Defaults",
          "name": "lookupWithDefaultUsingLookupM",
          "normalized": "a-\u003ea-\u003eb-\u003ea",
          "package": "EdisonCore",
          "partial": "With Default Using Lookup",
          "signature": "a-\u003ea-\u003ec-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-Defaults.html#v:lookupWithDefaultUsingLookupM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.Defaults",
          "name": "memberUsingFold",
          "package": "EdisonCore",
          "signature": "c -\u003e a -\u003e Bool",
          "source": "src/Data-Edison-Coll-Defaults.html#memberUsingFold",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll Defaults",
          "module": "Data.Edison.Coll.Defaults",
          "name": "memberUsingFold",
          "normalized": "a-\u003eb-\u003eBool",
          "package": "EdisonCore",
          "partial": "Using Fold",
          "signature": "c-\u003ea-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-Defaults.html#v:memberUsingFold"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.Defaults",
          "name": "partitionUsingOrdLists",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e c -\u003e (c, c)",
          "source": "src/Data-Edison-Coll-Defaults.html#partitionUsingOrdLists",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll Defaults",
          "module": "Data.Edison.Coll.Defaults",
          "name": "partitionUsingOrdLists",
          "normalized": "(a-\u003eBool)-\u003eb-\u003e(b,b)",
          "package": "EdisonCore",
          "partial": "Using Ord Lists",
          "signature": "(a-\u003eBool)-\u003ec-\u003e(c,c)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-Defaults.html#v:partitionUsingOrdLists"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.Defaults",
          "name": "properSubsetOnOrdLists",
          "package": "EdisonCore",
          "signature": "[t] -\u003e [t] -\u003e Bool",
          "source": "src/Data-Edison-Coll-Defaults.html#properSubsetOnOrdLists",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll Defaults",
          "module": "Data.Edison.Coll.Defaults",
          "name": "properSubsetOnOrdLists",
          "normalized": "[a]-\u003e[a]-\u003eBool",
          "package": "EdisonCore",
          "partial": "Subset On Ord Lists",
          "signature": "[t]-\u003e[t]-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-Defaults.html#v:properSubsetOnOrdLists"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.Defaults",
          "name": "properSubsetUsingOrdLists",
          "package": "EdisonCore",
          "signature": "c -\u003e c -\u003e Bool",
          "source": "src/Data-Edison-Coll-Defaults.html#properSubsetUsingOrdLists",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll Defaults",
          "module": "Data.Edison.Coll.Defaults",
          "name": "properSubsetUsingOrdLists",
          "normalized": "a-\u003ea-\u003eBool",
          "package": "EdisonCore",
          "partial": "Subset Using Ord Lists",
          "signature": "c-\u003ec-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-Defaults.html#v:properSubsetUsingOrdLists"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.Defaults",
          "name": "readsPrecUsingFromList",
          "package": "EdisonCore",
          "signature": "Int -\u003e ReadS c",
          "source": "src/Data-Edison-Coll-Defaults.html#readsPrecUsingFromList",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll Defaults",
          "module": "Data.Edison.Coll.Defaults",
          "name": "readsPrecUsingFromList",
          "normalized": "Int-\u003eReadS a",
          "package": "EdisonCore",
          "partial": "Prec Using From List",
          "signature": "Int-\u003eReadS c",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-Defaults.html#v:readsPrecUsingFromList"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.Defaults",
          "name": "showsPrecUsingToList",
          "package": "EdisonCore",
          "signature": "Int -\u003e c -\u003e ShowS",
          "source": "src/Data-Edison-Coll-Defaults.html#showsPrecUsingToList",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll Defaults",
          "module": "Data.Edison.Coll.Defaults",
          "name": "showsPrecUsingToList",
          "normalized": "Int-\u003ea-\u003eShowS",
          "package": "EdisonCore",
          "partial": "Prec Using To List",
          "signature": "Int-\u003ec-\u003eShowS",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-Defaults.html#v:showsPrecUsingToList"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.Defaults",
          "name": "subsetOnOrdLists",
          "package": "EdisonCore",
          "signature": "[t] -\u003e [t] -\u003e Bool",
          "source": "src/Data-Edison-Coll-Defaults.html#subsetOnOrdLists",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll Defaults",
          "module": "Data.Edison.Coll.Defaults",
          "name": "subsetOnOrdLists",
          "normalized": "[a]-\u003e[a]-\u003eBool",
          "package": "EdisonCore",
          "partial": "On Ord Lists",
          "signature": "[t]-\u003e[t]-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-Defaults.html#v:subsetOnOrdLists"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.Defaults",
          "name": "subsetUsingOrdLists",
          "package": "EdisonCore",
          "signature": "c -\u003e c -\u003e Bool",
          "source": "src/Data-Edison-Coll-Defaults.html#subsetUsingOrdLists",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll Defaults",
          "module": "Data.Edison.Coll.Defaults",
          "name": "subsetUsingOrdLists",
          "normalized": "a-\u003ea-\u003eBool",
          "package": "EdisonCore",
          "partial": "Using Ord Lists",
          "signature": "c-\u003ec-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-Defaults.html#v:subsetUsingOrdLists"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.Defaults",
          "name": "symmetricDifferenceUsingDifference",
          "package": "EdisonCore",
          "signature": "c -\u003e c -\u003e c",
          "source": "src/Data-Edison-Coll-Defaults.html#symmetricDifferenceUsingDifference",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll Defaults",
          "module": "Data.Edison.Coll.Defaults",
          "name": "symmetricDifferenceUsingDifference",
          "normalized": "a-\u003ea-\u003ea",
          "package": "EdisonCore",
          "partial": "Difference Using Difference",
          "signature": "c-\u003ec-\u003ec",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-Defaults.html#v:symmetricDifferenceUsingDifference"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.Defaults",
          "name": "toOrdSeqUsingFoldr",
          "package": "EdisonCore",
          "signature": "c -\u003e seq a",
          "source": "src/Data-Edison-Coll-Defaults.html#toOrdSeqUsingFoldr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll Defaults",
          "module": "Data.Edison.Coll.Defaults",
          "name": "toOrdSeqUsingFoldr",
          "normalized": "a-\u003eb c",
          "package": "EdisonCore",
          "partial": "Ord Seq Using Foldr",
          "signature": "c-\u003eseq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-Defaults.html#v:toOrdSeqUsingFoldr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.Defaults",
          "name": "toSeqUsingFold",
          "package": "EdisonCore",
          "signature": "c -\u003e seq a",
          "source": "src/Data-Edison-Coll-Defaults.html#toSeqUsingFold",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll Defaults",
          "module": "Data.Edison.Coll.Defaults",
          "name": "toSeqUsingFold",
          "normalized": "a-\u003eb c",
          "package": "EdisonCore",
          "partial": "Seq Using Fold",
          "signature": "c-\u003eseq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-Defaults.html#v:toSeqUsingFold"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.Defaults",
          "name": "unionSeqUsingFoldl",
          "package": "EdisonCore",
          "signature": "seq c -\u003e c",
          "source": "src/Data-Edison-Coll-Defaults.html#unionSeqUsingFoldl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll Defaults",
          "module": "Data.Edison.Coll.Defaults",
          "name": "unionSeqUsingFoldl",
          "normalized": "a b-\u003eb",
          "package": "EdisonCore",
          "partial": "Seq Using Foldl",
          "signature": "seq c-\u003ec",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-Defaults.html#v:unionSeqUsingFoldl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.Defaults",
          "name": "unionSeqUsingFoldl'",
          "package": "EdisonCore",
          "signature": "seq c -\u003e c",
          "source": "src/Data-Edison-Coll-Defaults.html#unionSeqUsingFoldl%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll Defaults",
          "module": "Data.Edison.Coll.Defaults",
          "name": "unionSeqUsingFoldl'",
          "normalized": "a b-\u003eb",
          "package": "EdisonCore",
          "partial": "Seq Using Foldl'",
          "signature": "seq c-\u003ec",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-Defaults.html#v:unionSeqUsingFoldl-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.Defaults",
          "name": "unionSeqUsingReduce",
          "package": "EdisonCore",
          "signature": "seq c -\u003e c",
          "source": "src/Data-Edison-Coll-Defaults.html#unionSeqUsingReduce",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll Defaults",
          "module": "Data.Edison.Coll.Defaults",
          "name": "unionSeqUsingReduce",
          "normalized": "a b-\u003eb",
          "package": "EdisonCore",
          "partial": "Seq Using Reduce",
          "signature": "seq c-\u003ec",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-Defaults.html#v:unionSeqUsingReduce"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.Defaults",
          "name": "unionSeqWithUsingReducer",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e seq c -\u003e c",
          "source": "src/Data-Edison-Coll-Defaults.html#unionSeqWithUsingReducer",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll Defaults",
          "module": "Data.Edison.Coll.Defaults",
          "name": "unionSeqWithUsingReducer",
          "normalized": "(a-\u003ea-\u003ea)-\u003eb c-\u003ec",
          "package": "EdisonCore",
          "partial": "Seq With Using Reducer",
          "signature": "(a-\u003ea-\u003ea)-\u003eseq c-\u003ec",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-Defaults.html#v:unionSeqWithUsingReducer"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.Defaults",
          "name": "unionUsingUnionWith",
          "package": "EdisonCore",
          "signature": "c -\u003e c -\u003e c",
          "source": "src/Data-Edison-Coll-Defaults.html#unionUsingUnionWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll Defaults",
          "module": "Data.Edison.Coll.Defaults",
          "name": "unionUsingUnionWith",
          "normalized": "a-\u003ea-\u003ea",
          "package": "EdisonCore",
          "partial": "Using Union With",
          "signature": "c-\u003ec-\u003ec",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-Defaults.html#v:unionUsingUnionWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.Defaults",
          "name": "unionWithUsingOrdLists",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e c -\u003e c -\u003e c",
          "source": "src/Data-Edison-Coll-Defaults.html#unionWithUsingOrdLists",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll Defaults",
          "module": "Data.Edison.Coll.Defaults",
          "name": "unionWithUsingOrdLists",
          "normalized": "(a-\u003ea-\u003ea)-\u003eb-\u003eb-\u003eb",
          "package": "EdisonCore",
          "partial": "With Using Ord Lists",
          "signature": "(a-\u003ea-\u003ea)-\u003ec-\u003ec-\u003ec",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-Defaults.html#v:unionWithUsingOrdLists"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.Defaults",
          "name": "unionlUsingUnionWith",
          "package": "EdisonCore",
          "signature": "c -\u003e c -\u003e c",
          "source": "src/Data-Edison-Coll-Defaults.html#unionlUsingUnionWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll Defaults",
          "module": "Data.Edison.Coll.Defaults",
          "name": "unionlUsingUnionWith",
          "normalized": "a-\u003ea-\u003ea",
          "package": "EdisonCore",
          "partial": "Using Union With",
          "signature": "c-\u003ec-\u003ec",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-Defaults.html#v:unionlUsingUnionWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.Defaults",
          "name": "unionrUsingUnionWith",
          "package": "EdisonCore",
          "signature": "c -\u003e c -\u003e c",
          "source": "src/Data-Edison-Coll-Defaults.html#unionrUsingUnionWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll Defaults",
          "module": "Data.Edison.Coll.Defaults",
          "name": "unionrUsingUnionWith",
          "normalized": "a-\u003ea-\u003ea",
          "package": "EdisonCore",
          "partial": "Using Union With",
          "signature": "c-\u003ec-\u003ec",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-Defaults.html#v:unionrUsingUnionWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.Defaults",
          "name": "unsafeFromOrdSeqUsingUnsafeInsertMin",
          "package": "EdisonCore",
          "signature": "seq a -\u003e c",
          "source": "src/Data-Edison-Coll-Defaults.html#unsafeFromOrdSeqUsingUnsafeInsertMin",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll Defaults",
          "module": "Data.Edison.Coll.Defaults",
          "name": "unsafeFromOrdSeqUsingUnsafeInsertMin",
          "normalized": "a b-\u003ec",
          "package": "EdisonCore",
          "partial": "From Ord Seq Using Unsafe Insert Min",
          "signature": "seq a-\u003ec",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-Defaults.html#v:unsafeFromOrdSeqUsingUnsafeInsertMin"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.Defaults",
          "name": "unsafeInsertMaxUsingUnsafeAppend",
          "package": "EdisonCore",
          "signature": "a -\u003e c -\u003e c",
          "source": "src/Data-Edison-Coll-Defaults.html#unsafeInsertMaxUsingUnsafeAppend",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll Defaults",
          "module": "Data.Edison.Coll.Defaults",
          "name": "unsafeInsertMaxUsingUnsafeAppend",
          "normalized": "a-\u003eb-\u003eb",
          "package": "EdisonCore",
          "partial": "Insert Max Using Unsafe Append",
          "signature": "a-\u003ec-\u003ec",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-Defaults.html#v:unsafeInsertMaxUsingUnsafeAppend"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.Defaults",
          "name": "unsafeMapMonotonicUsingFoldr",
          "package": "EdisonCore",
          "signature": "(a -\u003e b) -\u003e cin -\u003e cout",
          "source": "src/Data-Edison-Coll-Defaults.html#unsafeMapMonotonicUsingFoldr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll Defaults",
          "module": "Data.Edison.Coll.Defaults",
          "name": "unsafeMapMonotonicUsingFoldr",
          "normalized": "(a-\u003eb)-\u003ec-\u003ed",
          "package": "EdisonCore",
          "partial": "Map Monotonic Using Foldr",
          "signature": "(a-\u003eb)-\u003ecin-\u003ecout",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-Defaults.html#v:unsafeMapMonotonicUsingFoldr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eAn efficient implementation of sets over small enumerations.\n The implementation of \u003ccode\u003eEnumSet\u003c/code\u003e is based on bit-wise operations.\n\u003c/p\u003e\u003cp\u003eFor this implementation to work as expected at type \u003ccode\u003eA\u003c/code\u003e, there are a number\n of preconditions on the \u003ccode\u003eEq\u003c/code\u003e, \u003ccode\u003eEnum\u003c/code\u003e and \u003ccode\u003eOrd\u003c/code\u003e instances.\n\u003c/p\u003e\u003cp\u003eThe \u003ccode\u003eEnum A\u003c/code\u003e instance must create a bijection between the elements of type \u003ccode\u003eA\u003c/code\u003e and\n a finite subset of the naturals [0,1,2,3....].  As a corollary we must have:\n\u003c/p\u003e\u003cpre\u003e forall x y::A, fromEnum x == fromEnum y \u003c==\u003e x is indistinguishable from y\n\u003c/pre\u003e\u003cp\u003eAlso, the number of distinct elements of \u003ccode\u003eA\u003c/code\u003e must be less than or equal\n to the number of bits in \u003ccode\u003eWord\u003c/code\u003e.\n\u003c/p\u003e\u003cp\u003eThe \u003ccode\u003eEnum A\u003c/code\u003e instance must be consistent with the \u003ccode\u003eEq A\u003c/code\u003e instance.\n That is, we must have:\n\u003c/p\u003e\u003cpre\u003e forall x y::A, x == y \u003c==\u003e toEnum x == toEnum y\n\u003c/pre\u003e\u003cp\u003eAdditionally, for operations that require an \u003ccode\u003eOrd A\u003c/code\u003e context, we require that\n toEnum be monotonic with respect to comparison.  That is, we must have:\n\u003c/p\u003e\u003cpre\u003e forall x y::A, x \u003c y \u003c==\u003e toEnum x \u003c toEnum y\n\u003c/pre\u003e\u003cp\u003eDerived \u003ccode\u003eEq\u003c/code\u003e, \u003ccode\u003eOrd\u003c/code\u003e and \u003ccode\u003eEnum\u003c/code\u003e instances will fulfill these conditions, if\n the enumerated type has sufficently few constructors.\n\u003c/p\u003e\u003c/div\u003e",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "EnumSet",
          "package": "EdisonCore",
          "source": "src/Data-Edison-Coll-EnumSet.html",
          "type": "module"
        },
        "index": {
          "description": "An efficient implementation of sets over small enumerations The implementation of EnumSet is based on bit-wise operations For this implementation to work as expected at type there are number of preconditions on the Eq Enum and Ord instances The Enum instance must create bijection between the elements of type and finite subset of the naturals As corollary we must have forall fromEnum fromEnum is indistinguishable from Also the number of distinct elements of must be less than or equal to the number of bits in Word The Enum instance must be consistent with the Eq instance That is we must have forall toEnum toEnum Additionally for operations that require an Ord context we require that toEnum be monotonic with respect to comparison That is we must have forall toEnum toEnum Derived Eq Ord and Enum instances will fulfill these conditions if the enumerated type has sufficently few constructors",
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "EnumSet",
          "package": "EdisonCore",
          "partial": "Enum Set",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eA set of values \u003ccode\u003ea\u003c/code\u003e implemented as bitwise operations.  Useful\n for members of class Enum with no more elements than there are bits\n in \u003ccode\u003eWord\u003c/code\u003e.\n\u003c/p\u003e",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "Set",
          "package": "EdisonCore",
          "source": "src/Data-Edison-Coll-EnumSet.html#Set",
          "type": "data"
        },
        "index": {
          "description": "set of values implemented as bitwise operations Useful for members of class Enum with no more elements than there are bits in Word",
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "Set",
          "package": "EdisonCore",
          "partial": "Set",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#t:Set"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e\u003cem\u003eO(1)\u003c/em\u003e. The complement of a set with its universe set. \u003ccode\u003ecomplement\u003c/code\u003e can be used\n   with bounded types for which the universe set\n   will be automatically created.\n\u003c/p\u003e",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "complement",
          "package": "EdisonCore",
          "signature": "Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-EnumSet.html#complement",
          "type": "function"
        },
        "index": {
          "description": "The complement of set with its universe set complement can be used with bounded types for which the universe set will be automatically created",
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "complement",
          "normalized": "Set a-\u003eSet a",
          "package": "EdisonCore",
          "signature": "Set a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:complement"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.EnumSet",
          "name": "count",
          "package": "EdisonCore",
          "signature": "a -\u003e Set a -\u003e Int",
          "source": "src/Data-Edison-Coll-EnumSet.html#count",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "count",
          "normalized": "a-\u003eSet a-\u003eInt",
          "package": "EdisonCore",
          "signature": "a-\u003eSet a-\u003eInt",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:count"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e\u003cem\u003eO(1)\u003c/em\u003e. Delete an element from a set.\n\u003c/p\u003e",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "delete",
          "package": "EdisonCore",
          "signature": "a -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-EnumSet.html#delete",
          "type": "function"
        },
        "index": {
          "description": "Delete an element from set",
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "delete",
          "normalized": "a-\u003eSet a-\u003eSet a",
          "package": "EdisonCore",
          "signature": "a-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:delete"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.EnumSet",
          "name": "deleteAll",
          "package": "EdisonCore",
          "signature": "a -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-EnumSet.html#deleteAll",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "deleteAll",
          "normalized": "a-\u003eSet a-\u003eSet a",
          "package": "EdisonCore",
          "partial": "All",
          "signature": "a-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:deleteAll"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e\u003cem\u003eO(1)\u003c/em\u003e. Delete the maximal element.\n\u003c/p\u003e",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "deleteMax",
          "package": "EdisonCore",
          "signature": "Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-EnumSet.html#deleteMax",
          "type": "function"
        },
        "index": {
          "description": "Delete the maximal element",
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "deleteMax",
          "normalized": "Set a-\u003eSet a",
          "package": "EdisonCore",
          "partial": "Max",
          "signature": "Set a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:deleteMax"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e\u003cem\u003eO(1)\u003c/em\u003e. Delete the minimal element.\n\u003c/p\u003e",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "deleteMin",
          "package": "EdisonCore",
          "signature": "Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-EnumSet.html#deleteMin",
          "type": "function"
        },
        "index": {
          "description": "Delete the minimal element",
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "deleteMin",
          "normalized": "Set a-\u003eSet a",
          "package": "EdisonCore",
          "partial": "Min",
          "signature": "Set a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:deleteMin"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.EnumSet",
          "name": "deleteSeq",
          "package": "EdisonCore",
          "signature": "s a -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-EnumSet.html#deleteSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "deleteSeq",
          "normalized": "a b-\u003eSet b-\u003eSet b",
          "package": "EdisonCore",
          "partial": "Seq",
          "signature": "s a-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:deleteSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e\u003cem\u003eO(1)\u003c/em\u003e. Difference of two sets.\n\u003c/p\u003e",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "difference",
          "package": "EdisonCore",
          "signature": "Set a -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-EnumSet.html#difference",
          "type": "function"
        },
        "index": {
          "description": "Difference of two sets",
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "difference",
          "normalized": "Set a-\u003eSet a-\u003eSet a",
          "package": "EdisonCore",
          "signature": "Set a-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:difference"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e\u003cem\u003eO(1)\u003c/em\u003e. The empty set.\n\u003c/p\u003e",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "empty",
          "package": "EdisonCore",
          "signature": "Set a",
          "source": "src/Data-Edison-Coll-EnumSet.html#empty",
          "type": "function"
        },
        "index": {
          "description": "The empty set",
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "empty",
          "package": "EdisonCore",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:empty"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e\u003cem\u003eO(n)\u003c/em\u003e. Filter all elements that satisfy the predicate.\n\u003c/p\u003e",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "filter",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-EnumSet.html#filter",
          "type": "function"
        },
        "index": {
          "description": "Filter all elements that satisfy the predicate",
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "filter",
          "normalized": "(a-\u003eBool)-\u003eSet a-\u003eSet a",
          "package": "EdisonCore",
          "signature": "(a-\u003eBool)-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:filter"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.EnumSet",
          "name": "filterGE",
          "package": "EdisonCore",
          "signature": "a -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-EnumSet.html#filterGE",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "filterGE",
          "normalized": "a-\u003eSet a-\u003eSet a",
          "package": "EdisonCore",
          "partial": "GE",
          "signature": "a-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:filterGE"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.EnumSet",
          "name": "filterGT",
          "package": "EdisonCore",
          "signature": "a -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-EnumSet.html#filterGT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "filterGT",
          "normalized": "a-\u003eSet a-\u003eSet a",
          "package": "EdisonCore",
          "partial": "GT",
          "signature": "a-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:filterGT"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.EnumSet",
          "name": "filterLE",
          "package": "EdisonCore",
          "signature": "a -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-EnumSet.html#filterLE",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "filterLE",
          "normalized": "a-\u003eSet a-\u003eSet a",
          "package": "EdisonCore",
          "partial": "LE",
          "signature": "a-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:filterLE"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.EnumSet",
          "name": "filterLT",
          "package": "EdisonCore",
          "signature": "a -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-EnumSet.html#filterLT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "filterLT",
          "normalized": "a-\u003eSet a-\u003eSet a",
          "package": "EdisonCore",
          "partial": "LT",
          "signature": "a-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:filterLT"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.EnumSet",
          "name": "fold",
          "package": "EdisonCore",
          "signature": "(a -\u003e c -\u003e c) -\u003e c -\u003e Set a -\u003e c",
          "source": "src/Data-Edison-Coll-EnumSet.html#fold",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "fold",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eSet a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003ec-\u003ec)-\u003ec-\u003eSet a-\u003ec",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:fold"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.EnumSet",
          "name": "fold'",
          "package": "EdisonCore",
          "signature": "(a -\u003e c -\u003e c) -\u003e c -\u003e Set a -\u003e c",
          "source": "src/Data-Edison-Coll-EnumSet.html#fold%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "fold'",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eSet a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003ec-\u003ec)-\u003ec-\u003eSet a-\u003ec",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:fold-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.EnumSet",
          "name": "fold1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Set a -\u003e a",
          "source": "src/Data-Edison-Coll-EnumSet.html#fold1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "fold1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSet a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSet a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:fold1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.EnumSet",
          "name": "fold1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Set a -\u003e a",
          "source": "src/Data-Edison-Coll-EnumSet.html#fold1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "fold1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSet a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSet a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:fold1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.EnumSet",
          "name": "foldl",
          "package": "EdisonCore",
          "signature": "(c -\u003e a -\u003e c) -\u003e c -\u003e Set a -\u003e c",
          "source": "src/Data-Edison-Coll-EnumSet.html#foldl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "foldl",
          "normalized": "(a-\u003eb-\u003ea)-\u003ea-\u003eSet b-\u003ea",
          "package": "EdisonCore",
          "signature": "(c-\u003ea-\u003ec)-\u003ec-\u003eSet a-\u003ec",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:foldl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.EnumSet",
          "name": "foldl'",
          "package": "EdisonCore",
          "signature": "(c -\u003e a -\u003e c) -\u003e c -\u003e Set a -\u003e c",
          "source": "src/Data-Edison-Coll-EnumSet.html#foldl%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "foldl'",
          "normalized": "(a-\u003eb-\u003ea)-\u003ea-\u003eSet b-\u003ea",
          "package": "EdisonCore",
          "signature": "(c-\u003ea-\u003ec)-\u003ec-\u003eSet a-\u003ec",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:foldl-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.EnumSet",
          "name": "foldl1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Set a -\u003e a",
          "source": "src/Data-Edison-Coll-EnumSet.html#foldl1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "foldl1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSet a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSet a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:foldl1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.EnumSet",
          "name": "foldl1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Set a -\u003e a",
          "source": "src/Data-Edison-Coll-EnumSet.html#foldl1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "foldl1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSet a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSet a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:foldl1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.EnumSet",
          "name": "foldr",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e Set a -\u003e b",
          "source": "src/Data-Edison-Coll-EnumSet.html#foldr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "foldr",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eSet a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eSet a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:foldr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.EnumSet",
          "name": "foldr'",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e Set a -\u003e b",
          "source": "src/Data-Edison-Coll-EnumSet.html#foldr%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "foldr'",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eSet a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eSet a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:foldr-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.EnumSet",
          "name": "foldr1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Set a -\u003e a",
          "source": "src/Data-Edison-Coll-EnumSet.html#foldr1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "foldr1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSet a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSet a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:foldr1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.EnumSet",
          "name": "foldr1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Set a -\u003e a",
          "source": "src/Data-Edison-Coll-EnumSet.html#foldr1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "foldr1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSet a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSet a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:foldr1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e\u003cem\u003eO(1)\u003c/em\u003e Create an EnumSet from a bit-encoded representation.\n   This method is operationally a no-op.\n\u003c/p\u003e",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "fromBits",
          "package": "EdisonCore",
          "signature": "Word -\u003e Set a",
          "source": "src/Data-Edison-Coll-EnumSet.html#fromBits",
          "type": "function"
        },
        "index": {
          "description": "Create an EnumSet from bit-encoded representation This method is operationally no-op",
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "fromBits",
          "normalized": "Word-\u003eSet a",
          "package": "EdisonCore",
          "partial": "Bits",
          "signature": "Word-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:fromBits"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.EnumSet",
          "name": "fromOrdSeq",
          "package": "EdisonCore",
          "signature": "s a -\u003e Set a",
          "source": "src/Data-Edison-Coll-EnumSet.html#fromOrdSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "fromOrdSeq",
          "normalized": "a b-\u003eSet b",
          "package": "EdisonCore",
          "partial": "Ord Seq",
          "signature": "s a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:fromOrdSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.EnumSet",
          "name": "fromSeq",
          "package": "EdisonCore",
          "signature": "s a -\u003e Set a",
          "source": "src/Data-Edison-Coll-EnumSet.html#fromSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "fromSeq",
          "normalized": "a b-\u003eSet b",
          "package": "EdisonCore",
          "partial": "Seq",
          "signature": "s a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:fromSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.EnumSet",
          "name": "fromSeqWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e s a -\u003e Set a",
          "source": "src/Data-Edison-Coll-EnumSet.html#fromSeqWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "fromSeqWith",
          "normalized": "(a-\u003ea-\u003ea)-\u003eb a-\u003eSet a",
          "package": "EdisonCore",
          "partial": "Seq With",
          "signature": "(a-\u003ea-\u003ea)-\u003es a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:fromSeqWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e\u003cem\u003eO(1)\u003c/em\u003e. Insert an element in a set.\n If the set already contains an element equal to the given value,\n it is replaced with the new value.\n\u003c/p\u003e",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "insert",
          "package": "EdisonCore",
          "signature": "a -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-EnumSet.html#insert",
          "type": "function"
        },
        "index": {
          "description": "Insert an element in set If the set already contains an element equal to the given value it is replaced with the new value",
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "insert",
          "normalized": "a-\u003eSet a-\u003eSet a",
          "package": "EdisonCore",
          "signature": "a-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:insert"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.EnumSet",
          "name": "insertSeq",
          "package": "EdisonCore",
          "signature": "s a -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-EnumSet.html#insertSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "insertSeq",
          "normalized": "a b-\u003eSet b-\u003eSet b",
          "package": "EdisonCore",
          "partial": "Seq",
          "signature": "s a-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:insertSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.EnumSet",
          "name": "insertSeqWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e s a -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-EnumSet.html#insertSeqWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "insertSeqWith",
          "normalized": "(a-\u003ea-\u003ea)-\u003eb a-\u003eSet a-\u003eSet a",
          "package": "EdisonCore",
          "partial": "Seq With",
          "signature": "(a-\u003ea-\u003ea)-\u003es a-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:insertSeqWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.EnumSet",
          "name": "insertWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e a -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-EnumSet.html#insertWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "insertWith",
          "normalized": "(a-\u003ea-\u003ea)-\u003ea-\u003eSet a-\u003eSet a",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003ea-\u003ea)-\u003ea-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:insertWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e\u003cem\u003eO(1)\u003c/em\u003e. The intersection of two sets.\n\u003c/p\u003e",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "intersection",
          "package": "EdisonCore",
          "signature": "Set a -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-EnumSet.html#intersection",
          "type": "function"
        },
        "index": {
          "description": "The intersection of two sets",
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "intersection",
          "normalized": "Set a-\u003eSet a-\u003eSet a",
          "package": "EdisonCore",
          "signature": "Set a-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:intersection"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.EnumSet",
          "name": "intersectionWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Set a -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-EnumSet.html#intersectionWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "intersectionWith",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSet a-\u003eSet a-\u003eSet a",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003ea-\u003ea)-\u003eSet a-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:intersectionWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.EnumSet",
          "name": "lookup",
          "package": "EdisonCore",
          "signature": "a -\u003e Set a -\u003e a",
          "source": "src/Data-Edison-Coll-EnumSet.html#lookup",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "lookup",
          "normalized": "a-\u003eSet a-\u003ea",
          "package": "EdisonCore",
          "signature": "a-\u003eSet a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:lookup"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.EnumSet",
          "name": "lookupAll",
          "package": "EdisonCore",
          "signature": "a -\u003e Set a -\u003e s a",
          "source": "src/Data-Edison-Coll-EnumSet.html#lookupAll",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "lookupAll",
          "normalized": "a-\u003eSet a-\u003eb a",
          "package": "EdisonCore",
          "partial": "All",
          "signature": "a-\u003eSet a-\u003es a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:lookupAll"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.EnumSet",
          "name": "lookupM",
          "package": "EdisonCore",
          "signature": "a -\u003e Set a -\u003e m a",
          "source": "src/Data-Edison-Coll-EnumSet.html#lookupM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "lookupM",
          "normalized": "a-\u003eSet a-\u003eb a",
          "package": "EdisonCore",
          "signature": "a-\u003eSet a-\u003em a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:lookupM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.EnumSet",
          "name": "lookupWithDefault",
          "package": "EdisonCore",
          "signature": "a -\u003e a -\u003e Set a -\u003e a",
          "source": "src/Data-Edison-Coll-EnumSet.html#lookupWithDefault",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "lookupWithDefault",
          "normalized": "a-\u003ea-\u003eSet a-\u003ea",
          "package": "EdisonCore",
          "partial": "With Default",
          "signature": "a-\u003ea-\u003eSet a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:lookupWithDefault"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e\u003cem\u003eO(n)\u003c/em\u003e.\n \u003ccode\u003e\u003ccode\u003e\u003ca\u003emap\u003c/a\u003e\u003c/code\u003e f s\u003c/code\u003e is the set obtained by applying \u003ccode\u003ef\u003c/code\u003e to each element of \u003ccode\u003es\u003c/code\u003e.\n\u003c/p\u003e\u003cp\u003eIt's worth noting that the size of the result may be smaller if,\n for some \u003ccode\u003e(x,y)\u003c/code\u003e, \u003ccode\u003ex /= y && f x == f y\u003c/code\u003e\n\u003c/p\u003e",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "map",
          "package": "EdisonCore",
          "signature": "(a -\u003e b) -\u003e Set a -\u003e Set b",
          "source": "src/Data-Edison-Coll-EnumSet.html#map",
          "type": "function"
        },
        "index": {
          "description": "map is the set obtained by applying to each element of It worth noting that the size of the result may be smaller if for some",
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "map",
          "normalized": "(a-\u003eb)-\u003eSet a-\u003eSet b",
          "package": "EdisonCore",
          "signature": "(a-\u003eb)-\u003eSet a-\u003eSet b",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:map"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e\u003cem\u003eO(1)\u003c/em\u003e. The maximal element of a set.\n\u003c/p\u003e",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "maxElem",
          "package": "EdisonCore",
          "signature": "Set a -\u003e a",
          "source": "src/Data-Edison-Coll-EnumSet.html#maxElem",
          "type": "function"
        },
        "index": {
          "description": "The maximal element of set",
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "maxElem",
          "normalized": "Set a-\u003ea",
          "package": "EdisonCore",
          "partial": "Elem",
          "signature": "Set a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:maxElem"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.EnumSet",
          "name": "maxView",
          "package": "EdisonCore",
          "signature": "Set a -\u003e m (a, Set a)",
          "source": "src/Data-Edison-Coll-EnumSet.html#maxView",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "maxView",
          "normalized": "Set a-\u003eb(a,Set a)",
          "package": "EdisonCore",
          "partial": "View",
          "signature": "Set a-\u003em(a,Set a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:maxView"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e\u003cem\u003eO(1)\u003c/em\u003e. Is the element in the set?\n\u003c/p\u003e",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "member",
          "package": "EdisonCore",
          "signature": "a -\u003e Set a -\u003e Bool",
          "source": "src/Data-Edison-Coll-EnumSet.html#member",
          "type": "function"
        },
        "index": {
          "description": "Is the element in the set",
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "member",
          "normalized": "a-\u003eSet a-\u003eBool",
          "package": "EdisonCore",
          "signature": "a-\u003eSet a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:member"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e\u003cem\u003eO(1)\u003c/em\u003e. The minimal element of a set.\n\u003c/p\u003e",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "minElem",
          "package": "EdisonCore",
          "signature": "Set a -\u003e a",
          "source": "src/Data-Edison-Coll-EnumSet.html#minElem",
          "type": "function"
        },
        "index": {
          "description": "The minimal element of set",
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "minElem",
          "normalized": "Set a-\u003ea",
          "package": "EdisonCore",
          "partial": "Elem",
          "signature": "Set a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:minElem"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.EnumSet",
          "name": "minView",
          "package": "EdisonCore",
          "signature": "Set a -\u003e m (a, Set a)",
          "source": "src/Data-Edison-Coll-EnumSet.html#minView",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "minView",
          "normalized": "Set a-\u003eb(a,Set a)",
          "package": "EdisonCore",
          "partial": "View",
          "signature": "Set a-\u003em(a,Set a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:minView"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.EnumSet",
          "name": "moduleName",
          "package": "EdisonCore",
          "signature": "String",
          "source": "src/Data-Edison-Coll-EnumSet.html#moduleName",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "moduleName",
          "package": "EdisonCore",
          "partial": "Name",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:moduleName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e\u003cem\u003eO(1)\u003c/em\u003e. Is this the empty set?\n\u003c/p\u003e",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "null",
          "package": "EdisonCore",
          "signature": "Set a -\u003e Bool",
          "source": "src/Data-Edison-Coll-EnumSet.html#null",
          "type": "function"
        },
        "index": {
          "description": "Is this the empty set",
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "null",
          "normalized": "Set a-\u003eBool",
          "package": "EdisonCore",
          "signature": "Set a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:null"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e\u003cem\u003eO(n)\u003c/em\u003e. Partition the set into two sets, one with all elements that satisfy\n the predicate and one with all elements that don't satisfy the predicate.\n See also \u003ccode\u003esplit\u003c/code\u003e.\n\u003c/p\u003e",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "partition",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e Set a -\u003e (Set a, Set a)",
          "source": "src/Data-Edison-Coll-EnumSet.html#partition",
          "type": "function"
        },
        "index": {
          "description": "Partition the set into two sets one with all elements that satisfy the predicate and one with all elements that don satisfy the predicate See also split",
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "partition",
          "normalized": "(a-\u003eBool)-\u003eSet a-\u003e(Set a,Set a)",
          "package": "EdisonCore",
          "signature": "(a-\u003eBool)-\u003eSet a-\u003e(Set a,Set a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:partition"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.EnumSet",
          "name": "partitionLE_GT",
          "package": "EdisonCore",
          "signature": "a -\u003e Set a -\u003e (Set a, Set a)",
          "source": "src/Data-Edison-Coll-EnumSet.html#partitionLE_GT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "partitionLE_GT",
          "normalized": "a-\u003eSet a-\u003e(Set a,Set a)",
          "package": "EdisonCore",
          "partial": "LE GT",
          "signature": "a-\u003eSet a-\u003e(Set a,Set a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:partitionLE_GT"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.EnumSet",
          "name": "partitionLT_GE",
          "package": "EdisonCore",
          "signature": "a -\u003e Set a -\u003e (Set a, Set a)",
          "source": "src/Data-Edison-Coll-EnumSet.html#partitionLT_GE",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "partitionLT_GE",
          "normalized": "a-\u003eSet a-\u003e(Set a,Set a)",
          "package": "EdisonCore",
          "partial": "LT GE",
          "signature": "a-\u003eSet a-\u003e(Set a,Set a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:partitionLT_GE"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.EnumSet",
          "name": "partitionLT_GT",
          "package": "EdisonCore",
          "signature": "a -\u003e Set a -\u003e (Set a, Set a)",
          "source": "src/Data-Edison-Coll-EnumSet.html#partitionLT_GT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "partitionLT_GT",
          "normalized": "a-\u003eSet a-\u003e(Set a,Set a)",
          "package": "EdisonCore",
          "partial": "LT GT",
          "signature": "a-\u003eSet a-\u003e(Set a,Set a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:partitionLT_GT"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e\u003cem\u003eO(1)\u003c/em\u003e. Is this a proper subset? (ie. a subset but not equal).\n\u003c/p\u003e",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "properSubset",
          "package": "EdisonCore",
          "signature": "Set a -\u003e Set a -\u003e Bool",
          "source": "src/Data-Edison-Coll-EnumSet.html#properSubset",
          "type": "function"
        },
        "index": {
          "description": "Is this proper subset ie subset but not equal",
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "properSubset",
          "normalized": "Set a-\u003eSet a-\u003eBool",
          "package": "EdisonCore",
          "partial": "Subset",
          "signature": "Set a-\u003eSet a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:properSubset"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e\u003cem\u003eO(1)\u003c/em\u003e Changes the type of the elements in the set without changing\n   the representation.  Equivalant to \u003ccode\u003emap (toEnum . fromEnum)\u003c/code\u003e, and\n   to \u003ccode\u003e(fromBits . toBits)\u003c/code\u003e.  This method is operationally a no-op.\n\u003c/p\u003e",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "setCoerce",
          "package": "EdisonCore",
          "signature": "Set a -\u003e Set b",
          "source": "src/Data-Edison-Coll-EnumSet.html#setCoerce",
          "type": "function"
        },
        "index": {
          "description": "Changes the type of the elements in the set without changing the representation Equivalant to map toEnum fromEnum and to fromBits toBits This method is operationally no-op",
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "setCoerce",
          "normalized": "Set a-\u003eSet b",
          "package": "EdisonCore",
          "partial": "Coerce",
          "signature": "Set a-\u003eSet b",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:setCoerce"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e\u003cem\u003eO(1)\u003c/em\u003e. Create a singleton set.\n\u003c/p\u003e",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "singleton",
          "package": "EdisonCore",
          "signature": "a -\u003e Set a",
          "source": "src/Data-Edison-Coll-EnumSet.html#singleton",
          "type": "function"
        },
        "index": {
          "description": "Create singleton set",
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "singleton",
          "normalized": "a-\u003eSet a",
          "package": "EdisonCore",
          "signature": "a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:singleton"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e\u003cem\u003eO(1)\u003c/em\u003e. The number of elements in the set.\n\u003c/p\u003e",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "size",
          "package": "EdisonCore",
          "signature": "Set a -\u003e Int",
          "source": "src/Data-Edison-Coll-EnumSet.html#size",
          "type": "function"
        },
        "index": {
          "description": "The number of elements in the set",
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "size",
          "normalized": "Set a-\u003eInt",
          "package": "EdisonCore",
          "signature": "Set a-\u003eInt",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:size"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.EnumSet",
          "name": "strict",
          "package": "EdisonCore",
          "signature": "Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-EnumSet.html#strict",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "strict",
          "normalized": "Set a-\u003eSet a",
          "package": "EdisonCore",
          "signature": "Set a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:strict"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.EnumSet",
          "name": "strictWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e b) -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-EnumSet.html#strictWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "strictWith",
          "normalized": "(a-\u003eb)-\u003eSet a-\u003eSet a",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003eb)-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:strictWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e\u003cem\u003eO(1)\u003c/em\u003e. Is this a subset?\n \u003ccode\u003e(s1 \u003ccode\u003e\u003ca\u003esubset\u003c/a\u003e\u003c/code\u003e s2)\u003c/code\u003e tells whether \u003ccode\u003es1\u003c/code\u003e is a subset of \u003ccode\u003es2\u003c/code\u003e.\n\u003c/p\u003e",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "subset",
          "package": "EdisonCore",
          "signature": "Set a -\u003e Set a -\u003e Bool",
          "source": "src/Data-Edison-Coll-EnumSet.html#subset",
          "type": "function"
        },
        "index": {
          "description": "Is this subset s1 subset s2 tells whether s1 is subset of s2",
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "subset",
          "normalized": "Set a-\u003eSet a-\u003eBool",
          "package": "EdisonCore",
          "signature": "Set a-\u003eSet a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:subset"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.EnumSet",
          "name": "symmetricDifference",
          "package": "EdisonCore",
          "signature": "Set a -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-EnumSet.html#symmetricDifference",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "symmetricDifference",
          "normalized": "Set a-\u003eSet a-\u003eSet a",
          "package": "EdisonCore",
          "partial": "Difference",
          "signature": "Set a-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:symmetricDifference"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e\u003cem\u003eO(1)\u003c/em\u003e Get the underlying bit-encoded representation.\n   This method is operationally a no-op.\n\u003c/p\u003e",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "toBits",
          "package": "EdisonCore",
          "signature": "Set a -\u003e Word",
          "source": "src/Data-Edison-Coll-EnumSet.html#toBits",
          "type": "function"
        },
        "index": {
          "description": "Get the underlying bit-encoded representation This method is operationally no-op",
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "toBits",
          "normalized": "Set a-\u003eWord",
          "package": "EdisonCore",
          "partial": "Bits",
          "signature": "Set a-\u003eWord",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:toBits"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.EnumSet",
          "name": "toOrdSeq",
          "package": "EdisonCore",
          "signature": "Set a -\u003e s a",
          "source": "src/Data-Edison-Coll-EnumSet.html#toOrdSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "toOrdSeq",
          "normalized": "Set a-\u003eb a",
          "package": "EdisonCore",
          "partial": "Ord Seq",
          "signature": "Set a-\u003es a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:toOrdSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.EnumSet",
          "name": "toSeq",
          "package": "EdisonCore",
          "signature": "Set a -\u003e s a",
          "source": "src/Data-Edison-Coll-EnumSet.html#toSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "toSeq",
          "normalized": "Set a-\u003eb a",
          "package": "EdisonCore",
          "partial": "Seq",
          "signature": "Set a-\u003es a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:toSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e\u003cem\u003eO(1)\u003c/em\u003e. The union of two sets.\n\u003c/p\u003e",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "union",
          "package": "EdisonCore",
          "signature": "Set a -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-EnumSet.html#union",
          "type": "function"
        },
        "index": {
          "description": "The union of two sets",
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "union",
          "normalized": "Set a-\u003eSet a-\u003eSet a",
          "package": "EdisonCore",
          "signature": "Set a-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:union"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eThe union of a list of sets: (\u003ccode\u003e\u003ccode\u003eunions\u003c/code\u003e == \u003ccode\u003e\u003ca\u003efoldl\u003c/a\u003e\u003c/code\u003e \u003ccode\u003e\u003ca\u003eunion\u003c/a\u003e\u003c/code\u003e \u003ccode\u003e\u003ca\u003eempty\u003c/a\u003e\u003c/code\u003e\u003c/code\u003e).\n\u003c/p\u003e",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "unionSeq",
          "package": "EdisonCore",
          "signature": "s (Set a) -\u003e Set a",
          "source": "src/Data-Edison-Coll-EnumSet.html#unionSeq",
          "type": "function"
        },
        "index": {
          "description": "The union of list of sets unions foldl union empty",
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "unionSeq",
          "normalized": "a(Set b)-\u003eSet b",
          "package": "EdisonCore",
          "partial": "Seq",
          "signature": "s(Set a)-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:unionSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.EnumSet",
          "name": "unionSeqWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e s (Set a) -\u003e Set a",
          "source": "src/Data-Edison-Coll-EnumSet.html#unionSeqWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "unionSeqWith",
          "normalized": "(a-\u003ea-\u003ea)-\u003eb(Set a)-\u003eSet a",
          "package": "EdisonCore",
          "partial": "Seq With",
          "signature": "(a-\u003ea-\u003ea)-\u003es(Set a)-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:unionSeqWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.EnumSet",
          "name": "unionWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Set a -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-EnumSet.html#unionWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "unionWith",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSet a-\u003eSet a-\u003eSet a",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003ea-\u003ea)-\u003eSet a-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:unionWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.EnumSet",
          "name": "unionl",
          "package": "EdisonCore",
          "signature": "Set a -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-EnumSet.html#unionl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "unionl",
          "normalized": "Set a-\u003eSet a-\u003eSet a",
          "package": "EdisonCore",
          "signature": "Set a-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:unionl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.EnumSet",
          "name": "unionr",
          "package": "EdisonCore",
          "signature": "Set a -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-EnumSet.html#unionr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "unionr",
          "normalized": "Set a-\u003eSet a-\u003eSet a",
          "package": "EdisonCore",
          "signature": "Set a-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:unionr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.EnumSet",
          "name": "unsafeAppend",
          "package": "EdisonCore",
          "signature": "Set a -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-EnumSet.html#unsafeAppend",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "unsafeAppend",
          "normalized": "Set a-\u003eSet a-\u003eSet a",
          "package": "EdisonCore",
          "partial": "Append",
          "signature": "Set a-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:unsafeAppend"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.EnumSet",
          "name": "unsafeFromOrdSeq",
          "package": "EdisonCore",
          "signature": "s a -\u003e Set a",
          "source": "src/Data-Edison-Coll-EnumSet.html#unsafeFromOrdSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "unsafeFromOrdSeq",
          "normalized": "a b-\u003eSet b",
          "package": "EdisonCore",
          "partial": "From Ord Seq",
          "signature": "s a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:unsafeFromOrdSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.EnumSet",
          "name": "unsafeInsertMax",
          "package": "EdisonCore",
          "signature": "a -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-EnumSet.html#unsafeInsertMax",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "unsafeInsertMax",
          "normalized": "a-\u003eSet a-\u003eSet a",
          "package": "EdisonCore",
          "partial": "Insert Max",
          "signature": "a-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:unsafeInsertMax"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.EnumSet",
          "name": "unsafeInsertMin",
          "package": "EdisonCore",
          "signature": "a -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-EnumSet.html#unsafeInsertMin",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "unsafeInsertMin",
          "normalized": "a-\u003eSet a-\u003eSet a",
          "package": "EdisonCore",
          "partial": "Insert Min",
          "signature": "a-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:unsafeInsertMin"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.EnumSet",
          "name": "unsafeMapMonotonic",
          "package": "EdisonCore",
          "signature": "(a -\u003e a) -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-EnumSet.html#unsafeMapMonotonic",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll EnumSet",
          "module": "Data.Edison.Coll.EnumSet",
          "name": "unsafeMapMonotonic",
          "normalized": "(a-\u003ea)-\u003eSet a-\u003eSet a",
          "package": "EdisonCore",
          "partial": "Map Monotonic",
          "signature": "(a-\u003ea)-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-EnumSet.html#v:unsafeMapMonotonic"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eLazy Paring Heaps\n\u003c/p\u003e\u003cp\u003e\u003cem\u003eReferences:\u003c/em\u003e\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e Chris Okasaki. \u003cem\u003ePurely Functional Data Structures\u003c/em\u003e. 1998.\n   Section 6.5.\n\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e",
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "LazyPairingHeap",
          "package": "EdisonCore",
          "source": "src/Data-Edison-Coll-LazyPairingHeap.html",
          "type": "module"
        },
        "index": {
          "description": "Lazy Paring Heaps References Chris Okasaki Purely Functional Data Structures Section",
          "hierarchy": "Data Edison Coll LazyPairingHeap",
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "LazyPairingHeap",
          "package": "EdisonCore",
          "partial": "Lazy Pairing Heap",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LazyPairingHeap.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "Heap",
          "package": "EdisonCore",
          "source": "src/Data-Edison-Coll-LazyPairingHeap.html#Heap",
          "type": "data"
        },
        "index": {
          "hierarchy": "Data Edison Coll LazyPairingHeap",
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "Heap",
          "package": "EdisonCore",
          "partial": "Heap",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LazyPairingHeap.html#t:Heap"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "count",
          "package": "EdisonCore",
          "signature": "a -\u003e Heap a -\u003e Int",
          "source": "src/Data-Edison-Coll-LazyPairingHeap.html#count",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LazyPairingHeap",
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "count",
          "normalized": "a-\u003eHeap a-\u003eInt",
          "package": "EdisonCore",
          "signature": "a-\u003eHeap a-\u003eInt",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LazyPairingHeap.html#v:count"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "delete",
          "package": "EdisonCore",
          "signature": "a -\u003e Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-LazyPairingHeap.html#delete",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LazyPairingHeap",
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "delete",
          "normalized": "a-\u003eHeap a-\u003eHeap a",
          "package": "EdisonCore",
          "signature": "a-\u003eHeap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LazyPairingHeap.html#v:delete"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "deleteAll",
          "package": "EdisonCore",
          "signature": "a -\u003e Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-LazyPairingHeap.html#deleteAll",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LazyPairingHeap",
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "deleteAll",
          "normalized": "a-\u003eHeap a-\u003eHeap a",
          "package": "EdisonCore",
          "partial": "All",
          "signature": "a-\u003eHeap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LazyPairingHeap.html#v:deleteAll"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "deleteMax",
          "package": "EdisonCore",
          "signature": "Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-LazyPairingHeap.html#deleteMax",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LazyPairingHeap",
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "deleteMax",
          "normalized": "Heap a-\u003eHeap a",
          "package": "EdisonCore",
          "partial": "Max",
          "signature": "Heap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LazyPairingHeap.html#v:deleteMax"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "deleteMin",
          "package": "EdisonCore",
          "signature": "Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-LazyPairingHeap.html#deleteMin",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LazyPairingHeap",
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "deleteMin",
          "normalized": "Heap a-\u003eHeap a",
          "package": "EdisonCore",
          "partial": "Min",
          "signature": "Heap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LazyPairingHeap.html#v:deleteMin"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "deleteSeq",
          "package": "EdisonCore",
          "signature": "seq a -\u003e Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-LazyPairingHeap.html#deleteSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LazyPairingHeap",
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "deleteSeq",
          "normalized": "a b-\u003eHeap b-\u003eHeap b",
          "package": "EdisonCore",
          "partial": "Seq",
          "signature": "seq a-\u003eHeap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LazyPairingHeap.html#v:deleteSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "empty",
          "package": "EdisonCore",
          "signature": "Heap a",
          "source": "src/Data-Edison-Coll-LazyPairingHeap.html#empty",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LazyPairingHeap",
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "empty",
          "package": "EdisonCore",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LazyPairingHeap.html#v:empty"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "filter",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-LazyPairingHeap.html#filter",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LazyPairingHeap",
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "filter",
          "normalized": "(a-\u003eBool)-\u003eHeap a-\u003eHeap a",
          "package": "EdisonCore",
          "signature": "(a-\u003eBool)-\u003eHeap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LazyPairingHeap.html#v:filter"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "filterGE",
          "package": "EdisonCore",
          "signature": "a -\u003e Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-LazyPairingHeap.html#filterGE",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LazyPairingHeap",
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "filterGE",
          "normalized": "a-\u003eHeap a-\u003eHeap a",
          "package": "EdisonCore",
          "partial": "GE",
          "signature": "a-\u003eHeap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LazyPairingHeap.html#v:filterGE"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "filterGT",
          "package": "EdisonCore",
          "signature": "a -\u003e Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-LazyPairingHeap.html#filterGT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LazyPairingHeap",
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "filterGT",
          "normalized": "a-\u003eHeap a-\u003eHeap a",
          "package": "EdisonCore",
          "partial": "GT",
          "signature": "a-\u003eHeap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LazyPairingHeap.html#v:filterGT"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "filterLE",
          "package": "EdisonCore",
          "signature": "a -\u003e Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-LazyPairingHeap.html#filterLE",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LazyPairingHeap",
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "filterLE",
          "normalized": "a-\u003eHeap a-\u003eHeap a",
          "package": "EdisonCore",
          "partial": "LE",
          "signature": "a-\u003eHeap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LazyPairingHeap.html#v:filterLE"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "filterLT",
          "package": "EdisonCore",
          "signature": "a -\u003e Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-LazyPairingHeap.html#filterLT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LazyPairingHeap",
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "filterLT",
          "normalized": "a-\u003eHeap a-\u003eHeap a",
          "package": "EdisonCore",
          "partial": "LT",
          "signature": "a-\u003eHeap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LazyPairingHeap.html#v:filterLT"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "fold",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e Heap a -\u003e b",
          "source": "src/Data-Edison-Coll-LazyPairingHeap.html#fold",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LazyPairingHeap",
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "fold",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eHeap a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eHeap a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LazyPairingHeap.html#v:fold"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "fold'",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e Heap a -\u003e b",
          "source": "src/Data-Edison-Coll-LazyPairingHeap.html#fold%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LazyPairingHeap",
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "fold'",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eHeap a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eHeap a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LazyPairingHeap.html#v:fold-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "fold1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Heap a -\u003e a",
          "source": "src/Data-Edison-Coll-LazyPairingHeap.html#fold1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LazyPairingHeap",
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "fold1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eHeap a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eHeap a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LazyPairingHeap.html#v:fold1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "fold1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Heap a -\u003e a",
          "source": "src/Data-Edison-Coll-LazyPairingHeap.html#fold1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LazyPairingHeap",
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "fold1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eHeap a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eHeap a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LazyPairingHeap.html#v:fold1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "foldl",
          "package": "EdisonCore",
          "signature": "(b -\u003e a -\u003e b) -\u003e b -\u003e Heap a -\u003e b",
          "source": "src/Data-Edison-Coll-LazyPairingHeap.html#foldl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LazyPairingHeap",
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "foldl",
          "normalized": "(a-\u003eb-\u003ea)-\u003ea-\u003eHeap b-\u003ea",
          "package": "EdisonCore",
          "signature": "(b-\u003ea-\u003eb)-\u003eb-\u003eHeap a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LazyPairingHeap.html#v:foldl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "foldl'",
          "package": "EdisonCore",
          "signature": "(b -\u003e a -\u003e b) -\u003e b -\u003e Heap a -\u003e b",
          "source": "src/Data-Edison-Coll-LazyPairingHeap.html#foldl%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LazyPairingHeap",
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "foldl'",
          "normalized": "(a-\u003eb-\u003ea)-\u003ea-\u003eHeap b-\u003ea",
          "package": "EdisonCore",
          "signature": "(b-\u003ea-\u003eb)-\u003eb-\u003eHeap a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LazyPairingHeap.html#v:foldl-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "foldl1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Heap a -\u003e a",
          "source": "src/Data-Edison-Coll-LazyPairingHeap.html#foldl1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LazyPairingHeap",
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "foldl1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eHeap a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eHeap a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LazyPairingHeap.html#v:foldl1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "foldl1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Heap a -\u003e a",
          "source": "src/Data-Edison-Coll-LazyPairingHeap.html#foldl1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LazyPairingHeap",
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "foldl1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eHeap a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eHeap a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LazyPairingHeap.html#v:foldl1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "foldr",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e Heap a -\u003e b",
          "source": "src/Data-Edison-Coll-LazyPairingHeap.html#foldr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LazyPairingHeap",
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "foldr",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eHeap a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eHeap a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LazyPairingHeap.html#v:foldr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "foldr'",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e Heap a -\u003e b",
          "source": "src/Data-Edison-Coll-LazyPairingHeap.html#foldr%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LazyPairingHeap",
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "foldr'",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eHeap a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eHeap a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LazyPairingHeap.html#v:foldr-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "foldr1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Heap a -\u003e a",
          "source": "src/Data-Edison-Coll-LazyPairingHeap.html#foldr1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LazyPairingHeap",
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "foldr1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eHeap a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eHeap a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LazyPairingHeap.html#v:foldr1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "foldr1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Heap a -\u003e a",
          "source": "src/Data-Edison-Coll-LazyPairingHeap.html#foldr1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LazyPairingHeap",
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "foldr1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eHeap a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eHeap a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LazyPairingHeap.html#v:foldr1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "fromSeq",
          "package": "EdisonCore",
          "signature": "seq a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-LazyPairingHeap.html#fromSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LazyPairingHeap",
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "fromSeq",
          "normalized": "a b-\u003eHeap b",
          "package": "EdisonCore",
          "partial": "Seq",
          "signature": "seq a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LazyPairingHeap.html#v:fromSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "insert",
          "package": "EdisonCore",
          "signature": "a -\u003e Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-LazyPairingHeap.html#insert",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LazyPairingHeap",
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "insert",
          "normalized": "a-\u003eHeap a-\u003eHeap a",
          "package": "EdisonCore",
          "signature": "a-\u003eHeap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LazyPairingHeap.html#v:insert"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "insertSeq",
          "package": "EdisonCore",
          "signature": "seq a -\u003e Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-LazyPairingHeap.html#insertSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LazyPairingHeap",
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "insertSeq",
          "normalized": "a b-\u003eHeap b-\u003eHeap b",
          "package": "EdisonCore",
          "partial": "Seq",
          "signature": "seq a-\u003eHeap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LazyPairingHeap.html#v:insertSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "lookup",
          "package": "EdisonCore",
          "signature": "a -\u003e Heap a -\u003e a",
          "source": "src/Data-Edison-Coll-LazyPairingHeap.html#lookup",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LazyPairingHeap",
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "lookup",
          "normalized": "a-\u003eHeap a-\u003ea",
          "package": "EdisonCore",
          "signature": "a-\u003eHeap a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LazyPairingHeap.html#v:lookup"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "lookupAll",
          "package": "EdisonCore",
          "signature": "a -\u003e Heap a -\u003e seq a",
          "source": "src/Data-Edison-Coll-LazyPairingHeap.html#lookupAll",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LazyPairingHeap",
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "lookupAll",
          "normalized": "a-\u003eHeap a-\u003eb a",
          "package": "EdisonCore",
          "partial": "All",
          "signature": "a-\u003eHeap a-\u003eseq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LazyPairingHeap.html#v:lookupAll"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "lookupM",
          "package": "EdisonCore",
          "signature": "a -\u003e Heap a -\u003e m a",
          "source": "src/Data-Edison-Coll-LazyPairingHeap.html#lookupM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LazyPairingHeap",
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "lookupM",
          "normalized": "a-\u003eHeap a-\u003eb a",
          "package": "EdisonCore",
          "signature": "a-\u003eHeap a-\u003em a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LazyPairingHeap.html#v:lookupM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "lookupWithDefault",
          "package": "EdisonCore",
          "signature": "a -\u003e a -\u003e Heap a -\u003e a",
          "source": "src/Data-Edison-Coll-LazyPairingHeap.html#lookupWithDefault",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LazyPairingHeap",
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "lookupWithDefault",
          "normalized": "a-\u003ea-\u003eHeap a-\u003ea",
          "package": "EdisonCore",
          "partial": "With Default",
          "signature": "a-\u003ea-\u003eHeap a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LazyPairingHeap.html#v:lookupWithDefault"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "maxElem",
          "package": "EdisonCore",
          "signature": "Heap a -\u003e a",
          "source": "src/Data-Edison-Coll-LazyPairingHeap.html#maxElem",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LazyPairingHeap",
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "maxElem",
          "normalized": "Heap a-\u003ea",
          "package": "EdisonCore",
          "partial": "Elem",
          "signature": "Heap a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LazyPairingHeap.html#v:maxElem"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "maxView",
          "package": "EdisonCore",
          "signature": "Heap a -\u003e m (a, Heap a)",
          "source": "src/Data-Edison-Coll-LazyPairingHeap.html#maxView",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LazyPairingHeap",
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "maxView",
          "normalized": "Heap a-\u003eb(a,Heap a)",
          "package": "EdisonCore",
          "partial": "View",
          "signature": "Heap a-\u003em(a,Heap a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LazyPairingHeap.html#v:maxView"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "member",
          "package": "EdisonCore",
          "signature": "a -\u003e Heap a -\u003e Bool",
          "source": "src/Data-Edison-Coll-LazyPairingHeap.html#member",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LazyPairingHeap",
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "member",
          "normalized": "a-\u003eHeap a-\u003eBool",
          "package": "EdisonCore",
          "signature": "a-\u003eHeap a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LazyPairingHeap.html#v:member"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "minElem",
          "package": "EdisonCore",
          "signature": "Heap a -\u003e a",
          "source": "src/Data-Edison-Coll-LazyPairingHeap.html#minElem",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LazyPairingHeap",
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "minElem",
          "normalized": "Heap a-\u003ea",
          "package": "EdisonCore",
          "partial": "Elem",
          "signature": "Heap a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LazyPairingHeap.html#v:minElem"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "minView",
          "package": "EdisonCore",
          "signature": "Heap a -\u003e m (a, Heap a)",
          "source": "src/Data-Edison-Coll-LazyPairingHeap.html#minView",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LazyPairingHeap",
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "minView",
          "normalized": "Heap a-\u003eb(a,Heap a)",
          "package": "EdisonCore",
          "partial": "View",
          "signature": "Heap a-\u003em(a,Heap a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LazyPairingHeap.html#v:minView"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "moduleName",
          "package": "EdisonCore",
          "signature": "String",
          "source": "src/Data-Edison-Coll-LazyPairingHeap.html#moduleName",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LazyPairingHeap",
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "moduleName",
          "package": "EdisonCore",
          "partial": "Name",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LazyPairingHeap.html#v:moduleName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "null",
          "package": "EdisonCore",
          "signature": "Heap a -\u003e Bool",
          "source": "src/Data-Edison-Coll-LazyPairingHeap.html#null",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LazyPairingHeap",
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "null",
          "normalized": "Heap a-\u003eBool",
          "package": "EdisonCore",
          "signature": "Heap a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LazyPairingHeap.html#v:null"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "partition",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e Heap a -\u003e (Heap a, Heap a)",
          "source": "src/Data-Edison-Coll-LazyPairingHeap.html#partition",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LazyPairingHeap",
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "partition",
          "normalized": "(a-\u003eBool)-\u003eHeap a-\u003e(Heap a,Heap a)",
          "package": "EdisonCore",
          "signature": "(a-\u003eBool)-\u003eHeap a-\u003e(Heap a,Heap a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LazyPairingHeap.html#v:partition"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "partitionLE_GT",
          "package": "EdisonCore",
          "signature": "a -\u003e Heap a -\u003e (Heap a, Heap a)",
          "source": "src/Data-Edison-Coll-LazyPairingHeap.html#partitionLE_GT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LazyPairingHeap",
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "partitionLE_GT",
          "normalized": "a-\u003eHeap a-\u003e(Heap a,Heap a)",
          "package": "EdisonCore",
          "partial": "LE GT",
          "signature": "a-\u003eHeap a-\u003e(Heap a,Heap a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LazyPairingHeap.html#v:partitionLE_GT"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "partitionLT_GE",
          "package": "EdisonCore",
          "signature": "a -\u003e Heap a -\u003e (Heap a, Heap a)",
          "source": "src/Data-Edison-Coll-LazyPairingHeap.html#partitionLT_GE",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LazyPairingHeap",
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "partitionLT_GE",
          "normalized": "a-\u003eHeap a-\u003e(Heap a,Heap a)",
          "package": "EdisonCore",
          "partial": "LT GE",
          "signature": "a-\u003eHeap a-\u003e(Heap a,Heap a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LazyPairingHeap.html#v:partitionLT_GE"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "partitionLT_GT",
          "package": "EdisonCore",
          "signature": "a -\u003e Heap a -\u003e (Heap a, Heap a)",
          "source": "src/Data-Edison-Coll-LazyPairingHeap.html#partitionLT_GT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LazyPairingHeap",
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "partitionLT_GT",
          "normalized": "a-\u003eHeap a-\u003e(Heap a,Heap a)",
          "package": "EdisonCore",
          "partial": "LT GT",
          "signature": "a-\u003eHeap a-\u003e(Heap a,Heap a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LazyPairingHeap.html#v:partitionLT_GT"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "singleton",
          "package": "EdisonCore",
          "signature": "a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-LazyPairingHeap.html#singleton",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LazyPairingHeap",
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "singleton",
          "normalized": "a-\u003eHeap a",
          "package": "EdisonCore",
          "signature": "a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LazyPairingHeap.html#v:singleton"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "size",
          "package": "EdisonCore",
          "signature": "Heap a -\u003e Int",
          "source": "src/Data-Edison-Coll-LazyPairingHeap.html#size",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LazyPairingHeap",
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "size",
          "normalized": "Heap a-\u003eInt",
          "package": "EdisonCore",
          "signature": "Heap a-\u003eInt",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LazyPairingHeap.html#v:size"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "strict",
          "package": "EdisonCore",
          "signature": "Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-LazyPairingHeap.html#strict",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LazyPairingHeap",
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "strict",
          "normalized": "Heap a-\u003eHeap a",
          "package": "EdisonCore",
          "signature": "Heap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LazyPairingHeap.html#v:strict"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "strictWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e b) -\u003e Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-LazyPairingHeap.html#strictWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LazyPairingHeap",
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "strictWith",
          "normalized": "(a-\u003eb)-\u003eHeap a-\u003eHeap a",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003eb)-\u003eHeap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LazyPairingHeap.html#v:strictWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "structuralInvariant",
          "package": "EdisonCore",
          "signature": "Heap a -\u003e Bool",
          "source": "src/Data-Edison-Coll-LazyPairingHeap.html#structuralInvariant",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LazyPairingHeap",
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "structuralInvariant",
          "normalized": "Heap a-\u003eBool",
          "package": "EdisonCore",
          "partial": "Invariant",
          "signature": "Heap a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LazyPairingHeap.html#v:structuralInvariant"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "toOrdSeq",
          "package": "EdisonCore",
          "signature": "Heap a -\u003e seq a",
          "source": "src/Data-Edison-Coll-LazyPairingHeap.html#toOrdSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LazyPairingHeap",
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "toOrdSeq",
          "normalized": "Heap a-\u003eb a",
          "package": "EdisonCore",
          "partial": "Ord Seq",
          "signature": "Heap a-\u003eseq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LazyPairingHeap.html#v:toOrdSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "toSeq",
          "package": "EdisonCore",
          "signature": "Heap a -\u003e seq a",
          "source": "src/Data-Edison-Coll-LazyPairingHeap.html#toSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LazyPairingHeap",
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "toSeq",
          "normalized": "Heap a-\u003eb a",
          "package": "EdisonCore",
          "partial": "Seq",
          "signature": "Heap a-\u003eseq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LazyPairingHeap.html#v:toSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "union",
          "package": "EdisonCore",
          "signature": "Heap a -\u003e Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-LazyPairingHeap.html#union",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LazyPairingHeap",
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "union",
          "normalized": "Heap a-\u003eHeap a-\u003eHeap a",
          "package": "EdisonCore",
          "signature": "Heap a-\u003eHeap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LazyPairingHeap.html#v:union"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "unionSeq",
          "package": "EdisonCore",
          "signature": "seq (Heap a) -\u003e Heap a",
          "source": "src/Data-Edison-Coll-LazyPairingHeap.html#unionSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LazyPairingHeap",
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "unionSeq",
          "normalized": "a(Heap b)-\u003eHeap b",
          "package": "EdisonCore",
          "partial": "Seq",
          "signature": "seq(Heap a)-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LazyPairingHeap.html#v:unionSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "unsafeAppend",
          "package": "EdisonCore",
          "signature": "Heap a -\u003e Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-LazyPairingHeap.html#unsafeAppend",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LazyPairingHeap",
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "unsafeAppend",
          "normalized": "Heap a-\u003eHeap a-\u003eHeap a",
          "package": "EdisonCore",
          "partial": "Append",
          "signature": "Heap a-\u003eHeap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LazyPairingHeap.html#v:unsafeAppend"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "unsafeFromOrdSeq",
          "package": "EdisonCore",
          "signature": "seq a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-LazyPairingHeap.html#unsafeFromOrdSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LazyPairingHeap",
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "unsafeFromOrdSeq",
          "normalized": "a b-\u003eHeap b",
          "package": "EdisonCore",
          "partial": "From Ord Seq",
          "signature": "seq a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LazyPairingHeap.html#v:unsafeFromOrdSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "unsafeInsertMax",
          "package": "EdisonCore",
          "signature": "a -\u003e Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-LazyPairingHeap.html#unsafeInsertMax",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LazyPairingHeap",
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "unsafeInsertMax",
          "normalized": "a-\u003eHeap a-\u003eHeap a",
          "package": "EdisonCore",
          "partial": "Insert Max",
          "signature": "a-\u003eHeap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LazyPairingHeap.html#v:unsafeInsertMax"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "unsafeInsertMin",
          "package": "EdisonCore",
          "signature": "a -\u003e Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-LazyPairingHeap.html#unsafeInsertMin",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LazyPairingHeap",
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "unsafeInsertMin",
          "normalized": "a-\u003eHeap a-\u003eHeap a",
          "package": "EdisonCore",
          "partial": "Insert Min",
          "signature": "a-\u003eHeap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LazyPairingHeap.html#v:unsafeInsertMin"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "unsafeMapMonotonic",
          "package": "EdisonCore",
          "signature": "(a -\u003e b) -\u003e Heap a -\u003e Heap b",
          "source": "src/Data-Edison-Coll-LazyPairingHeap.html#unsafeMapMonotonic",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LazyPairingHeap",
          "module": "Data.Edison.Coll.LazyPairingHeap",
          "name": "unsafeMapMonotonic",
          "normalized": "(a-\u003eb)-\u003eHeap a-\u003eHeap b",
          "package": "EdisonCore",
          "partial": "Map Monotonic",
          "signature": "(a-\u003eb)-\u003eHeap a-\u003eHeap b",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LazyPairingHeap.html#v:unsafeMapMonotonic"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eLeftist Heaps\n\u003c/p\u003e\u003cp\u003e\u003cem\u003eReferences:\u003c/em\u003e\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e Chris Okasaki. \u003cem\u003ePurely Functional Data Structures\u003c/em\u003e. 1998. Section 3.1.\n\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e",
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "LeftistHeap",
          "package": "EdisonCore",
          "source": "src/Data-Edison-Coll-LeftistHeap.html",
          "type": "module"
        },
        "index": {
          "description": "Leftist Heaps References Chris Okasaki Purely Functional Data Structures Section",
          "hierarchy": "Data Edison Coll LeftistHeap",
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "LeftistHeap",
          "package": "EdisonCore",
          "partial": "Leftist Heap",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LeftistHeap.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "Heap",
          "package": "EdisonCore",
          "source": "src/Data-Edison-Coll-LeftistHeap.html#Heap",
          "type": "data"
        },
        "index": {
          "hierarchy": "Data Edison Coll LeftistHeap",
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "Heap",
          "package": "EdisonCore",
          "partial": "Heap",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LeftistHeap.html#t:Heap"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "count",
          "package": "EdisonCore",
          "signature": "a -\u003e Heap a -\u003e Int",
          "source": "src/Data-Edison-Coll-LeftistHeap.html#count",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LeftistHeap",
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "count",
          "normalized": "a-\u003eHeap a-\u003eInt",
          "package": "EdisonCore",
          "signature": "a-\u003eHeap a-\u003eInt",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LeftistHeap.html#v:count"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "delete",
          "package": "EdisonCore",
          "signature": "a -\u003e Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-LeftistHeap.html#delete",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LeftistHeap",
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "delete",
          "normalized": "a-\u003eHeap a-\u003eHeap a",
          "package": "EdisonCore",
          "signature": "a-\u003eHeap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LeftistHeap.html#v:delete"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "deleteAll",
          "package": "EdisonCore",
          "signature": "a -\u003e Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-LeftistHeap.html#deleteAll",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LeftistHeap",
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "deleteAll",
          "normalized": "a-\u003eHeap a-\u003eHeap a",
          "package": "EdisonCore",
          "partial": "All",
          "signature": "a-\u003eHeap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LeftistHeap.html#v:deleteAll"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "deleteMax",
          "package": "EdisonCore",
          "signature": "Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-LeftistHeap.html#deleteMax",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LeftistHeap",
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "deleteMax",
          "normalized": "Heap a-\u003eHeap a",
          "package": "EdisonCore",
          "partial": "Max",
          "signature": "Heap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LeftistHeap.html#v:deleteMax"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "deleteMin",
          "package": "EdisonCore",
          "signature": "Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-LeftistHeap.html#deleteMin",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LeftistHeap",
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "deleteMin",
          "normalized": "Heap a-\u003eHeap a",
          "package": "EdisonCore",
          "partial": "Min",
          "signature": "Heap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LeftistHeap.html#v:deleteMin"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "deleteSeq",
          "package": "EdisonCore",
          "signature": "seq a -\u003e Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-LeftistHeap.html#deleteSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LeftistHeap",
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "deleteSeq",
          "normalized": "a b-\u003eHeap b-\u003eHeap b",
          "package": "EdisonCore",
          "partial": "Seq",
          "signature": "seq a-\u003eHeap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LeftistHeap.html#v:deleteSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "empty",
          "package": "EdisonCore",
          "signature": "Heap a",
          "source": "src/Data-Edison-Coll-LeftistHeap.html#empty",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LeftistHeap",
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "empty",
          "package": "EdisonCore",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LeftistHeap.html#v:empty"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "filter",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-LeftistHeap.html#filter",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LeftistHeap",
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "filter",
          "normalized": "(a-\u003eBool)-\u003eHeap a-\u003eHeap a",
          "package": "EdisonCore",
          "signature": "(a-\u003eBool)-\u003eHeap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LeftistHeap.html#v:filter"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "filterGE",
          "package": "EdisonCore",
          "signature": "a -\u003e Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-LeftistHeap.html#filterGE",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LeftistHeap",
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "filterGE",
          "normalized": "a-\u003eHeap a-\u003eHeap a",
          "package": "EdisonCore",
          "partial": "GE",
          "signature": "a-\u003eHeap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LeftistHeap.html#v:filterGE"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "filterGT",
          "package": "EdisonCore",
          "signature": "a -\u003e Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-LeftistHeap.html#filterGT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LeftistHeap",
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "filterGT",
          "normalized": "a-\u003eHeap a-\u003eHeap a",
          "package": "EdisonCore",
          "partial": "GT",
          "signature": "a-\u003eHeap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LeftistHeap.html#v:filterGT"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "filterLE",
          "package": "EdisonCore",
          "signature": "a -\u003e Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-LeftistHeap.html#filterLE",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LeftistHeap",
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "filterLE",
          "normalized": "a-\u003eHeap a-\u003eHeap a",
          "package": "EdisonCore",
          "partial": "LE",
          "signature": "a-\u003eHeap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LeftistHeap.html#v:filterLE"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "filterLT",
          "package": "EdisonCore",
          "signature": "a -\u003e Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-LeftistHeap.html#filterLT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LeftistHeap",
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "filterLT",
          "normalized": "a-\u003eHeap a-\u003eHeap a",
          "package": "EdisonCore",
          "partial": "LT",
          "signature": "a-\u003eHeap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LeftistHeap.html#v:filterLT"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "fold",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e Heap a -\u003e b",
          "source": "src/Data-Edison-Coll-LeftistHeap.html#fold",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LeftistHeap",
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "fold",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eHeap a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eHeap a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LeftistHeap.html#v:fold"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "fold'",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e Heap a -\u003e b",
          "source": "src/Data-Edison-Coll-LeftistHeap.html#fold%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LeftistHeap",
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "fold'",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eHeap a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eHeap a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LeftistHeap.html#v:fold-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "fold1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Heap a -\u003e a",
          "source": "src/Data-Edison-Coll-LeftistHeap.html#fold1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LeftistHeap",
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "fold1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eHeap a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eHeap a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LeftistHeap.html#v:fold1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "fold1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Heap a -\u003e a",
          "source": "src/Data-Edison-Coll-LeftistHeap.html#fold1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LeftistHeap",
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "fold1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eHeap a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eHeap a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LeftistHeap.html#v:fold1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "foldl",
          "package": "EdisonCore",
          "signature": "(b -\u003e a -\u003e b) -\u003e b -\u003e Heap a -\u003e b",
          "source": "src/Data-Edison-Coll-LeftistHeap.html#foldl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LeftistHeap",
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "foldl",
          "normalized": "(a-\u003eb-\u003ea)-\u003ea-\u003eHeap b-\u003ea",
          "package": "EdisonCore",
          "signature": "(b-\u003ea-\u003eb)-\u003eb-\u003eHeap a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LeftistHeap.html#v:foldl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "foldl'",
          "package": "EdisonCore",
          "signature": "(b -\u003e a -\u003e b) -\u003e b -\u003e Heap a -\u003e b",
          "source": "src/Data-Edison-Coll-LeftistHeap.html#foldl%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LeftistHeap",
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "foldl'",
          "normalized": "(a-\u003eb-\u003ea)-\u003ea-\u003eHeap b-\u003ea",
          "package": "EdisonCore",
          "signature": "(b-\u003ea-\u003eb)-\u003eb-\u003eHeap a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LeftistHeap.html#v:foldl-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "foldl1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Heap a -\u003e a",
          "source": "src/Data-Edison-Coll-LeftistHeap.html#foldl1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LeftistHeap",
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "foldl1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eHeap a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eHeap a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LeftistHeap.html#v:foldl1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "foldl1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Heap a -\u003e a",
          "source": "src/Data-Edison-Coll-LeftistHeap.html#foldl1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LeftistHeap",
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "foldl1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eHeap a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eHeap a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LeftistHeap.html#v:foldl1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "foldr",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e Heap a -\u003e b",
          "source": "src/Data-Edison-Coll-LeftistHeap.html#foldr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LeftistHeap",
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "foldr",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eHeap a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eHeap a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LeftistHeap.html#v:foldr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "foldr'",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e Heap a -\u003e b",
          "source": "src/Data-Edison-Coll-LeftistHeap.html#foldr%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LeftistHeap",
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "foldr'",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eHeap a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eHeap a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LeftistHeap.html#v:foldr-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "foldr1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Heap a -\u003e a",
          "source": "src/Data-Edison-Coll-LeftistHeap.html#foldr1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LeftistHeap",
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "foldr1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eHeap a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eHeap a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LeftistHeap.html#v:foldr1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "foldr1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Heap a -\u003e a",
          "source": "src/Data-Edison-Coll-LeftistHeap.html#foldr1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LeftistHeap",
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "foldr1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eHeap a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eHeap a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LeftistHeap.html#v:foldr1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "fromSeq",
          "package": "EdisonCore",
          "signature": "seq a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-LeftistHeap.html#fromSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LeftistHeap",
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "fromSeq",
          "normalized": "a b-\u003eHeap b",
          "package": "EdisonCore",
          "partial": "Seq",
          "signature": "seq a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LeftistHeap.html#v:fromSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "insert",
          "package": "EdisonCore",
          "signature": "a -\u003e Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-LeftistHeap.html#insert",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LeftistHeap",
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "insert",
          "normalized": "a-\u003eHeap a-\u003eHeap a",
          "package": "EdisonCore",
          "signature": "a-\u003eHeap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LeftistHeap.html#v:insert"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "insertSeq",
          "package": "EdisonCore",
          "signature": "seq a -\u003e Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-LeftistHeap.html#insertSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LeftistHeap",
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "insertSeq",
          "normalized": "a b-\u003eHeap b-\u003eHeap b",
          "package": "EdisonCore",
          "partial": "Seq",
          "signature": "seq a-\u003eHeap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LeftistHeap.html#v:insertSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "lookup",
          "package": "EdisonCore",
          "signature": "a -\u003e Heap a -\u003e a",
          "source": "src/Data-Edison-Coll-LeftistHeap.html#lookup",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LeftistHeap",
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "lookup",
          "normalized": "a-\u003eHeap a-\u003ea",
          "package": "EdisonCore",
          "signature": "a-\u003eHeap a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LeftistHeap.html#v:lookup"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "lookupAll",
          "package": "EdisonCore",
          "signature": "a -\u003e Heap a -\u003e seq a",
          "source": "src/Data-Edison-Coll-LeftistHeap.html#lookupAll",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LeftistHeap",
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "lookupAll",
          "normalized": "a-\u003eHeap a-\u003eb a",
          "package": "EdisonCore",
          "partial": "All",
          "signature": "a-\u003eHeap a-\u003eseq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LeftistHeap.html#v:lookupAll"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "lookupM",
          "package": "EdisonCore",
          "signature": "a -\u003e Heap a -\u003e m a",
          "source": "src/Data-Edison-Coll-LeftistHeap.html#lookupM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LeftistHeap",
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "lookupM",
          "normalized": "a-\u003eHeap a-\u003eb a",
          "package": "EdisonCore",
          "signature": "a-\u003eHeap a-\u003em a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LeftistHeap.html#v:lookupM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "lookupWithDefault",
          "package": "EdisonCore",
          "signature": "a -\u003e a -\u003e Heap a -\u003e a",
          "source": "src/Data-Edison-Coll-LeftistHeap.html#lookupWithDefault",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LeftistHeap",
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "lookupWithDefault",
          "normalized": "a-\u003ea-\u003eHeap a-\u003ea",
          "package": "EdisonCore",
          "partial": "With Default",
          "signature": "a-\u003ea-\u003eHeap a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LeftistHeap.html#v:lookupWithDefault"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "maxElem",
          "package": "EdisonCore",
          "signature": "Heap a -\u003e a",
          "source": "src/Data-Edison-Coll-LeftistHeap.html#maxElem",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LeftistHeap",
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "maxElem",
          "normalized": "Heap a-\u003ea",
          "package": "EdisonCore",
          "partial": "Elem",
          "signature": "Heap a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LeftistHeap.html#v:maxElem"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "maxView",
          "package": "EdisonCore",
          "signature": "Heap a -\u003e m (a, Heap a)",
          "source": "src/Data-Edison-Coll-LeftistHeap.html#maxView",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LeftistHeap",
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "maxView",
          "normalized": "Heap a-\u003eb(a,Heap a)",
          "package": "EdisonCore",
          "partial": "View",
          "signature": "Heap a-\u003em(a,Heap a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LeftistHeap.html#v:maxView"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "member",
          "package": "EdisonCore",
          "signature": "a -\u003e Heap a -\u003e Bool",
          "source": "src/Data-Edison-Coll-LeftistHeap.html#member",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LeftistHeap",
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "member",
          "normalized": "a-\u003eHeap a-\u003eBool",
          "package": "EdisonCore",
          "signature": "a-\u003eHeap a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LeftistHeap.html#v:member"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "minElem",
          "package": "EdisonCore",
          "signature": "Heap a -\u003e a",
          "source": "src/Data-Edison-Coll-LeftistHeap.html#minElem",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LeftistHeap",
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "minElem",
          "normalized": "Heap a-\u003ea",
          "package": "EdisonCore",
          "partial": "Elem",
          "signature": "Heap a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LeftistHeap.html#v:minElem"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "minView",
          "package": "EdisonCore",
          "signature": "Heap a -\u003e m (a, Heap a)",
          "source": "src/Data-Edison-Coll-LeftistHeap.html#minView",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LeftistHeap",
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "minView",
          "normalized": "Heap a-\u003eb(a,Heap a)",
          "package": "EdisonCore",
          "partial": "View",
          "signature": "Heap a-\u003em(a,Heap a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LeftistHeap.html#v:minView"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "moduleName",
          "package": "EdisonCore",
          "signature": "String",
          "source": "src/Data-Edison-Coll-LeftistHeap.html#moduleName",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LeftistHeap",
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "moduleName",
          "package": "EdisonCore",
          "partial": "Name",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LeftistHeap.html#v:moduleName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "null",
          "package": "EdisonCore",
          "signature": "Heap a -\u003e Bool",
          "source": "src/Data-Edison-Coll-LeftistHeap.html#null",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LeftistHeap",
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "null",
          "normalized": "Heap a-\u003eBool",
          "package": "EdisonCore",
          "signature": "Heap a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LeftistHeap.html#v:null"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "partition",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e Heap a -\u003e (Heap a, Heap a)",
          "source": "src/Data-Edison-Coll-LeftistHeap.html#partition",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LeftistHeap",
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "partition",
          "normalized": "(a-\u003eBool)-\u003eHeap a-\u003e(Heap a,Heap a)",
          "package": "EdisonCore",
          "signature": "(a-\u003eBool)-\u003eHeap a-\u003e(Heap a,Heap a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LeftistHeap.html#v:partition"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "partitionLE_GT",
          "package": "EdisonCore",
          "signature": "a -\u003e Heap a -\u003e (Heap a, Heap a)",
          "source": "src/Data-Edison-Coll-LeftistHeap.html#partitionLE_GT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LeftistHeap",
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "partitionLE_GT",
          "normalized": "a-\u003eHeap a-\u003e(Heap a,Heap a)",
          "package": "EdisonCore",
          "partial": "LE GT",
          "signature": "a-\u003eHeap a-\u003e(Heap a,Heap a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LeftistHeap.html#v:partitionLE_GT"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "partitionLT_GE",
          "package": "EdisonCore",
          "signature": "a -\u003e Heap a -\u003e (Heap a, Heap a)",
          "source": "src/Data-Edison-Coll-LeftistHeap.html#partitionLT_GE",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LeftistHeap",
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "partitionLT_GE",
          "normalized": "a-\u003eHeap a-\u003e(Heap a,Heap a)",
          "package": "EdisonCore",
          "partial": "LT GE",
          "signature": "a-\u003eHeap a-\u003e(Heap a,Heap a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LeftistHeap.html#v:partitionLT_GE"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "partitionLT_GT",
          "package": "EdisonCore",
          "signature": "a -\u003e Heap a -\u003e (Heap a, Heap a)",
          "source": "src/Data-Edison-Coll-LeftistHeap.html#partitionLT_GT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LeftistHeap",
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "partitionLT_GT",
          "normalized": "a-\u003eHeap a-\u003e(Heap a,Heap a)",
          "package": "EdisonCore",
          "partial": "LT GT",
          "signature": "a-\u003eHeap a-\u003e(Heap a,Heap a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LeftistHeap.html#v:partitionLT_GT"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "singleton",
          "package": "EdisonCore",
          "signature": "a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-LeftistHeap.html#singleton",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LeftistHeap",
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "singleton",
          "normalized": "a-\u003eHeap a",
          "package": "EdisonCore",
          "signature": "a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LeftistHeap.html#v:singleton"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "size",
          "package": "EdisonCore",
          "signature": "Heap a -\u003e Int",
          "source": "src/Data-Edison-Coll-LeftistHeap.html#size",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LeftistHeap",
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "size",
          "normalized": "Heap a-\u003eInt",
          "package": "EdisonCore",
          "signature": "Heap a-\u003eInt",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LeftistHeap.html#v:size"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "strict",
          "package": "EdisonCore",
          "signature": "Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-LeftistHeap.html#strict",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LeftistHeap",
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "strict",
          "normalized": "Heap a-\u003eHeap a",
          "package": "EdisonCore",
          "signature": "Heap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LeftistHeap.html#v:strict"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "strictWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e b) -\u003e Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-LeftistHeap.html#strictWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LeftistHeap",
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "strictWith",
          "normalized": "(a-\u003eb)-\u003eHeap a-\u003eHeap a",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003eb)-\u003eHeap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LeftistHeap.html#v:strictWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "structuralInvariant",
          "package": "EdisonCore",
          "signature": "Heap a -\u003e Bool",
          "source": "src/Data-Edison-Coll-LeftistHeap.html#structuralInvariant",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LeftistHeap",
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "structuralInvariant",
          "normalized": "Heap a-\u003eBool",
          "package": "EdisonCore",
          "partial": "Invariant",
          "signature": "Heap a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LeftistHeap.html#v:structuralInvariant"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "toOrdSeq",
          "package": "EdisonCore",
          "signature": "Heap a -\u003e seq a",
          "source": "src/Data-Edison-Coll-LeftistHeap.html#toOrdSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LeftistHeap",
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "toOrdSeq",
          "normalized": "Heap a-\u003eb a",
          "package": "EdisonCore",
          "partial": "Ord Seq",
          "signature": "Heap a-\u003eseq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LeftistHeap.html#v:toOrdSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "toSeq",
          "package": "EdisonCore",
          "signature": "Heap a -\u003e seq a",
          "source": "src/Data-Edison-Coll-LeftistHeap.html#toSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LeftistHeap",
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "toSeq",
          "normalized": "Heap a-\u003eb a",
          "package": "EdisonCore",
          "partial": "Seq",
          "signature": "Heap a-\u003eseq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LeftistHeap.html#v:toSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "union",
          "package": "EdisonCore",
          "signature": "Heap a -\u003e Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-LeftistHeap.html#union",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LeftistHeap",
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "union",
          "normalized": "Heap a-\u003eHeap a-\u003eHeap a",
          "package": "EdisonCore",
          "signature": "Heap a-\u003eHeap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LeftistHeap.html#v:union"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "unionSeq",
          "package": "EdisonCore",
          "signature": "seq (Heap a) -\u003e Heap a",
          "source": "src/Data-Edison-Coll-LeftistHeap.html#unionSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LeftistHeap",
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "unionSeq",
          "normalized": "a(Heap b)-\u003eHeap b",
          "package": "EdisonCore",
          "partial": "Seq",
          "signature": "seq(Heap a)-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LeftistHeap.html#v:unionSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "unsafeAppend",
          "package": "EdisonCore",
          "signature": "Heap a -\u003e Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-LeftistHeap.html#unsafeAppend",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LeftistHeap",
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "unsafeAppend",
          "normalized": "Heap a-\u003eHeap a-\u003eHeap a",
          "package": "EdisonCore",
          "partial": "Append",
          "signature": "Heap a-\u003eHeap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LeftistHeap.html#v:unsafeAppend"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "unsafeFromOrdSeq",
          "package": "EdisonCore",
          "signature": "seq a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-LeftistHeap.html#unsafeFromOrdSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LeftistHeap",
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "unsafeFromOrdSeq",
          "normalized": "a b-\u003eHeap b",
          "package": "EdisonCore",
          "partial": "From Ord Seq",
          "signature": "seq a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LeftistHeap.html#v:unsafeFromOrdSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "unsafeInsertMax",
          "package": "EdisonCore",
          "signature": "a -\u003e Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-LeftistHeap.html#unsafeInsertMax",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LeftistHeap",
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "unsafeInsertMax",
          "normalized": "a-\u003eHeap a-\u003eHeap a",
          "package": "EdisonCore",
          "partial": "Insert Max",
          "signature": "a-\u003eHeap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LeftistHeap.html#v:unsafeInsertMax"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "unsafeInsertMin",
          "package": "EdisonCore",
          "signature": "a -\u003e Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-LeftistHeap.html#unsafeInsertMin",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LeftistHeap",
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "unsafeInsertMin",
          "normalized": "a-\u003eHeap a-\u003eHeap a",
          "package": "EdisonCore",
          "partial": "Insert Min",
          "signature": "a-\u003eHeap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LeftistHeap.html#v:unsafeInsertMin"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "unsafeMapMonotonic",
          "package": "EdisonCore",
          "signature": "(a -\u003e a) -\u003e Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-LeftistHeap.html#unsafeMapMonotonic",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll LeftistHeap",
          "module": "Data.Edison.Coll.LeftistHeap",
          "name": "unsafeMapMonotonic",
          "normalized": "(a-\u003ea)-\u003eHeap a-\u003eHeap a",
          "package": "EdisonCore",
          "partial": "Map Monotonic",
          "signature": "(a-\u003ea)-\u003eHeap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-LeftistHeap.html#v:unsafeMapMonotonic"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA generic adaptor for bags to keep the minimum element separately.\n\u003c/p\u003e\u003c/div\u003e",
          "module": "Data.Edison.Coll.MinHeap",
          "name": "MinHeap",
          "package": "EdisonCore",
          "source": "src/Data-Edison-Coll-MinHeap.html",
          "type": "module"
        },
        "index": {
          "description": "generic adaptor for bags to keep the minimum element separately",
          "hierarchy": "Data Edison Coll MinHeap",
          "module": "Data.Edison.Coll.MinHeap",
          "name": "MinHeap",
          "package": "EdisonCore",
          "partial": "Min Heap",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-MinHeap.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.MinHeap",
          "name": "Min",
          "package": "EdisonCore",
          "source": "src/Data-Edison-Coll-MinHeap.html#Min",
          "type": "data"
        },
        "index": {
          "hierarchy": "Data Edison Coll MinHeap",
          "module": "Data.Edison.Coll.MinHeap",
          "name": "Min",
          "package": "EdisonCore",
          "partial": "Min",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-MinHeap.html#t:Min"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.MinHeap",
          "name": "count",
          "package": "EdisonCore",
          "signature": "a -\u003e Min h a -\u003e Int",
          "source": "src/Data-Edison-Coll-MinHeap.html#count",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll MinHeap",
          "module": "Data.Edison.Coll.MinHeap",
          "name": "count",
          "normalized": "a-\u003eMin b a-\u003eInt",
          "package": "EdisonCore",
          "signature": "a-\u003eMin h a-\u003eInt",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-MinHeap.html#v:count"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.MinHeap",
          "name": "delete",
          "package": "EdisonCore",
          "signature": "a -\u003e Min h a -\u003e Min h a",
          "source": "src/Data-Edison-Coll-MinHeap.html#delete",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll MinHeap",
          "module": "Data.Edison.Coll.MinHeap",
          "name": "delete",
          "normalized": "a-\u003eMin b a-\u003eMin b a",
          "package": "EdisonCore",
          "signature": "a-\u003eMin h a-\u003eMin h a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-MinHeap.html#v:delete"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.MinHeap",
          "name": "deleteAll",
          "package": "EdisonCore",
          "signature": "a -\u003e Min h a -\u003e Min h a",
          "source": "src/Data-Edison-Coll-MinHeap.html#deleteAll",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll MinHeap",
          "module": "Data.Edison.Coll.MinHeap",
          "name": "deleteAll",
          "normalized": "a-\u003eMin b a-\u003eMin b a",
          "package": "EdisonCore",
          "partial": "All",
          "signature": "a-\u003eMin h a-\u003eMin h a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-MinHeap.html#v:deleteAll"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.MinHeap",
          "name": "deleteMax",
          "package": "EdisonCore",
          "signature": "Min h a -\u003e Min h a",
          "source": "src/Data-Edison-Coll-MinHeap.html#deleteMax",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll MinHeap",
          "module": "Data.Edison.Coll.MinHeap",
          "name": "deleteMax",
          "normalized": "Min a b-\u003eMin a b",
          "package": "EdisonCore",
          "partial": "Max",
          "signature": "Min h a-\u003eMin h a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-MinHeap.html#v:deleteMax"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.MinHeap",
          "name": "deleteMin",
          "package": "EdisonCore",
          "signature": "Min h a -\u003e Min h a",
          "source": "src/Data-Edison-Coll-MinHeap.html#deleteMin",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll MinHeap",
          "module": "Data.Edison.Coll.MinHeap",
          "name": "deleteMin",
          "normalized": "Min a b-\u003eMin a b",
          "package": "EdisonCore",
          "partial": "Min",
          "signature": "Min h a-\u003eMin h a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-MinHeap.html#v:deleteMin"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.MinHeap",
          "name": "deleteSeq",
          "package": "EdisonCore",
          "signature": "s a -\u003e Min h a -\u003e Min h a",
          "source": "src/Data-Edison-Coll-MinHeap.html#deleteSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll MinHeap",
          "module": "Data.Edison.Coll.MinHeap",
          "name": "deleteSeq",
          "normalized": "a b-\u003eMin c b-\u003eMin c b",
          "package": "EdisonCore",
          "partial": "Seq",
          "signature": "s a-\u003eMin h a-\u003eMin h a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-MinHeap.html#v:deleteSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.MinHeap",
          "name": "empty",
          "package": "EdisonCore",
          "signature": "Min h a",
          "source": "src/Data-Edison-Coll-MinHeap.html#empty",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll MinHeap",
          "module": "Data.Edison.Coll.MinHeap",
          "name": "empty",
          "package": "EdisonCore",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-MinHeap.html#v:empty"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.MinHeap",
          "name": "filter",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e Min h a -\u003e Min h a",
          "source": "src/Data-Edison-Coll-MinHeap.html#filter",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll MinHeap",
          "module": "Data.Edison.Coll.MinHeap",
          "name": "filter",
          "normalized": "(a-\u003eBool)-\u003eMin b a-\u003eMin b a",
          "package": "EdisonCore",
          "signature": "(a-\u003eBool)-\u003eMin h a-\u003eMin h a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-MinHeap.html#v:filter"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.MinHeap",
          "name": "filterGE",
          "package": "EdisonCore",
          "signature": "a -\u003e Min h a -\u003e Min h a",
          "source": "src/Data-Edison-Coll-MinHeap.html#filterGE",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll MinHeap",
          "module": "Data.Edison.Coll.MinHeap",
          "name": "filterGE",
          "normalized": "a-\u003eMin b a-\u003eMin b a",
          "package": "EdisonCore",
          "partial": "GE",
          "signature": "a-\u003eMin h a-\u003eMin h a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-MinHeap.html#v:filterGE"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.MinHeap",
          "name": "filterGT",
          "package": "EdisonCore",
          "signature": "a -\u003e Min h a -\u003e Min h a",
          "source": "src/Data-Edison-Coll-MinHeap.html#filterGT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll MinHeap",
          "module": "Data.Edison.Coll.MinHeap",
          "name": "filterGT",
          "normalized": "a-\u003eMin b a-\u003eMin b a",
          "package": "EdisonCore",
          "partial": "GT",
          "signature": "a-\u003eMin h a-\u003eMin h a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-MinHeap.html#v:filterGT"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.MinHeap",
          "name": "filterLE",
          "package": "EdisonCore",
          "signature": "a -\u003e Min h a -\u003e Min h a",
          "source": "src/Data-Edison-Coll-MinHeap.html#filterLE",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll MinHeap",
          "module": "Data.Edison.Coll.MinHeap",
          "name": "filterLE",
          "normalized": "a-\u003eMin b a-\u003eMin b a",
          "package": "EdisonCore",
          "partial": "LE",
          "signature": "a-\u003eMin h a-\u003eMin h a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-MinHeap.html#v:filterLE"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.MinHeap",
          "name": "filterLT",
          "package": "EdisonCore",
          "signature": "a -\u003e Min h a -\u003e Min h a",
          "source": "src/Data-Edison-Coll-MinHeap.html#filterLT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll MinHeap",
          "module": "Data.Edison.Coll.MinHeap",
          "name": "filterLT",
          "normalized": "a-\u003eMin b a-\u003eMin b a",
          "package": "EdisonCore",
          "partial": "LT",
          "signature": "a-\u003eMin h a-\u003eMin h a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-MinHeap.html#v:filterLT"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.MinHeap",
          "name": "fold",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e Min h a -\u003e b",
          "source": "src/Data-Edison-Coll-MinHeap.html#fold",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll MinHeap",
          "module": "Data.Edison.Coll.MinHeap",
          "name": "fold",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eMin c a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eMin h a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-MinHeap.html#v:fold"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.MinHeap",
          "name": "fold'",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e Min h a -\u003e b",
          "source": "src/Data-Edison-Coll-MinHeap.html#fold%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll MinHeap",
          "module": "Data.Edison.Coll.MinHeap",
          "name": "fold'",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eMin c a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eMin h a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-MinHeap.html#v:fold-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.MinHeap",
          "name": "fold1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Min h a -\u003e a",
          "source": "src/Data-Edison-Coll-MinHeap.html#fold1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll MinHeap",
          "module": "Data.Edison.Coll.MinHeap",
          "name": "fold1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eMin b a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eMin h a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-MinHeap.html#v:fold1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.MinHeap",
          "name": "fold1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Min h a -\u003e a",
          "source": "src/Data-Edison-Coll-MinHeap.html#fold1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll MinHeap",
          "module": "Data.Edison.Coll.MinHeap",
          "name": "fold1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eMin b a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eMin h a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-MinHeap.html#v:fold1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.MinHeap",
          "name": "foldl",
          "package": "EdisonCore",
          "signature": "(b -\u003e a -\u003e b) -\u003e b -\u003e Min h a -\u003e b",
          "source": "src/Data-Edison-Coll-MinHeap.html#foldl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll MinHeap",
          "module": "Data.Edison.Coll.MinHeap",
          "name": "foldl",
          "normalized": "(a-\u003eb-\u003ea)-\u003ea-\u003eMin c b-\u003ea",
          "package": "EdisonCore",
          "signature": "(b-\u003ea-\u003eb)-\u003eb-\u003eMin h a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-MinHeap.html#v:foldl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.MinHeap",
          "name": "foldl'",
          "package": "EdisonCore",
          "signature": "(b -\u003e a -\u003e b) -\u003e b -\u003e Min h a -\u003e b",
          "source": "src/Data-Edison-Coll-MinHeap.html#foldl%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll MinHeap",
          "module": "Data.Edison.Coll.MinHeap",
          "name": "foldl'",
          "normalized": "(a-\u003eb-\u003ea)-\u003ea-\u003eMin c b-\u003ea",
          "package": "EdisonCore",
          "signature": "(b-\u003ea-\u003eb)-\u003eb-\u003eMin h a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-MinHeap.html#v:foldl-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.MinHeap",
          "name": "foldl1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Min h a -\u003e a",
          "source": "src/Data-Edison-Coll-MinHeap.html#foldl1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll MinHeap",
          "module": "Data.Edison.Coll.MinHeap",
          "name": "foldl1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eMin b a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eMin h a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-MinHeap.html#v:foldl1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.MinHeap",
          "name": "foldl1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Min h a -\u003e a",
          "source": "src/Data-Edison-Coll-MinHeap.html#foldl1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll MinHeap",
          "module": "Data.Edison.Coll.MinHeap",
          "name": "foldl1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eMin b a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eMin h a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-MinHeap.html#v:foldl1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.MinHeap",
          "name": "foldr",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e Min h a -\u003e b",
          "source": "src/Data-Edison-Coll-MinHeap.html#foldr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll MinHeap",
          "module": "Data.Edison.Coll.MinHeap",
          "name": "foldr",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eMin c a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eMin h a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-MinHeap.html#v:foldr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.MinHeap",
          "name": "foldr'",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e Min h a -\u003e b",
          "source": "src/Data-Edison-Coll-MinHeap.html#foldr%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll MinHeap",
          "module": "Data.Edison.Coll.MinHeap",
          "name": "foldr'",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eMin c a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eMin h a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-MinHeap.html#v:foldr-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.MinHeap",
          "name": "foldr1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Min h a -\u003e a",
          "source": "src/Data-Edison-Coll-MinHeap.html#foldr1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll MinHeap",
          "module": "Data.Edison.Coll.MinHeap",
          "name": "foldr1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eMin b a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eMin h a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-MinHeap.html#v:foldr1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.MinHeap",
          "name": "foldr1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Min h a -\u003e a",
          "source": "src/Data-Edison-Coll-MinHeap.html#foldr1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll MinHeap",
          "module": "Data.Edison.Coll.MinHeap",
          "name": "foldr1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eMin b a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eMin h a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-MinHeap.html#v:foldr1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.MinHeap",
          "name": "fromColl",
          "package": "EdisonCore",
          "signature": "h -\u003e Min h a",
          "source": "src/Data-Edison-Coll-MinHeap.html#fromColl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll MinHeap",
          "module": "Data.Edison.Coll.MinHeap",
          "name": "fromColl",
          "normalized": "a-\u003eMin a b",
          "package": "EdisonCore",
          "partial": "Coll",
          "signature": "h-\u003eMin h a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-MinHeap.html#v:fromColl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.MinHeap",
          "name": "fromSeq",
          "package": "EdisonCore",
          "signature": "s a -\u003e Min h a",
          "source": "src/Data-Edison-Coll-MinHeap.html#fromSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll MinHeap",
          "module": "Data.Edison.Coll.MinHeap",
          "name": "fromSeq",
          "normalized": "a b-\u003eMin c b",
          "package": "EdisonCore",
          "partial": "Seq",
          "signature": "s a-\u003eMin h a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-MinHeap.html#v:fromSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.MinHeap",
          "name": "insert",
          "package": "EdisonCore",
          "signature": "a -\u003e Min h a -\u003e Min h a",
          "source": "src/Data-Edison-Coll-MinHeap.html#insert",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll MinHeap",
          "module": "Data.Edison.Coll.MinHeap",
          "name": "insert",
          "normalized": "a-\u003eMin b a-\u003eMin b a",
          "package": "EdisonCore",
          "signature": "a-\u003eMin h a-\u003eMin h a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-MinHeap.html#v:insert"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.MinHeap",
          "name": "insertSeq",
          "package": "EdisonCore",
          "signature": "s a -\u003e Min h a -\u003e Min h a",
          "source": "src/Data-Edison-Coll-MinHeap.html#insertSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll MinHeap",
          "module": "Data.Edison.Coll.MinHeap",
          "name": "insertSeq",
          "normalized": "a b-\u003eMin c b-\u003eMin c b",
          "package": "EdisonCore",
          "partial": "Seq",
          "signature": "s a-\u003eMin h a-\u003eMin h a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-MinHeap.html#v:insertSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.MinHeap",
          "name": "lookup",
          "package": "EdisonCore",
          "signature": "a -\u003e Min h a -\u003e a",
          "source": "src/Data-Edison-Coll-MinHeap.html#lookup",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll MinHeap",
          "module": "Data.Edison.Coll.MinHeap",
          "name": "lookup",
          "normalized": "a-\u003eMin b a-\u003ea",
          "package": "EdisonCore",
          "signature": "a-\u003eMin h a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-MinHeap.html#v:lookup"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.MinHeap",
          "name": "lookupAll",
          "package": "EdisonCore",
          "signature": "a -\u003e Min h a -\u003e s a",
          "source": "src/Data-Edison-Coll-MinHeap.html#lookupAll",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll MinHeap",
          "module": "Data.Edison.Coll.MinHeap",
          "name": "lookupAll",
          "normalized": "a-\u003eMin b a-\u003ec a",
          "package": "EdisonCore",
          "partial": "All",
          "signature": "a-\u003eMin h a-\u003es a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-MinHeap.html#v:lookupAll"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.MinHeap",
          "name": "lookupM",
          "package": "EdisonCore",
          "signature": "a -\u003e Min h a -\u003e m a",
          "source": "src/Data-Edison-Coll-MinHeap.html#lookupM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll MinHeap",
          "module": "Data.Edison.Coll.MinHeap",
          "name": "lookupM",
          "normalized": "a-\u003eMin b a-\u003ec a",
          "package": "EdisonCore",
          "signature": "a-\u003eMin h a-\u003em a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-MinHeap.html#v:lookupM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.MinHeap",
          "name": "lookupWithDefault",
          "package": "EdisonCore",
          "signature": "a -\u003e a -\u003e Min h a -\u003e a",
          "source": "src/Data-Edison-Coll-MinHeap.html#lookupWithDefault",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll MinHeap",
          "module": "Data.Edison.Coll.MinHeap",
          "name": "lookupWithDefault",
          "normalized": "a-\u003ea-\u003eMin b a-\u003ea",
          "package": "EdisonCore",
          "partial": "With Default",
          "signature": "a-\u003ea-\u003eMin h a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-MinHeap.html#v:lookupWithDefault"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.MinHeap",
          "name": "maxElem",
          "package": "EdisonCore",
          "signature": "Min h a -\u003e a",
          "source": "src/Data-Edison-Coll-MinHeap.html#maxElem",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll MinHeap",
          "module": "Data.Edison.Coll.MinHeap",
          "name": "maxElem",
          "normalized": "Min a b-\u003eb",
          "package": "EdisonCore",
          "partial": "Elem",
          "signature": "Min h a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-MinHeap.html#v:maxElem"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.MinHeap",
          "name": "maxView",
          "package": "EdisonCore",
          "signature": "Min h a -\u003e m (a, Min h a)",
          "source": "src/Data-Edison-Coll-MinHeap.html#maxView",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll MinHeap",
          "module": "Data.Edison.Coll.MinHeap",
          "name": "maxView",
          "normalized": "Min a b-\u003ec(b,Min a b)",
          "package": "EdisonCore",
          "partial": "View",
          "signature": "Min h a-\u003em(a,Min h a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-MinHeap.html#v:maxView"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.MinHeap",
          "name": "member",
          "package": "EdisonCore",
          "signature": "a -\u003e Min h a -\u003e Bool",
          "source": "src/Data-Edison-Coll-MinHeap.html#member",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll MinHeap",
          "module": "Data.Edison.Coll.MinHeap",
          "name": "member",
          "normalized": "a-\u003eMin b a-\u003eBool",
          "package": "EdisonCore",
          "signature": "a-\u003eMin h a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-MinHeap.html#v:member"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.MinHeap",
          "name": "minElem",
          "package": "EdisonCore",
          "signature": "Min h a -\u003e a",
          "source": "src/Data-Edison-Coll-MinHeap.html#minElem",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll MinHeap",
          "module": "Data.Edison.Coll.MinHeap",
          "name": "minElem",
          "normalized": "Min a b-\u003eb",
          "package": "EdisonCore",
          "partial": "Elem",
          "signature": "Min h a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-MinHeap.html#v:minElem"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.MinHeap",
          "name": "minView",
          "package": "EdisonCore",
          "signature": "Min h a -\u003e m (a, Min h a)",
          "source": "src/Data-Edison-Coll-MinHeap.html#minView",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll MinHeap",
          "module": "Data.Edison.Coll.MinHeap",
          "name": "minView",
          "normalized": "Min a b-\u003ec(b,Min a b)",
          "package": "EdisonCore",
          "partial": "View",
          "signature": "Min h a-\u003em(a,Min h a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-MinHeap.html#v:minView"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.MinHeap",
          "name": "moduleName",
          "package": "EdisonCore",
          "signature": "String",
          "source": "src/Data-Edison-Coll-MinHeap.html#moduleName",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll MinHeap",
          "module": "Data.Edison.Coll.MinHeap",
          "name": "moduleName",
          "package": "EdisonCore",
          "partial": "Name",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-MinHeap.html#v:moduleName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.MinHeap",
          "name": "null",
          "package": "EdisonCore",
          "signature": "Min h a -\u003e Bool",
          "source": "src/Data-Edison-Coll-MinHeap.html#null",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll MinHeap",
          "module": "Data.Edison.Coll.MinHeap",
          "name": "null",
          "normalized": "Min a b-\u003eBool",
          "package": "EdisonCore",
          "signature": "Min h a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-MinHeap.html#v:null"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.MinHeap",
          "name": "partition",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e Min h a -\u003e (Min h a, Min h a)",
          "source": "src/Data-Edison-Coll-MinHeap.html#partition",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll MinHeap",
          "module": "Data.Edison.Coll.MinHeap",
          "name": "partition",
          "normalized": "(a-\u003eBool)-\u003eMin b a-\u003e(Min b a,Min b a)",
          "package": "EdisonCore",
          "signature": "(a-\u003eBool)-\u003eMin h a-\u003e(Min h a,Min h a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-MinHeap.html#v:partition"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.MinHeap",
          "name": "partitionLE_GT",
          "package": "EdisonCore",
          "signature": "a -\u003e Min h a -\u003e (Min h a, Min h a)",
          "source": "src/Data-Edison-Coll-MinHeap.html#partitionLE_GT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll MinHeap",
          "module": "Data.Edison.Coll.MinHeap",
          "name": "partitionLE_GT",
          "normalized": "a-\u003eMin b a-\u003e(Min b a,Min b a)",
          "package": "EdisonCore",
          "partial": "LE GT",
          "signature": "a-\u003eMin h a-\u003e(Min h a,Min h a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-MinHeap.html#v:partitionLE_GT"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.MinHeap",
          "name": "partitionLT_GE",
          "package": "EdisonCore",
          "signature": "a -\u003e Min h a -\u003e (Min h a, Min h a)",
          "source": "src/Data-Edison-Coll-MinHeap.html#partitionLT_GE",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll MinHeap",
          "module": "Data.Edison.Coll.MinHeap",
          "name": "partitionLT_GE",
          "normalized": "a-\u003eMin b a-\u003e(Min b a,Min b a)",
          "package": "EdisonCore",
          "partial": "LT GE",
          "signature": "a-\u003eMin h a-\u003e(Min h a,Min h a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-MinHeap.html#v:partitionLT_GE"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.MinHeap",
          "name": "partitionLT_GT",
          "package": "EdisonCore",
          "signature": "a -\u003e Min h a -\u003e (Min h a, Min h a)",
          "source": "src/Data-Edison-Coll-MinHeap.html#partitionLT_GT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll MinHeap",
          "module": "Data.Edison.Coll.MinHeap",
          "name": "partitionLT_GT",
          "normalized": "a-\u003eMin b a-\u003e(Min b a,Min b a)",
          "package": "EdisonCore",
          "partial": "LT GT",
          "signature": "a-\u003eMin h a-\u003e(Min h a,Min h a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-MinHeap.html#v:partitionLT_GT"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.MinHeap",
          "name": "singleton",
          "package": "EdisonCore",
          "signature": "a -\u003e Min h a",
          "source": "src/Data-Edison-Coll-MinHeap.html#singleton",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll MinHeap",
          "module": "Data.Edison.Coll.MinHeap",
          "name": "singleton",
          "normalized": "a-\u003eMin b a",
          "package": "EdisonCore",
          "signature": "a-\u003eMin h a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-MinHeap.html#v:singleton"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.MinHeap",
          "name": "size",
          "package": "EdisonCore",
          "signature": "Min h a -\u003e Int",
          "source": "src/Data-Edison-Coll-MinHeap.html#size",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll MinHeap",
          "module": "Data.Edison.Coll.MinHeap",
          "name": "size",
          "normalized": "Min a b-\u003eInt",
          "package": "EdisonCore",
          "signature": "Min h a-\u003eInt",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-MinHeap.html#v:size"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.MinHeap",
          "name": "strict",
          "package": "EdisonCore",
          "signature": "Min h a -\u003e Min h a",
          "source": "src/Data-Edison-Coll-MinHeap.html#strict",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll MinHeap",
          "module": "Data.Edison.Coll.MinHeap",
          "name": "strict",
          "normalized": "Min a b-\u003eMin a b",
          "package": "EdisonCore",
          "signature": "Min h a-\u003eMin h a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-MinHeap.html#v:strict"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.MinHeap",
          "name": "strictWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e b) -\u003e Min h a -\u003e Min h a",
          "source": "src/Data-Edison-Coll-MinHeap.html#strictWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll MinHeap",
          "module": "Data.Edison.Coll.MinHeap",
          "name": "strictWith",
          "normalized": "(a-\u003eb)-\u003eMin c a-\u003eMin c a",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003eb)-\u003eMin h a-\u003eMin h a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-MinHeap.html#v:strictWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.MinHeap",
          "name": "structuralInvariant",
          "package": "EdisonCore",
          "signature": "Min h a -\u003e Bool",
          "source": "src/Data-Edison-Coll-MinHeap.html#structuralInvariant",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll MinHeap",
          "module": "Data.Edison.Coll.MinHeap",
          "name": "structuralInvariant",
          "normalized": "Min a b-\u003eBool",
          "package": "EdisonCore",
          "partial": "Invariant",
          "signature": "Min h a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-MinHeap.html#v:structuralInvariant"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.MinHeap",
          "name": "toColl",
          "package": "EdisonCore",
          "signature": "Min h a -\u003e h",
          "source": "src/Data-Edison-Coll-MinHeap.html#toColl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll MinHeap",
          "module": "Data.Edison.Coll.MinHeap",
          "name": "toColl",
          "normalized": "Min a b-\u003ea",
          "package": "EdisonCore",
          "partial": "Coll",
          "signature": "Min h a-\u003eh",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-MinHeap.html#v:toColl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.MinHeap",
          "name": "toOrdSeq",
          "package": "EdisonCore",
          "signature": "Min h a -\u003e s a",
          "source": "src/Data-Edison-Coll-MinHeap.html#toOrdSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll MinHeap",
          "module": "Data.Edison.Coll.MinHeap",
          "name": "toOrdSeq",
          "normalized": "Min a b-\u003ec b",
          "package": "EdisonCore",
          "partial": "Ord Seq",
          "signature": "Min h a-\u003es a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-MinHeap.html#v:toOrdSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.MinHeap",
          "name": "toSeq",
          "package": "EdisonCore",
          "signature": "Min h a -\u003e s a",
          "source": "src/Data-Edison-Coll-MinHeap.html#toSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll MinHeap",
          "module": "Data.Edison.Coll.MinHeap",
          "name": "toSeq",
          "normalized": "Min a b-\u003ec b",
          "package": "EdisonCore",
          "partial": "Seq",
          "signature": "Min h a-\u003es a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-MinHeap.html#v:toSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.MinHeap",
          "name": "union",
          "package": "EdisonCore",
          "signature": "Min h a -\u003e Min h a -\u003e Min h a",
          "source": "src/Data-Edison-Coll-MinHeap.html#union",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll MinHeap",
          "module": "Data.Edison.Coll.MinHeap",
          "name": "union",
          "normalized": "Min a b-\u003eMin a b-\u003eMin a b",
          "package": "EdisonCore",
          "signature": "Min h a-\u003eMin h a-\u003eMin h a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-MinHeap.html#v:union"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.MinHeap",
          "name": "unionSeq",
          "package": "EdisonCore",
          "signature": "s (Min h a) -\u003e Min h a",
          "source": "src/Data-Edison-Coll-MinHeap.html#unionSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll MinHeap",
          "module": "Data.Edison.Coll.MinHeap",
          "name": "unionSeq",
          "normalized": "a(Min b c)-\u003eMin b c",
          "package": "EdisonCore",
          "partial": "Seq",
          "signature": "s(Min h a)-\u003eMin h a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-MinHeap.html#v:unionSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.MinHeap",
          "name": "unsafeAppend",
          "package": "EdisonCore",
          "signature": "Min h a -\u003e Min h a -\u003e Min h a",
          "source": "src/Data-Edison-Coll-MinHeap.html#unsafeAppend",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll MinHeap",
          "module": "Data.Edison.Coll.MinHeap",
          "name": "unsafeAppend",
          "normalized": "Min a b-\u003eMin a b-\u003eMin a b",
          "package": "EdisonCore",
          "partial": "Append",
          "signature": "Min h a-\u003eMin h a-\u003eMin h a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-MinHeap.html#v:unsafeAppend"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.MinHeap",
          "name": "unsafeFromOrdSeq",
          "package": "EdisonCore",
          "signature": "s a -\u003e Min h a",
          "source": "src/Data-Edison-Coll-MinHeap.html#unsafeFromOrdSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll MinHeap",
          "module": "Data.Edison.Coll.MinHeap",
          "name": "unsafeFromOrdSeq",
          "normalized": "a b-\u003eMin c b",
          "package": "EdisonCore",
          "partial": "From Ord Seq",
          "signature": "s a-\u003eMin h a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-MinHeap.html#v:unsafeFromOrdSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.MinHeap",
          "name": "unsafeInsertMax",
          "package": "EdisonCore",
          "signature": "a -\u003e Min h a -\u003e Min h a",
          "source": "src/Data-Edison-Coll-MinHeap.html#unsafeInsertMax",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll MinHeap",
          "module": "Data.Edison.Coll.MinHeap",
          "name": "unsafeInsertMax",
          "normalized": "a-\u003eMin b a-\u003eMin b a",
          "package": "EdisonCore",
          "partial": "Insert Max",
          "signature": "a-\u003eMin h a-\u003eMin h a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-MinHeap.html#v:unsafeInsertMax"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.MinHeap",
          "name": "unsafeInsertMin",
          "package": "EdisonCore",
          "signature": "a -\u003e Min h a -\u003e Min h a",
          "source": "src/Data-Edison-Coll-MinHeap.html#unsafeInsertMin",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll MinHeap",
          "module": "Data.Edison.Coll.MinHeap",
          "name": "unsafeInsertMin",
          "normalized": "a-\u003eMin b a-\u003eMin b a",
          "package": "EdisonCore",
          "partial": "Insert Min",
          "signature": "a-\u003eMin h a-\u003eMin h a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-MinHeap.html#v:unsafeInsertMin"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.MinHeap",
          "name": "unsafeMapMonotonic",
          "package": "EdisonCore",
          "signature": "(a -\u003e a) -\u003e Min h a -\u003e Min h a",
          "source": "src/Data-Edison-Coll-MinHeap.html#unsafeMapMonotonic",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll MinHeap",
          "module": "Data.Edison.Coll.MinHeap",
          "name": "unsafeMapMonotonic",
          "normalized": "(a-\u003ea)-\u003eMin b a-\u003eMin b a",
          "package": "EdisonCore",
          "partial": "Map Monotonic",
          "signature": "(a-\u003ea)-\u003eMin h a-\u003eMin h a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-MinHeap.html#v:unsafeMapMonotonic"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eSkew heaps.\n\u003c/p\u003e\u003cp\u003e\u003cem\u003eReferences:\u003c/em\u003e\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e Daniel Sleator and Robert Tarjan. \"Self-Adjusting Heaps\".\n   \u003cem\u003eSIAM Journal on Computing\u003c/em\u003e, 15(1):52-69, February 1986.\n\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e",
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "SkewHeap",
          "package": "EdisonCore",
          "source": "src/Data-Edison-Coll-SkewHeap.html",
          "type": "module"
        },
        "index": {
          "description": "Skew heaps References Daniel Sleator and Robert Tarjan Self-Adjusting Heaps SIAM Journal on Computing February",
          "hierarchy": "Data Edison Coll SkewHeap",
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "SkewHeap",
          "package": "EdisonCore",
          "partial": "Skew Heap",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SkewHeap.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "Heap",
          "package": "EdisonCore",
          "source": "src/Data-Edison-Coll-SkewHeap.html#Heap",
          "type": "data"
        },
        "index": {
          "hierarchy": "Data Edison Coll SkewHeap",
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "Heap",
          "package": "EdisonCore",
          "partial": "Heap",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SkewHeap.html#t:Heap"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "count",
          "package": "EdisonCore",
          "signature": "a -\u003e Heap a -\u003e Int",
          "source": "src/Data-Edison-Coll-SkewHeap.html#count",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SkewHeap",
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "count",
          "normalized": "a-\u003eHeap a-\u003eInt",
          "package": "EdisonCore",
          "signature": "a-\u003eHeap a-\u003eInt",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SkewHeap.html#v:count"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "delete",
          "package": "EdisonCore",
          "signature": "a -\u003e Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-SkewHeap.html#delete",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SkewHeap",
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "delete",
          "normalized": "a-\u003eHeap a-\u003eHeap a",
          "package": "EdisonCore",
          "signature": "a-\u003eHeap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SkewHeap.html#v:delete"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "deleteAll",
          "package": "EdisonCore",
          "signature": "a -\u003e Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-SkewHeap.html#deleteAll",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SkewHeap",
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "deleteAll",
          "normalized": "a-\u003eHeap a-\u003eHeap a",
          "package": "EdisonCore",
          "partial": "All",
          "signature": "a-\u003eHeap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SkewHeap.html#v:deleteAll"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "deleteMax",
          "package": "EdisonCore",
          "signature": "Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-SkewHeap.html#deleteMax",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SkewHeap",
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "deleteMax",
          "normalized": "Heap a-\u003eHeap a",
          "package": "EdisonCore",
          "partial": "Max",
          "signature": "Heap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SkewHeap.html#v:deleteMax"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "deleteMin",
          "package": "EdisonCore",
          "signature": "Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-SkewHeap.html#deleteMin",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SkewHeap",
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "deleteMin",
          "normalized": "Heap a-\u003eHeap a",
          "package": "EdisonCore",
          "partial": "Min",
          "signature": "Heap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SkewHeap.html#v:deleteMin"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "deleteSeq",
          "package": "EdisonCore",
          "signature": "seq a -\u003e Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-SkewHeap.html#deleteSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SkewHeap",
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "deleteSeq",
          "normalized": "a b-\u003eHeap b-\u003eHeap b",
          "package": "EdisonCore",
          "partial": "Seq",
          "signature": "seq a-\u003eHeap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SkewHeap.html#v:deleteSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "empty",
          "package": "EdisonCore",
          "signature": "Heap a",
          "source": "src/Data-Edison-Coll-SkewHeap.html#empty",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SkewHeap",
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "empty",
          "package": "EdisonCore",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SkewHeap.html#v:empty"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "filter",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-SkewHeap.html#filter",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SkewHeap",
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "filter",
          "normalized": "(a-\u003eBool)-\u003eHeap a-\u003eHeap a",
          "package": "EdisonCore",
          "signature": "(a-\u003eBool)-\u003eHeap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SkewHeap.html#v:filter"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "filterGE",
          "package": "EdisonCore",
          "signature": "a -\u003e Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-SkewHeap.html#filterGE",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SkewHeap",
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "filterGE",
          "normalized": "a-\u003eHeap a-\u003eHeap a",
          "package": "EdisonCore",
          "partial": "GE",
          "signature": "a-\u003eHeap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SkewHeap.html#v:filterGE"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "filterGT",
          "package": "EdisonCore",
          "signature": "a -\u003e Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-SkewHeap.html#filterGT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SkewHeap",
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "filterGT",
          "normalized": "a-\u003eHeap a-\u003eHeap a",
          "package": "EdisonCore",
          "partial": "GT",
          "signature": "a-\u003eHeap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SkewHeap.html#v:filterGT"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "filterLE",
          "package": "EdisonCore",
          "signature": "a -\u003e Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-SkewHeap.html#filterLE",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SkewHeap",
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "filterLE",
          "normalized": "a-\u003eHeap a-\u003eHeap a",
          "package": "EdisonCore",
          "partial": "LE",
          "signature": "a-\u003eHeap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SkewHeap.html#v:filterLE"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "filterLT",
          "package": "EdisonCore",
          "signature": "a -\u003e Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-SkewHeap.html#filterLT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SkewHeap",
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "filterLT",
          "normalized": "a-\u003eHeap a-\u003eHeap a",
          "package": "EdisonCore",
          "partial": "LT",
          "signature": "a-\u003eHeap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SkewHeap.html#v:filterLT"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "fold",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e Heap a -\u003e b",
          "source": "src/Data-Edison-Coll-SkewHeap.html#fold",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SkewHeap",
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "fold",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eHeap a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eHeap a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SkewHeap.html#v:fold"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "fold'",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e Heap a -\u003e b",
          "source": "src/Data-Edison-Coll-SkewHeap.html#fold%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SkewHeap",
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "fold'",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eHeap a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eHeap a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SkewHeap.html#v:fold-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "fold1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Heap a -\u003e a",
          "source": "src/Data-Edison-Coll-SkewHeap.html#fold1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SkewHeap",
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "fold1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eHeap a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eHeap a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SkewHeap.html#v:fold1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "fold1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Heap a -\u003e a",
          "source": "src/Data-Edison-Coll-SkewHeap.html#fold1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SkewHeap",
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "fold1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eHeap a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eHeap a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SkewHeap.html#v:fold1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "foldl",
          "package": "EdisonCore",
          "signature": "(b -\u003e a -\u003e b) -\u003e b -\u003e Heap a -\u003e b",
          "source": "src/Data-Edison-Coll-SkewHeap.html#foldl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SkewHeap",
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "foldl",
          "normalized": "(a-\u003eb-\u003ea)-\u003ea-\u003eHeap b-\u003ea",
          "package": "EdisonCore",
          "signature": "(b-\u003ea-\u003eb)-\u003eb-\u003eHeap a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SkewHeap.html#v:foldl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "foldl'",
          "package": "EdisonCore",
          "signature": "(b -\u003e a -\u003e b) -\u003e b -\u003e Heap a -\u003e b",
          "source": "src/Data-Edison-Coll-SkewHeap.html#foldl%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SkewHeap",
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "foldl'",
          "normalized": "(a-\u003eb-\u003ea)-\u003ea-\u003eHeap b-\u003ea",
          "package": "EdisonCore",
          "signature": "(b-\u003ea-\u003eb)-\u003eb-\u003eHeap a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SkewHeap.html#v:foldl-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "foldl1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Heap a -\u003e a",
          "source": "src/Data-Edison-Coll-SkewHeap.html#foldl1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SkewHeap",
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "foldl1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eHeap a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eHeap a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SkewHeap.html#v:foldl1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "foldl1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Heap a -\u003e a",
          "source": "src/Data-Edison-Coll-SkewHeap.html#foldl1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SkewHeap",
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "foldl1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eHeap a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eHeap a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SkewHeap.html#v:foldl1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "foldr",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e Heap a -\u003e b",
          "source": "src/Data-Edison-Coll-SkewHeap.html#foldr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SkewHeap",
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "foldr",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eHeap a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eHeap a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SkewHeap.html#v:foldr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "foldr'",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e Heap a -\u003e b",
          "source": "src/Data-Edison-Coll-SkewHeap.html#foldr%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SkewHeap",
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "foldr'",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eHeap a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eHeap a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SkewHeap.html#v:foldr-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "foldr1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Heap a -\u003e a",
          "source": "src/Data-Edison-Coll-SkewHeap.html#foldr1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SkewHeap",
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "foldr1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eHeap a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eHeap a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SkewHeap.html#v:foldr1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "foldr1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Heap a -\u003e a",
          "source": "src/Data-Edison-Coll-SkewHeap.html#foldr1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SkewHeap",
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "foldr1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eHeap a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eHeap a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SkewHeap.html#v:foldr1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "fromSeq",
          "package": "EdisonCore",
          "signature": "seq a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-SkewHeap.html#fromSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SkewHeap",
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "fromSeq",
          "normalized": "a b-\u003eHeap b",
          "package": "EdisonCore",
          "partial": "Seq",
          "signature": "seq a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SkewHeap.html#v:fromSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "insert",
          "package": "EdisonCore",
          "signature": "a -\u003e Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-SkewHeap.html#insert",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SkewHeap",
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "insert",
          "normalized": "a-\u003eHeap a-\u003eHeap a",
          "package": "EdisonCore",
          "signature": "a-\u003eHeap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SkewHeap.html#v:insert"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "insertSeq",
          "package": "EdisonCore",
          "signature": "seq a -\u003e Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-SkewHeap.html#insertSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SkewHeap",
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "insertSeq",
          "normalized": "a b-\u003eHeap b-\u003eHeap b",
          "package": "EdisonCore",
          "partial": "Seq",
          "signature": "seq a-\u003eHeap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SkewHeap.html#v:insertSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "lookup",
          "package": "EdisonCore",
          "signature": "a -\u003e Heap a -\u003e a",
          "source": "src/Data-Edison-Coll-SkewHeap.html#lookup",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SkewHeap",
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "lookup",
          "normalized": "a-\u003eHeap a-\u003ea",
          "package": "EdisonCore",
          "signature": "a-\u003eHeap a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SkewHeap.html#v:lookup"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "lookupAll",
          "package": "EdisonCore",
          "signature": "a -\u003e Heap a -\u003e seq a",
          "source": "src/Data-Edison-Coll-SkewHeap.html#lookupAll",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SkewHeap",
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "lookupAll",
          "normalized": "a-\u003eHeap a-\u003eb a",
          "package": "EdisonCore",
          "partial": "All",
          "signature": "a-\u003eHeap a-\u003eseq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SkewHeap.html#v:lookupAll"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "lookupM",
          "package": "EdisonCore",
          "signature": "a -\u003e Heap a -\u003e m a",
          "source": "src/Data-Edison-Coll-SkewHeap.html#lookupM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SkewHeap",
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "lookupM",
          "normalized": "a-\u003eHeap a-\u003eb a",
          "package": "EdisonCore",
          "signature": "a-\u003eHeap a-\u003em a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SkewHeap.html#v:lookupM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "lookupWithDefault",
          "package": "EdisonCore",
          "signature": "a -\u003e a -\u003e Heap a -\u003e a",
          "source": "src/Data-Edison-Coll-SkewHeap.html#lookupWithDefault",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SkewHeap",
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "lookupWithDefault",
          "normalized": "a-\u003ea-\u003eHeap a-\u003ea",
          "package": "EdisonCore",
          "partial": "With Default",
          "signature": "a-\u003ea-\u003eHeap a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SkewHeap.html#v:lookupWithDefault"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "maxElem",
          "package": "EdisonCore",
          "signature": "Heap a -\u003e a",
          "source": "src/Data-Edison-Coll-SkewHeap.html#maxElem",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SkewHeap",
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "maxElem",
          "normalized": "Heap a-\u003ea",
          "package": "EdisonCore",
          "partial": "Elem",
          "signature": "Heap a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SkewHeap.html#v:maxElem"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "maxView",
          "package": "EdisonCore",
          "signature": "Heap a -\u003e m (a, Heap a)",
          "source": "src/Data-Edison-Coll-SkewHeap.html#maxView",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SkewHeap",
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "maxView",
          "normalized": "Heap a-\u003eb(a,Heap a)",
          "package": "EdisonCore",
          "partial": "View",
          "signature": "Heap a-\u003em(a,Heap a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SkewHeap.html#v:maxView"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "member",
          "package": "EdisonCore",
          "signature": "a -\u003e Heap a -\u003e Bool",
          "source": "src/Data-Edison-Coll-SkewHeap.html#member",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SkewHeap",
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "member",
          "normalized": "a-\u003eHeap a-\u003eBool",
          "package": "EdisonCore",
          "signature": "a-\u003eHeap a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SkewHeap.html#v:member"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "minElem",
          "package": "EdisonCore",
          "signature": "Heap a -\u003e a",
          "source": "src/Data-Edison-Coll-SkewHeap.html#minElem",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SkewHeap",
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "minElem",
          "normalized": "Heap a-\u003ea",
          "package": "EdisonCore",
          "partial": "Elem",
          "signature": "Heap a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SkewHeap.html#v:minElem"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "minView",
          "package": "EdisonCore",
          "signature": "Heap a -\u003e m (a, Heap a)",
          "source": "src/Data-Edison-Coll-SkewHeap.html#minView",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SkewHeap",
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "minView",
          "normalized": "Heap a-\u003eb(a,Heap a)",
          "package": "EdisonCore",
          "partial": "View",
          "signature": "Heap a-\u003em(a,Heap a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SkewHeap.html#v:minView"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "moduleName",
          "package": "EdisonCore",
          "signature": "String",
          "source": "src/Data-Edison-Coll-SkewHeap.html#moduleName",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SkewHeap",
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "moduleName",
          "package": "EdisonCore",
          "partial": "Name",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SkewHeap.html#v:moduleName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "null",
          "package": "EdisonCore",
          "signature": "Heap a -\u003e Bool",
          "source": "src/Data-Edison-Coll-SkewHeap.html#null",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SkewHeap",
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "null",
          "normalized": "Heap a-\u003eBool",
          "package": "EdisonCore",
          "signature": "Heap a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SkewHeap.html#v:null"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "partition",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e Heap a -\u003e (Heap a, Heap a)",
          "source": "src/Data-Edison-Coll-SkewHeap.html#partition",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SkewHeap",
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "partition",
          "normalized": "(a-\u003eBool)-\u003eHeap a-\u003e(Heap a,Heap a)",
          "package": "EdisonCore",
          "signature": "(a-\u003eBool)-\u003eHeap a-\u003e(Heap a,Heap a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SkewHeap.html#v:partition"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "partitionLE_GT",
          "package": "EdisonCore",
          "signature": "a -\u003e Heap a -\u003e (Heap a, Heap a)",
          "source": "src/Data-Edison-Coll-SkewHeap.html#partitionLE_GT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SkewHeap",
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "partitionLE_GT",
          "normalized": "a-\u003eHeap a-\u003e(Heap a,Heap a)",
          "package": "EdisonCore",
          "partial": "LE GT",
          "signature": "a-\u003eHeap a-\u003e(Heap a,Heap a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SkewHeap.html#v:partitionLE_GT"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "partitionLT_GE",
          "package": "EdisonCore",
          "signature": "a -\u003e Heap a -\u003e (Heap a, Heap a)",
          "source": "src/Data-Edison-Coll-SkewHeap.html#partitionLT_GE",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SkewHeap",
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "partitionLT_GE",
          "normalized": "a-\u003eHeap a-\u003e(Heap a,Heap a)",
          "package": "EdisonCore",
          "partial": "LT GE",
          "signature": "a-\u003eHeap a-\u003e(Heap a,Heap a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SkewHeap.html#v:partitionLT_GE"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "partitionLT_GT",
          "package": "EdisonCore",
          "signature": "a -\u003e Heap a -\u003e (Heap a, Heap a)",
          "source": "src/Data-Edison-Coll-SkewHeap.html#partitionLT_GT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SkewHeap",
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "partitionLT_GT",
          "normalized": "a-\u003eHeap a-\u003e(Heap a,Heap a)",
          "package": "EdisonCore",
          "partial": "LT GT",
          "signature": "a-\u003eHeap a-\u003e(Heap a,Heap a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SkewHeap.html#v:partitionLT_GT"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "singleton",
          "package": "EdisonCore",
          "signature": "a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-SkewHeap.html#singleton",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SkewHeap",
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "singleton",
          "normalized": "a-\u003eHeap a",
          "package": "EdisonCore",
          "signature": "a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SkewHeap.html#v:singleton"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "size",
          "package": "EdisonCore",
          "signature": "Heap a -\u003e Int",
          "source": "src/Data-Edison-Coll-SkewHeap.html#size",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SkewHeap",
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "size",
          "normalized": "Heap a-\u003eInt",
          "package": "EdisonCore",
          "signature": "Heap a-\u003eInt",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SkewHeap.html#v:size"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "strict",
          "package": "EdisonCore",
          "signature": "Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-SkewHeap.html#strict",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SkewHeap",
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "strict",
          "normalized": "Heap a-\u003eHeap a",
          "package": "EdisonCore",
          "signature": "Heap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SkewHeap.html#v:strict"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "strictWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e b) -\u003e Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-SkewHeap.html#strictWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SkewHeap",
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "strictWith",
          "normalized": "(a-\u003eb)-\u003eHeap a-\u003eHeap a",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003eb)-\u003eHeap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SkewHeap.html#v:strictWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "structuralInvariant",
          "package": "EdisonCore",
          "signature": "Heap a -\u003e Bool",
          "source": "src/Data-Edison-Coll-SkewHeap.html#structuralInvariant",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SkewHeap",
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "structuralInvariant",
          "normalized": "Heap a-\u003eBool",
          "package": "EdisonCore",
          "partial": "Invariant",
          "signature": "Heap a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SkewHeap.html#v:structuralInvariant"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "toOrdSeq",
          "package": "EdisonCore",
          "signature": "Heap a -\u003e seq a",
          "source": "src/Data-Edison-Coll-SkewHeap.html#toOrdSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SkewHeap",
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "toOrdSeq",
          "normalized": "Heap a-\u003eb a",
          "package": "EdisonCore",
          "partial": "Ord Seq",
          "signature": "Heap a-\u003eseq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SkewHeap.html#v:toOrdSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "toSeq",
          "package": "EdisonCore",
          "signature": "Heap a -\u003e seq a",
          "source": "src/Data-Edison-Coll-SkewHeap.html#toSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SkewHeap",
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "toSeq",
          "normalized": "Heap a-\u003eb a",
          "package": "EdisonCore",
          "partial": "Seq",
          "signature": "Heap a-\u003eseq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SkewHeap.html#v:toSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "union",
          "package": "EdisonCore",
          "signature": "Heap a -\u003e Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-SkewHeap.html#union",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SkewHeap",
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "union",
          "normalized": "Heap a-\u003eHeap a-\u003eHeap a",
          "package": "EdisonCore",
          "signature": "Heap a-\u003eHeap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SkewHeap.html#v:union"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "unionSeq",
          "package": "EdisonCore",
          "signature": "seq (Heap a) -\u003e Heap a",
          "source": "src/Data-Edison-Coll-SkewHeap.html#unionSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SkewHeap",
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "unionSeq",
          "normalized": "a(Heap b)-\u003eHeap b",
          "package": "EdisonCore",
          "partial": "Seq",
          "signature": "seq(Heap a)-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SkewHeap.html#v:unionSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "unsafeAppend",
          "package": "EdisonCore",
          "signature": "Heap a -\u003e Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-SkewHeap.html#unsafeAppend",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SkewHeap",
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "unsafeAppend",
          "normalized": "Heap a-\u003eHeap a-\u003eHeap a",
          "package": "EdisonCore",
          "partial": "Append",
          "signature": "Heap a-\u003eHeap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SkewHeap.html#v:unsafeAppend"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "unsafeFromOrdSeq",
          "package": "EdisonCore",
          "signature": "seq a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-SkewHeap.html#unsafeFromOrdSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SkewHeap",
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "unsafeFromOrdSeq",
          "normalized": "a b-\u003eHeap b",
          "package": "EdisonCore",
          "partial": "From Ord Seq",
          "signature": "seq a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SkewHeap.html#v:unsafeFromOrdSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "unsafeInsertMax",
          "package": "EdisonCore",
          "signature": "a -\u003e Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-SkewHeap.html#unsafeInsertMax",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SkewHeap",
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "unsafeInsertMax",
          "normalized": "a-\u003eHeap a-\u003eHeap a",
          "package": "EdisonCore",
          "partial": "Insert Max",
          "signature": "a-\u003eHeap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SkewHeap.html#v:unsafeInsertMax"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "unsafeInsertMin",
          "package": "EdisonCore",
          "signature": "a -\u003e Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-SkewHeap.html#unsafeInsertMin",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SkewHeap",
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "unsafeInsertMin",
          "normalized": "a-\u003eHeap a-\u003eHeap a",
          "package": "EdisonCore",
          "partial": "Insert Min",
          "signature": "a-\u003eHeap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SkewHeap.html#v:unsafeInsertMin"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "unsafeMapMonotonic",
          "package": "EdisonCore",
          "signature": "(a -\u003e a) -\u003e Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-SkewHeap.html#unsafeMapMonotonic",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SkewHeap",
          "module": "Data.Edison.Coll.SkewHeap",
          "name": "unsafeMapMonotonic",
          "normalized": "(a-\u003ea)-\u003eHeap a-\u003eHeap a",
          "package": "EdisonCore",
          "partial": "Map Monotonic",
          "signature": "(a-\u003ea)-\u003eHeap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SkewHeap.html#v:unsafeMapMonotonic"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eSplay heaps.\n\u003c/p\u003e\u003cp\u003eIf \u003ccode\u003e\u003ca\u003eminElem\u003c/a\u003e\u003c/code\u003e is called frequently, then SplayHeap should\n   be used in conjunction with \u003ca\u003eData.Edison.Coll.MinHeap\u003c/a\u003e.\n\u003c/p\u003e\u003cp\u003e\u003cem\u003eReferences:\u003c/em\u003e\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e Chris Okasaki. \u003cem\u003ePurely Functional Data Structures\u003c/em\u003e. 1998.\n   Section 5.4.\n\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e",
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "SplayHeap",
          "package": "EdisonCore",
          "source": "src/Data-Edison-Coll-SplayHeap.html",
          "type": "module"
        },
        "index": {
          "description": "Splay heaps If minElem is called frequently then SplayHeap should be used in conjunction with Data.Edison.Coll.MinHeap References Chris Okasaki Purely Functional Data Structures Section",
          "hierarchy": "Data Edison Coll SplayHeap",
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "SplayHeap",
          "package": "EdisonCore",
          "partial": "Splay Heap",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SplayHeap.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "Heap",
          "package": "EdisonCore",
          "source": "src/Data-Edison-Coll-SplayHeap.html#Heap",
          "type": "data"
        },
        "index": {
          "hierarchy": "Data Edison Coll SplayHeap",
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "Heap",
          "package": "EdisonCore",
          "partial": "Heap",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SplayHeap.html#t:Heap"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "count",
          "package": "EdisonCore",
          "signature": "a -\u003e Heap a -\u003e Int",
          "source": "src/Data-Edison-Coll-SplayHeap.html#count",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SplayHeap",
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "count",
          "normalized": "a-\u003eHeap a-\u003eInt",
          "package": "EdisonCore",
          "signature": "a-\u003eHeap a-\u003eInt",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SplayHeap.html#v:count"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "delete",
          "package": "EdisonCore",
          "signature": "a -\u003e Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-SplayHeap.html#delete",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SplayHeap",
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "delete",
          "normalized": "a-\u003eHeap a-\u003eHeap a",
          "package": "EdisonCore",
          "signature": "a-\u003eHeap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SplayHeap.html#v:delete"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "deleteAll",
          "package": "EdisonCore",
          "signature": "a -\u003e Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-SplayHeap.html#deleteAll",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SplayHeap",
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "deleteAll",
          "normalized": "a-\u003eHeap a-\u003eHeap a",
          "package": "EdisonCore",
          "partial": "All",
          "signature": "a-\u003eHeap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SplayHeap.html#v:deleteAll"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "deleteMax",
          "package": "EdisonCore",
          "signature": "Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-SplayHeap.html#deleteMax",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SplayHeap",
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "deleteMax",
          "normalized": "Heap a-\u003eHeap a",
          "package": "EdisonCore",
          "partial": "Max",
          "signature": "Heap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SplayHeap.html#v:deleteMax"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "deleteMin",
          "package": "EdisonCore",
          "signature": "Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-SplayHeap.html#deleteMin",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SplayHeap",
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "deleteMin",
          "normalized": "Heap a-\u003eHeap a",
          "package": "EdisonCore",
          "partial": "Min",
          "signature": "Heap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SplayHeap.html#v:deleteMin"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "deleteSeq",
          "package": "EdisonCore",
          "signature": "s a -\u003e Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-SplayHeap.html#deleteSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SplayHeap",
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "deleteSeq",
          "normalized": "a b-\u003eHeap b-\u003eHeap b",
          "package": "EdisonCore",
          "partial": "Seq",
          "signature": "s a-\u003eHeap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SplayHeap.html#v:deleteSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "empty",
          "package": "EdisonCore",
          "signature": "Heap a",
          "source": "src/Data-Edison-Coll-SplayHeap.html#empty",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SplayHeap",
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "empty",
          "package": "EdisonCore",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SplayHeap.html#v:empty"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "filter",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-SplayHeap.html#filter",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SplayHeap",
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "filter",
          "normalized": "(a-\u003eBool)-\u003eHeap a-\u003eHeap a",
          "package": "EdisonCore",
          "signature": "(a-\u003eBool)-\u003eHeap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SplayHeap.html#v:filter"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "filterGE",
          "package": "EdisonCore",
          "signature": "a -\u003e Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-SplayHeap.html#filterGE",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SplayHeap",
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "filterGE",
          "normalized": "a-\u003eHeap a-\u003eHeap a",
          "package": "EdisonCore",
          "partial": "GE",
          "signature": "a-\u003eHeap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SplayHeap.html#v:filterGE"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "filterGT",
          "package": "EdisonCore",
          "signature": "a -\u003e Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-SplayHeap.html#filterGT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SplayHeap",
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "filterGT",
          "normalized": "a-\u003eHeap a-\u003eHeap a",
          "package": "EdisonCore",
          "partial": "GT",
          "signature": "a-\u003eHeap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SplayHeap.html#v:filterGT"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "filterLE",
          "package": "EdisonCore",
          "signature": "a -\u003e Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-SplayHeap.html#filterLE",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SplayHeap",
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "filterLE",
          "normalized": "a-\u003eHeap a-\u003eHeap a",
          "package": "EdisonCore",
          "partial": "LE",
          "signature": "a-\u003eHeap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SplayHeap.html#v:filterLE"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "filterLT",
          "package": "EdisonCore",
          "signature": "a -\u003e Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-SplayHeap.html#filterLT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SplayHeap",
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "filterLT",
          "normalized": "a-\u003eHeap a-\u003eHeap a",
          "package": "EdisonCore",
          "partial": "LT",
          "signature": "a-\u003eHeap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SplayHeap.html#v:filterLT"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "fold",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e Heap a -\u003e b",
          "source": "src/Data-Edison-Coll-SplayHeap.html#fold",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SplayHeap",
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "fold",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eHeap a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eHeap a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SplayHeap.html#v:fold"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "fold'",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e Heap a -\u003e b",
          "source": "src/Data-Edison-Coll-SplayHeap.html#fold%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SplayHeap",
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "fold'",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eHeap a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eHeap a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SplayHeap.html#v:fold-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "fold1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Heap a -\u003e a",
          "source": "src/Data-Edison-Coll-SplayHeap.html#fold1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SplayHeap",
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "fold1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eHeap a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eHeap a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SplayHeap.html#v:fold1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "fold1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Heap a -\u003e a",
          "source": "src/Data-Edison-Coll-SplayHeap.html#fold1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SplayHeap",
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "fold1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eHeap a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eHeap a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SplayHeap.html#v:fold1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "foldl",
          "package": "EdisonCore",
          "signature": "(b -\u003e a -\u003e b) -\u003e b -\u003e Heap a -\u003e b",
          "source": "src/Data-Edison-Coll-SplayHeap.html#foldl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SplayHeap",
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "foldl",
          "normalized": "(a-\u003eb-\u003ea)-\u003ea-\u003eHeap b-\u003ea",
          "package": "EdisonCore",
          "signature": "(b-\u003ea-\u003eb)-\u003eb-\u003eHeap a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SplayHeap.html#v:foldl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "foldl'",
          "package": "EdisonCore",
          "signature": "(b -\u003e a -\u003e b) -\u003e b -\u003e Heap a -\u003e b",
          "source": "src/Data-Edison-Coll-SplayHeap.html#foldl%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SplayHeap",
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "foldl'",
          "normalized": "(a-\u003eb-\u003ea)-\u003ea-\u003eHeap b-\u003ea",
          "package": "EdisonCore",
          "signature": "(b-\u003ea-\u003eb)-\u003eb-\u003eHeap a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SplayHeap.html#v:foldl-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "foldl1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Heap a -\u003e a",
          "source": "src/Data-Edison-Coll-SplayHeap.html#foldl1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SplayHeap",
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "foldl1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eHeap a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eHeap a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SplayHeap.html#v:foldl1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "foldl1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Heap a -\u003e a",
          "source": "src/Data-Edison-Coll-SplayHeap.html#foldl1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SplayHeap",
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "foldl1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eHeap a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eHeap a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SplayHeap.html#v:foldl1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "foldr",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e Heap a -\u003e b",
          "source": "src/Data-Edison-Coll-SplayHeap.html#foldr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SplayHeap",
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "foldr",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eHeap a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eHeap a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SplayHeap.html#v:foldr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "foldr'",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e Heap a -\u003e b",
          "source": "src/Data-Edison-Coll-SplayHeap.html#foldr%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SplayHeap",
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "foldr'",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eHeap a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eHeap a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SplayHeap.html#v:foldr-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "foldr1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Heap a -\u003e a",
          "source": "src/Data-Edison-Coll-SplayHeap.html#foldr1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SplayHeap",
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "foldr1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eHeap a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eHeap a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SplayHeap.html#v:foldr1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "foldr1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Heap a -\u003e a",
          "source": "src/Data-Edison-Coll-SplayHeap.html#foldr1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SplayHeap",
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "foldr1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eHeap a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eHeap a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SplayHeap.html#v:foldr1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "fromSeq",
          "package": "EdisonCore",
          "signature": "s a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-SplayHeap.html#fromSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SplayHeap",
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "fromSeq",
          "normalized": "a b-\u003eHeap b",
          "package": "EdisonCore",
          "partial": "Seq",
          "signature": "s a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SplayHeap.html#v:fromSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "insert",
          "package": "EdisonCore",
          "signature": "a -\u003e Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-SplayHeap.html#insert",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SplayHeap",
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "insert",
          "normalized": "a-\u003eHeap a-\u003eHeap a",
          "package": "EdisonCore",
          "signature": "a-\u003eHeap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SplayHeap.html#v:insert"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "insertSeq",
          "package": "EdisonCore",
          "signature": "s a -\u003e Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-SplayHeap.html#insertSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SplayHeap",
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "insertSeq",
          "normalized": "a b-\u003eHeap b-\u003eHeap b",
          "package": "EdisonCore",
          "partial": "Seq",
          "signature": "s a-\u003eHeap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SplayHeap.html#v:insertSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "lookup",
          "package": "EdisonCore",
          "signature": "a -\u003e Heap a -\u003e a",
          "source": "src/Data-Edison-Coll-SplayHeap.html#lookup",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SplayHeap",
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "lookup",
          "normalized": "a-\u003eHeap a-\u003ea",
          "package": "EdisonCore",
          "signature": "a-\u003eHeap a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SplayHeap.html#v:lookup"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "lookupAll",
          "package": "EdisonCore",
          "signature": "a -\u003e Heap a -\u003e s a",
          "source": "src/Data-Edison-Coll-SplayHeap.html#lookupAll",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SplayHeap",
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "lookupAll",
          "normalized": "a-\u003eHeap a-\u003eb a",
          "package": "EdisonCore",
          "partial": "All",
          "signature": "a-\u003eHeap a-\u003es a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SplayHeap.html#v:lookupAll"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "lookupM",
          "package": "EdisonCore",
          "signature": "a -\u003e Heap a -\u003e m a",
          "source": "src/Data-Edison-Coll-SplayHeap.html#lookupM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SplayHeap",
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "lookupM",
          "normalized": "a-\u003eHeap a-\u003eb a",
          "package": "EdisonCore",
          "signature": "a-\u003eHeap a-\u003em a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SplayHeap.html#v:lookupM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "lookupWithDefault",
          "package": "EdisonCore",
          "signature": "a -\u003e a -\u003e Heap a -\u003e a",
          "source": "src/Data-Edison-Coll-SplayHeap.html#lookupWithDefault",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SplayHeap",
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "lookupWithDefault",
          "normalized": "a-\u003ea-\u003eHeap a-\u003ea",
          "package": "EdisonCore",
          "partial": "With Default",
          "signature": "a-\u003ea-\u003eHeap a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SplayHeap.html#v:lookupWithDefault"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "maxElem",
          "package": "EdisonCore",
          "signature": "Heap a -\u003e a",
          "source": "src/Data-Edison-Coll-SplayHeap.html#maxElem",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SplayHeap",
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "maxElem",
          "normalized": "Heap a-\u003ea",
          "package": "EdisonCore",
          "partial": "Elem",
          "signature": "Heap a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SplayHeap.html#v:maxElem"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "maxView",
          "package": "EdisonCore",
          "signature": "Heap a -\u003e m (a, Heap a)",
          "source": "src/Data-Edison-Coll-SplayHeap.html#maxView",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SplayHeap",
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "maxView",
          "normalized": "Heap a-\u003eb(a,Heap a)",
          "package": "EdisonCore",
          "partial": "View",
          "signature": "Heap a-\u003em(a,Heap a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SplayHeap.html#v:maxView"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "member",
          "package": "EdisonCore",
          "signature": "a -\u003e Heap a -\u003e Bool",
          "source": "src/Data-Edison-Coll-SplayHeap.html#member",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SplayHeap",
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "member",
          "normalized": "a-\u003eHeap a-\u003eBool",
          "package": "EdisonCore",
          "signature": "a-\u003eHeap a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SplayHeap.html#v:member"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "minElem",
          "package": "EdisonCore",
          "signature": "Heap a -\u003e a",
          "source": "src/Data-Edison-Coll-SplayHeap.html#minElem",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SplayHeap",
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "minElem",
          "normalized": "Heap a-\u003ea",
          "package": "EdisonCore",
          "partial": "Elem",
          "signature": "Heap a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SplayHeap.html#v:minElem"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "minView",
          "package": "EdisonCore",
          "signature": "Heap a -\u003e m (a, Heap a)",
          "source": "src/Data-Edison-Coll-SplayHeap.html#minView",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SplayHeap",
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "minView",
          "normalized": "Heap a-\u003eb(a,Heap a)",
          "package": "EdisonCore",
          "partial": "View",
          "signature": "Heap a-\u003em(a,Heap a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SplayHeap.html#v:minView"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "moduleName",
          "package": "EdisonCore",
          "signature": "String",
          "source": "src/Data-Edison-Coll-SplayHeap.html#moduleName",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SplayHeap",
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "moduleName",
          "package": "EdisonCore",
          "partial": "Name",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SplayHeap.html#v:moduleName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "null",
          "package": "EdisonCore",
          "signature": "Heap a -\u003e Bool",
          "source": "src/Data-Edison-Coll-SplayHeap.html#null",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SplayHeap",
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "null",
          "normalized": "Heap a-\u003eBool",
          "package": "EdisonCore",
          "signature": "Heap a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SplayHeap.html#v:null"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "partition",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e Heap a -\u003e (Heap a, Heap a)",
          "source": "src/Data-Edison-Coll-SplayHeap.html#partition",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SplayHeap",
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "partition",
          "normalized": "(a-\u003eBool)-\u003eHeap a-\u003e(Heap a,Heap a)",
          "package": "EdisonCore",
          "signature": "(a-\u003eBool)-\u003eHeap a-\u003e(Heap a,Heap a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SplayHeap.html#v:partition"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "partitionLE_GT",
          "package": "EdisonCore",
          "signature": "a -\u003e Heap a -\u003e (Heap a, Heap a)",
          "source": "src/Data-Edison-Coll-SplayHeap.html#partitionLE_GT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SplayHeap",
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "partitionLE_GT",
          "normalized": "a-\u003eHeap a-\u003e(Heap a,Heap a)",
          "package": "EdisonCore",
          "partial": "LE GT",
          "signature": "a-\u003eHeap a-\u003e(Heap a,Heap a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SplayHeap.html#v:partitionLE_GT"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "partitionLT_GE",
          "package": "EdisonCore",
          "signature": "a -\u003e Heap a -\u003e (Heap a, Heap a)",
          "source": "src/Data-Edison-Coll-SplayHeap.html#partitionLT_GE",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SplayHeap",
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "partitionLT_GE",
          "normalized": "a-\u003eHeap a-\u003e(Heap a,Heap a)",
          "package": "EdisonCore",
          "partial": "LT GE",
          "signature": "a-\u003eHeap a-\u003e(Heap a,Heap a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SplayHeap.html#v:partitionLT_GE"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "partitionLT_GT",
          "package": "EdisonCore",
          "signature": "a -\u003e Heap a -\u003e (Heap a, Heap a)",
          "source": "src/Data-Edison-Coll-SplayHeap.html#partitionLT_GT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SplayHeap",
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "partitionLT_GT",
          "normalized": "a-\u003eHeap a-\u003e(Heap a,Heap a)",
          "package": "EdisonCore",
          "partial": "LT GT",
          "signature": "a-\u003eHeap a-\u003e(Heap a,Heap a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SplayHeap.html#v:partitionLT_GT"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "singleton",
          "package": "EdisonCore",
          "signature": "a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-SplayHeap.html#singleton",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SplayHeap",
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "singleton",
          "normalized": "a-\u003eHeap a",
          "package": "EdisonCore",
          "signature": "a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SplayHeap.html#v:singleton"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "size",
          "package": "EdisonCore",
          "signature": "Heap a -\u003e Int",
          "source": "src/Data-Edison-Coll-SplayHeap.html#size",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SplayHeap",
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "size",
          "normalized": "Heap a-\u003eInt",
          "package": "EdisonCore",
          "signature": "Heap a-\u003eInt",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SplayHeap.html#v:size"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "strict",
          "package": "EdisonCore",
          "signature": "Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-SplayHeap.html#strict",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SplayHeap",
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "strict",
          "normalized": "Heap a-\u003eHeap a",
          "package": "EdisonCore",
          "signature": "Heap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SplayHeap.html#v:strict"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "strictWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e b) -\u003e Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-SplayHeap.html#strictWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SplayHeap",
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "strictWith",
          "normalized": "(a-\u003eb)-\u003eHeap a-\u003eHeap a",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003eb)-\u003eHeap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SplayHeap.html#v:strictWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "structuralInvariant",
          "package": "EdisonCore",
          "signature": "Heap a -\u003e Bool",
          "source": "src/Data-Edison-Coll-SplayHeap.html#structuralInvariant",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SplayHeap",
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "structuralInvariant",
          "normalized": "Heap a-\u003eBool",
          "package": "EdisonCore",
          "partial": "Invariant",
          "signature": "Heap a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SplayHeap.html#v:structuralInvariant"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "toOrdSeq",
          "package": "EdisonCore",
          "signature": "Heap a -\u003e s a",
          "source": "src/Data-Edison-Coll-SplayHeap.html#toOrdSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SplayHeap",
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "toOrdSeq",
          "normalized": "Heap a-\u003eb a",
          "package": "EdisonCore",
          "partial": "Ord Seq",
          "signature": "Heap a-\u003es a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SplayHeap.html#v:toOrdSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "toSeq",
          "package": "EdisonCore",
          "signature": "Heap a -\u003e s a",
          "source": "src/Data-Edison-Coll-SplayHeap.html#toSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SplayHeap",
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "toSeq",
          "normalized": "Heap a-\u003eb a",
          "package": "EdisonCore",
          "partial": "Seq",
          "signature": "Heap a-\u003es a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SplayHeap.html#v:toSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "union",
          "package": "EdisonCore",
          "signature": "Heap a -\u003e Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-SplayHeap.html#union",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SplayHeap",
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "union",
          "normalized": "Heap a-\u003eHeap a-\u003eHeap a",
          "package": "EdisonCore",
          "signature": "Heap a-\u003eHeap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SplayHeap.html#v:union"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "unionSeq",
          "package": "EdisonCore",
          "signature": "s (Heap a) -\u003e Heap a",
          "source": "src/Data-Edison-Coll-SplayHeap.html#unionSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SplayHeap",
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "unionSeq",
          "normalized": "a(Heap b)-\u003eHeap b",
          "package": "EdisonCore",
          "partial": "Seq",
          "signature": "s(Heap a)-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SplayHeap.html#v:unionSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "unsafeAppend",
          "package": "EdisonCore",
          "signature": "Heap a -\u003e Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-SplayHeap.html#unsafeAppend",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SplayHeap",
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "unsafeAppend",
          "normalized": "Heap a-\u003eHeap a-\u003eHeap a",
          "package": "EdisonCore",
          "partial": "Append",
          "signature": "Heap a-\u003eHeap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SplayHeap.html#v:unsafeAppend"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "unsafeFromOrdSeq",
          "package": "EdisonCore",
          "signature": "s a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-SplayHeap.html#unsafeFromOrdSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SplayHeap",
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "unsafeFromOrdSeq",
          "normalized": "a b-\u003eHeap b",
          "package": "EdisonCore",
          "partial": "From Ord Seq",
          "signature": "s a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SplayHeap.html#v:unsafeFromOrdSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "unsafeInsertMax",
          "package": "EdisonCore",
          "signature": "a -\u003e Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-SplayHeap.html#unsafeInsertMax",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SplayHeap",
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "unsafeInsertMax",
          "normalized": "a-\u003eHeap a-\u003eHeap a",
          "package": "EdisonCore",
          "partial": "Insert Max",
          "signature": "a-\u003eHeap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SplayHeap.html#v:unsafeInsertMax"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "unsafeInsertMin",
          "package": "EdisonCore",
          "signature": "a -\u003e Heap a -\u003e Heap a",
          "source": "src/Data-Edison-Coll-SplayHeap.html#unsafeInsertMin",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SplayHeap",
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "unsafeInsertMin",
          "normalized": "a-\u003eHeap a-\u003eHeap a",
          "package": "EdisonCore",
          "partial": "Insert Min",
          "signature": "a-\u003eHeap a-\u003eHeap a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SplayHeap.html#v:unsafeInsertMin"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "unsafeMapMonotonic",
          "package": "EdisonCore",
          "signature": "(a -\u003e b) -\u003e Heap a -\u003e Heap b",
          "source": "src/Data-Edison-Coll-SplayHeap.html#unsafeMapMonotonic",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll SplayHeap",
          "module": "Data.Edison.Coll.SplayHeap",
          "name": "unsafeMapMonotonic",
          "normalized": "(a-\u003eb)-\u003eHeap a-\u003eHeap b",
          "package": "EdisonCore",
          "partial": "Map Monotonic",
          "signature": "(a-\u003eb)-\u003eHeap a-\u003eHeap b",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-SplayHeap.html#v:unsafeMapMonotonic"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThe standard library \u003ca\u003eData.Set\u003c/a\u003e repackaged as an Edison collection.\n\u003c/p\u003e\u003c/div\u003e",
          "module": "Data.Edison.Coll.StandardSet",
          "name": "StandardSet",
          "package": "EdisonCore",
          "source": "src/Data-Edison-Coll-StandardSet.html",
          "type": "module"
        },
        "index": {
          "description": "The standard library Data.Set repackaged as an Edison collection",
          "hierarchy": "Data Edison Coll StandardSet",
          "module": "Data.Edison.Coll.StandardSet",
          "name": "StandardSet",
          "package": "EdisonCore",
          "partial": "Standard Set",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-StandardSet.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.StandardSet",
          "name": "Set",
          "package": "EdisonCore",
          "source": "src/Data-Edison-Coll-StandardSet.html#Set",
          "type": "type"
        },
        "index": {
          "hierarchy": "Data Edison Coll StandardSet",
          "module": "Data.Edison.Coll.StandardSet",
          "name": "Set",
          "package": "EdisonCore",
          "partial": "Set",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-StandardSet.html#t:Set"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.StandardSet",
          "name": "count",
          "package": "EdisonCore",
          "signature": "a -\u003e Set a -\u003e Int",
          "source": "src/Data-Edison-Coll-StandardSet.html#count",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll StandardSet",
          "module": "Data.Edison.Coll.StandardSet",
          "name": "count",
          "normalized": "a-\u003eSet a-\u003eInt",
          "package": "EdisonCore",
          "signature": "a-\u003eSet a-\u003eInt",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-StandardSet.html#v:count"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.StandardSet",
          "name": "delete",
          "package": "EdisonCore",
          "signature": "a -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-StandardSet.html#delete",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll StandardSet",
          "module": "Data.Edison.Coll.StandardSet",
          "name": "delete",
          "normalized": "a-\u003eSet a-\u003eSet a",
          "package": "EdisonCore",
          "signature": "a-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-StandardSet.html#v:delete"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.StandardSet",
          "name": "deleteAll",
          "package": "EdisonCore",
          "signature": "a -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-StandardSet.html#deleteAll",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll StandardSet",
          "module": "Data.Edison.Coll.StandardSet",
          "name": "deleteAll",
          "normalized": "a-\u003eSet a-\u003eSet a",
          "package": "EdisonCore",
          "partial": "All",
          "signature": "a-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-StandardSet.html#v:deleteAll"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.StandardSet",
          "name": "deleteMax",
          "package": "EdisonCore",
          "signature": "Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-StandardSet.html#deleteMax",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll StandardSet",
          "module": "Data.Edison.Coll.StandardSet",
          "name": "deleteMax",
          "normalized": "Set a-\u003eSet a",
          "package": "EdisonCore",
          "partial": "Max",
          "signature": "Set a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-StandardSet.html#v:deleteMax"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.StandardSet",
          "name": "deleteMin",
          "package": "EdisonCore",
          "signature": "Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-StandardSet.html#deleteMin",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll StandardSet",
          "module": "Data.Edison.Coll.StandardSet",
          "name": "deleteMin",
          "normalized": "Set a-\u003eSet a",
          "package": "EdisonCore",
          "partial": "Min",
          "signature": "Set a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-StandardSet.html#v:deleteMin"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.StandardSet",
          "name": "deleteSeq",
          "package": "EdisonCore",
          "signature": "seq a -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-StandardSet.html#deleteSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll StandardSet",
          "module": "Data.Edison.Coll.StandardSet",
          "name": "deleteSeq",
          "normalized": "a b-\u003eSet b-\u003eSet b",
          "package": "EdisonCore",
          "partial": "Seq",
          "signature": "seq a-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-StandardSet.html#v:deleteSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.StandardSet",
          "name": "difference",
          "package": "EdisonCore",
          "signature": "Set a -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-StandardSet.html#difference",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll StandardSet",
          "module": "Data.Edison.Coll.StandardSet",
          "name": "difference",
          "normalized": "Set a-\u003eSet a-\u003eSet a",
          "package": "EdisonCore",
          "signature": "Set a-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-StandardSet.html#v:difference"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.StandardSet",
          "name": "empty",
          "package": "EdisonCore",
          "signature": "Set a",
          "source": "src/Data-Edison-Coll-StandardSet.html#empty",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll StandardSet",
          "module": "Data.Edison.Coll.StandardSet",
          "name": "empty",
          "package": "EdisonCore",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-StandardSet.html#v:empty"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.StandardSet",
          "name": "filter",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-StandardSet.html#filter",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll StandardSet",
          "module": "Data.Edison.Coll.StandardSet",
          "name": "filter",
          "normalized": "(a-\u003eBool)-\u003eSet a-\u003eSet a",
          "package": "EdisonCore",
          "signature": "(a-\u003eBool)-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-StandardSet.html#v:filter"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.StandardSet",
          "name": "filterGE",
          "package": "EdisonCore",
          "signature": "a -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-StandardSet.html#filterGE",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll StandardSet",
          "module": "Data.Edison.Coll.StandardSet",
          "name": "filterGE",
          "normalized": "a-\u003eSet a-\u003eSet a",
          "package": "EdisonCore",
          "partial": "GE",
          "signature": "a-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-StandardSet.html#v:filterGE"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.StandardSet",
          "name": "filterGT",
          "package": "EdisonCore",
          "signature": "a -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-StandardSet.html#filterGT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll StandardSet",
          "module": "Data.Edison.Coll.StandardSet",
          "name": "filterGT",
          "normalized": "a-\u003eSet a-\u003eSet a",
          "package": "EdisonCore",
          "partial": "GT",
          "signature": "a-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-StandardSet.html#v:filterGT"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.StandardSet",
          "name": "filterLE",
          "package": "EdisonCore",
          "signature": "a -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-StandardSet.html#filterLE",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll StandardSet",
          "module": "Data.Edison.Coll.StandardSet",
          "name": "filterLE",
          "normalized": "a-\u003eSet a-\u003eSet a",
          "package": "EdisonCore",
          "partial": "LE",
          "signature": "a-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-StandardSet.html#v:filterLE"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.StandardSet",
          "name": "filterLT",
          "package": "EdisonCore",
          "signature": "a -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-StandardSet.html#filterLT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll StandardSet",
          "module": "Data.Edison.Coll.StandardSet",
          "name": "filterLT",
          "normalized": "a-\u003eSet a-\u003eSet a",
          "package": "EdisonCore",
          "partial": "LT",
          "signature": "a-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-StandardSet.html#v:filterLT"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.StandardSet",
          "name": "fold",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e Set a -\u003e b",
          "source": "src/Data-Edison-Coll-StandardSet.html#fold",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll StandardSet",
          "module": "Data.Edison.Coll.StandardSet",
          "name": "fold",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eSet a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eSet a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-StandardSet.html#v:fold"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.StandardSet",
          "name": "fold'",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e Set a -\u003e b",
          "source": "src/Data-Edison-Coll-StandardSet.html#fold%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll StandardSet",
          "module": "Data.Edison.Coll.StandardSet",
          "name": "fold'",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eSet a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eSet a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-StandardSet.html#v:fold-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.StandardSet",
          "name": "fold1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Set a -\u003e a",
          "source": "src/Data-Edison-Coll-StandardSet.html#fold1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll StandardSet",
          "module": "Data.Edison.Coll.StandardSet",
          "name": "fold1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSet a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSet a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-StandardSet.html#v:fold1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.StandardSet",
          "name": "fold1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Set a -\u003e a",
          "source": "src/Data-Edison-Coll-StandardSet.html#fold1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll StandardSet",
          "module": "Data.Edison.Coll.StandardSet",
          "name": "fold1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSet a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSet a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-StandardSet.html#v:fold1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.StandardSet",
          "name": "foldl",
          "package": "EdisonCore",
          "signature": "(b -\u003e a -\u003e b) -\u003e b -\u003e Set a -\u003e b",
          "source": "src/Data-Edison-Coll-StandardSet.html#foldl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll StandardSet",
          "module": "Data.Edison.Coll.StandardSet",
          "name": "foldl",
          "normalized": "(a-\u003eb-\u003ea)-\u003ea-\u003eSet b-\u003ea",
          "package": "EdisonCore",
          "signature": "(b-\u003ea-\u003eb)-\u003eb-\u003eSet a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-StandardSet.html#v:foldl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.StandardSet",
          "name": "foldl'",
          "package": "EdisonCore",
          "signature": "(b -\u003e a -\u003e b) -\u003e b -\u003e Set a -\u003e b",
          "source": "src/Data-Edison-Coll-StandardSet.html#foldl%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll StandardSet",
          "module": "Data.Edison.Coll.StandardSet",
          "name": "foldl'",
          "normalized": "(a-\u003eb-\u003ea)-\u003ea-\u003eSet b-\u003ea",
          "package": "EdisonCore",
          "signature": "(b-\u003ea-\u003eb)-\u003eb-\u003eSet a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-StandardSet.html#v:foldl-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.StandardSet",
          "name": "foldl1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Set a -\u003e a",
          "source": "src/Data-Edison-Coll-StandardSet.html#foldl1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll StandardSet",
          "module": "Data.Edison.Coll.StandardSet",
          "name": "foldl1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSet a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSet a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-StandardSet.html#v:foldl1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.StandardSet",
          "name": "foldl1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Set a -\u003e a",
          "source": "src/Data-Edison-Coll-StandardSet.html#foldl1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll StandardSet",
          "module": "Data.Edison.Coll.StandardSet",
          "name": "foldl1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSet a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSet a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-StandardSet.html#v:foldl1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.StandardSet",
          "name": "foldr",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e Set a -\u003e b",
          "source": "src/Data-Edison-Coll-StandardSet.html#foldr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll StandardSet",
          "module": "Data.Edison.Coll.StandardSet",
          "name": "foldr",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eSet a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eSet a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-StandardSet.html#v:foldr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.StandardSet",
          "name": "foldr'",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e Set a -\u003e b",
          "source": "src/Data-Edison-Coll-StandardSet.html#foldr%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll StandardSet",
          "module": "Data.Edison.Coll.StandardSet",
          "name": "foldr'",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eSet a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eSet a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-StandardSet.html#v:foldr-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.StandardSet",
          "name": "foldr1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Set a -\u003e a",
          "source": "src/Data-Edison-Coll-StandardSet.html#foldr1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll StandardSet",
          "module": "Data.Edison.Coll.StandardSet",
          "name": "foldr1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSet a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSet a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-StandardSet.html#v:foldr1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.StandardSet",
          "name": "foldr1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Set a -\u003e a",
          "source": "src/Data-Edison-Coll-StandardSet.html#foldr1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll StandardSet",
          "module": "Data.Edison.Coll.StandardSet",
          "name": "foldr1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSet a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSet a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-StandardSet.html#v:foldr1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.StandardSet",
          "name": "fromSeq",
          "package": "EdisonCore",
          "signature": "seq a -\u003e Set a",
          "source": "src/Data-Edison-Coll-StandardSet.html#fromSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll StandardSet",
          "module": "Data.Edison.Coll.StandardSet",
          "name": "fromSeq",
          "normalized": "a b-\u003eSet b",
          "package": "EdisonCore",
          "partial": "Seq",
          "signature": "seq a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-StandardSet.html#v:fromSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.StandardSet",
          "name": "fromSeqWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e seq a -\u003e Set a",
          "source": "src/Data-Edison-Coll-StandardSet.html#fromSeqWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll StandardSet",
          "module": "Data.Edison.Coll.StandardSet",
          "name": "fromSeqWith",
          "normalized": "(a-\u003ea-\u003ea)-\u003eb a-\u003eSet a",
          "package": "EdisonCore",
          "partial": "Seq With",
          "signature": "(a-\u003ea-\u003ea)-\u003eseq a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-StandardSet.html#v:fromSeqWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.StandardSet",
          "name": "insert",
          "package": "EdisonCore",
          "signature": "a -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-StandardSet.html#insert",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll StandardSet",
          "module": "Data.Edison.Coll.StandardSet",
          "name": "insert",
          "normalized": "a-\u003eSet a-\u003eSet a",
          "package": "EdisonCore",
          "signature": "a-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-StandardSet.html#v:insert"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.StandardSet",
          "name": "insertSeq",
          "package": "EdisonCore",
          "signature": "seq a -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-StandardSet.html#insertSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll StandardSet",
          "module": "Data.Edison.Coll.StandardSet",
          "name": "insertSeq",
          "normalized": "a b-\u003eSet b-\u003eSet b",
          "package": "EdisonCore",
          "partial": "Seq",
          "signature": "seq a-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-StandardSet.html#v:insertSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.StandardSet",
          "name": "insertSeqWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e seq a -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-StandardSet.html#insertSeqWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll StandardSet",
          "module": "Data.Edison.Coll.StandardSet",
          "name": "insertSeqWith",
          "normalized": "(a-\u003ea-\u003ea)-\u003eb a-\u003eSet a-\u003eSet a",
          "package": "EdisonCore",
          "partial": "Seq With",
          "signature": "(a-\u003ea-\u003ea)-\u003eseq a-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-StandardSet.html#v:insertSeqWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.StandardSet",
          "name": "insertWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e a -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-StandardSet.html#insertWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll StandardSet",
          "module": "Data.Edison.Coll.StandardSet",
          "name": "insertWith",
          "normalized": "(a-\u003ea-\u003ea)-\u003ea-\u003eSet a-\u003eSet a",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003ea-\u003ea)-\u003ea-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-StandardSet.html#v:insertWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.StandardSet",
          "name": "intersection",
          "package": "EdisonCore",
          "signature": "Set a -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-StandardSet.html#intersection",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll StandardSet",
          "module": "Data.Edison.Coll.StandardSet",
          "name": "intersection",
          "normalized": "Set a-\u003eSet a-\u003eSet a",
          "package": "EdisonCore",
          "signature": "Set a-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-StandardSet.html#v:intersection"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.StandardSet",
          "name": "intersectionWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Set a -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-StandardSet.html#intersectionWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll StandardSet",
          "module": "Data.Edison.Coll.StandardSet",
          "name": "intersectionWith",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSet a-\u003eSet a-\u003eSet a",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003ea-\u003ea)-\u003eSet a-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-StandardSet.html#v:intersectionWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.StandardSet",
          "name": "lookup",
          "package": "EdisonCore",
          "signature": "a -\u003e Set a -\u003e a",
          "source": "src/Data-Edison-Coll-StandardSet.html#lookup",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll StandardSet",
          "module": "Data.Edison.Coll.StandardSet",
          "name": "lookup",
          "normalized": "a-\u003eSet a-\u003ea",
          "package": "EdisonCore",
          "signature": "a-\u003eSet a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-StandardSet.html#v:lookup"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.StandardSet",
          "name": "lookupAll",
          "package": "EdisonCore",
          "signature": "a -\u003e Set a -\u003e seq a",
          "source": "src/Data-Edison-Coll-StandardSet.html#lookupAll",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll StandardSet",
          "module": "Data.Edison.Coll.StandardSet",
          "name": "lookupAll",
          "normalized": "a-\u003eSet a-\u003eb a",
          "package": "EdisonCore",
          "partial": "All",
          "signature": "a-\u003eSet a-\u003eseq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-StandardSet.html#v:lookupAll"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.StandardSet",
          "name": "lookupM",
          "package": "EdisonCore",
          "signature": "a -\u003e Set a -\u003e m a",
          "source": "src/Data-Edison-Coll-StandardSet.html#lookupM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll StandardSet",
          "module": "Data.Edison.Coll.StandardSet",
          "name": "lookupM",
          "normalized": "a-\u003eSet a-\u003eb a",
          "package": "EdisonCore",
          "signature": "a-\u003eSet a-\u003em a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-StandardSet.html#v:lookupM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.StandardSet",
          "name": "lookupWithDefault",
          "package": "EdisonCore",
          "signature": "a -\u003e a -\u003e Set a -\u003e a",
          "source": "src/Data-Edison-Coll-StandardSet.html#lookupWithDefault",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll StandardSet",
          "module": "Data.Edison.Coll.StandardSet",
          "name": "lookupWithDefault",
          "normalized": "a-\u003ea-\u003eSet a-\u003ea",
          "package": "EdisonCore",
          "partial": "With Default",
          "signature": "a-\u003ea-\u003eSet a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-StandardSet.html#v:lookupWithDefault"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.StandardSet",
          "name": "maxElem",
          "package": "EdisonCore",
          "signature": "Set a -\u003e a",
          "source": "src/Data-Edison-Coll-StandardSet.html#maxElem",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll StandardSet",
          "module": "Data.Edison.Coll.StandardSet",
          "name": "maxElem",
          "normalized": "Set a-\u003ea",
          "package": "EdisonCore",
          "partial": "Elem",
          "signature": "Set a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-StandardSet.html#v:maxElem"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.StandardSet",
          "name": "maxView",
          "package": "EdisonCore",
          "signature": "Set a -\u003e m (a, Set a)",
          "source": "src/Data-Edison-Coll-StandardSet.html#maxView",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll StandardSet",
          "module": "Data.Edison.Coll.StandardSet",
          "name": "maxView",
          "normalized": "Set a-\u003eb(a,Set a)",
          "package": "EdisonCore",
          "partial": "View",
          "signature": "Set a-\u003em(a,Set a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-StandardSet.html#v:maxView"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.StandardSet",
          "name": "member",
          "package": "EdisonCore",
          "signature": "a -\u003e Set a -\u003e Bool",
          "source": "src/Data-Edison-Coll-StandardSet.html#member",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll StandardSet",
          "module": "Data.Edison.Coll.StandardSet",
          "name": "member",
          "normalized": "a-\u003eSet a-\u003eBool",
          "package": "EdisonCore",
          "signature": "a-\u003eSet a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-StandardSet.html#v:member"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.StandardSet",
          "name": "minElem",
          "package": "EdisonCore",
          "signature": "Set a -\u003e a",
          "source": "src/Data-Edison-Coll-StandardSet.html#minElem",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll StandardSet",
          "module": "Data.Edison.Coll.StandardSet",
          "name": "minElem",
          "normalized": "Set a-\u003ea",
          "package": "EdisonCore",
          "partial": "Elem",
          "signature": "Set a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-StandardSet.html#v:minElem"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.StandardSet",
          "name": "minView",
          "package": "EdisonCore",
          "signature": "Set a -\u003e m (a, Set a)",
          "source": "src/Data-Edison-Coll-StandardSet.html#minView",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll StandardSet",
          "module": "Data.Edison.Coll.StandardSet",
          "name": "minView",
          "normalized": "Set a-\u003eb(a,Set a)",
          "package": "EdisonCore",
          "partial": "View",
          "signature": "Set a-\u003em(a,Set a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-StandardSet.html#v:minView"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.StandardSet",
          "name": "moduleName",
          "package": "EdisonCore",
          "signature": "String",
          "source": "src/Data-Edison-Coll-StandardSet.html#moduleName",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll StandardSet",
          "module": "Data.Edison.Coll.StandardSet",
          "name": "moduleName",
          "package": "EdisonCore",
          "partial": "Name",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-StandardSet.html#v:moduleName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.StandardSet",
          "name": "null",
          "package": "EdisonCore",
          "signature": "Set a -\u003e Bool",
          "source": "src/Data-Edison-Coll-StandardSet.html#null",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll StandardSet",
          "module": "Data.Edison.Coll.StandardSet",
          "name": "null",
          "normalized": "Set a-\u003eBool",
          "package": "EdisonCore",
          "signature": "Set a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-StandardSet.html#v:null"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.StandardSet",
          "name": "partition",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e Set a -\u003e (Set a, Set a)",
          "source": "src/Data-Edison-Coll-StandardSet.html#partition",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll StandardSet",
          "module": "Data.Edison.Coll.StandardSet",
          "name": "partition",
          "normalized": "(a-\u003eBool)-\u003eSet a-\u003e(Set a,Set a)",
          "package": "EdisonCore",
          "signature": "(a-\u003eBool)-\u003eSet a-\u003e(Set a,Set a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-StandardSet.html#v:partition"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.StandardSet",
          "name": "partitionLE_GT",
          "package": "EdisonCore",
          "signature": "a -\u003e Set a -\u003e (Set a, Set a)",
          "source": "src/Data-Edison-Coll-StandardSet.html#partitionLE_GT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll StandardSet",
          "module": "Data.Edison.Coll.StandardSet",
          "name": "partitionLE_GT",
          "normalized": "a-\u003eSet a-\u003e(Set a,Set a)",
          "package": "EdisonCore",
          "partial": "LE GT",
          "signature": "a-\u003eSet a-\u003e(Set a,Set a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-StandardSet.html#v:partitionLE_GT"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.StandardSet",
          "name": "partitionLT_GE",
          "package": "EdisonCore",
          "signature": "a -\u003e Set a -\u003e (Set a, Set a)",
          "source": "src/Data-Edison-Coll-StandardSet.html#partitionLT_GE",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll StandardSet",
          "module": "Data.Edison.Coll.StandardSet",
          "name": "partitionLT_GE",
          "normalized": "a-\u003eSet a-\u003e(Set a,Set a)",
          "package": "EdisonCore",
          "partial": "LT GE",
          "signature": "a-\u003eSet a-\u003e(Set a,Set a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-StandardSet.html#v:partitionLT_GE"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.StandardSet",
          "name": "partitionLT_GT",
          "package": "EdisonCore",
          "signature": "a -\u003e Set a -\u003e (Set a, Set a)",
          "source": "src/Data-Edison-Coll-StandardSet.html#partitionLT_GT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll StandardSet",
          "module": "Data.Edison.Coll.StandardSet",
          "name": "partitionLT_GT",
          "normalized": "a-\u003eSet a-\u003e(Set a,Set a)",
          "package": "EdisonCore",
          "partial": "LT GT",
          "signature": "a-\u003eSet a-\u003e(Set a,Set a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-StandardSet.html#v:partitionLT_GT"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.StandardSet",
          "name": "properSubset",
          "package": "EdisonCore",
          "signature": "Set a -\u003e Set a -\u003e Bool",
          "source": "src/Data-Edison-Coll-StandardSet.html#properSubset",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll StandardSet",
          "module": "Data.Edison.Coll.StandardSet",
          "name": "properSubset",
          "normalized": "Set a-\u003eSet a-\u003eBool",
          "package": "EdisonCore",
          "partial": "Subset",
          "signature": "Set a-\u003eSet a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-StandardSet.html#v:properSubset"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.StandardSet",
          "name": "singleton",
          "package": "EdisonCore",
          "signature": "a -\u003e Set a",
          "source": "src/Data-Edison-Coll-StandardSet.html#singleton",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll StandardSet",
          "module": "Data.Edison.Coll.StandardSet",
          "name": "singleton",
          "normalized": "a-\u003eSet a",
          "package": "EdisonCore",
          "signature": "a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-StandardSet.html#v:singleton"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.StandardSet",
          "name": "size",
          "package": "EdisonCore",
          "signature": "Set a -\u003e Int",
          "source": "src/Data-Edison-Coll-StandardSet.html#size",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll StandardSet",
          "module": "Data.Edison.Coll.StandardSet",
          "name": "size",
          "normalized": "Set a-\u003eInt",
          "package": "EdisonCore",
          "signature": "Set a-\u003eInt",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-StandardSet.html#v:size"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.StandardSet",
          "name": "strict",
          "package": "EdisonCore",
          "signature": "Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-StandardSet.html#strict",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll StandardSet",
          "module": "Data.Edison.Coll.StandardSet",
          "name": "strict",
          "normalized": "Set a-\u003eSet a",
          "package": "EdisonCore",
          "signature": "Set a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-StandardSet.html#v:strict"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.StandardSet",
          "name": "strictWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e b) -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-StandardSet.html#strictWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll StandardSet",
          "module": "Data.Edison.Coll.StandardSet",
          "name": "strictWith",
          "normalized": "(a-\u003eb)-\u003eSet a-\u003eSet a",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003eb)-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-StandardSet.html#v:strictWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.StandardSet",
          "name": "structuralInvariant",
          "package": "EdisonCore",
          "signature": "Set a -\u003e Bool",
          "source": "src/Data-Edison-Coll-StandardSet.html#structuralInvariant",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll StandardSet",
          "module": "Data.Edison.Coll.StandardSet",
          "name": "structuralInvariant",
          "normalized": "Set a-\u003eBool",
          "package": "EdisonCore",
          "partial": "Invariant",
          "signature": "Set a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-StandardSet.html#v:structuralInvariant"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.StandardSet",
          "name": "subset",
          "package": "EdisonCore",
          "signature": "Set a -\u003e Set a -\u003e Bool",
          "source": "src/Data-Edison-Coll-StandardSet.html#subset",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll StandardSet",
          "module": "Data.Edison.Coll.StandardSet",
          "name": "subset",
          "normalized": "Set a-\u003eSet a-\u003eBool",
          "package": "EdisonCore",
          "signature": "Set a-\u003eSet a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-StandardSet.html#v:subset"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.StandardSet",
          "name": "symmetricDifference",
          "package": "EdisonCore",
          "signature": "Set a -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-StandardSet.html#symmetricDifference",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll StandardSet",
          "module": "Data.Edison.Coll.StandardSet",
          "name": "symmetricDifference",
          "normalized": "Set a-\u003eSet a-\u003eSet a",
          "package": "EdisonCore",
          "partial": "Difference",
          "signature": "Set a-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-StandardSet.html#v:symmetricDifference"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.StandardSet",
          "name": "toOrdSeq",
          "package": "EdisonCore",
          "signature": "Set a -\u003e seq a",
          "source": "src/Data-Edison-Coll-StandardSet.html#toOrdSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll StandardSet",
          "module": "Data.Edison.Coll.StandardSet",
          "name": "toOrdSeq",
          "normalized": "Set a-\u003eb a",
          "package": "EdisonCore",
          "partial": "Ord Seq",
          "signature": "Set a-\u003eseq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-StandardSet.html#v:toOrdSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.StandardSet",
          "name": "toSeq",
          "package": "EdisonCore",
          "signature": "Set a -\u003e seq a",
          "source": "src/Data-Edison-Coll-StandardSet.html#toSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll StandardSet",
          "module": "Data.Edison.Coll.StandardSet",
          "name": "toSeq",
          "normalized": "Set a-\u003eb a",
          "package": "EdisonCore",
          "partial": "Seq",
          "signature": "Set a-\u003eseq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-StandardSet.html#v:toSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.StandardSet",
          "name": "union",
          "package": "EdisonCore",
          "signature": "Set a -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-StandardSet.html#union",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll StandardSet",
          "module": "Data.Edison.Coll.StandardSet",
          "name": "union",
          "normalized": "Set a-\u003eSet a-\u003eSet a",
          "package": "EdisonCore",
          "signature": "Set a-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-StandardSet.html#v:union"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.StandardSet",
          "name": "unionSeq",
          "package": "EdisonCore",
          "signature": "seq (Set a) -\u003e Set a",
          "source": "src/Data-Edison-Coll-StandardSet.html#unionSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll StandardSet",
          "module": "Data.Edison.Coll.StandardSet",
          "name": "unionSeq",
          "normalized": "a(Set b)-\u003eSet b",
          "package": "EdisonCore",
          "partial": "Seq",
          "signature": "seq(Set a)-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-StandardSet.html#v:unionSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.StandardSet",
          "name": "unionSeqWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e seq (Set a) -\u003e Set a",
          "source": "src/Data-Edison-Coll-StandardSet.html#unionSeqWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll StandardSet",
          "module": "Data.Edison.Coll.StandardSet",
          "name": "unionSeqWith",
          "normalized": "(a-\u003ea-\u003ea)-\u003eb(Set a)-\u003eSet a",
          "package": "EdisonCore",
          "partial": "Seq With",
          "signature": "(a-\u003ea-\u003ea)-\u003eseq(Set a)-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-StandardSet.html#v:unionSeqWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.StandardSet",
          "name": "unionWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Set a -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-StandardSet.html#unionWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll StandardSet",
          "module": "Data.Edison.Coll.StandardSet",
          "name": "unionWith",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSet a-\u003eSet a-\u003eSet a",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003ea-\u003ea)-\u003eSet a-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-StandardSet.html#v:unionWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.StandardSet",
          "name": "unionl",
          "package": "EdisonCore",
          "signature": "Set a -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-StandardSet.html#unionl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll StandardSet",
          "module": "Data.Edison.Coll.StandardSet",
          "name": "unionl",
          "normalized": "Set a-\u003eSet a-\u003eSet a",
          "package": "EdisonCore",
          "signature": "Set a-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-StandardSet.html#v:unionl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.StandardSet",
          "name": "unionr",
          "package": "EdisonCore",
          "signature": "Set a -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-StandardSet.html#unionr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll StandardSet",
          "module": "Data.Edison.Coll.StandardSet",
          "name": "unionr",
          "normalized": "Set a-\u003eSet a-\u003eSet a",
          "package": "EdisonCore",
          "signature": "Set a-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-StandardSet.html#v:unionr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.StandardSet",
          "name": "unsafeAppend",
          "package": "EdisonCore",
          "signature": "Set a -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-StandardSet.html#unsafeAppend",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll StandardSet",
          "module": "Data.Edison.Coll.StandardSet",
          "name": "unsafeAppend",
          "normalized": "Set a-\u003eSet a-\u003eSet a",
          "package": "EdisonCore",
          "partial": "Append",
          "signature": "Set a-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-StandardSet.html#v:unsafeAppend"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.StandardSet",
          "name": "unsafeFromOrdSeq",
          "package": "EdisonCore",
          "signature": "seq a -\u003e Set a",
          "source": "src/Data-Edison-Coll-StandardSet.html#unsafeFromOrdSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll StandardSet",
          "module": "Data.Edison.Coll.StandardSet",
          "name": "unsafeFromOrdSeq",
          "normalized": "a b-\u003eSet b",
          "package": "EdisonCore",
          "partial": "From Ord Seq",
          "signature": "seq a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-StandardSet.html#v:unsafeFromOrdSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.StandardSet",
          "name": "unsafeInsertMax",
          "package": "EdisonCore",
          "signature": "a -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-StandardSet.html#unsafeInsertMax",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll StandardSet",
          "module": "Data.Edison.Coll.StandardSet",
          "name": "unsafeInsertMax",
          "normalized": "a-\u003eSet a-\u003eSet a",
          "package": "EdisonCore",
          "partial": "Insert Max",
          "signature": "a-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-StandardSet.html#v:unsafeInsertMax"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.StandardSet",
          "name": "unsafeInsertMin",
          "package": "EdisonCore",
          "signature": "a -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-StandardSet.html#unsafeInsertMin",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll StandardSet",
          "module": "Data.Edison.Coll.StandardSet",
          "name": "unsafeInsertMin",
          "normalized": "a-\u003eSet a-\u003eSet a",
          "package": "EdisonCore",
          "partial": "Insert Min",
          "signature": "a-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-StandardSet.html#v:unsafeInsertMin"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.StandardSet",
          "name": "unsafeMapMonotonic",
          "package": "EdisonCore",
          "signature": "(a -\u003e a) -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-StandardSet.html#unsafeMapMonotonic",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll StandardSet",
          "module": "Data.Edison.Coll.StandardSet",
          "name": "unsafeMapMonotonic",
          "normalized": "(a-\u003ea)-\u003eSet a-\u003eSet a",
          "package": "EdisonCore",
          "partial": "Map Monotonic",
          "signature": "(a-\u003ea)-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-StandardSet.html#v:unsafeMapMonotonic"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eSets implemented as unbalanced binary search trees.\n\u003c/p\u003e\u003c/div\u003e",
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "UnbalancedSet",
          "package": "EdisonCore",
          "source": "src/Data-Edison-Coll-UnbalancedSet.html",
          "type": "module"
        },
        "index": {
          "description": "Sets implemented as unbalanced binary search trees",
          "hierarchy": "Data Edison Coll UnbalancedSet",
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "UnbalancedSet",
          "package": "EdisonCore",
          "partial": "Unbalanced Set",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-UnbalancedSet.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "Set",
          "package": "EdisonCore",
          "source": "src/Data-Edison-Coll-UnbalancedSet.html#Set",
          "type": "data"
        },
        "index": {
          "hierarchy": "Data Edison Coll UnbalancedSet",
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "Set",
          "package": "EdisonCore",
          "partial": "Set",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-UnbalancedSet.html#t:Set"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "count",
          "package": "EdisonCore",
          "signature": "a -\u003e Set a -\u003e Int",
          "source": "src/Data-Edison-Coll-UnbalancedSet.html#count",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll UnbalancedSet",
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "count",
          "normalized": "a-\u003eSet a-\u003eInt",
          "package": "EdisonCore",
          "signature": "a-\u003eSet a-\u003eInt",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-UnbalancedSet.html#v:count"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "delete",
          "package": "EdisonCore",
          "signature": "a -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-UnbalancedSet.html#delete",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll UnbalancedSet",
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "delete",
          "normalized": "a-\u003eSet a-\u003eSet a",
          "package": "EdisonCore",
          "signature": "a-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-UnbalancedSet.html#v:delete"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "deleteAll",
          "package": "EdisonCore",
          "signature": "a -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-UnbalancedSet.html#deleteAll",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll UnbalancedSet",
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "deleteAll",
          "normalized": "a-\u003eSet a-\u003eSet a",
          "package": "EdisonCore",
          "partial": "All",
          "signature": "a-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-UnbalancedSet.html#v:deleteAll"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "deleteMax",
          "package": "EdisonCore",
          "signature": "Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-UnbalancedSet.html#deleteMax",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll UnbalancedSet",
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "deleteMax",
          "normalized": "Set a-\u003eSet a",
          "package": "EdisonCore",
          "partial": "Max",
          "signature": "Set a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-UnbalancedSet.html#v:deleteMax"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "deleteMin",
          "package": "EdisonCore",
          "signature": "Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-UnbalancedSet.html#deleteMin",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll UnbalancedSet",
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "deleteMin",
          "normalized": "Set a-\u003eSet a",
          "package": "EdisonCore",
          "partial": "Min",
          "signature": "Set a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-UnbalancedSet.html#v:deleteMin"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "deleteSeq",
          "package": "EdisonCore",
          "signature": "seq a -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-UnbalancedSet.html#deleteSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll UnbalancedSet",
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "deleteSeq",
          "normalized": "a b-\u003eSet b-\u003eSet b",
          "package": "EdisonCore",
          "partial": "Seq",
          "signature": "seq a-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-UnbalancedSet.html#v:deleteSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "difference",
          "package": "EdisonCore",
          "signature": "Set a -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-UnbalancedSet.html#difference",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll UnbalancedSet",
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "difference",
          "normalized": "Set a-\u003eSet a-\u003eSet a",
          "package": "EdisonCore",
          "signature": "Set a-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-UnbalancedSet.html#v:difference"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "empty",
          "package": "EdisonCore",
          "signature": "Set a",
          "source": "src/Data-Edison-Coll-UnbalancedSet.html#empty",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll UnbalancedSet",
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "empty",
          "package": "EdisonCore",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-UnbalancedSet.html#v:empty"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "filter",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-UnbalancedSet.html#filter",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll UnbalancedSet",
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "filter",
          "normalized": "(a-\u003eBool)-\u003eSet a-\u003eSet a",
          "package": "EdisonCore",
          "signature": "(a-\u003eBool)-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-UnbalancedSet.html#v:filter"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "filterGE",
          "package": "EdisonCore",
          "signature": "a -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-UnbalancedSet.html#filterGE",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll UnbalancedSet",
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "filterGE",
          "normalized": "a-\u003eSet a-\u003eSet a",
          "package": "EdisonCore",
          "partial": "GE",
          "signature": "a-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-UnbalancedSet.html#v:filterGE"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "filterGT",
          "package": "EdisonCore",
          "signature": "a -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-UnbalancedSet.html#filterGT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll UnbalancedSet",
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "filterGT",
          "normalized": "a-\u003eSet a-\u003eSet a",
          "package": "EdisonCore",
          "partial": "GT",
          "signature": "a-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-UnbalancedSet.html#v:filterGT"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "filterLE",
          "package": "EdisonCore",
          "signature": "a -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-UnbalancedSet.html#filterLE",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll UnbalancedSet",
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "filterLE",
          "normalized": "a-\u003eSet a-\u003eSet a",
          "package": "EdisonCore",
          "partial": "LE",
          "signature": "a-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-UnbalancedSet.html#v:filterLE"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "filterLT",
          "package": "EdisonCore",
          "signature": "a -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-UnbalancedSet.html#filterLT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll UnbalancedSet",
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "filterLT",
          "normalized": "a-\u003eSet a-\u003eSet a",
          "package": "EdisonCore",
          "partial": "LT",
          "signature": "a-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-UnbalancedSet.html#v:filterLT"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "fold",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e Set a -\u003e b",
          "source": "src/Data-Edison-Coll-UnbalancedSet.html#fold",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll UnbalancedSet",
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "fold",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eSet a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eSet a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-UnbalancedSet.html#v:fold"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "fold'",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e Set a -\u003e b",
          "source": "src/Data-Edison-Coll-UnbalancedSet.html#fold%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll UnbalancedSet",
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "fold'",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eSet a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eSet a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-UnbalancedSet.html#v:fold-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "fold1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Set a -\u003e a",
          "source": "src/Data-Edison-Coll-UnbalancedSet.html#fold1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll UnbalancedSet",
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "fold1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSet a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSet a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-UnbalancedSet.html#v:fold1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "fold1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Set a -\u003e a",
          "source": "src/Data-Edison-Coll-UnbalancedSet.html#fold1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll UnbalancedSet",
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "fold1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSet a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSet a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-UnbalancedSet.html#v:fold1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "foldl",
          "package": "EdisonCore",
          "signature": "(b -\u003e a -\u003e b) -\u003e b -\u003e Set a -\u003e b",
          "source": "src/Data-Edison-Coll-UnbalancedSet.html#foldl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll UnbalancedSet",
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "foldl",
          "normalized": "(a-\u003eb-\u003ea)-\u003ea-\u003eSet b-\u003ea",
          "package": "EdisonCore",
          "signature": "(b-\u003ea-\u003eb)-\u003eb-\u003eSet a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-UnbalancedSet.html#v:foldl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "foldl'",
          "package": "EdisonCore",
          "signature": "(b -\u003e a -\u003e b) -\u003e b -\u003e Set a -\u003e b",
          "source": "src/Data-Edison-Coll-UnbalancedSet.html#foldl%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll UnbalancedSet",
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "foldl'",
          "normalized": "(a-\u003eb-\u003ea)-\u003ea-\u003eSet b-\u003ea",
          "package": "EdisonCore",
          "signature": "(b-\u003ea-\u003eb)-\u003eb-\u003eSet a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-UnbalancedSet.html#v:foldl-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "foldl1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Set a -\u003e a",
          "source": "src/Data-Edison-Coll-UnbalancedSet.html#foldl1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll UnbalancedSet",
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "foldl1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSet a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSet a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-UnbalancedSet.html#v:foldl1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "foldl1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Set a -\u003e a",
          "source": "src/Data-Edison-Coll-UnbalancedSet.html#foldl1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll UnbalancedSet",
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "foldl1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSet a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSet a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-UnbalancedSet.html#v:foldl1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "foldr",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e Set a -\u003e b",
          "source": "src/Data-Edison-Coll-UnbalancedSet.html#foldr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll UnbalancedSet",
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "foldr",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eSet a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eSet a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-UnbalancedSet.html#v:foldr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "foldr'",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e Set a -\u003e b",
          "source": "src/Data-Edison-Coll-UnbalancedSet.html#foldr%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll UnbalancedSet",
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "foldr'",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eSet a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eSet a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-UnbalancedSet.html#v:foldr-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "foldr1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Set a -\u003e a",
          "source": "src/Data-Edison-Coll-UnbalancedSet.html#foldr1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll UnbalancedSet",
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "foldr1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSet a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSet a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-UnbalancedSet.html#v:foldr1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "foldr1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Set a -\u003e a",
          "source": "src/Data-Edison-Coll-UnbalancedSet.html#foldr1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll UnbalancedSet",
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "foldr1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSet a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSet a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-UnbalancedSet.html#v:foldr1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "fromSeq",
          "package": "EdisonCore",
          "signature": "seq a -\u003e Set a",
          "source": "src/Data-Edison-Coll-UnbalancedSet.html#fromSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll UnbalancedSet",
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "fromSeq",
          "normalized": "a b-\u003eSet b",
          "package": "EdisonCore",
          "partial": "Seq",
          "signature": "seq a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-UnbalancedSet.html#v:fromSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "fromSeqWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e seq a -\u003e Set a",
          "source": "src/Data-Edison-Coll-UnbalancedSet.html#fromSeqWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll UnbalancedSet",
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "fromSeqWith",
          "normalized": "(a-\u003ea-\u003ea)-\u003eb a-\u003eSet a",
          "package": "EdisonCore",
          "partial": "Seq With",
          "signature": "(a-\u003ea-\u003ea)-\u003eseq a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-UnbalancedSet.html#v:fromSeqWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "insert",
          "package": "EdisonCore",
          "signature": "a -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-UnbalancedSet.html#insert",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll UnbalancedSet",
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "insert",
          "normalized": "a-\u003eSet a-\u003eSet a",
          "package": "EdisonCore",
          "signature": "a-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-UnbalancedSet.html#v:insert"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "insertSeq",
          "package": "EdisonCore",
          "signature": "seq a -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-UnbalancedSet.html#insertSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll UnbalancedSet",
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "insertSeq",
          "normalized": "a b-\u003eSet b-\u003eSet b",
          "package": "EdisonCore",
          "partial": "Seq",
          "signature": "seq a-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-UnbalancedSet.html#v:insertSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "insertSeqWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e seq a -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-UnbalancedSet.html#insertSeqWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll UnbalancedSet",
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "insertSeqWith",
          "normalized": "(a-\u003ea-\u003ea)-\u003eb a-\u003eSet a-\u003eSet a",
          "package": "EdisonCore",
          "partial": "Seq With",
          "signature": "(a-\u003ea-\u003ea)-\u003eseq a-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-UnbalancedSet.html#v:insertSeqWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "insertWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e a -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-UnbalancedSet.html#insertWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll UnbalancedSet",
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "insertWith",
          "normalized": "(a-\u003ea-\u003ea)-\u003ea-\u003eSet a-\u003eSet a",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003ea-\u003ea)-\u003ea-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-UnbalancedSet.html#v:insertWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "intersection",
          "package": "EdisonCore",
          "signature": "Set a -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-UnbalancedSet.html#intersection",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll UnbalancedSet",
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "intersection",
          "normalized": "Set a-\u003eSet a-\u003eSet a",
          "package": "EdisonCore",
          "signature": "Set a-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-UnbalancedSet.html#v:intersection"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "intersectionWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Set a -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-UnbalancedSet.html#intersectionWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll UnbalancedSet",
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "intersectionWith",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSet a-\u003eSet a-\u003eSet a",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003ea-\u003ea)-\u003eSet a-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-UnbalancedSet.html#v:intersectionWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "lookup",
          "package": "EdisonCore",
          "signature": "a -\u003e Set a -\u003e a",
          "source": "src/Data-Edison-Coll-UnbalancedSet.html#lookup",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll UnbalancedSet",
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "lookup",
          "normalized": "a-\u003eSet a-\u003ea",
          "package": "EdisonCore",
          "signature": "a-\u003eSet a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-UnbalancedSet.html#v:lookup"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "lookupAll",
          "package": "EdisonCore",
          "signature": "a -\u003e Set a -\u003e seq a",
          "source": "src/Data-Edison-Coll-UnbalancedSet.html#lookupAll",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll UnbalancedSet",
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "lookupAll",
          "normalized": "a-\u003eSet a-\u003eb a",
          "package": "EdisonCore",
          "partial": "All",
          "signature": "a-\u003eSet a-\u003eseq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-UnbalancedSet.html#v:lookupAll"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "lookupM",
          "package": "EdisonCore",
          "signature": "a -\u003e Set a -\u003e m a",
          "source": "src/Data-Edison-Coll-UnbalancedSet.html#lookupM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll UnbalancedSet",
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "lookupM",
          "normalized": "a-\u003eSet a-\u003eb a",
          "package": "EdisonCore",
          "signature": "a-\u003eSet a-\u003em a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-UnbalancedSet.html#v:lookupM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "lookupWithDefault",
          "package": "EdisonCore",
          "signature": "a -\u003e a -\u003e Set a -\u003e a",
          "source": "src/Data-Edison-Coll-UnbalancedSet.html#lookupWithDefault",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll UnbalancedSet",
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "lookupWithDefault",
          "normalized": "a-\u003ea-\u003eSet a-\u003ea",
          "package": "EdisonCore",
          "partial": "With Default",
          "signature": "a-\u003ea-\u003eSet a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-UnbalancedSet.html#v:lookupWithDefault"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "maxElem",
          "package": "EdisonCore",
          "signature": "Set a -\u003e a",
          "source": "src/Data-Edison-Coll-UnbalancedSet.html#maxElem",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll UnbalancedSet",
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "maxElem",
          "normalized": "Set a-\u003ea",
          "package": "EdisonCore",
          "partial": "Elem",
          "signature": "Set a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-UnbalancedSet.html#v:maxElem"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "maxView",
          "package": "EdisonCore",
          "signature": "Set a -\u003e m (a, Set a)",
          "source": "src/Data-Edison-Coll-UnbalancedSet.html#maxView",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll UnbalancedSet",
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "maxView",
          "normalized": "Set a-\u003eb(a,Set a)",
          "package": "EdisonCore",
          "partial": "View",
          "signature": "Set a-\u003em(a,Set a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-UnbalancedSet.html#v:maxView"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "member",
          "package": "EdisonCore",
          "signature": "a -\u003e Set a -\u003e Bool",
          "source": "src/Data-Edison-Coll-UnbalancedSet.html#member",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll UnbalancedSet",
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "member",
          "normalized": "a-\u003eSet a-\u003eBool",
          "package": "EdisonCore",
          "signature": "a-\u003eSet a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-UnbalancedSet.html#v:member"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "minElem",
          "package": "EdisonCore",
          "signature": "Set a -\u003e a",
          "source": "src/Data-Edison-Coll-UnbalancedSet.html#minElem",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll UnbalancedSet",
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "minElem",
          "normalized": "Set a-\u003ea",
          "package": "EdisonCore",
          "partial": "Elem",
          "signature": "Set a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-UnbalancedSet.html#v:minElem"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "minView",
          "package": "EdisonCore",
          "signature": "Set a -\u003e m (a, Set a)",
          "source": "src/Data-Edison-Coll-UnbalancedSet.html#minView",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll UnbalancedSet",
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "minView",
          "normalized": "Set a-\u003eb(a,Set a)",
          "package": "EdisonCore",
          "partial": "View",
          "signature": "Set a-\u003em(a,Set a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-UnbalancedSet.html#v:minView"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "moduleName",
          "package": "EdisonCore",
          "signature": "String",
          "source": "src/Data-Edison-Coll-UnbalancedSet.html#moduleName",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll UnbalancedSet",
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "moduleName",
          "package": "EdisonCore",
          "partial": "Name",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-UnbalancedSet.html#v:moduleName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "null",
          "package": "EdisonCore",
          "signature": "Set a -\u003e Bool",
          "source": "src/Data-Edison-Coll-UnbalancedSet.html#null",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll UnbalancedSet",
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "null",
          "normalized": "Set a-\u003eBool",
          "package": "EdisonCore",
          "signature": "Set a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-UnbalancedSet.html#v:null"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "partition",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e Set a -\u003e (Set a, Set a)",
          "source": "src/Data-Edison-Coll-UnbalancedSet.html#partition",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll UnbalancedSet",
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "partition",
          "normalized": "(a-\u003eBool)-\u003eSet a-\u003e(Set a,Set a)",
          "package": "EdisonCore",
          "signature": "(a-\u003eBool)-\u003eSet a-\u003e(Set a,Set a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-UnbalancedSet.html#v:partition"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "partitionLE_GT",
          "package": "EdisonCore",
          "signature": "a -\u003e Set a -\u003e (Set a, Set a)",
          "source": "src/Data-Edison-Coll-UnbalancedSet.html#partitionLE_GT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll UnbalancedSet",
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "partitionLE_GT",
          "normalized": "a-\u003eSet a-\u003e(Set a,Set a)",
          "package": "EdisonCore",
          "partial": "LE GT",
          "signature": "a-\u003eSet a-\u003e(Set a,Set a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-UnbalancedSet.html#v:partitionLE_GT"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "partitionLT_GE",
          "package": "EdisonCore",
          "signature": "a -\u003e Set a -\u003e (Set a, Set a)",
          "source": "src/Data-Edison-Coll-UnbalancedSet.html#partitionLT_GE",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll UnbalancedSet",
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "partitionLT_GE",
          "normalized": "a-\u003eSet a-\u003e(Set a,Set a)",
          "package": "EdisonCore",
          "partial": "LT GE",
          "signature": "a-\u003eSet a-\u003e(Set a,Set a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-UnbalancedSet.html#v:partitionLT_GE"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "partitionLT_GT",
          "package": "EdisonCore",
          "signature": "a -\u003e Set a -\u003e (Set a, Set a)",
          "source": "src/Data-Edison-Coll-UnbalancedSet.html#partitionLT_GT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll UnbalancedSet",
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "partitionLT_GT",
          "normalized": "a-\u003eSet a-\u003e(Set a,Set a)",
          "package": "EdisonCore",
          "partial": "LT GT",
          "signature": "a-\u003eSet a-\u003e(Set a,Set a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-UnbalancedSet.html#v:partitionLT_GT"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "properSubset",
          "package": "EdisonCore",
          "signature": "Set a -\u003e Set a -\u003e Bool",
          "source": "src/Data-Edison-Coll-UnbalancedSet.html#properSubset",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll UnbalancedSet",
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "properSubset",
          "normalized": "Set a-\u003eSet a-\u003eBool",
          "package": "EdisonCore",
          "partial": "Subset",
          "signature": "Set a-\u003eSet a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-UnbalancedSet.html#v:properSubset"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "singleton",
          "package": "EdisonCore",
          "signature": "a -\u003e Set a",
          "source": "src/Data-Edison-Coll-UnbalancedSet.html#singleton",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll UnbalancedSet",
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "singleton",
          "normalized": "a-\u003eSet a",
          "package": "EdisonCore",
          "signature": "a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-UnbalancedSet.html#v:singleton"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "size",
          "package": "EdisonCore",
          "signature": "Set a -\u003e Int",
          "source": "src/Data-Edison-Coll-UnbalancedSet.html#size",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll UnbalancedSet",
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "size",
          "normalized": "Set a-\u003eInt",
          "package": "EdisonCore",
          "signature": "Set a-\u003eInt",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-UnbalancedSet.html#v:size"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "strict",
          "package": "EdisonCore",
          "signature": "Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-UnbalancedSet.html#strict",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll UnbalancedSet",
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "strict",
          "normalized": "Set a-\u003eSet a",
          "package": "EdisonCore",
          "signature": "Set a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-UnbalancedSet.html#v:strict"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "strictWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e b) -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-UnbalancedSet.html#strictWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll UnbalancedSet",
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "strictWith",
          "normalized": "(a-\u003eb)-\u003eSet a-\u003eSet a",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003eb)-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-UnbalancedSet.html#v:strictWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "structuralInvariant",
          "package": "EdisonCore",
          "signature": "Set a -\u003e Bool",
          "source": "src/Data-Edison-Coll-UnbalancedSet.html#structuralInvariant",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll UnbalancedSet",
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "structuralInvariant",
          "normalized": "Set a-\u003eBool",
          "package": "EdisonCore",
          "partial": "Invariant",
          "signature": "Set a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-UnbalancedSet.html#v:structuralInvariant"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "subset",
          "package": "EdisonCore",
          "signature": "Set a -\u003e Set a -\u003e Bool",
          "source": "src/Data-Edison-Coll-UnbalancedSet.html#subset",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll UnbalancedSet",
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "subset",
          "normalized": "Set a-\u003eSet a-\u003eBool",
          "package": "EdisonCore",
          "signature": "Set a-\u003eSet a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-UnbalancedSet.html#v:subset"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "symmetricDifference",
          "package": "EdisonCore",
          "signature": "Set a -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-UnbalancedSet.html#symmetricDifference",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll UnbalancedSet",
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "symmetricDifference",
          "normalized": "Set a-\u003eSet a-\u003eSet a",
          "package": "EdisonCore",
          "partial": "Difference",
          "signature": "Set a-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-UnbalancedSet.html#v:symmetricDifference"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "toOrdSeq",
          "package": "EdisonCore",
          "signature": "Set a -\u003e seq a",
          "source": "src/Data-Edison-Coll-UnbalancedSet.html#toOrdSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll UnbalancedSet",
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "toOrdSeq",
          "normalized": "Set a-\u003eb a",
          "package": "EdisonCore",
          "partial": "Ord Seq",
          "signature": "Set a-\u003eseq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-UnbalancedSet.html#v:toOrdSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "toSeq",
          "package": "EdisonCore",
          "signature": "Set a -\u003e seq a",
          "source": "src/Data-Edison-Coll-UnbalancedSet.html#toSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll UnbalancedSet",
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "toSeq",
          "normalized": "Set a-\u003eb a",
          "package": "EdisonCore",
          "partial": "Seq",
          "signature": "Set a-\u003eseq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-UnbalancedSet.html#v:toSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "union",
          "package": "EdisonCore",
          "signature": "Set a -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-UnbalancedSet.html#union",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll UnbalancedSet",
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "union",
          "normalized": "Set a-\u003eSet a-\u003eSet a",
          "package": "EdisonCore",
          "signature": "Set a-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-UnbalancedSet.html#v:union"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "unionSeq",
          "package": "EdisonCore",
          "signature": "seq (Set a) -\u003e Set a",
          "source": "src/Data-Edison-Coll-UnbalancedSet.html#unionSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll UnbalancedSet",
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "unionSeq",
          "normalized": "a(Set b)-\u003eSet b",
          "package": "EdisonCore",
          "partial": "Seq",
          "signature": "seq(Set a)-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-UnbalancedSet.html#v:unionSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "unionSeqWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e seq (Set a) -\u003e Set a",
          "source": "src/Data-Edison-Coll-UnbalancedSet.html#unionSeqWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll UnbalancedSet",
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "unionSeqWith",
          "normalized": "(a-\u003ea-\u003ea)-\u003eb(Set a)-\u003eSet a",
          "package": "EdisonCore",
          "partial": "Seq With",
          "signature": "(a-\u003ea-\u003ea)-\u003eseq(Set a)-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-UnbalancedSet.html#v:unionSeqWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "unionWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Set a -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-UnbalancedSet.html#unionWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll UnbalancedSet",
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "unionWith",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSet a-\u003eSet a-\u003eSet a",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003ea-\u003ea)-\u003eSet a-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-UnbalancedSet.html#v:unionWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "unionl",
          "package": "EdisonCore",
          "signature": "Set a -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-UnbalancedSet.html#unionl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll UnbalancedSet",
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "unionl",
          "normalized": "Set a-\u003eSet a-\u003eSet a",
          "package": "EdisonCore",
          "signature": "Set a-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-UnbalancedSet.html#v:unionl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "unionr",
          "package": "EdisonCore",
          "signature": "Set a -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-UnbalancedSet.html#unionr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll UnbalancedSet",
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "unionr",
          "normalized": "Set a-\u003eSet a-\u003eSet a",
          "package": "EdisonCore",
          "signature": "Set a-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-UnbalancedSet.html#v:unionr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "unsafeAppend",
          "package": "EdisonCore",
          "signature": "Set a -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-UnbalancedSet.html#unsafeAppend",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll UnbalancedSet",
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "unsafeAppend",
          "normalized": "Set a-\u003eSet a-\u003eSet a",
          "package": "EdisonCore",
          "partial": "Append",
          "signature": "Set a-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-UnbalancedSet.html#v:unsafeAppend"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "unsafeFromOrdSeq",
          "package": "EdisonCore",
          "signature": "seq a -\u003e Set a",
          "source": "src/Data-Edison-Coll-UnbalancedSet.html#unsafeFromOrdSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll UnbalancedSet",
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "unsafeFromOrdSeq",
          "normalized": "a b-\u003eSet b",
          "package": "EdisonCore",
          "partial": "From Ord Seq",
          "signature": "seq a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-UnbalancedSet.html#v:unsafeFromOrdSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "unsafeInsertMax",
          "package": "EdisonCore",
          "signature": "a -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-UnbalancedSet.html#unsafeInsertMax",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll UnbalancedSet",
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "unsafeInsertMax",
          "normalized": "a-\u003eSet a-\u003eSet a",
          "package": "EdisonCore",
          "partial": "Insert Max",
          "signature": "a-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-UnbalancedSet.html#v:unsafeInsertMax"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "unsafeInsertMin",
          "package": "EdisonCore",
          "signature": "a -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-UnbalancedSet.html#unsafeInsertMin",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll UnbalancedSet",
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "unsafeInsertMin",
          "normalized": "a-\u003eSet a-\u003eSet a",
          "package": "EdisonCore",
          "partial": "Insert Min",
          "signature": "a-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-UnbalancedSet.html#v:unsafeInsertMin"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "unsafeMapMonotonic",
          "package": "EdisonCore",
          "signature": "(a -\u003e a) -\u003e Set a -\u003e Set a",
          "source": "src/Data-Edison-Coll-UnbalancedSet.html#unsafeMapMonotonic",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Coll UnbalancedSet",
          "module": "Data.Edison.Coll.UnbalancedSet",
          "name": "unsafeMapMonotonic",
          "normalized": "(a-\u003ea)-\u003eSet a-\u003eSet a",
          "package": "EdisonCore",
          "partial": "Map Monotonic",
          "signature": "(a-\u003ea)-\u003eSet a-\u003eSet a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Coll-UnbalancedSet.html#v:unsafeMapMonotonic"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA general sequence representation with arbitrary annotations, for\n use as a base for implementations of various collection types, as\n described in section 4 of\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e Ralf Hinze and Ross Paterson,\n      \"Finger trees: a simple general-purpose data structure\",\n      \u003cem\u003eJournal of Functional Programming\u003c/em\u003e 16:2 (2006) pp 197-217.\n      \u003ca\u003ehttp://www.soi.city.ac.uk/~ross/papers/FingerTree.html\u003c/a\u003e\n\u003c/li\u003e\u003c/ul\u003e\u003cp\u003eThis data structure forms the basis of the \u003ca\u003eData.Edison.Seq.FingerSeq\u003c/a\u003e\n sequence data structure.\n\u003c/p\u003e\u003cp\u003eAn amortized running time is given for each operation, with \u003cem\u003en\u003c/em\u003e\n referring to the length of the sequence.  These bounds hold even in\n a persistent (shared) setting.\n\u003c/p\u003e\u003c/div\u003e",
          "module": "Data.Edison.Concrete.FingerTree",
          "name": "FingerTree",
          "package": "EdisonCore",
          "source": "src/Data-Edison-Concrete-FingerTree.html",
          "type": "module"
        },
        "index": {
          "description": "general sequence representation with arbitrary annotations for use as base for implementations of various collection types as described in section of Ralf Hinze and Ross Paterson Finger trees simple general-purpose data structure Journal of Functional Programming pp http www.soi.city.ac.uk ross papers FingerTree.html This data structure forms the basis of the Data.Edison.Seq.FingerSeq sequence data structure An amortized running time is given for each operation with referring to the length of the sequence These bounds hold even in persistent shared setting",
          "hierarchy": "Data Edison Concrete FingerTree",
          "module": "Data.Edison.Concrete.FingerTree",
          "name": "FingerTree",
          "package": "EdisonCore",
          "partial": "Finger Tree",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Concrete-FingerTree.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eFinger trees with element type \u003ccode\u003ea\u003c/code\u003e, annotated with measures of type \u003ccode\u003ev\u003c/code\u003e.\n The operations enforce the constraint \u003ccode\u003e\u003ccode\u003e\u003ca\u003eMeasured\u003c/a\u003e\u003c/code\u003e v a\u003c/code\u003e.\n\u003c/p\u003e",
          "module": "Data.Edison.Concrete.FingerTree",
          "name": "FingerTree",
          "package": "EdisonCore",
          "source": "src/Data-Edison-Concrete-FingerTree.html#FingerTree",
          "type": "data"
        },
        "index": {
          "description": "Finger trees with element type annotated with measures of type The operations enforce the constraint Measured",
          "hierarchy": "Data Edison Concrete FingerTree",
          "module": "Data.Edison.Concrete.FingerTree",
          "name": "FingerTree",
          "package": "EdisonCore",
          "partial": "Finger Tree",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Concrete-FingerTree.html#t:FingerTree"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Concrete.FingerTree",
          "name": "Split",
          "package": "EdisonCore",
          "source": "src/Data-Edison-Concrete-FingerTree.html#Split",
          "type": "data"
        },
        "index": {
          "hierarchy": "Data Edison Concrete FingerTree",
          "module": "Data.Edison.Concrete.FingerTree",
          "name": "Split",
          "package": "EdisonCore",
          "partial": "Split",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Concrete-FingerTree.html#t:Split"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Concrete.FingerTree",
          "name": "Split",
          "package": "EdisonCore",
          "signature": "Split t a t",
          "source": "src/Data-Edison-Concrete-FingerTree.html#Split",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Concrete FingerTree",
          "module": "Data.Edison.Concrete.FingerTree",
          "name": "Split",
          "package": "EdisonCore",
          "partial": "Split",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Concrete-FingerTree.html#v:Split"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e\u003cem\u003eO(log(min(n1,n2)))\u003c/em\u003e. Concatenate two sequences.\n\u003c/p\u003e",
          "module": "Data.Edison.Concrete.FingerTree",
          "name": "append",
          "package": "EdisonCore",
          "signature": "FingerTree v a -\u003e FingerTree v a -\u003e FingerTree v a",
          "source": "src/Data-Edison-Concrete-FingerTree.html#append",
          "type": "function"
        },
        "index": {
          "description": "log min n1 n2 Concatenate two sequences",
          "hierarchy": "Data Edison Concrete FingerTree",
          "module": "Data.Edison.Concrete.FingerTree",
          "name": "append",
          "normalized": "FingerTree a b-\u003eFingerTree a b-\u003eFingerTree a b",
          "package": "EdisonCore",
          "signature": "FingerTree v a-\u003eFingerTree v a-\u003eFingerTree v a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Concrete-FingerTree.html#v:append"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Concrete.FingerTree",
          "name": "dropUntil",
          "package": "EdisonCore",
          "signature": "(v -\u003e Bool) -\u003e FingerTree v a -\u003e FingerTree v a",
          "source": "src/Data-Edison-Concrete-FingerTree.html#dropUntil",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Concrete FingerTree",
          "module": "Data.Edison.Concrete.FingerTree",
          "name": "dropUntil",
          "normalized": "(a-\u003eBool)-\u003eFingerTree a b-\u003eFingerTree a b",
          "package": "EdisonCore",
          "partial": "Until",
          "signature": "(v-\u003eBool)-\u003eFingerTree v a-\u003eFingerTree v a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Concrete-FingerTree.html#v:dropUntil"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e\u003cem\u003eO(1)\u003c/em\u003e. The empty sequence.\n\u003c/p\u003e",
          "module": "Data.Edison.Concrete.FingerTree",
          "name": "empty",
          "package": "EdisonCore",
          "signature": "FingerTree v a",
          "source": "src/Data-Edison-Concrete-FingerTree.html#empty",
          "type": "function"
        },
        "index": {
          "description": "The empty sequence",
          "hierarchy": "Data Edison Concrete FingerTree",
          "module": "Data.Edison.Concrete.FingerTree",
          "name": "empty",
          "package": "EdisonCore",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Concrete-FingerTree.html#v:empty"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Concrete.FingerTree",
          "name": "foldFT",
          "package": "EdisonCore",
          "signature": "b -\u003e (b -\u003e b -\u003e b) -\u003e (a -\u003e b) -\u003e FingerTree v a -\u003e b",
          "source": "src/Data-Edison-Concrete-FingerTree.html#foldFT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Concrete FingerTree",
          "module": "Data.Edison.Concrete.FingerTree",
          "name": "foldFT",
          "normalized": "a-\u003e(a-\u003ea-\u003ea)-\u003e(b-\u003ea)-\u003eFingerTree c b-\u003ea",
          "package": "EdisonCore",
          "partial": "FT",
          "signature": "b-\u003e(b-\u003eb-\u003eb)-\u003e(a-\u003eb)-\u003eFingerTree v a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Concrete-FingerTree.html#v:foldFT"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e\u003cem\u003eO(n)\u003c/em\u003e. Create a sequence from a finite list of elements.\n\u003c/p\u003e",
          "module": "Data.Edison.Concrete.FingerTree",
          "name": "fromList",
          "package": "EdisonCore",
          "signature": "[a] -\u003e FingerTree v a",
          "source": "src/Data-Edison-Concrete-FingerTree.html#fromList",
          "type": "function"
        },
        "index": {
          "description": "Create sequence from finite list of elements",
          "hierarchy": "Data Edison Concrete FingerTree",
          "module": "Data.Edison.Concrete.FingerTree",
          "name": "fromList",
          "normalized": "[a]-\u003eFingerTree b a",
          "package": "EdisonCore",
          "partial": "List",
          "signature": "[a]-\u003eFingerTree v a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Concrete-FingerTree.html#v:fromList"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e\u003cem\u003eO(1)\u003c/em\u003e. Add an element to the left end of a sequence.\n\u003c/p\u003e",
          "module": "Data.Edison.Concrete.FingerTree",
          "name": "lcons",
          "package": "EdisonCore",
          "signature": "a -\u003e FingerTree v a -\u003e FingerTree v a",
          "source": "src/Data-Edison-Concrete-FingerTree.html#lcons",
          "type": "function"
        },
        "index": {
          "description": "Add an element to the left end of sequence",
          "hierarchy": "Data Edison Concrete FingerTree",
          "module": "Data.Edison.Concrete.FingerTree",
          "name": "lcons",
          "normalized": "a-\u003eFingerTree b a-\u003eFingerTree b a",
          "package": "EdisonCore",
          "signature": "a-\u003eFingerTree v a-\u003eFingerTree v a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Concrete-FingerTree.html#v:lcons"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e\u003cem\u003eO(1)\u003c/em\u003e. Analyse the left end of a sequence.\n\u003c/p\u003e",
          "module": "Data.Edison.Concrete.FingerTree",
          "name": "lview",
          "package": "EdisonCore",
          "signature": "FingerTree v a -\u003e m (a, FingerTree v a)",
          "source": "src/Data-Edison-Concrete-FingerTree.html#lview",
          "type": "function"
        },
        "index": {
          "description": "Analyse the left end of sequence",
          "hierarchy": "Data Edison Concrete FingerTree",
          "module": "Data.Edison.Concrete.FingerTree",
          "name": "lview",
          "normalized": "FingerTree a b-\u003ec(b,FingerTree a b)",
          "package": "EdisonCore",
          "signature": "FingerTree v a-\u003em(a,FingerTree v a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Concrete-FingerTree.html#v:lview"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Concrete.FingerTree",
          "name": "mapTree",
          "package": "EdisonCore",
          "signature": "(a1 -\u003e a2) -\u003e FingerTree v1 a1 -\u003e FingerTree v2 a2",
          "source": "src/Data-Edison-Concrete-FingerTree.html#mapTree",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Concrete FingerTree",
          "module": "Data.Edison.Concrete.FingerTree",
          "name": "mapTree",
          "normalized": "(a-\u003ea)-\u003eFingerTree b a-\u003eFingerTree b a",
          "package": "EdisonCore",
          "partial": "Tree",
          "signature": "(a-\u003ea)-\u003eFingerTree v a-\u003eFingerTree v a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Concrete-FingerTree.html#v:mapTree"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e\u003cem\u003eO(1)\u003c/em\u003e. Is this the empty sequence?\n\u003c/p\u003e",
          "module": "Data.Edison.Concrete.FingerTree",
          "name": "null",
          "package": "EdisonCore",
          "signature": "FingerTree v a -\u003e Bool",
          "source": "src/Data-Edison-Concrete-FingerTree.html#null",
          "type": "function"
        },
        "index": {
          "description": "Is this the empty sequence",
          "hierarchy": "Data Edison Concrete FingerTree",
          "module": "Data.Edison.Concrete.FingerTree",
          "name": "null",
          "normalized": "FingerTree a b-\u003eBool",
          "package": "EdisonCore",
          "signature": "FingerTree v a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Concrete-FingerTree.html#v:null"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e\u003cem\u003eO(1)\u003c/em\u003e. Add an element to the right end of a sequence.\n\u003c/p\u003e",
          "module": "Data.Edison.Concrete.FingerTree",
          "name": "rcons",
          "package": "EdisonCore",
          "signature": "a -\u003e FingerTree v a -\u003e FingerTree v a",
          "source": "src/Data-Edison-Concrete-FingerTree.html#rcons",
          "type": "function"
        },
        "index": {
          "description": "Add an element to the right end of sequence",
          "hierarchy": "Data Edison Concrete FingerTree",
          "module": "Data.Edison.Concrete.FingerTree",
          "name": "rcons",
          "normalized": "a-\u003eFingerTree b a-\u003eFingerTree b a",
          "package": "EdisonCore",
          "signature": "a-\u003eFingerTree v a-\u003eFingerTree v a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Concrete-FingerTree.html#v:rcons"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Concrete.FingerTree",
          "name": "reduce1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e FingerTree v a -\u003e a",
          "source": "src/Data-Edison-Concrete-FingerTree.html#reduce1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Concrete FingerTree",
          "module": "Data.Edison.Concrete.FingerTree",
          "name": "reduce1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eFingerTree b a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eFingerTree v a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Concrete-FingerTree.html#v:reduce1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Concrete.FingerTree",
          "name": "reduce1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e FingerTree v a -\u003e a",
          "source": "src/Data-Edison-Concrete-FingerTree.html#reduce1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Concrete FingerTree",
          "module": "Data.Edison.Concrete.FingerTree",
          "name": "reduce1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eFingerTree b a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eFingerTree v a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Concrete-FingerTree.html#v:reduce1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e\u003cem\u003eO(n)\u003c/em\u003e. The reverse of a sequence.\n\u003c/p\u003e",
          "module": "Data.Edison.Concrete.FingerTree",
          "name": "reverse",
          "package": "EdisonCore",
          "signature": "FingerTree v a -\u003e FingerTree v a",
          "source": "src/Data-Edison-Concrete-FingerTree.html#reverse",
          "type": "function"
        },
        "index": {
          "description": "The reverse of sequence",
          "hierarchy": "Data Edison Concrete FingerTree",
          "module": "Data.Edison.Concrete.FingerTree",
          "name": "reverse",
          "normalized": "FingerTree a b-\u003eFingerTree a b",
          "package": "EdisonCore",
          "signature": "FingerTree v a-\u003eFingerTree v a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Concrete-FingerTree.html#v:reverse"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e\u003cem\u003eO(1)\u003c/em\u003e. Analyse the right end of a sequence.\n\u003c/p\u003e",
          "module": "Data.Edison.Concrete.FingerTree",
          "name": "rview",
          "package": "EdisonCore",
          "signature": "FingerTree v a -\u003e m (a, FingerTree v a)",
          "source": "src/Data-Edison-Concrete-FingerTree.html#rview",
          "type": "function"
        },
        "index": {
          "description": "Analyse the right end of sequence",
          "hierarchy": "Data Edison Concrete FingerTree",
          "module": "Data.Edison.Concrete.FingerTree",
          "name": "rview",
          "normalized": "FingerTree a b-\u003ec(b,FingerTree a b)",
          "package": "EdisonCore",
          "signature": "FingerTree v a-\u003em(a,FingerTree v a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Concrete-FingerTree.html#v:rview"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e\u003cem\u003eO(1)\u003c/em\u003e. A singleton sequence.\n\u003c/p\u003e",
          "module": "Data.Edison.Concrete.FingerTree",
          "name": "singleton",
          "package": "EdisonCore",
          "signature": "a -\u003e FingerTree v a",
          "source": "src/Data-Edison-Concrete-FingerTree.html#singleton",
          "type": "function"
        },
        "index": {
          "description": "singleton sequence",
          "hierarchy": "Data Edison Concrete FingerTree",
          "module": "Data.Edison.Concrete.FingerTree",
          "name": "singleton",
          "normalized": "a-\u003eFingerTree b a",
          "package": "EdisonCore",
          "signature": "a-\u003eFingerTree v a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Concrete-FingerTree.html#v:singleton"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Concrete.FingerTree",
          "name": "size",
          "package": "EdisonCore",
          "signature": "FingerTree v a -\u003e Int",
          "source": "src/Data-Edison-Concrete-FingerTree.html#size",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Concrete FingerTree",
          "module": "Data.Edison.Concrete.FingerTree",
          "name": "size",
          "normalized": "FingerTree a b-\u003eInt",
          "package": "EdisonCore",
          "signature": "FingerTree v a-\u003eInt",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Concrete-FingerTree.html#v:size"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e\u003cem\u003eO(log(min(i,n-i)))\u003c/em\u003e. Split a sequence at a point where the predicate\n on the accumulated measure changes from \u003ccode\u003e\u003ca\u003eFalse\u003c/a\u003e\u003c/code\u003e to \u003ccode\u003e\u003ca\u003eTrue\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
          "module": "Data.Edison.Concrete.FingerTree",
          "name": "split",
          "package": "EdisonCore",
          "signature": "(v -\u003e Bool) -\u003e FingerTree v a -\u003e (FingerTree v a, FingerTree v a)",
          "source": "src/Data-Edison-Concrete-FingerTree.html#split",
          "type": "function"
        },
        "index": {
          "description": "log min n-i Split sequence at point where the predicate on the accumulated measure changes from False to True",
          "hierarchy": "Data Edison Concrete FingerTree",
          "module": "Data.Edison.Concrete.FingerTree",
          "name": "split",
          "normalized": "(a-\u003eBool)-\u003eFingerTree a b-\u003e(FingerTree a b,FingerTree a b)",
          "package": "EdisonCore",
          "signature": "(v-\u003eBool)-\u003eFingerTree v a-\u003e(FingerTree v a,FingerTree v a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Concrete-FingerTree.html#v:split"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Concrete.FingerTree",
          "name": "splitTree",
          "package": "EdisonCore",
          "signature": "(v -\u003e Bool) -\u003e v -\u003e FingerTree v a -\u003e Split (FingerTree v a) a",
          "source": "src/Data-Edison-Concrete-FingerTree.html#splitTree",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Concrete FingerTree",
          "module": "Data.Edison.Concrete.FingerTree",
          "name": "splitTree",
          "normalized": "(a-\u003eBool)-\u003ea-\u003eFingerTree a b-\u003eSplit(FingerTree a b)b",
          "package": "EdisonCore",
          "partial": "Tree",
          "signature": "(v-\u003eBool)-\u003ev-\u003eFingerTree v a-\u003eSplit(FingerTree v a)a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Concrete-FingerTree.html#v:splitTree"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Concrete.FingerTree",
          "name": "strict",
          "package": "EdisonCore",
          "signature": "FingerTree v a -\u003e FingerTree v a",
          "source": "src/Data-Edison-Concrete-FingerTree.html#strict",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Concrete FingerTree",
          "module": "Data.Edison.Concrete.FingerTree",
          "name": "strict",
          "normalized": "FingerTree a b-\u003eFingerTree a b",
          "package": "EdisonCore",
          "signature": "FingerTree v a-\u003eFingerTree v a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Concrete-FingerTree.html#v:strict"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Concrete.FingerTree",
          "name": "strictWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e b) -\u003e FingerTree v a -\u003e FingerTree v a",
          "source": "src/Data-Edison-Concrete-FingerTree.html#strictWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Concrete FingerTree",
          "module": "Data.Edison.Concrete.FingerTree",
          "name": "strictWith",
          "normalized": "(a-\u003eb)-\u003eFingerTree c a-\u003eFingerTree c a",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003eb)-\u003eFingerTree v a-\u003eFingerTree v a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Concrete-FingerTree.html#v:strictWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Concrete.FingerTree",
          "name": "structuralInvariant",
          "package": "EdisonCore",
          "signature": "FingerTree v a -\u003e Bool",
          "source": "src/Data-Edison-Concrete-FingerTree.html#structuralInvariant",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Concrete FingerTree",
          "module": "Data.Edison.Concrete.FingerTree",
          "name": "structuralInvariant",
          "normalized": "FingerTree a b-\u003eBool",
          "package": "EdisonCore",
          "partial": "Invariant",
          "signature": "FingerTree v a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Concrete-FingerTree.html#v:structuralInvariant"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Concrete.FingerTree",
          "name": "takeUntil",
          "package": "EdisonCore",
          "signature": "(v -\u003e Bool) -\u003e FingerTree v a -\u003e FingerTree v a",
          "source": "src/Data-Edison-Concrete-FingerTree.html#takeUntil",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Concrete FingerTree",
          "module": "Data.Edison.Concrete.FingerTree",
          "name": "takeUntil",
          "normalized": "(a-\u003eBool)-\u003eFingerTree a b-\u003eFingerTree a b",
          "package": "EdisonCore",
          "partial": "Until",
          "signature": "(v-\u003eBool)-\u003eFingerTree v a-\u003eFingerTree v a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Concrete-FingerTree.html#v:takeUntil"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Concrete.FingerTree",
          "name": "toList",
          "package": "EdisonCore",
          "signature": "FingerTree v a -\u003e [a]",
          "source": "src/Data-Edison-Concrete-FingerTree.html#toList",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Concrete FingerTree",
          "module": "Data.Edison.Concrete.FingerTree",
          "name": "toList",
          "normalized": "FingerTree a b-\u003e[b]",
          "package": "EdisonCore",
          "partial": "List",
          "signature": "FingerTree v a-\u003e[a]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Concrete-FingerTree.html#v:toList"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThis module implements Banker's Queues. It has the standard running\n   times from \u003ca\u003eData.Edison.Seq\u003c/a\u003e except for the following:\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e rcons, size, inBounds   \u003ccode\u003eO( 1 )\u003c/code\u003e\n\u003c/li\u003e\u003c/ul\u003e\u003cp\u003e\u003cem\u003eReferences:\u003c/em\u003e\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e Chris Okasaki, \u003cem\u003ePurely Functional Data Structures\u003c/em\u003e,\n     1998, sections 6.3.2 and 8.4.1.\n\u003c/li\u003e\u003cli\u003e Chris Okasaki, \"Simple and efficient purely functional\n     queues and deques\", \u003cem\u003eJournal of Function Programming\u003c/em\u003e\n     5(4):583-592, October 1995.\n\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "BankersQueue",
          "package": "EdisonCore",
          "source": "src/Data-Edison-Seq-BankersQueue.html",
          "type": "module"
        },
        "index": {
          "description": "This module implements Banker Queues It has the standard running times from Data.Edison.Seq except for the following rcons size inBounds References Chris Okasaki Purely Functional Data Structures sections and Chris Okasaki Simple and efficient purely functional queues and deques Journal of Function Programming October",
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "BankersQueue",
          "package": "EdisonCore",
          "partial": "Bankers Queue",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "Seq",
          "package": "EdisonCore",
          "source": "src/Data-Edison-Seq-BankersQueue.html#Seq",
          "type": "data"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "Seq",
          "package": "EdisonCore",
          "partial": "Seq",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#t:Seq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "adjust",
          "package": "EdisonCore",
          "signature": "(a -\u003e a) -\u003e Int -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-BankersQueue.html#adjust",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "adjust",
          "normalized": "(a-\u003ea)-\u003eInt-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "(a-\u003ea)-\u003eInt-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:adjust"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "append",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-BankersQueue.html#append",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "append",
          "normalized": "Seq a-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Seq a-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:append"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "concat",
          "package": "EdisonCore",
          "signature": "Seq (Seq a) -\u003e Seq a",
          "source": "src/Data-Edison-Seq-BankersQueue.html#concat",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "concat",
          "normalized": "Seq(Seq a)-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Seq(Seq a)-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:concat"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "concatMap",
          "package": "EdisonCore",
          "signature": "(a -\u003e Seq b) -\u003e Seq a -\u003e Seq b",
          "source": "src/Data-Edison-Seq-BankersQueue.html#concatMap",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "concatMap",
          "normalized": "(a-\u003eSeq b)-\u003eSeq a-\u003eSeq b",
          "package": "EdisonCore",
          "partial": "Map",
          "signature": "(a-\u003eSeq b)-\u003eSeq a-\u003eSeq b",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:concatMap"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "copy",
          "package": "EdisonCore",
          "signature": "Int -\u003e a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-BankersQueue.html#copy",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "copy",
          "normalized": "Int-\u003ea-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Int-\u003ea-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:copy"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "drop",
          "package": "EdisonCore",
          "signature": "Int -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-BankersQueue.html#drop",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "drop",
          "normalized": "Int-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Int-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:drop"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "dropWhile",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-BankersQueue.html#dropWhile",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "dropWhile",
          "normalized": "(a-\u003eBool)-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "partial": "While",
          "signature": "(a-\u003eBool)-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:dropWhile"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "empty",
          "package": "EdisonCore",
          "signature": "Seq a",
          "source": "src/Data-Edison-Seq-BankersQueue.html#empty",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "empty",
          "package": "EdisonCore",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:empty"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "filter",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-BankersQueue.html#filter",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "filter",
          "normalized": "(a-\u003eBool)-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "(a-\u003eBool)-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:filter"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "fold",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-BankersQueue.html#fold",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "fold",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:fold"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "fold'",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-BankersQueue.html#fold%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "fold'",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:fold-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "fold1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-BankersQueue.html#fold1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "fold1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:fold1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "fold1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-BankersQueue.html#fold1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "fold1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:fold1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "foldl",
          "package": "EdisonCore",
          "signature": "(b -\u003e a -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-BankersQueue.html#foldl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "foldl",
          "normalized": "(a-\u003eb-\u003ea)-\u003ea-\u003eSeq b-\u003ea",
          "package": "EdisonCore",
          "signature": "(b-\u003ea-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:foldl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "foldl'",
          "package": "EdisonCore",
          "signature": "(b -\u003e a -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-BankersQueue.html#foldl%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "foldl'",
          "normalized": "(a-\u003eb-\u003ea)-\u003ea-\u003eSeq b-\u003ea",
          "package": "EdisonCore",
          "signature": "(b-\u003ea-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:foldl-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "foldl1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-BankersQueue.html#foldl1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "foldl1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:foldl1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "foldl1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-BankersQueue.html#foldl1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "foldl1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:foldl1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "foldlWithIndex",
          "package": "EdisonCore",
          "signature": "(b -\u003e Int -\u003e a -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-BankersQueue.html#foldlWithIndex",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "foldlWithIndex",
          "normalized": "(a-\u003eInt-\u003eb-\u003ea)-\u003ea-\u003eSeq b-\u003ea",
          "package": "EdisonCore",
          "partial": "With Index",
          "signature": "(b-\u003eInt-\u003ea-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:foldlWithIndex"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "foldlWithIndex'",
          "package": "EdisonCore",
          "signature": "(b -\u003e Int -\u003e a -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-BankersQueue.html#foldlWithIndex%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "foldlWithIndex'",
          "normalized": "(a-\u003eInt-\u003eb-\u003ea)-\u003ea-\u003eSeq b-\u003ea",
          "package": "EdisonCore",
          "partial": "With Index'",
          "signature": "(b-\u003eInt-\u003ea-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:foldlWithIndex-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "foldr",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-BankersQueue.html#foldr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "foldr",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:foldr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "foldr'",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-BankersQueue.html#foldr%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "foldr'",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:foldr-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "foldr1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-BankersQueue.html#foldr1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "foldr1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:foldr1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "foldr1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-BankersQueue.html#foldr1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "foldr1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:foldr1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "foldrWithIndex",
          "package": "EdisonCore",
          "signature": "(Int -\u003e a -\u003e b -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-BankersQueue.html#foldrWithIndex",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "foldrWithIndex",
          "normalized": "(Int-\u003ea-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "package": "EdisonCore",
          "partial": "With Index",
          "signature": "(Int-\u003ea-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:foldrWithIndex"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "foldrWithIndex'",
          "package": "EdisonCore",
          "signature": "(Int -\u003e a -\u003e b -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-BankersQueue.html#foldrWithIndex%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "foldrWithIndex'",
          "normalized": "(Int-\u003ea-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "package": "EdisonCore",
          "partial": "With Index'",
          "signature": "(Int-\u003ea-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:foldrWithIndex-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "fromList",
          "package": "EdisonCore",
          "signature": "[a] -\u003e Seq a",
          "source": "src/Data-Edison-Seq-BankersQueue.html#fromList",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "fromList",
          "normalized": "[a]-\u003eSeq a",
          "package": "EdisonCore",
          "partial": "List",
          "signature": "[a]-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:fromList"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "inBounds",
          "package": "EdisonCore",
          "signature": "Int -\u003e Seq a -\u003e Bool",
          "source": "src/Data-Edison-Seq-BankersQueue.html#inBounds",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "inBounds",
          "normalized": "Int-\u003eSeq a-\u003eBool",
          "package": "EdisonCore",
          "partial": "Bounds",
          "signature": "Int-\u003eSeq a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:inBounds"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "lcons",
          "package": "EdisonCore",
          "signature": "a -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-BankersQueue.html#lcons",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "lcons",
          "normalized": "a-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "a-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:lcons"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "lhead",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-BankersQueue.html#lhead",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "lhead",
          "normalized": "Seq a-\u003ea",
          "package": "EdisonCore",
          "signature": "Seq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:lhead"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "lheadM",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e m a",
          "source": "src/Data-Edison-Seq-BankersQueue.html#lheadM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "lheadM",
          "normalized": "Seq a-\u003eb a",
          "package": "EdisonCore",
          "signature": "Seq a-\u003em a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:lheadM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "lookup",
          "package": "EdisonCore",
          "signature": "Int -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-BankersQueue.html#lookup",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "lookup",
          "normalized": "Int-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "Int-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:lookup"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "lookupM",
          "package": "EdisonCore",
          "signature": "Int -\u003e Seq a -\u003e m a",
          "source": "src/Data-Edison-Seq-BankersQueue.html#lookupM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "lookupM",
          "normalized": "Int-\u003eSeq a-\u003eb a",
          "package": "EdisonCore",
          "signature": "Int-\u003eSeq a-\u003em a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:lookupM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "lookupWithDefault",
          "package": "EdisonCore",
          "signature": "a -\u003e Int -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-BankersQueue.html#lookupWithDefault",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "lookupWithDefault",
          "normalized": "a-\u003eInt-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "partial": "With Default",
          "signature": "a-\u003eInt-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:lookupWithDefault"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "ltail",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-BankersQueue.html#ltail",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "ltail",
          "normalized": "Seq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Seq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:ltail"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "ltailM",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e m (Seq a)",
          "source": "src/Data-Edison-Seq-BankersQueue.html#ltailM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "ltailM",
          "normalized": "Seq a-\u003eb(Seq a)",
          "package": "EdisonCore",
          "signature": "Seq a-\u003em(Seq a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:ltailM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "lview",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e m (a, Seq a)",
          "source": "src/Data-Edison-Seq-BankersQueue.html#lview",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "lview",
          "normalized": "Seq a-\u003eb(a,Seq a)",
          "package": "EdisonCore",
          "signature": "Seq a-\u003em(a,Seq a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:lview"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "map",
          "package": "EdisonCore",
          "signature": "(a -\u003e b) -\u003e Seq a -\u003e Seq b",
          "source": "src/Data-Edison-Seq-BankersQueue.html#map",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "map",
          "normalized": "(a-\u003eb)-\u003eSeq a-\u003eSeq b",
          "package": "EdisonCore",
          "signature": "(a-\u003eb)-\u003eSeq a-\u003eSeq b",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:map"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "mapWithIndex",
          "package": "EdisonCore",
          "signature": "(Int -\u003e a -\u003e b) -\u003e Seq a -\u003e Seq b",
          "source": "src/Data-Edison-Seq-BankersQueue.html#mapWithIndex",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "mapWithIndex",
          "normalized": "(Int-\u003ea-\u003eb)-\u003eSeq a-\u003eSeq b",
          "package": "EdisonCore",
          "partial": "With Index",
          "signature": "(Int-\u003ea-\u003eb)-\u003eSeq a-\u003eSeq b",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:mapWithIndex"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "moduleName",
          "package": "EdisonCore",
          "signature": "String",
          "source": "src/Data-Edison-Seq-BankersQueue.html#moduleName",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "moduleName",
          "package": "EdisonCore",
          "partial": "Name",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:moduleName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "null",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Bool",
          "source": "src/Data-Edison-Seq-BankersQueue.html#null",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "null",
          "normalized": "Seq a-\u003eBool",
          "package": "EdisonCore",
          "signature": "Seq a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:null"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "partition",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e Seq a -\u003e (Seq a, Seq a)",
          "source": "src/Data-Edison-Seq-BankersQueue.html#partition",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "partition",
          "normalized": "(a-\u003eBool)-\u003eSeq a-\u003e(Seq a,Seq a)",
          "package": "EdisonCore",
          "signature": "(a-\u003eBool)-\u003eSeq a-\u003e(Seq a,Seq a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:partition"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "rcons",
          "package": "EdisonCore",
          "signature": "a -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-BankersQueue.html#rcons",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "rcons",
          "normalized": "a-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "a-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:rcons"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "reduce1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-BankersQueue.html#reduce1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "reduce1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:reduce1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "reduce1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-BankersQueue.html#reduce1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "reduce1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:reduce1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "reducel",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e a -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-BankersQueue.html#reducel",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "reducel",
          "normalized": "(a-\u003ea-\u003ea)-\u003ea-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003ea-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:reducel"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "reducel'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e a -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-BankersQueue.html#reducel%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "reducel'",
          "normalized": "(a-\u003ea-\u003ea)-\u003ea-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003ea-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:reducel-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "reducer",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e a -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-BankersQueue.html#reducer",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "reducer",
          "normalized": "(a-\u003ea-\u003ea)-\u003ea-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003ea-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:reducer"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "reducer'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e a -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-BankersQueue.html#reducer%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "reducer'",
          "normalized": "(a-\u003ea-\u003ea)-\u003ea-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003ea-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:reducer-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "reverse",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-BankersQueue.html#reverse",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "reverse",
          "normalized": "Seq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Seq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:reverse"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "reverseOnto",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-BankersQueue.html#reverseOnto",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "reverseOnto",
          "normalized": "Seq a-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "partial": "Onto",
          "signature": "Seq a-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:reverseOnto"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "rhead",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-BankersQueue.html#rhead",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "rhead",
          "normalized": "Seq a-\u003ea",
          "package": "EdisonCore",
          "signature": "Seq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:rhead"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "rheadM",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e m a",
          "source": "src/Data-Edison-Seq-BankersQueue.html#rheadM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "rheadM",
          "normalized": "Seq a-\u003eb a",
          "package": "EdisonCore",
          "signature": "Seq a-\u003em a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:rheadM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "rtail",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-BankersQueue.html#rtail",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "rtail",
          "normalized": "Seq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Seq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:rtail"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "rtailM",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e m (Seq a)",
          "source": "src/Data-Edison-Seq-BankersQueue.html#rtailM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "rtailM",
          "normalized": "Seq a-\u003eb(Seq a)",
          "package": "EdisonCore",
          "signature": "Seq a-\u003em(Seq a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:rtailM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "rview",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e m (a, Seq a)",
          "source": "src/Data-Edison-Seq-BankersQueue.html#rview",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "rview",
          "normalized": "Seq a-\u003eb(a,Seq a)",
          "package": "EdisonCore",
          "signature": "Seq a-\u003em(a,Seq a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:rview"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "singleton",
          "package": "EdisonCore",
          "signature": "a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-BankersQueue.html#singleton",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "singleton",
          "normalized": "a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:singleton"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "size",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Int",
          "source": "src/Data-Edison-Seq-BankersQueue.html#size",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "size",
          "normalized": "Seq a-\u003eInt",
          "package": "EdisonCore",
          "signature": "Seq a-\u003eInt",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:size"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "splitAt",
          "package": "EdisonCore",
          "signature": "Int -\u003e Seq a -\u003e (Seq a, Seq a)",
          "source": "src/Data-Edison-Seq-BankersQueue.html#splitAt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "splitAt",
          "normalized": "Int-\u003eSeq a-\u003e(Seq a,Seq a)",
          "package": "EdisonCore",
          "partial": "At",
          "signature": "Int-\u003eSeq a-\u003e(Seq a,Seq a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:splitAt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "splitWhile",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e Seq a -\u003e (Seq a, Seq a)",
          "source": "src/Data-Edison-Seq-BankersQueue.html#splitWhile",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "splitWhile",
          "normalized": "(a-\u003eBool)-\u003eSeq a-\u003e(Seq a,Seq a)",
          "package": "EdisonCore",
          "partial": "While",
          "signature": "(a-\u003eBool)-\u003eSeq a-\u003e(Seq a,Seq a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:splitWhile"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "strict",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-BankersQueue.html#strict",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "strict",
          "normalized": "Seq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Seq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:strict"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "strictWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e b) -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-BankersQueue.html#strictWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "strictWith",
          "normalized": "(a-\u003eb)-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003eb)-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:strictWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "structuralInvariant",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Bool",
          "source": "src/Data-Edison-Seq-BankersQueue.html#structuralInvariant",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "structuralInvariant",
          "normalized": "Seq a-\u003eBool",
          "package": "EdisonCore",
          "partial": "Invariant",
          "signature": "Seq a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:structuralInvariant"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "subseq",
          "package": "EdisonCore",
          "signature": "Int -\u003e Int -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-BankersQueue.html#subseq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "subseq",
          "normalized": "Int-\u003eInt-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Int-\u003eInt-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:subseq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "take",
          "package": "EdisonCore",
          "signature": "Int -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-BankersQueue.html#take",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "take",
          "normalized": "Int-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Int-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:take"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "takeWhile",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-BankersQueue.html#takeWhile",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "takeWhile",
          "normalized": "(a-\u003eBool)-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "partial": "While",
          "signature": "(a-\u003eBool)-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:takeWhile"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "toList",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e [a]",
          "source": "src/Data-Edison-Seq-BankersQueue.html#toList",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "toList",
          "normalized": "Seq a-\u003e[a]",
          "package": "EdisonCore",
          "partial": "List",
          "signature": "Seq a-\u003e[a]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:toList"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "unzip",
          "package": "EdisonCore",
          "signature": "Seq (a, b) -\u003e (Seq a, Seq b)",
          "source": "src/Data-Edison-Seq-BankersQueue.html#unzip",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "unzip",
          "normalized": "Seq(a,b)-\u003e(Seq a,Seq b)",
          "package": "EdisonCore",
          "signature": "Seq(a,b)-\u003e(Seq a,Seq b)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:unzip"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "unzip3",
          "package": "EdisonCore",
          "signature": "Seq (a, b, c) -\u003e (Seq a, Seq b, Seq c)",
          "source": "src/Data-Edison-Seq-BankersQueue.html#unzip3",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "unzip3",
          "normalized": "Seq(a,b,c)-\u003e(Seq a,Seq b,Seq c)",
          "package": "EdisonCore",
          "signature": "Seq(a,b,c)-\u003e(Seq a,Seq b,Seq c)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:unzip3"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "unzipWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e b) -\u003e (a -\u003e c) -\u003e Seq a -\u003e (Seq b, Seq c)",
          "source": "src/Data-Edison-Seq-BankersQueue.html#unzipWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "unzipWith",
          "normalized": "(a-\u003eb)-\u003e(a-\u003ec)-\u003eSeq a-\u003e(Seq b,Seq c)",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003eb)-\u003e(a-\u003ec)-\u003eSeq a-\u003e(Seq b,Seq c)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:unzipWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "unzipWith3",
          "package": "EdisonCore",
          "signature": "(a -\u003e b) -\u003e (a -\u003e c) -\u003e (a -\u003e d) -\u003e Seq a -\u003e (Seq b, Seq c, Seq d)",
          "source": "src/Data-Edison-Seq-BankersQueue.html#unzipWith3",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "unzipWith3",
          "normalized": "(a-\u003eb)-\u003e(a-\u003ec)-\u003e(a-\u003ed)-\u003eSeq a-\u003e(Seq b,Seq c,Seq d)",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003eb)-\u003e(a-\u003ec)-\u003e(a-\u003ed)-\u003eSeq a-\u003e(Seq b,Seq c,Seq d)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:unzipWith3"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "update",
          "package": "EdisonCore",
          "signature": "Int -\u003e a -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-BankersQueue.html#update",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "update",
          "normalized": "Int-\u003ea-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Int-\u003ea-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:update"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "zip",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Seq b -\u003e Seq (a, b)",
          "source": "src/Data-Edison-Seq-BankersQueue.html#zip",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "zip",
          "normalized": "Seq a-\u003eSeq b-\u003eSeq(a,b)",
          "package": "EdisonCore",
          "signature": "Seq a-\u003eSeq b-\u003eSeq(a,b)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:zip"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "zip3",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Seq b -\u003e Seq c -\u003e Seq (a, b, c)",
          "source": "src/Data-Edison-Seq-BankersQueue.html#zip3",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "zip3",
          "normalized": "Seq a-\u003eSeq b-\u003eSeq c-\u003eSeq(a,b,c)",
          "package": "EdisonCore",
          "signature": "Seq a-\u003eSeq b-\u003eSeq c-\u003eSeq(a,b,c)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:zip3"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "zipWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e c) -\u003e Seq a -\u003e Seq b -\u003e Seq c",
          "source": "src/Data-Edison-Seq-BankersQueue.html#zipWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "zipWith",
          "normalized": "(a-\u003eb-\u003ec)-\u003eSeq a-\u003eSeq b-\u003eSeq c",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003eb-\u003ec)-\u003eSeq a-\u003eSeq b-\u003eSeq c",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:zipWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "zipWith3",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e c -\u003e d) -\u003e Seq a -\u003e Seq b -\u003e Seq c -\u003e Seq d",
          "source": "src/Data-Edison-Seq-BankersQueue.html#zipWith3",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BankersQueue",
          "module": "Data.Edison.Seq.BankersQueue",
          "name": "zipWith3",
          "normalized": "(a-\u003eb-\u003ec-\u003ed)-\u003eSeq a-\u003eSeq b-\u003eSeq c-\u003eSeq d",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003eb-\u003ec-\u003ed)-\u003eSeq a-\u003eSeq b-\u003eSeq c-\u003eSeq d",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BankersQueue.html#v:zipWith3"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eBinary Random-Access lists.  All functions have the standard running\n   times from \u003ca\u003eData.Edison.Seq\u003c/a\u003e except the following:\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e lcons, lhead, ltail*, lview*, rhead*, size, lookup*, update, adjust, drop   \u003ccode\u003eO( log n )\u003c/code\u003e\n\u003c/li\u003e\u003cli\u003e copy, inBounds   \u003ccode\u003eO( i )\u003c/code\u003e\n\u003c/li\u003e\u003cli\u003e append, reverseOnto  \u003ccode\u003eO( n1 + log n2 )\u003c/code\u003e\n\u003c/li\u003e\u003cli\u003e take, splitAt  \u003ccode\u003eO( i + log n )\u003c/code\u003e\n\u003c/li\u003e\u003cli\u003e subseq         \u003ccode\u003eO( log n + len )\u003c/code\u003e\n\u003c/li\u003e\u003cli\u003e zip            \u003ccode\u003eO( min( n1, n2 ) + log max( n1, n2 ) )\u003c/code\u003e\n\u003c/li\u003e\u003c/ul\u003e\u003cp\u003e\u003cem\u003eReferences:\u003c/em\u003e\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e Chris Okasaki. \u003cem\u003ePurely Functional Data Structures\u003c/em\u003e. 1998.\n    Section 10.1.2.\n\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "BinaryRandList",
          "package": "EdisonCore",
          "source": "src/Data-Edison-Seq-BinaryRandList.html",
          "type": "module"
        },
        "index": {
          "description": "Binary Random-Access lists All functions have the standard running times from Data.Edison.Seq except the following lcons lhead ltail lview rhead size lookup update adjust drop log copy inBounds append reverseOnto n1 log n2 take splitAt log subseq log len zip min n1 n2 log max n1 n2 References Chris Okasaki Purely Functional Data Structures Section",
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "BinaryRandList",
          "package": "EdisonCore",
          "partial": "Binary Rand List",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "Seq",
          "package": "EdisonCore",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#Seq",
          "type": "data"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "Seq",
          "package": "EdisonCore",
          "partial": "Seq",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#t:Seq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "adjust",
          "package": "EdisonCore",
          "signature": "(a -\u003e a) -\u003e Int -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#adjust",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "adjust",
          "normalized": "(a-\u003ea)-\u003eInt-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "(a-\u003ea)-\u003eInt-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:adjust"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "append",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#append",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "append",
          "normalized": "Seq a-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Seq a-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:append"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "concat",
          "package": "EdisonCore",
          "signature": "Seq (Seq a) -\u003e Seq a",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#concat",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "concat",
          "normalized": "Seq(Seq a)-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Seq(Seq a)-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:concat"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "concatMap",
          "package": "EdisonCore",
          "signature": "(a -\u003e Seq b) -\u003e Seq a -\u003e Seq b",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#concatMap",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "concatMap",
          "normalized": "(a-\u003eSeq b)-\u003eSeq a-\u003eSeq b",
          "package": "EdisonCore",
          "partial": "Map",
          "signature": "(a-\u003eSeq b)-\u003eSeq a-\u003eSeq b",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:concatMap"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "copy",
          "package": "EdisonCore",
          "signature": "Int -\u003e a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#copy",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "copy",
          "normalized": "Int-\u003ea-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Int-\u003ea-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:copy"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "drop",
          "package": "EdisonCore",
          "signature": "Int -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#drop",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "drop",
          "normalized": "Int-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Int-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:drop"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "dropWhile",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#dropWhile",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "dropWhile",
          "normalized": "(a-\u003eBool)-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "partial": "While",
          "signature": "(a-\u003eBool)-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:dropWhile"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "empty",
          "package": "EdisonCore",
          "signature": "Seq a",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#empty",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "empty",
          "package": "EdisonCore",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:empty"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "filter",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#filter",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "filter",
          "normalized": "(a-\u003eBool)-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "(a-\u003eBool)-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:filter"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "fold",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#fold",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "fold",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:fold"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "fold'",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#fold%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "fold'",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:fold-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "fold1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#fold1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "fold1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:fold1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "fold1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#fold1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "fold1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:fold1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "foldl",
          "package": "EdisonCore",
          "signature": "(b -\u003e a -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#foldl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "foldl",
          "normalized": "(a-\u003eb-\u003ea)-\u003ea-\u003eSeq b-\u003ea",
          "package": "EdisonCore",
          "signature": "(b-\u003ea-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:foldl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "foldl'",
          "package": "EdisonCore",
          "signature": "(b -\u003e a -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#foldl%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "foldl'",
          "normalized": "(a-\u003eb-\u003ea)-\u003ea-\u003eSeq b-\u003ea",
          "package": "EdisonCore",
          "signature": "(b-\u003ea-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:foldl-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "foldl1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#foldl1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "foldl1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:foldl1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "foldl1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#foldl1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "foldl1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:foldl1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "foldlWithIndex",
          "package": "EdisonCore",
          "signature": "(b -\u003e Int -\u003e a -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#foldlWithIndex",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "foldlWithIndex",
          "normalized": "(a-\u003eInt-\u003eb-\u003ea)-\u003ea-\u003eSeq b-\u003ea",
          "package": "EdisonCore",
          "partial": "With Index",
          "signature": "(b-\u003eInt-\u003ea-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:foldlWithIndex"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "foldlWithIndex'",
          "package": "EdisonCore",
          "signature": "(b -\u003e Int -\u003e a -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#foldlWithIndex%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "foldlWithIndex'",
          "normalized": "(a-\u003eInt-\u003eb-\u003ea)-\u003ea-\u003eSeq b-\u003ea",
          "package": "EdisonCore",
          "partial": "With Index'",
          "signature": "(b-\u003eInt-\u003ea-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:foldlWithIndex-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "foldr",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#foldr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "foldr",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:foldr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "foldr'",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#foldr%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "foldr'",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:foldr-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "foldr1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#foldr1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "foldr1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:foldr1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "foldr1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#foldr1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "foldr1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:foldr1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "foldrWithIndex",
          "package": "EdisonCore",
          "signature": "(Int -\u003e a -\u003e b -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#foldrWithIndex",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "foldrWithIndex",
          "normalized": "(Int-\u003ea-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "package": "EdisonCore",
          "partial": "With Index",
          "signature": "(Int-\u003ea-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:foldrWithIndex"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "foldrWithIndex'",
          "package": "EdisonCore",
          "signature": "(Int -\u003e a -\u003e b -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#foldrWithIndex%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "foldrWithIndex'",
          "normalized": "(Int-\u003ea-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "package": "EdisonCore",
          "partial": "With Index'",
          "signature": "(Int-\u003ea-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:foldrWithIndex-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "fromList",
          "package": "EdisonCore",
          "signature": "[a] -\u003e Seq a",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#fromList",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "fromList",
          "normalized": "[a]-\u003eSeq a",
          "package": "EdisonCore",
          "partial": "List",
          "signature": "[a]-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:fromList"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "inBounds",
          "package": "EdisonCore",
          "signature": "Int -\u003e Seq a -\u003e Bool",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#inBounds",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "inBounds",
          "normalized": "Int-\u003eSeq a-\u003eBool",
          "package": "EdisonCore",
          "partial": "Bounds",
          "signature": "Int-\u003eSeq a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:inBounds"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "lcons",
          "package": "EdisonCore",
          "signature": "a -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#lcons",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "lcons",
          "normalized": "a-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "a-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:lcons"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "lhead",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#lhead",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "lhead",
          "normalized": "Seq a-\u003ea",
          "package": "EdisonCore",
          "signature": "Seq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:lhead"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "lheadM",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e m a",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#lheadM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "lheadM",
          "normalized": "Seq a-\u003eb a",
          "package": "EdisonCore",
          "signature": "Seq a-\u003em a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:lheadM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "lookup",
          "package": "EdisonCore",
          "signature": "Int -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#lookup",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "lookup",
          "normalized": "Int-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "Int-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:lookup"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "lookupM",
          "package": "EdisonCore",
          "signature": "Int -\u003e Seq a -\u003e m a",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#lookupM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "lookupM",
          "normalized": "Int-\u003eSeq a-\u003eb a",
          "package": "EdisonCore",
          "signature": "Int-\u003eSeq a-\u003em a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:lookupM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "lookupWithDefault",
          "package": "EdisonCore",
          "signature": "a -\u003e Int -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#lookupWithDefault",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "lookupWithDefault",
          "normalized": "a-\u003eInt-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "partial": "With Default",
          "signature": "a-\u003eInt-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:lookupWithDefault"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "ltail",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#ltail",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "ltail",
          "normalized": "Seq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Seq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:ltail"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "ltailM",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e m (Seq a)",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#ltailM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "ltailM",
          "normalized": "Seq a-\u003eb(Seq a)",
          "package": "EdisonCore",
          "signature": "Seq a-\u003em(Seq a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:ltailM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "lview",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e m (a, Seq a)",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#lview",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "lview",
          "normalized": "Seq a-\u003eb(a,Seq a)",
          "package": "EdisonCore",
          "signature": "Seq a-\u003em(a,Seq a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:lview"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "map",
          "package": "EdisonCore",
          "signature": "(a -\u003e b) -\u003e Seq a -\u003e Seq b",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#map",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "map",
          "normalized": "(a-\u003eb)-\u003eSeq a-\u003eSeq b",
          "package": "EdisonCore",
          "signature": "(a-\u003eb)-\u003eSeq a-\u003eSeq b",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:map"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "mapWithIndex",
          "package": "EdisonCore",
          "signature": "(Int -\u003e a -\u003e b) -\u003e Seq a -\u003e Seq b",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#mapWithIndex",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "mapWithIndex",
          "normalized": "(Int-\u003ea-\u003eb)-\u003eSeq a-\u003eSeq b",
          "package": "EdisonCore",
          "partial": "With Index",
          "signature": "(Int-\u003ea-\u003eb)-\u003eSeq a-\u003eSeq b",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:mapWithIndex"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "moduleName",
          "package": "EdisonCore",
          "signature": "String",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#moduleName",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "moduleName",
          "package": "EdisonCore",
          "partial": "Name",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:moduleName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "null",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Bool",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#null",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "null",
          "normalized": "Seq a-\u003eBool",
          "package": "EdisonCore",
          "signature": "Seq a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:null"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "partition",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e Seq a -\u003e (Seq a, Seq a)",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#partition",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "partition",
          "normalized": "(a-\u003eBool)-\u003eSeq a-\u003e(Seq a,Seq a)",
          "package": "EdisonCore",
          "signature": "(a-\u003eBool)-\u003eSeq a-\u003e(Seq a,Seq a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:partition"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "rcons",
          "package": "EdisonCore",
          "signature": "a -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#rcons",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "rcons",
          "normalized": "a-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "a-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:rcons"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "reduce1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#reduce1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "reduce1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:reduce1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "reduce1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#reduce1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "reduce1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:reduce1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "reducel",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e a -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#reducel",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "reducel",
          "normalized": "(a-\u003ea-\u003ea)-\u003ea-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003ea-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:reducel"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "reducel'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e a -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#reducel%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "reducel'",
          "normalized": "(a-\u003ea-\u003ea)-\u003ea-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003ea-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:reducel-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "reducer",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e a -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#reducer",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "reducer",
          "normalized": "(a-\u003ea-\u003ea)-\u003ea-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003ea-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:reducer"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "reducer'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e a -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#reducer%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "reducer'",
          "normalized": "(a-\u003ea-\u003ea)-\u003ea-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003ea-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:reducer-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "reverse",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#reverse",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "reverse",
          "normalized": "Seq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Seq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:reverse"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "reverseOnto",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#reverseOnto",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "reverseOnto",
          "normalized": "Seq a-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "partial": "Onto",
          "signature": "Seq a-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:reverseOnto"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "rhead",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#rhead",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "rhead",
          "normalized": "Seq a-\u003ea",
          "package": "EdisonCore",
          "signature": "Seq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:rhead"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "rheadM",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e m a",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#rheadM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "rheadM",
          "normalized": "Seq a-\u003eb a",
          "package": "EdisonCore",
          "signature": "Seq a-\u003em a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:rheadM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "rtail",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#rtail",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "rtail",
          "normalized": "Seq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Seq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:rtail"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "rtailM",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e m (Seq a)",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#rtailM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "rtailM",
          "normalized": "Seq a-\u003eb(Seq a)",
          "package": "EdisonCore",
          "signature": "Seq a-\u003em(Seq a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:rtailM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "rview",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e m (a, Seq a)",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#rview",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "rview",
          "normalized": "Seq a-\u003eb(a,Seq a)",
          "package": "EdisonCore",
          "signature": "Seq a-\u003em(a,Seq a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:rview"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "singleton",
          "package": "EdisonCore",
          "signature": "a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#singleton",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "singleton",
          "normalized": "a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:singleton"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "size",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Int",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#size",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "size",
          "normalized": "Seq a-\u003eInt",
          "package": "EdisonCore",
          "signature": "Seq a-\u003eInt",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:size"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "splitAt",
          "package": "EdisonCore",
          "signature": "Int -\u003e Seq a -\u003e (Seq a, Seq a)",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#splitAt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "splitAt",
          "normalized": "Int-\u003eSeq a-\u003e(Seq a,Seq a)",
          "package": "EdisonCore",
          "partial": "At",
          "signature": "Int-\u003eSeq a-\u003e(Seq a,Seq a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:splitAt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "splitWhile",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e Seq a -\u003e (Seq a, Seq a)",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#splitWhile",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "splitWhile",
          "normalized": "(a-\u003eBool)-\u003eSeq a-\u003e(Seq a,Seq a)",
          "package": "EdisonCore",
          "partial": "While",
          "signature": "(a-\u003eBool)-\u003eSeq a-\u003e(Seq a,Seq a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:splitWhile"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "strict",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#strict",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "strict",
          "normalized": "Seq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Seq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:strict"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "strictWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e b) -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#strictWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "strictWith",
          "normalized": "(a-\u003eb)-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003eb)-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:strictWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "structuralInvariant",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Bool",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#structuralInvariant",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "structuralInvariant",
          "normalized": "Seq a-\u003eBool",
          "package": "EdisonCore",
          "partial": "Invariant",
          "signature": "Seq a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:structuralInvariant"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "subseq",
          "package": "EdisonCore",
          "signature": "Int -\u003e Int -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#subseq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "subseq",
          "normalized": "Int-\u003eInt-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Int-\u003eInt-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:subseq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "take",
          "package": "EdisonCore",
          "signature": "Int -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#take",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "take",
          "normalized": "Int-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Int-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:take"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "takeWhile",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#takeWhile",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "takeWhile",
          "normalized": "(a-\u003eBool)-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "partial": "While",
          "signature": "(a-\u003eBool)-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:takeWhile"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "toList",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e [a]",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#toList",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "toList",
          "normalized": "Seq a-\u003e[a]",
          "package": "EdisonCore",
          "partial": "List",
          "signature": "Seq a-\u003e[a]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:toList"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "unzip",
          "package": "EdisonCore",
          "signature": "Seq (a, b) -\u003e (Seq a, Seq b)",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#unzip",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "unzip",
          "normalized": "Seq(a,b)-\u003e(Seq a,Seq b)",
          "package": "EdisonCore",
          "signature": "Seq(a,b)-\u003e(Seq a,Seq b)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:unzip"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "unzip3",
          "package": "EdisonCore",
          "signature": "Seq (a, b, c) -\u003e (Seq a, Seq b, Seq c)",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#unzip3",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "unzip3",
          "normalized": "Seq(a,b,c)-\u003e(Seq a,Seq b,Seq c)",
          "package": "EdisonCore",
          "signature": "Seq(a,b,c)-\u003e(Seq a,Seq b,Seq c)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:unzip3"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "unzipWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e b) -\u003e (a -\u003e c) -\u003e Seq a -\u003e (Seq b, Seq c)",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#unzipWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "unzipWith",
          "normalized": "(a-\u003eb)-\u003e(a-\u003ec)-\u003eSeq a-\u003e(Seq b,Seq c)",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003eb)-\u003e(a-\u003ec)-\u003eSeq a-\u003e(Seq b,Seq c)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:unzipWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "unzipWith3",
          "package": "EdisonCore",
          "signature": "(a -\u003e b) -\u003e (a -\u003e c) -\u003e (a -\u003e d) -\u003e Seq a -\u003e (Seq b, Seq c, Seq d)",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#unzipWith3",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "unzipWith3",
          "normalized": "(a-\u003eb)-\u003e(a-\u003ec)-\u003e(a-\u003ed)-\u003eSeq a-\u003e(Seq b,Seq c,Seq d)",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003eb)-\u003e(a-\u003ec)-\u003e(a-\u003ed)-\u003eSeq a-\u003e(Seq b,Seq c,Seq d)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:unzipWith3"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "update",
          "package": "EdisonCore",
          "signature": "Int -\u003e a -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#update",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "update",
          "normalized": "Int-\u003ea-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Int-\u003ea-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:update"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "zip",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Seq b -\u003e Seq (a, b)",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#zip",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "zip",
          "normalized": "Seq a-\u003eSeq b-\u003eSeq(a,b)",
          "package": "EdisonCore",
          "signature": "Seq a-\u003eSeq b-\u003eSeq(a,b)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:zip"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "zip3",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Seq b -\u003e Seq c -\u003e Seq (a, b, c)",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#zip3",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "zip3",
          "normalized": "Seq a-\u003eSeq b-\u003eSeq c-\u003eSeq(a,b,c)",
          "package": "EdisonCore",
          "signature": "Seq a-\u003eSeq b-\u003eSeq c-\u003eSeq(a,b,c)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:zip3"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "zipWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e c) -\u003e Seq a -\u003e Seq b -\u003e Seq c",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#zipWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "zipWith",
          "normalized": "(a-\u003eb-\u003ec)-\u003eSeq a-\u003eSeq b-\u003eSeq c",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003eb-\u003ec)-\u003eSeq a-\u003eSeq b-\u003eSeq c",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:zipWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "zipWith3",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e c -\u003e d) -\u003e Seq a -\u003e Seq b -\u003e Seq c -\u003e Seq d",
          "source": "src/Data-Edison-Seq-BinaryRandList.html#zipWith3",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BinaryRandList",
          "module": "Data.Edison.Seq.BinaryRandList",
          "name": "zipWith3",
          "normalized": "(a-\u003eb-\u003ec-\u003ed)-\u003eSeq a-\u003eSeq b-\u003eSeq c-\u003eSeq d",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003eb-\u003ec-\u003ed)-\u003eSeq a-\u003eSeq b-\u003eSeq c-\u003eSeq d",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BinaryRandList.html#v:zipWith3"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eOne-sided Braun sequences.  All running times are as listed in\n   \u003ca\u003eData.Edison.Seq\u003c/a\u003e except the following:\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e lview, lcons, ltail*   \u003ccode\u003eO( log n )\u003c/code\u003e\n\u003c/li\u003e\u003cli\u003e rcons, rview, rhead*, rtail*, size   \u003ccode\u003eO( log^2 n )\u003c/code\u003e\n\u003c/li\u003e\u003cli\u003e copy, inBounds, lookup*, update, adjust  \u003ccode\u003eO( log i )\u003c/code\u003e\n\u003c/li\u003e\u003cli\u003e append            \u003ccode\u003eO( n1 log n2 )\u003c/code\u003e\n\u003c/li\u003e\u003cli\u003e concat            \u003ccode\u003eO( n + m log m )\u003c/code\u003e\n\u003c/li\u003e\u003cli\u003e drop, splitAt     \u003ccode\u003eO( i log n )\u003c/code\u003e\n\u003c/li\u003e\u003cli\u003e subseq            \u003ccode\u003eO( i log n + len )\u003c/code\u003e\n\u003c/li\u003e\u003cli\u003e reverseOnto       \u003ccode\u003eO( n1 log n2 )\u003c/code\u003e\n\u003c/li\u003e\u003cli\u003e concatMap, (\u003e\u003e=)  \u003ccode\u003eO( n * t + m log m )\u003c/code\u003e, where \u003ccode\u003en\u003c/code\u003e is the length of the input sequence\n                                               \u003ccode\u003em\u003c/code\u003e is the length of the output sequence and \u003ccode\u003et\u003c/code\u003e\n                                               is the running time of \u003ccode\u003ef\u003c/code\u003e\n\u003c/li\u003e\u003c/ul\u003e\u003cp\u003eBy keeping track of the size, we could get rcons, rview, rhead*, and rtail*\n   down to \u003ccode\u003eO(log n)\u003c/code\u003e as well; furthermore, size would be \u003ccode\u003eO( 1 )\u003c/code\u003e.\n\u003c/p\u003e\u003cp\u003e\u003cem\u003eReferences:\u003c/em\u003e\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e Rob Hoogerwoord. \"A symmetric set of efficient list operations\".\n     \u003cem\u003eJournal of Functional Programming\u003c/em\u003e, 2(4):505--513, 1992.\n\u003c/li\u003e\u003cli\u003e Rob Hoogerwoord. \"A Logarithmic Implementation of Flexible Arrays\".\n     \u003cem\u003eMathematics of Program Construction\u003c/em\u003e (MPC'92), pages 191-207.\n\u003c/li\u003e\u003cli\u003e Chris Okasaki. \"Three algorithms on Braun Trees\".\n     \u003cem\u003eJournal of Function Programming\u003c/em\u003e 7(6):661-666. Novemebr 1997.\n\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "BraunSeq",
          "package": "EdisonCore",
          "source": "src/Data-Edison-Seq-BraunSeq.html",
          "type": "module"
        },
        "index": {
          "description": "One-sided Braun sequences All running times are as listed in Data.Edison.Seq except the following lview lcons ltail log rcons rview rhead rtail size log copy inBounds lookup update adjust log append n1 log n2 concat log drop splitAt log subseq log len reverseOnto n1 log n2 concatMap log where is the length of the input sequence is the length of the output sequence and is the running time of By keeping track of the size we could get rcons rview rhead and rtail down to log as well furthermore size would be References Rob Hoogerwoord symmetric set of efficient list operations Journal of Functional Programming Rob Hoogerwoord Logarithmic Implementation of Flexible Arrays Mathematics of Program Construction MPC pages Chris Okasaki Three algorithms on Braun Trees Journal of Function Programming Novemebr",
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "BraunSeq",
          "package": "EdisonCore",
          "partial": "Braun Seq",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "Seq",
          "package": "EdisonCore",
          "source": "src/Data-Edison-Seq-BraunSeq.html#Seq",
          "type": "data"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "Seq",
          "package": "EdisonCore",
          "partial": "Seq",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#t:Seq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "adjust",
          "package": "EdisonCore",
          "signature": "(a -\u003e a) -\u003e Int -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-BraunSeq.html#adjust",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "adjust",
          "normalized": "(a-\u003ea)-\u003eInt-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "(a-\u003ea)-\u003eInt-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:adjust"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "append",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-BraunSeq.html#append",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "append",
          "normalized": "Seq a-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Seq a-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:append"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "concat",
          "package": "EdisonCore",
          "signature": "Seq (Seq a) -\u003e Seq a",
          "source": "src/Data-Edison-Seq-BraunSeq.html#concat",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "concat",
          "normalized": "Seq(Seq a)-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Seq(Seq a)-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:concat"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "concatMap",
          "package": "EdisonCore",
          "signature": "(a -\u003e Seq b) -\u003e Seq a -\u003e Seq b",
          "source": "src/Data-Edison-Seq-BraunSeq.html#concatMap",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "concatMap",
          "normalized": "(a-\u003eSeq b)-\u003eSeq a-\u003eSeq b",
          "package": "EdisonCore",
          "partial": "Map",
          "signature": "(a-\u003eSeq b)-\u003eSeq a-\u003eSeq b",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:concatMap"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "copy",
          "package": "EdisonCore",
          "signature": "Int -\u003e a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-BraunSeq.html#copy",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "copy",
          "normalized": "Int-\u003ea-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Int-\u003ea-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:copy"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "drop",
          "package": "EdisonCore",
          "signature": "Int -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-BraunSeq.html#drop",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "drop",
          "normalized": "Int-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Int-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:drop"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "dropWhile",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-BraunSeq.html#dropWhile",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "dropWhile",
          "normalized": "(a-\u003eBool)-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "partial": "While",
          "signature": "(a-\u003eBool)-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:dropWhile"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "empty",
          "package": "EdisonCore",
          "signature": "Seq a",
          "source": "src/Data-Edison-Seq-BraunSeq.html#empty",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "empty",
          "package": "EdisonCore",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:empty"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "filter",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-BraunSeq.html#filter",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "filter",
          "normalized": "(a-\u003eBool)-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "(a-\u003eBool)-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:filter"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "fold",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-BraunSeq.html#fold",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "fold",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:fold"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "fold'",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-BraunSeq.html#fold%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "fold'",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:fold-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "fold1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-BraunSeq.html#fold1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "fold1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:fold1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "fold1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-BraunSeq.html#fold1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "fold1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:fold1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "foldl",
          "package": "EdisonCore",
          "signature": "(b -\u003e a -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-BraunSeq.html#foldl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "foldl",
          "normalized": "(a-\u003eb-\u003ea)-\u003ea-\u003eSeq b-\u003ea",
          "package": "EdisonCore",
          "signature": "(b-\u003ea-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:foldl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "foldl'",
          "package": "EdisonCore",
          "signature": "(b -\u003e a -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-BraunSeq.html#foldl%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "foldl'",
          "normalized": "(a-\u003eb-\u003ea)-\u003ea-\u003eSeq b-\u003ea",
          "package": "EdisonCore",
          "signature": "(b-\u003ea-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:foldl-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "foldl1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-BraunSeq.html#foldl1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "foldl1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:foldl1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "foldl1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-BraunSeq.html#foldl1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "foldl1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:foldl1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "foldlWithIndex",
          "package": "EdisonCore",
          "signature": "(b -\u003e Int -\u003e a -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-BraunSeq.html#foldlWithIndex",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "foldlWithIndex",
          "normalized": "(a-\u003eInt-\u003eb-\u003ea)-\u003ea-\u003eSeq b-\u003ea",
          "package": "EdisonCore",
          "partial": "With Index",
          "signature": "(b-\u003eInt-\u003ea-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:foldlWithIndex"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "foldlWithIndex'",
          "package": "EdisonCore",
          "signature": "(b -\u003e Int -\u003e a -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-BraunSeq.html#foldlWithIndex%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "foldlWithIndex'",
          "normalized": "(a-\u003eInt-\u003eb-\u003ea)-\u003ea-\u003eSeq b-\u003ea",
          "package": "EdisonCore",
          "partial": "With Index'",
          "signature": "(b-\u003eInt-\u003ea-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:foldlWithIndex-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "foldr",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-BraunSeq.html#foldr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "foldr",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:foldr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "foldr'",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-BraunSeq.html#foldr%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "foldr'",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:foldr-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "foldr1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-BraunSeq.html#foldr1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "foldr1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:foldr1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "foldr1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-BraunSeq.html#foldr1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "foldr1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:foldr1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "foldrWithIndex",
          "package": "EdisonCore",
          "signature": "(Int -\u003e a -\u003e b -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-BraunSeq.html#foldrWithIndex",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "foldrWithIndex",
          "normalized": "(Int-\u003ea-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "package": "EdisonCore",
          "partial": "With Index",
          "signature": "(Int-\u003ea-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:foldrWithIndex"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "foldrWithIndex'",
          "package": "EdisonCore",
          "signature": "(Int -\u003e a -\u003e b -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-BraunSeq.html#foldrWithIndex%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "foldrWithIndex'",
          "normalized": "(Int-\u003ea-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "package": "EdisonCore",
          "partial": "With Index'",
          "signature": "(Int-\u003ea-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:foldrWithIndex-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "fromList",
          "package": "EdisonCore",
          "signature": "[a] -\u003e Seq a",
          "source": "src/Data-Edison-Seq-BraunSeq.html#fromList",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "fromList",
          "normalized": "[a]-\u003eSeq a",
          "package": "EdisonCore",
          "partial": "List",
          "signature": "[a]-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:fromList"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "inBounds",
          "package": "EdisonCore",
          "signature": "Int -\u003e Seq a -\u003e Bool",
          "source": "src/Data-Edison-Seq-BraunSeq.html#inBounds",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "inBounds",
          "normalized": "Int-\u003eSeq a-\u003eBool",
          "package": "EdisonCore",
          "partial": "Bounds",
          "signature": "Int-\u003eSeq a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:inBounds"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "lcons",
          "package": "EdisonCore",
          "signature": "a -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-BraunSeq.html#lcons",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "lcons",
          "normalized": "a-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "a-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:lcons"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "lhead",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-BraunSeq.html#lhead",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "lhead",
          "normalized": "Seq a-\u003ea",
          "package": "EdisonCore",
          "signature": "Seq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:lhead"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "lheadM",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e m a",
          "source": "src/Data-Edison-Seq-BraunSeq.html#lheadM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "lheadM",
          "normalized": "Seq a-\u003eb a",
          "package": "EdisonCore",
          "signature": "Seq a-\u003em a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:lheadM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "lookup",
          "package": "EdisonCore",
          "signature": "Int -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-BraunSeq.html#lookup",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "lookup",
          "normalized": "Int-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "Int-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:lookup"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "lookupM",
          "package": "EdisonCore",
          "signature": "Int -\u003e Seq a -\u003e m a",
          "source": "src/Data-Edison-Seq-BraunSeq.html#lookupM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "lookupM",
          "normalized": "Int-\u003eSeq a-\u003eb a",
          "package": "EdisonCore",
          "signature": "Int-\u003eSeq a-\u003em a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:lookupM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "lookupWithDefault",
          "package": "EdisonCore",
          "signature": "a -\u003e Int -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-BraunSeq.html#lookupWithDefault",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "lookupWithDefault",
          "normalized": "a-\u003eInt-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "partial": "With Default",
          "signature": "a-\u003eInt-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:lookupWithDefault"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "ltail",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-BraunSeq.html#ltail",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "ltail",
          "normalized": "Seq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Seq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:ltail"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "ltailM",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e m (Seq a)",
          "source": "src/Data-Edison-Seq-BraunSeq.html#ltailM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "ltailM",
          "normalized": "Seq a-\u003eb(Seq a)",
          "package": "EdisonCore",
          "signature": "Seq a-\u003em(Seq a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:ltailM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "lview",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e m (a, Seq a)",
          "source": "src/Data-Edison-Seq-BraunSeq.html#lview",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "lview",
          "normalized": "Seq a-\u003eb(a,Seq a)",
          "package": "EdisonCore",
          "signature": "Seq a-\u003em(a,Seq a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:lview"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "map",
          "package": "EdisonCore",
          "signature": "(a -\u003e b) -\u003e Seq a -\u003e Seq b",
          "source": "src/Data-Edison-Seq-BraunSeq.html#map",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "map",
          "normalized": "(a-\u003eb)-\u003eSeq a-\u003eSeq b",
          "package": "EdisonCore",
          "signature": "(a-\u003eb)-\u003eSeq a-\u003eSeq b",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:map"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "mapWithIndex",
          "package": "EdisonCore",
          "signature": "(Int -\u003e a -\u003e b) -\u003e Seq a -\u003e Seq b",
          "source": "src/Data-Edison-Seq-BraunSeq.html#mapWithIndex",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "mapWithIndex",
          "normalized": "(Int-\u003ea-\u003eb)-\u003eSeq a-\u003eSeq b",
          "package": "EdisonCore",
          "partial": "With Index",
          "signature": "(Int-\u003ea-\u003eb)-\u003eSeq a-\u003eSeq b",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:mapWithIndex"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "moduleName",
          "package": "EdisonCore",
          "signature": "String",
          "source": "src/Data-Edison-Seq-BraunSeq.html#moduleName",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "moduleName",
          "package": "EdisonCore",
          "partial": "Name",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:moduleName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "null",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Bool",
          "source": "src/Data-Edison-Seq-BraunSeq.html#null",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "null",
          "normalized": "Seq a-\u003eBool",
          "package": "EdisonCore",
          "signature": "Seq a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:null"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "partition",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e Seq a -\u003e (Seq a, Seq a)",
          "source": "src/Data-Edison-Seq-BraunSeq.html#partition",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "partition",
          "normalized": "(a-\u003eBool)-\u003eSeq a-\u003e(Seq a,Seq a)",
          "package": "EdisonCore",
          "signature": "(a-\u003eBool)-\u003eSeq a-\u003e(Seq a,Seq a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:partition"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "rcons",
          "package": "EdisonCore",
          "signature": "a -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-BraunSeq.html#rcons",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "rcons",
          "normalized": "a-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "a-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:rcons"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "reduce1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-BraunSeq.html#reduce1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "reduce1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:reduce1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "reduce1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-BraunSeq.html#reduce1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "reduce1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:reduce1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "reducel",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e a -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-BraunSeq.html#reducel",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "reducel",
          "normalized": "(a-\u003ea-\u003ea)-\u003ea-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003ea-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:reducel"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "reducel'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e a -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-BraunSeq.html#reducel%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "reducel'",
          "normalized": "(a-\u003ea-\u003ea)-\u003ea-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003ea-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:reducel-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "reducer",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e a -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-BraunSeq.html#reducer",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "reducer",
          "normalized": "(a-\u003ea-\u003ea)-\u003ea-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003ea-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:reducer"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "reducer'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e a -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-BraunSeq.html#reducer%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "reducer'",
          "normalized": "(a-\u003ea-\u003ea)-\u003ea-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003ea-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:reducer-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "reverse",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-BraunSeq.html#reverse",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "reverse",
          "normalized": "Seq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Seq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:reverse"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "reverseOnto",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-BraunSeq.html#reverseOnto",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "reverseOnto",
          "normalized": "Seq a-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "partial": "Onto",
          "signature": "Seq a-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:reverseOnto"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "rhead",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-BraunSeq.html#rhead",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "rhead",
          "normalized": "Seq a-\u003ea",
          "package": "EdisonCore",
          "signature": "Seq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:rhead"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "rheadM",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e m a",
          "source": "src/Data-Edison-Seq-BraunSeq.html#rheadM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "rheadM",
          "normalized": "Seq a-\u003eb a",
          "package": "EdisonCore",
          "signature": "Seq a-\u003em a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:rheadM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "rtail",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-BraunSeq.html#rtail",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "rtail",
          "normalized": "Seq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Seq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:rtail"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "rtailM",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e m (Seq a)",
          "source": "src/Data-Edison-Seq-BraunSeq.html#rtailM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "rtailM",
          "normalized": "Seq a-\u003eb(Seq a)",
          "package": "EdisonCore",
          "signature": "Seq a-\u003em(Seq a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:rtailM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "rview",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e m (a, Seq a)",
          "source": "src/Data-Edison-Seq-BraunSeq.html#rview",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "rview",
          "normalized": "Seq a-\u003eb(a,Seq a)",
          "package": "EdisonCore",
          "signature": "Seq a-\u003em(a,Seq a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:rview"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "singleton",
          "package": "EdisonCore",
          "signature": "a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-BraunSeq.html#singleton",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "singleton",
          "normalized": "a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:singleton"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "size",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Int",
          "source": "src/Data-Edison-Seq-BraunSeq.html#size",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "size",
          "normalized": "Seq a-\u003eInt",
          "package": "EdisonCore",
          "signature": "Seq a-\u003eInt",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:size"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "splitAt",
          "package": "EdisonCore",
          "signature": "Int -\u003e Seq a -\u003e (Seq a, Seq a)",
          "source": "src/Data-Edison-Seq-BraunSeq.html#splitAt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "splitAt",
          "normalized": "Int-\u003eSeq a-\u003e(Seq a,Seq a)",
          "package": "EdisonCore",
          "partial": "At",
          "signature": "Int-\u003eSeq a-\u003e(Seq a,Seq a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:splitAt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "splitWhile",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e Seq a -\u003e (Seq a, Seq a)",
          "source": "src/Data-Edison-Seq-BraunSeq.html#splitWhile",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "splitWhile",
          "normalized": "(a-\u003eBool)-\u003eSeq a-\u003e(Seq a,Seq a)",
          "package": "EdisonCore",
          "partial": "While",
          "signature": "(a-\u003eBool)-\u003eSeq a-\u003e(Seq a,Seq a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:splitWhile"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "strict",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-BraunSeq.html#strict",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "strict",
          "normalized": "Seq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Seq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:strict"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "strictWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e b) -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-BraunSeq.html#strictWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "strictWith",
          "normalized": "(a-\u003eb)-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003eb)-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:strictWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "structuralInvariant",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Bool",
          "source": "src/Data-Edison-Seq-BraunSeq.html#structuralInvariant",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "structuralInvariant",
          "normalized": "Seq a-\u003eBool",
          "package": "EdisonCore",
          "partial": "Invariant",
          "signature": "Seq a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:structuralInvariant"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "subseq",
          "package": "EdisonCore",
          "signature": "Int -\u003e Int -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-BraunSeq.html#subseq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "subseq",
          "normalized": "Int-\u003eInt-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Int-\u003eInt-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:subseq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "take",
          "package": "EdisonCore",
          "signature": "Int -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-BraunSeq.html#take",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "take",
          "normalized": "Int-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Int-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:take"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "takeWhile",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-BraunSeq.html#takeWhile",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "takeWhile",
          "normalized": "(a-\u003eBool)-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "partial": "While",
          "signature": "(a-\u003eBool)-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:takeWhile"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "toList",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e [a]",
          "source": "src/Data-Edison-Seq-BraunSeq.html#toList",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "toList",
          "normalized": "Seq a-\u003e[a]",
          "package": "EdisonCore",
          "partial": "List",
          "signature": "Seq a-\u003e[a]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:toList"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "unzip",
          "package": "EdisonCore",
          "signature": "Seq (a, b) -\u003e (Seq a, Seq b)",
          "source": "src/Data-Edison-Seq-BraunSeq.html#unzip",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "unzip",
          "normalized": "Seq(a,b)-\u003e(Seq a,Seq b)",
          "package": "EdisonCore",
          "signature": "Seq(a,b)-\u003e(Seq a,Seq b)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:unzip"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "unzip3",
          "package": "EdisonCore",
          "signature": "Seq (a, b, c) -\u003e (Seq a, Seq b, Seq c)",
          "source": "src/Data-Edison-Seq-BraunSeq.html#unzip3",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "unzip3",
          "normalized": "Seq(a,b,c)-\u003e(Seq a,Seq b,Seq c)",
          "package": "EdisonCore",
          "signature": "Seq(a,b,c)-\u003e(Seq a,Seq b,Seq c)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:unzip3"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "unzipWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e b) -\u003e (a -\u003e c) -\u003e Seq a -\u003e (Seq b, Seq c)",
          "source": "src/Data-Edison-Seq-BraunSeq.html#unzipWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "unzipWith",
          "normalized": "(a-\u003eb)-\u003e(a-\u003ec)-\u003eSeq a-\u003e(Seq b,Seq c)",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003eb)-\u003e(a-\u003ec)-\u003eSeq a-\u003e(Seq b,Seq c)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:unzipWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "unzipWith3",
          "package": "EdisonCore",
          "signature": "(a -\u003e b) -\u003e (a -\u003e c) -\u003e (a -\u003e d) -\u003e Seq a -\u003e (Seq b, Seq c, Seq d)",
          "source": "src/Data-Edison-Seq-BraunSeq.html#unzipWith3",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "unzipWith3",
          "normalized": "(a-\u003eb)-\u003e(a-\u003ec)-\u003e(a-\u003ed)-\u003eSeq a-\u003e(Seq b,Seq c,Seq d)",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003eb)-\u003e(a-\u003ec)-\u003e(a-\u003ed)-\u003eSeq a-\u003e(Seq b,Seq c,Seq d)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:unzipWith3"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "update",
          "package": "EdisonCore",
          "signature": "Int -\u003e a -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-BraunSeq.html#update",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "update",
          "normalized": "Int-\u003ea-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Int-\u003ea-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:update"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "zip",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Seq b -\u003e Seq (a, b)",
          "source": "src/Data-Edison-Seq-BraunSeq.html#zip",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "zip",
          "normalized": "Seq a-\u003eSeq b-\u003eSeq(a,b)",
          "package": "EdisonCore",
          "signature": "Seq a-\u003eSeq b-\u003eSeq(a,b)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:zip"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "zip3",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Seq b -\u003e Seq c -\u003e Seq (a, b, c)",
          "source": "src/Data-Edison-Seq-BraunSeq.html#zip3",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "zip3",
          "normalized": "Seq a-\u003eSeq b-\u003eSeq c-\u003eSeq(a,b,c)",
          "package": "EdisonCore",
          "signature": "Seq a-\u003eSeq b-\u003eSeq c-\u003eSeq(a,b,c)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:zip3"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "zipWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e c) -\u003e Seq a -\u003e Seq b -\u003e Seq c",
          "source": "src/Data-Edison-Seq-BraunSeq.html#zipWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "zipWith",
          "normalized": "(a-\u003eb-\u003ec)-\u003eSeq a-\u003eSeq b-\u003eSeq c",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003eb-\u003ec)-\u003eSeq a-\u003eSeq b-\u003eSeq c",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:zipWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "zipWith3",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e c -\u003e d) -\u003e Seq a -\u003e Seq b -\u003e Seq c -\u003e Seq d",
          "source": "src/Data-Edison-Seq-BraunSeq.html#zipWith3",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq BraunSeq",
          "module": "Data.Edison.Seq.BraunSeq",
          "name": "zipWith3",
          "normalized": "(a-\u003eb-\u003ec-\u003ed)-\u003eSeq a-\u003eSeq b-\u003eSeq c-\u003eSeq d",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003eb-\u003ec-\u003ed)-\u003eSeq a-\u003eSeq b-\u003eSeq c-\u003eSeq d",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-BraunSeq.html#v:zipWith3"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThis module provides default implementations of many of\n   the sequence operations.  It is used to fill in implementations\n   and is not intended for end users.\n\u003c/p\u003e\u003c/div\u003e",
          "module": "Data.Edison.Seq.Defaults",
          "name": "Defaults",
          "package": "EdisonCore",
          "source": "src/Data-Edison-Seq-Defaults.html",
          "type": "module"
        },
        "index": {
          "description": "This module provides default implementations of many of the sequence operations It is used to fill in implementations and is not intended for end users",
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "Defaults",
          "package": "EdisonCore",
          "partial": "Defaults",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "adjustUsingLists",
          "package": "EdisonCore",
          "signature": "(a -\u003e a) -\u003e Int -\u003e s a -\u003e s a",
          "source": "src/Data-Edison-Seq-Defaults.html#adjustUsingLists",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "adjustUsingLists",
          "normalized": "(a-\u003ea)-\u003eInt-\u003eb a-\u003eb a",
          "package": "EdisonCore",
          "partial": "Using Lists",
          "signature": "(a-\u003ea)-\u003eInt-\u003es a-\u003es a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:adjustUsingLists"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "adjustUsingSplitAt",
          "package": "EdisonCore",
          "signature": "(a -\u003e a) -\u003e Int -\u003e s a -\u003e s a",
          "source": "src/Data-Edison-Seq-Defaults.html#adjustUsingSplitAt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "adjustUsingSplitAt",
          "normalized": "(a-\u003ea)-\u003eInt-\u003eb a-\u003eb a",
          "package": "EdisonCore",
          "partial": "Using Split At",
          "signature": "(a-\u003ea)-\u003eInt-\u003es a-\u003es a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:adjustUsingSplitAt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "appendUsingFoldr",
          "package": "EdisonCore",
          "signature": "s a -\u003e s a -\u003e s a",
          "source": "src/Data-Edison-Seq-Defaults.html#appendUsingFoldr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "appendUsingFoldr",
          "normalized": "a b-\u003ea b-\u003ea b",
          "package": "EdisonCore",
          "partial": "Using Foldr",
          "signature": "s a-\u003es a-\u003es a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:appendUsingFoldr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "concatMapUsingFoldr",
          "package": "EdisonCore",
          "signature": "(a -\u003e s b) -\u003e s a -\u003e s b",
          "source": "src/Data-Edison-Seq-Defaults.html#concatMapUsingFoldr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "concatMapUsingFoldr",
          "normalized": "(a-\u003eb c)-\u003eb a-\u003eb c",
          "package": "EdisonCore",
          "partial": "Map Using Foldr",
          "signature": "(a-\u003es b)-\u003es a-\u003es b",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:concatMapUsingFoldr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "concatUsingFoldr",
          "package": "EdisonCore",
          "signature": "s (s a) -\u003e s a",
          "source": "src/Data-Edison-Seq-Defaults.html#concatUsingFoldr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "concatUsingFoldr",
          "normalized": "a(a b)-\u003ea b",
          "package": "EdisonCore",
          "partial": "Using Foldr",
          "signature": "s(s a)-\u003es a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:concatUsingFoldr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "copyUsingLists",
          "package": "EdisonCore",
          "signature": "Int -\u003e a -\u003e s a",
          "source": "src/Data-Edison-Seq-Defaults.html#copyUsingLists",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "copyUsingLists",
          "normalized": "Int-\u003ea-\u003eb a",
          "package": "EdisonCore",
          "partial": "Using Lists",
          "signature": "Int-\u003ea-\u003es a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:copyUsingLists"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "defaultCompare",
          "package": "EdisonCore",
          "signature": "s a -\u003e s a -\u003e Ordering",
          "source": "src/Data-Edison-Seq-Defaults.html#defaultCompare",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "defaultCompare",
          "normalized": "a b-\u003ea b-\u003eOrdering",
          "package": "EdisonCore",
          "partial": "Compare",
          "signature": "s a-\u003es a-\u003eOrdering",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:defaultCompare"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "dropMatch",
          "package": "EdisonCore",
          "signature": "[a] -\u003e [a] -\u003e m [a]",
          "source": "src/Data-Edison-Seq-Defaults.html#dropMatch",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "dropMatch",
          "normalized": "[a]-\u003e[a]-\u003eb[a]",
          "package": "EdisonCore",
          "partial": "Match",
          "signature": "[a]-\u003e[a]-\u003em[a]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:dropMatch"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "dropUsingLists",
          "package": "EdisonCore",
          "signature": "Int -\u003e s a -\u003e s a",
          "source": "src/Data-Edison-Seq-Defaults.html#dropUsingLists",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "dropUsingLists",
          "normalized": "Int-\u003ea b-\u003ea b",
          "package": "EdisonCore",
          "partial": "Using Lists",
          "signature": "Int-\u003es a-\u003es a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:dropUsingLists"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "dropUsingLtail",
          "package": "EdisonCore",
          "signature": "Int -\u003e s a -\u003e s a",
          "source": "src/Data-Edison-Seq-Defaults.html#dropUsingLtail",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "dropUsingLtail",
          "normalized": "Int-\u003ea b-\u003ea b",
          "package": "EdisonCore",
          "partial": "Using Ltail",
          "signature": "Int-\u003es a-\u003es a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:dropUsingLtail"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "dropWhileUsingLview",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e s a -\u003e s a",
          "source": "src/Data-Edison-Seq-Defaults.html#dropWhileUsingLview",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "dropWhileUsingLview",
          "normalized": "(a-\u003eBool)-\u003eb a-\u003eb a",
          "package": "EdisonCore",
          "partial": "While Using Lview",
          "signature": "(a-\u003eBool)-\u003es a-\u003es a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:dropWhileUsingLview"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "filterUsingFoldr",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e s a -\u003e s a",
          "source": "src/Data-Edison-Seq-Defaults.html#filterUsingFoldr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "filterUsingFoldr",
          "normalized": "(a-\u003eBool)-\u003eb a-\u003eb a",
          "package": "EdisonCore",
          "partial": "Using Foldr",
          "signature": "(a-\u003eBool)-\u003es a-\u003es a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:filterUsingFoldr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "filterUsingLists",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e s a -\u003e s a",
          "source": "src/Data-Edison-Seq-Defaults.html#filterUsingLists",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "filterUsingLists",
          "normalized": "(a-\u003eBool)-\u003eb a-\u003eb a",
          "package": "EdisonCore",
          "partial": "Using Lists",
          "signature": "(a-\u003eBool)-\u003es a-\u003es a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:filterUsingLists"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "filterUsingLview",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e s a -\u003e s a",
          "source": "src/Data-Edison-Seq-Defaults.html#filterUsingLview",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "filterUsingLview",
          "normalized": "(a-\u003eBool)-\u003eb a-\u003eb a",
          "package": "EdisonCore",
          "partial": "Using Lview",
          "signature": "(a-\u003eBool)-\u003es a-\u003es a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:filterUsingLview"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "fold1'UsingFold'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e s a -\u003e a",
          "source": "src/Data-Edison-Seq-Defaults.html#fold1%27UsingFold%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "fold1'UsingFold'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eb a-\u003ea",
          "package": "EdisonCore",
          "partial": "Using Fold'",
          "signature": "(a-\u003ea-\u003ea)-\u003es a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:fold1-39-UsingFold-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "fold1UsingFold",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e s a -\u003e a",
          "source": "src/Data-Edison-Seq-Defaults.html#fold1UsingFold",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "fold1UsingFold",
          "normalized": "(a-\u003ea-\u003ea)-\u003eb a-\u003ea",
          "package": "EdisonCore",
          "partial": "Using Fold",
          "signature": "(a-\u003ea-\u003ea)-\u003es a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:fold1UsingFold"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "foldl'UsingLists",
          "package": "EdisonCore",
          "signature": "(b -\u003e a -\u003e b) -\u003e b -\u003e s a -\u003e b",
          "source": "src/Data-Edison-Seq-Defaults.html#foldl%27UsingLists",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "foldl'UsingLists",
          "normalized": "(a-\u003eb-\u003ea)-\u003ea-\u003ec b-\u003ea",
          "package": "EdisonCore",
          "partial": "Using Lists",
          "signature": "(b-\u003ea-\u003eb)-\u003eb-\u003es a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:foldl-39-UsingLists"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "foldl1'UsingFoldl'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e s a -\u003e a",
          "source": "src/Data-Edison-Seq-Defaults.html#foldl1%27UsingFoldl%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "foldl1'UsingFoldl'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eb a-\u003ea",
          "package": "EdisonCore",
          "partial": "Using Foldl'",
          "signature": "(a-\u003ea-\u003ea)-\u003es a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:foldl1-39-UsingFoldl-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "foldl1'UsingLists",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e s a -\u003e a",
          "source": "src/Data-Edison-Seq-Defaults.html#foldl1%27UsingLists",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "foldl1'UsingLists",
          "normalized": "(a-\u003ea-\u003ea)-\u003eb a-\u003ea",
          "package": "EdisonCore",
          "partial": "Using Lists",
          "signature": "(a-\u003ea-\u003ea)-\u003es a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:foldl1-39-UsingLists"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "foldl1UsingFoldl",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e s a -\u003e a",
          "source": "src/Data-Edison-Seq-Defaults.html#foldl1UsingFoldl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "foldl1UsingFoldl",
          "normalized": "(a-\u003ea-\u003ea)-\u003eb a-\u003ea",
          "package": "EdisonCore",
          "partial": "Using Foldl",
          "signature": "(a-\u003ea-\u003ea)-\u003es a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:foldl1UsingFoldl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "foldl1UsingLists",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e s a -\u003e a",
          "source": "src/Data-Edison-Seq-Defaults.html#foldl1UsingLists",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "foldl1UsingLists",
          "normalized": "(a-\u003ea-\u003ea)-\u003eb a-\u003ea",
          "package": "EdisonCore",
          "partial": "Using Lists",
          "signature": "(a-\u003ea-\u003ea)-\u003es a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:foldl1UsingLists"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "foldlUsingLists",
          "package": "EdisonCore",
          "signature": "(b -\u003e a -\u003e b) -\u003e b -\u003e s a -\u003e b",
          "source": "src/Data-Edison-Seq-Defaults.html#foldlUsingLists",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "foldlUsingLists",
          "normalized": "(a-\u003eb-\u003ea)-\u003ea-\u003ec b-\u003ea",
          "package": "EdisonCore",
          "partial": "Using Lists",
          "signature": "(b-\u003ea-\u003eb)-\u003eb-\u003es a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:foldlUsingLists"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "foldlWithIndex'UsingLists",
          "package": "EdisonCore",
          "signature": "(b -\u003e Int -\u003e a -\u003e b) -\u003e b -\u003e s a -\u003e b",
          "source": "src/Data-Edison-Seq-Defaults.html#foldlWithIndex%27UsingLists",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "foldlWithIndex'UsingLists",
          "normalized": "(a-\u003eInt-\u003eb-\u003ea)-\u003ea-\u003ec b-\u003ea",
          "package": "EdisonCore",
          "partial": "With Index' Using Lists",
          "signature": "(b-\u003eInt-\u003ea-\u003eb)-\u003eb-\u003es a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:foldlWithIndex-39-UsingLists"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "foldlWithIndexUsingLists",
          "package": "EdisonCore",
          "signature": "(b -\u003e Int -\u003e a -\u003e b) -\u003e b -\u003e s a -\u003e b",
          "source": "src/Data-Edison-Seq-Defaults.html#foldlWithIndexUsingLists",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "foldlWithIndexUsingLists",
          "normalized": "(a-\u003eInt-\u003eb-\u003ea)-\u003ea-\u003ec b-\u003ea",
          "package": "EdisonCore",
          "partial": "With Index Using Lists",
          "signature": "(b-\u003eInt-\u003ea-\u003eb)-\u003eb-\u003es a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:foldlWithIndexUsingLists"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "foldr'UsingLists",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e s a -\u003e b",
          "source": "src/Data-Edison-Seq-Defaults.html#foldr%27UsingLists",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "foldr'UsingLists",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003ec a-\u003eb",
          "package": "EdisonCore",
          "partial": "Using Lists",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003es a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:foldr-39-UsingLists"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "foldr1'UsingLists",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e s a -\u003e a",
          "source": "src/Data-Edison-Seq-Defaults.html#foldr1%27UsingLists",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "foldr1'UsingLists",
          "normalized": "(a-\u003ea-\u003ea)-\u003eb a-\u003ea",
          "package": "EdisonCore",
          "partial": "Using Lists",
          "signature": "(a-\u003ea-\u003ea)-\u003es a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:foldr1-39-UsingLists"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "foldr1'UsingLview",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e s a -\u003e a",
          "source": "src/Data-Edison-Seq-Defaults.html#foldr1%27UsingLview",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "foldr1'UsingLview",
          "normalized": "(a-\u003ea-\u003ea)-\u003eb a-\u003ea",
          "package": "EdisonCore",
          "partial": "Using Lview",
          "signature": "(a-\u003ea-\u003ea)-\u003es a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:foldr1-39-UsingLview"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "foldr1UsingLists",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e s a -\u003e a",
          "source": "src/Data-Edison-Seq-Defaults.html#foldr1UsingLists",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "foldr1UsingLists",
          "normalized": "(a-\u003ea-\u003ea)-\u003eb a-\u003ea",
          "package": "EdisonCore",
          "partial": "Using Lists",
          "signature": "(a-\u003ea-\u003ea)-\u003es a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:foldr1UsingLists"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "foldr1UsingLview",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e s a -\u003e a",
          "source": "src/Data-Edison-Seq-Defaults.html#foldr1UsingLview",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "foldr1UsingLview",
          "normalized": "(a-\u003ea-\u003ea)-\u003eb a-\u003ea",
          "package": "EdisonCore",
          "partial": "Using Lview",
          "signature": "(a-\u003ea-\u003ea)-\u003es a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:foldr1UsingLview"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "foldrUsingLists",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e s a -\u003e b",
          "source": "src/Data-Edison-Seq-Defaults.html#foldrUsingLists",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "foldrUsingLists",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003ec a-\u003eb",
          "package": "EdisonCore",
          "partial": "Using Lists",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003es a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:foldrUsingLists"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "foldrWithIndex'UsingLists",
          "package": "EdisonCore",
          "signature": "(Int -\u003e a -\u003e b -\u003e b) -\u003e b -\u003e s a -\u003e b",
          "source": "src/Data-Edison-Seq-Defaults.html#foldrWithIndex%27UsingLists",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "foldrWithIndex'UsingLists",
          "normalized": "(Int-\u003ea-\u003eb-\u003eb)-\u003eb-\u003ec a-\u003eb",
          "package": "EdisonCore",
          "partial": "With Index' Using Lists",
          "signature": "(Int-\u003ea-\u003eb-\u003eb)-\u003eb-\u003es a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:foldrWithIndex-39-UsingLists"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "foldrWithIndexUsingLists",
          "package": "EdisonCore",
          "signature": "(Int -\u003e a -\u003e b -\u003e b) -\u003e b -\u003e s a -\u003e b",
          "source": "src/Data-Edison-Seq-Defaults.html#foldrWithIndexUsingLists",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "foldrWithIndexUsingLists",
          "normalized": "(Int-\u003ea-\u003eb-\u003eb)-\u003eb-\u003ec a-\u003eb",
          "package": "EdisonCore",
          "partial": "With Index Using Lists",
          "signature": "(Int-\u003ea-\u003eb-\u003eb)-\u003eb-\u003es a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:foldrWithIndexUsingLists"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "fromListUsingCons",
          "package": "EdisonCore",
          "signature": "[a] -\u003e s a",
          "source": "src/Data-Edison-Seq-Defaults.html#fromListUsingCons",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "fromListUsingCons",
          "normalized": "[a]-\u003eb a",
          "package": "EdisonCore",
          "partial": "List Using Cons",
          "signature": "[a]-\u003es a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:fromListUsingCons"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "inBoundsUsingDrop",
          "package": "EdisonCore",
          "signature": "Int -\u003e s a -\u003e Bool",
          "source": "src/Data-Edison-Seq-Defaults.html#inBoundsUsingDrop",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "inBoundsUsingDrop",
          "normalized": "Int-\u003ea b-\u003eBool",
          "package": "EdisonCore",
          "partial": "Bounds Using Drop",
          "signature": "Int-\u003es a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:inBoundsUsingDrop"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "inBoundsUsingLookupM",
          "package": "EdisonCore",
          "signature": "Int -\u003e s a -\u003e Bool",
          "source": "src/Data-Edison-Seq-Defaults.html#inBoundsUsingLookupM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "inBoundsUsingLookupM",
          "normalized": "Int-\u003ea b-\u003eBool",
          "package": "EdisonCore",
          "partial": "Bounds Using Lookup",
          "signature": "Int-\u003es a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:inBoundsUsingLookupM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "inBoundsUsingSize",
          "package": "EdisonCore",
          "signature": "Int -\u003e s a -\u003e Bool",
          "source": "src/Data-Edison-Seq-Defaults.html#inBoundsUsingSize",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "inBoundsUsingSize",
          "normalized": "Int-\u003ea b-\u003eBool",
          "package": "EdisonCore",
          "partial": "Bounds Using Size",
          "signature": "Int-\u003es a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:inBoundsUsingSize"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "lookupMUsingDrop",
          "package": "EdisonCore",
          "signature": "Int -\u003e s a -\u003e m a",
          "source": "src/Data-Edison-Seq-Defaults.html#lookupMUsingDrop",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "lookupMUsingDrop",
          "normalized": "Int-\u003ea b-\u003ec b",
          "package": "EdisonCore",
          "partial": "MUsing Drop",
          "signature": "Int-\u003es a-\u003em a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:lookupMUsingDrop"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "lookupUsingDrop",
          "package": "EdisonCore",
          "signature": "Int -\u003e s a -\u003e a",
          "source": "src/Data-Edison-Seq-Defaults.html#lookupUsingDrop",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "lookupUsingDrop",
          "normalized": "Int-\u003ea b-\u003eb",
          "package": "EdisonCore",
          "partial": "Using Drop",
          "signature": "Int-\u003es a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:lookupUsingDrop"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "lookupUsingLookupM",
          "package": "EdisonCore",
          "signature": "Int -\u003e s a -\u003e a",
          "source": "src/Data-Edison-Seq-Defaults.html#lookupUsingLookupM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "lookupUsingLookupM",
          "normalized": "Int-\u003ea b-\u003eb",
          "package": "EdisonCore",
          "partial": "Using Lookup",
          "signature": "Int-\u003es a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:lookupUsingLookupM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "lookupWithDefaultUsingDrop",
          "package": "EdisonCore",
          "signature": "a -\u003e Int -\u003e s a -\u003e a",
          "source": "src/Data-Edison-Seq-Defaults.html#lookupWithDefaultUsingDrop",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "lookupWithDefaultUsingDrop",
          "normalized": "a-\u003eInt-\u003eb a-\u003ea",
          "package": "EdisonCore",
          "partial": "With Default Using Drop",
          "signature": "a-\u003eInt-\u003es a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:lookupWithDefaultUsingDrop"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "lookupWithDefaultUsingLookupM",
          "package": "EdisonCore",
          "signature": "a -\u003e Int -\u003e s a -\u003e a",
          "source": "src/Data-Edison-Seq-Defaults.html#lookupWithDefaultUsingLookupM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "lookupWithDefaultUsingLookupM",
          "normalized": "a-\u003eInt-\u003eb a-\u003ea",
          "package": "EdisonCore",
          "partial": "With Default Using Lookup",
          "signature": "a-\u003eInt-\u003es a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:lookupWithDefaultUsingLookupM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "mapUsingFoldr",
          "package": "EdisonCore",
          "signature": "(a -\u003e b) -\u003e s a -\u003e s b",
          "source": "src/Data-Edison-Seq-Defaults.html#mapUsingFoldr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "mapUsingFoldr",
          "normalized": "(a-\u003eb)-\u003ec a-\u003ec b",
          "package": "EdisonCore",
          "partial": "Using Foldr",
          "signature": "(a-\u003eb)-\u003es a-\u003es b",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:mapUsingFoldr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "mapWithIndexUsingLists",
          "package": "EdisonCore",
          "signature": "(Int -\u003e a -\u003e b) -\u003e s a -\u003e s b",
          "source": "src/Data-Edison-Seq-Defaults.html#mapWithIndexUsingLists",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "mapWithIndexUsingLists",
          "normalized": "(Int-\u003ea-\u003eb)-\u003ec a-\u003ec b",
          "package": "EdisonCore",
          "partial": "With Index Using Lists",
          "signature": "(Int-\u003ea-\u003eb)-\u003es a-\u003es b",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:mapWithIndexUsingLists"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "maybeParens",
          "package": "EdisonCore",
          "signature": "ReadS a -\u003e ReadS a",
          "source": "src/Data-Edison-Seq-Defaults.html#maybeParens",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "maybeParens",
          "normalized": "ReadS a-\u003eReadS a",
          "package": "EdisonCore",
          "partial": "Parens",
          "signature": "ReadS a-\u003eReadS a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:maybeParens"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "partitionUsingFoldr",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e s a -\u003e (s a, s a)",
          "source": "src/Data-Edison-Seq-Defaults.html#partitionUsingFoldr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "partitionUsingFoldr",
          "normalized": "(a-\u003eBool)-\u003eb a-\u003e(b a,b a)",
          "package": "EdisonCore",
          "partial": "Using Foldr",
          "signature": "(a-\u003eBool)-\u003es a-\u003e(s a,s a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:partitionUsingFoldr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "partitionUsingLists",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e s a -\u003e (s a, s a)",
          "source": "src/Data-Edison-Seq-Defaults.html#partitionUsingLists",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "partitionUsingLists",
          "normalized": "(a-\u003eBool)-\u003eb a-\u003e(b a,b a)",
          "package": "EdisonCore",
          "partial": "Using Lists",
          "signature": "(a-\u003eBool)-\u003es a-\u003e(s a,s a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:partitionUsingLists"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "rconsUsingAppend",
          "package": "EdisonCore",
          "signature": "a -\u003e s a -\u003e s a",
          "source": "src/Data-Edison-Seq-Defaults.html#rconsUsingAppend",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "rconsUsingAppend",
          "normalized": "a-\u003eb a-\u003eb a",
          "package": "EdisonCore",
          "partial": "Using Append",
          "signature": "a-\u003es a-\u003es a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:rconsUsingAppend"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "rconsUsingFoldr",
          "package": "EdisonCore",
          "signature": "a -\u003e s a -\u003e s a",
          "source": "src/Data-Edison-Seq-Defaults.html#rconsUsingFoldr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "rconsUsingFoldr",
          "normalized": "a-\u003eb a-\u003eb a",
          "package": "EdisonCore",
          "partial": "Using Foldr",
          "signature": "a-\u003es a-\u003es a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:rconsUsingFoldr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "readSParens",
          "package": "EdisonCore",
          "signature": "ReadS a -\u003e ReadS a",
          "source": "src/Data-Edison-Seq-Defaults.html#readSParens",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "readSParens",
          "normalized": "ReadS a-\u003eReadS a",
          "package": "EdisonCore",
          "partial": "SParens",
          "signature": "ReadS a-\u003eReadS a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:readSParens"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "readsPrecUsingFromList",
          "package": "EdisonCore",
          "signature": "Int -\u003e ReadS (s a)",
          "source": "src/Data-Edison-Seq-Defaults.html#readsPrecUsingFromList",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "readsPrecUsingFromList",
          "normalized": "Int-\u003eReadS(a b)",
          "package": "EdisonCore",
          "partial": "Prec Using From List",
          "signature": "Int-\u003eReadS(s a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:readsPrecUsingFromList"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "reduce1'UsingLists",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e s a -\u003e a",
          "source": "src/Data-Edison-Seq-Defaults.html#reduce1%27UsingLists",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "reduce1'UsingLists",
          "normalized": "(a-\u003ea-\u003ea)-\u003eb a-\u003ea",
          "package": "EdisonCore",
          "partial": "Using Lists",
          "signature": "(a-\u003ea-\u003ea)-\u003es a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:reduce1-39-UsingLists"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "reduce1UsingLists",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e s a -\u003e a",
          "source": "src/Data-Edison-Seq-Defaults.html#reduce1UsingLists",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "reduce1UsingLists",
          "normalized": "(a-\u003ea-\u003ea)-\u003eb a-\u003ea",
          "package": "EdisonCore",
          "partial": "Using Lists",
          "signature": "(a-\u003ea-\u003ea)-\u003es a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:reduce1UsingLists"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "reducel'UsingReduce1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e a -\u003e s a -\u003e a",
          "source": "src/Data-Edison-Seq-Defaults.html#reducel%27UsingReduce1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "reducel'UsingReduce1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003ea-\u003eb a-\u003ea",
          "package": "EdisonCore",
          "partial": "Using Reduce",
          "signature": "(a-\u003ea-\u003ea)-\u003ea-\u003es a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:reducel-39-UsingReduce1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "reducelUsingReduce1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e a -\u003e s a -\u003e a",
          "source": "src/Data-Edison-Seq-Defaults.html#reducelUsingReduce1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "reducelUsingReduce1",
          "normalized": "(a-\u003ea-\u003ea)-\u003ea-\u003eb a-\u003ea",
          "package": "EdisonCore",
          "partial": "Using Reduce",
          "signature": "(a-\u003ea-\u003ea)-\u003ea-\u003es a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:reducelUsingReduce1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "reducer'UsingReduce1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e a -\u003e s a -\u003e a",
          "source": "src/Data-Edison-Seq-Defaults.html#reducer%27UsingReduce1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "reducer'UsingReduce1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003ea-\u003eb a-\u003ea",
          "package": "EdisonCore",
          "partial": "Using Reduce",
          "signature": "(a-\u003ea-\u003ea)-\u003ea-\u003es a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:reducer-39-UsingReduce1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "reducerUsingReduce1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e a -\u003e s a -\u003e a",
          "source": "src/Data-Edison-Seq-Defaults.html#reducerUsingReduce1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "reducerUsingReduce1",
          "normalized": "(a-\u003ea-\u003ea)-\u003ea-\u003eb a-\u003ea",
          "package": "EdisonCore",
          "partial": "Using Reduce",
          "signature": "(a-\u003ea-\u003ea)-\u003ea-\u003es a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:reducerUsingReduce1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "reverseOntoUsingFoldl",
          "package": "EdisonCore",
          "signature": "s a -\u003e s a -\u003e s a",
          "source": "src/Data-Edison-Seq-Defaults.html#reverseOntoUsingFoldl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "reverseOntoUsingFoldl",
          "normalized": "a b-\u003ea b-\u003ea b",
          "package": "EdisonCore",
          "partial": "Onto Using Foldl",
          "signature": "s a-\u003es a-\u003es a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:reverseOntoUsingFoldl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "reverseOntoUsingReverse",
          "package": "EdisonCore",
          "signature": "s a -\u003e s a -\u003e s a",
          "source": "src/Data-Edison-Seq-Defaults.html#reverseOntoUsingReverse",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "reverseOntoUsingReverse",
          "normalized": "a b-\u003ea b-\u003ea b",
          "package": "EdisonCore",
          "partial": "Onto Using Reverse",
          "signature": "s a-\u003es a-\u003es a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:reverseOntoUsingReverse"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "reverseUsingLists",
          "package": "EdisonCore",
          "signature": "s a -\u003e s a",
          "source": "src/Data-Edison-Seq-Defaults.html#reverseUsingLists",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "reverseUsingLists",
          "normalized": "a b-\u003ea b",
          "package": "EdisonCore",
          "partial": "Using Lists",
          "signature": "s a-\u003es a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:reverseUsingLists"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "reverseUsingReverseOnto",
          "package": "EdisonCore",
          "signature": "s a -\u003e s a",
          "source": "src/Data-Edison-Seq-Defaults.html#reverseUsingReverseOnto",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "reverseUsingReverseOnto",
          "normalized": "a b-\u003ea b",
          "package": "EdisonCore",
          "partial": "Using Reverse Onto",
          "signature": "s a-\u003es a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:reverseUsingReverseOnto"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "rtailMUsingLview",
          "package": "EdisonCore",
          "signature": "s a -\u003e m (s a)",
          "source": "src/Data-Edison-Seq-Defaults.html#rtailMUsingLview",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "rtailMUsingLview",
          "normalized": "a b-\u003ec(a b)",
          "package": "EdisonCore",
          "partial": "MUsing Lview",
          "signature": "s a-\u003em(s a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:rtailMUsingLview"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "rtailUsingLview",
          "package": "EdisonCore",
          "signature": "s a -\u003e s a",
          "source": "src/Data-Edison-Seq-Defaults.html#rtailUsingLview",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "rtailUsingLview",
          "normalized": "a b-\u003ea b",
          "package": "EdisonCore",
          "partial": "Using Lview",
          "signature": "s a-\u003es a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:rtailUsingLview"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "rviewDefault",
          "package": "EdisonCore",
          "signature": "s a -\u003e m (a, s a)",
          "source": "src/Data-Edison-Seq-Defaults.html#rviewDefault",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "rviewDefault",
          "normalized": "a b-\u003ec(b,a b)",
          "package": "EdisonCore",
          "partial": "Default",
          "signature": "s a-\u003em(a,s a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:rviewDefault"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "showsPrecUsingToList",
          "package": "EdisonCore",
          "signature": "Int -\u003e s a -\u003e ShowS",
          "source": "src/Data-Edison-Seq-Defaults.html#showsPrecUsingToList",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "showsPrecUsingToList",
          "normalized": "Int-\u003ea b-\u003eShowS",
          "package": "EdisonCore",
          "partial": "Prec Using To List",
          "signature": "Int-\u003es a-\u003eShowS",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:showsPrecUsingToList"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "splitAtDefault",
          "package": "EdisonCore",
          "signature": "Int -\u003e s a -\u003e (s a, s a)",
          "source": "src/Data-Edison-Seq-Defaults.html#splitAtDefault",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "splitAtDefault",
          "normalized": "Int-\u003ea b-\u003e(a b,a b)",
          "package": "EdisonCore",
          "partial": "At Default",
          "signature": "Int-\u003es a-\u003e(s a,s a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:splitAtDefault"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "splitAtUsingLview",
          "package": "EdisonCore",
          "signature": "Int -\u003e s a -\u003e (s a, s a)",
          "source": "src/Data-Edison-Seq-Defaults.html#splitAtUsingLview",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "splitAtUsingLview",
          "normalized": "Int-\u003ea b-\u003e(a b,a b)",
          "package": "EdisonCore",
          "partial": "At Using Lview",
          "signature": "Int-\u003es a-\u003e(s a,s a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:splitAtUsingLview"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "splitWhileUsingLview",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e s a -\u003e (s a, s a)",
          "source": "src/Data-Edison-Seq-Defaults.html#splitWhileUsingLview",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "splitWhileUsingLview",
          "normalized": "(a-\u003eBool)-\u003eb a-\u003e(b a,b a)",
          "package": "EdisonCore",
          "partial": "While Using Lview",
          "signature": "(a-\u003eBool)-\u003es a-\u003e(s a,s a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:splitWhileUsingLview"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "subseqDefault",
          "package": "EdisonCore",
          "signature": "Int -\u003e Int -\u003e s a -\u003e s a",
          "source": "src/Data-Edison-Seq-Defaults.html#subseqDefault",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "subseqDefault",
          "normalized": "Int-\u003eInt-\u003ea b-\u003ea b",
          "package": "EdisonCore",
          "partial": "Default",
          "signature": "Int-\u003eInt-\u003es a-\u003es a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:subseqDefault"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "takeUsingLists",
          "package": "EdisonCore",
          "signature": "Int -\u003e s a -\u003e s a",
          "source": "src/Data-Edison-Seq-Defaults.html#takeUsingLists",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "takeUsingLists",
          "normalized": "Int-\u003ea b-\u003ea b",
          "package": "EdisonCore",
          "partial": "Using Lists",
          "signature": "Int-\u003es a-\u003es a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:takeUsingLists"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "takeUsingLview",
          "package": "EdisonCore",
          "signature": "Int -\u003e s a -\u003e s a",
          "source": "src/Data-Edison-Seq-Defaults.html#takeUsingLview",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "takeUsingLview",
          "normalized": "Int-\u003ea b-\u003ea b",
          "package": "EdisonCore",
          "partial": "Using Lview",
          "signature": "Int-\u003es a-\u003es a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:takeUsingLview"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "takeWhileUsingLview",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e s a -\u003e s a",
          "source": "src/Data-Edison-Seq-Defaults.html#takeWhileUsingLview",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "takeWhileUsingLview",
          "normalized": "(a-\u003eBool)-\u003eb a-\u003eb a",
          "package": "EdisonCore",
          "partial": "While Using Lview",
          "signature": "(a-\u003eBool)-\u003es a-\u003es a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:takeWhileUsingLview"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "toListUsingFoldr",
          "package": "EdisonCore",
          "signature": "s a -\u003e [a]",
          "source": "src/Data-Edison-Seq-Defaults.html#toListUsingFoldr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "toListUsingFoldr",
          "normalized": "a b-\u003e[b]",
          "package": "EdisonCore",
          "partial": "List Using Foldr",
          "signature": "s a-\u003e[a]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:toListUsingFoldr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "tokenMatch",
          "package": "EdisonCore",
          "signature": "String -\u003e String -\u003e m String",
          "source": "src/Data-Edison-Seq-Defaults.html#tokenMatch",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "tokenMatch",
          "normalized": "String-\u003eString-\u003ea String",
          "package": "EdisonCore",
          "partial": "Match",
          "signature": "String-\u003eString-\u003em String",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:tokenMatch"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "unzip3UsingFoldr",
          "package": "EdisonCore",
          "signature": "s (a, b, c) -\u003e (s a, s b, s c)",
          "source": "src/Data-Edison-Seq-Defaults.html#unzip3UsingFoldr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "unzip3UsingFoldr",
          "normalized": "a(b,c,d)-\u003e(a b,a c,a d)",
          "package": "EdisonCore",
          "partial": "Using Foldr",
          "signature": "s(a,b,c)-\u003e(s a,s b,s c)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:unzip3UsingFoldr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "unzip3UsingLists",
          "package": "EdisonCore",
          "signature": "s (a, b, c) -\u003e (s a, s b, s c)",
          "source": "src/Data-Edison-Seq-Defaults.html#unzip3UsingLists",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "unzip3UsingLists",
          "normalized": "a(b,c,d)-\u003e(a b,a c,a d)",
          "package": "EdisonCore",
          "partial": "Using Lists",
          "signature": "s(a,b,c)-\u003e(s a,s b,s c)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:unzip3UsingLists"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "unzipUsingFoldr",
          "package": "EdisonCore",
          "signature": "s (a, b) -\u003e (s a, s b)",
          "source": "src/Data-Edison-Seq-Defaults.html#unzipUsingFoldr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "unzipUsingFoldr",
          "normalized": "a(b,c)-\u003e(a b,a c)",
          "package": "EdisonCore",
          "partial": "Using Foldr",
          "signature": "s(a,b)-\u003e(s a,s b)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:unzipUsingFoldr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "unzipUsingLists",
          "package": "EdisonCore",
          "signature": "s (a, b) -\u003e (s a, s b)",
          "source": "src/Data-Edison-Seq-Defaults.html#unzipUsingLists",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "unzipUsingLists",
          "normalized": "a(b,c)-\u003e(a b,a c)",
          "package": "EdisonCore",
          "partial": "Using Lists",
          "signature": "s(a,b)-\u003e(s a,s b)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:unzipUsingLists"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "unzipWith3UsingFoldr",
          "package": "EdisonCore",
          "signature": "(a -\u003e b) -\u003e (a -\u003e c) -\u003e (a -\u003e d) -\u003e s a -\u003e (s b, s c, s d)",
          "source": "src/Data-Edison-Seq-Defaults.html#unzipWith3UsingFoldr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "unzipWith3UsingFoldr",
          "normalized": "(a-\u003eb)-\u003e(a-\u003ec)-\u003e(a-\u003ed)-\u003ee a-\u003e(e b,e c,e d)",
          "package": "EdisonCore",
          "partial": "With Using Foldr",
          "signature": "(a-\u003eb)-\u003e(a-\u003ec)-\u003e(a-\u003ed)-\u003es a-\u003e(s b,s c,s d)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:unzipWith3UsingFoldr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "unzipWith3UsingLists",
          "package": "EdisonCore",
          "signature": "(a -\u003e b) -\u003e (a -\u003e c) -\u003e (a -\u003e d) -\u003e s a -\u003e (s b, s c, s d)",
          "source": "src/Data-Edison-Seq-Defaults.html#unzipWith3UsingLists",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "unzipWith3UsingLists",
          "normalized": "(a-\u003eb)-\u003e(a-\u003ec)-\u003e(a-\u003ed)-\u003ee a-\u003e(e b,e c,e d)",
          "package": "EdisonCore",
          "partial": "With Using Lists",
          "signature": "(a-\u003eb)-\u003e(a-\u003ec)-\u003e(a-\u003ed)-\u003es a-\u003e(s b,s c,s d)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:unzipWith3UsingLists"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "unzipWithUsingFoldr",
          "package": "EdisonCore",
          "signature": "(a -\u003e b) -\u003e (a -\u003e c) -\u003e s a -\u003e (s b, s c)",
          "source": "src/Data-Edison-Seq-Defaults.html#unzipWithUsingFoldr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "unzipWithUsingFoldr",
          "normalized": "(a-\u003eb)-\u003e(a-\u003ec)-\u003ed a-\u003e(d b,d c)",
          "package": "EdisonCore",
          "partial": "With Using Foldr",
          "signature": "(a-\u003eb)-\u003e(a-\u003ec)-\u003es a-\u003e(s b,s c)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:unzipWithUsingFoldr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "unzipWithUsingLists",
          "package": "EdisonCore",
          "signature": "(a -\u003e b) -\u003e (a -\u003e c) -\u003e s a -\u003e (s b, s c)",
          "source": "src/Data-Edison-Seq-Defaults.html#unzipWithUsingLists",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "unzipWithUsingLists",
          "normalized": "(a-\u003eb)-\u003e(a-\u003ec)-\u003ed a-\u003e(d b,d c)",
          "package": "EdisonCore",
          "partial": "With Using Lists",
          "signature": "(a-\u003eb)-\u003e(a-\u003ec)-\u003es a-\u003e(s b,s c)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:unzipWithUsingLists"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "updateUsingAdjust",
          "package": "EdisonCore",
          "signature": "Int -\u003e a -\u003e s a -\u003e s a",
          "source": "src/Data-Edison-Seq-Defaults.html#updateUsingAdjust",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "updateUsingAdjust",
          "normalized": "Int-\u003ea-\u003eb a-\u003eb a",
          "package": "EdisonCore",
          "partial": "Using Adjust",
          "signature": "Int-\u003ea-\u003es a-\u003es a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:updateUsingAdjust"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "updateUsingSplitAt",
          "package": "EdisonCore",
          "signature": "Int -\u003e a -\u003e s a -\u003e s a",
          "source": "src/Data-Edison-Seq-Defaults.html#updateUsingSplitAt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "updateUsingSplitAt",
          "normalized": "Int-\u003ea-\u003eb a-\u003eb a",
          "package": "EdisonCore",
          "partial": "Using Split At",
          "signature": "Int-\u003ea-\u003es a-\u003es a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:updateUsingSplitAt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "zip3UsingLists",
          "package": "EdisonCore",
          "signature": "s a -\u003e s b -\u003e s c -\u003e s (a, b, c)",
          "source": "src/Data-Edison-Seq-Defaults.html#zip3UsingLists",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "zip3UsingLists",
          "normalized": "a b-\u003ea c-\u003ea d-\u003ea(b,c,d)",
          "package": "EdisonCore",
          "partial": "Using Lists",
          "signature": "s a-\u003es b-\u003es c-\u003es(a,b,c)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:zip3UsingLists"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "zip3UsingLview",
          "package": "EdisonCore",
          "signature": "s a -\u003e s b -\u003e s c -\u003e s (a, b, c)",
          "source": "src/Data-Edison-Seq-Defaults.html#zip3UsingLview",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "zip3UsingLview",
          "normalized": "a b-\u003ea c-\u003ea d-\u003ea(b,c,d)",
          "package": "EdisonCore",
          "partial": "Using Lview",
          "signature": "s a-\u003es b-\u003es c-\u003es(a,b,c)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:zip3UsingLview"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "zipUsingLists",
          "package": "EdisonCore",
          "signature": "s a -\u003e s b -\u003e s (a, b)",
          "source": "src/Data-Edison-Seq-Defaults.html#zipUsingLists",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "zipUsingLists",
          "normalized": "a b-\u003ea c-\u003ea(b,c)",
          "package": "EdisonCore",
          "partial": "Using Lists",
          "signature": "s a-\u003es b-\u003es(a,b)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:zipUsingLists"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "zipUsingLview",
          "package": "EdisonCore",
          "signature": "s a -\u003e s b -\u003e s (a, b)",
          "source": "src/Data-Edison-Seq-Defaults.html#zipUsingLview",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "zipUsingLview",
          "normalized": "a b-\u003ea c-\u003ea(b,c)",
          "package": "EdisonCore",
          "partial": "Using Lview",
          "signature": "s a-\u003es b-\u003es(a,b)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:zipUsingLview"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "zipWith3UsingLists",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e c -\u003e d) -\u003e s a -\u003e s b -\u003e s c -\u003e s d",
          "source": "src/Data-Edison-Seq-Defaults.html#zipWith3UsingLists",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "zipWith3UsingLists",
          "normalized": "(a-\u003eb-\u003ec-\u003ed)-\u003ee a-\u003ee b-\u003ee c-\u003ee d",
          "package": "EdisonCore",
          "partial": "With Using Lists",
          "signature": "(a-\u003eb-\u003ec-\u003ed)-\u003es a-\u003es b-\u003es c-\u003es d",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:zipWith3UsingLists"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "zipWith3UsingLview",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e c -\u003e d) -\u003e s a -\u003e s b -\u003e s c -\u003e s d",
          "source": "src/Data-Edison-Seq-Defaults.html#zipWith3UsingLview",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "zipWith3UsingLview",
          "normalized": "(a-\u003eb-\u003ec-\u003ed)-\u003ee a-\u003ee b-\u003ee c-\u003ee d",
          "package": "EdisonCore",
          "partial": "With Using Lview",
          "signature": "(a-\u003eb-\u003ec-\u003ed)-\u003es a-\u003es b-\u003es c-\u003es d",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:zipWith3UsingLview"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "zipWithUsingLists",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e c) -\u003e s a -\u003e s b -\u003e s c",
          "source": "src/Data-Edison-Seq-Defaults.html#zipWithUsingLists",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "zipWithUsingLists",
          "normalized": "(a-\u003eb-\u003ec)-\u003ed a-\u003ed b-\u003ed c",
          "package": "EdisonCore",
          "partial": "With Using Lists",
          "signature": "(a-\u003eb-\u003ec)-\u003es a-\u003es b-\u003es c",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:zipWithUsingLists"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.Defaults",
          "name": "zipWithUsingLview",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e c) -\u003e s a -\u003e s b -\u003e s c",
          "source": "src/Data-Edison-Seq-Defaults.html#zipWithUsingLview",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq Defaults",
          "module": "Data.Edison.Seq.Defaults",
          "name": "zipWithUsingLview",
          "normalized": "(a-\u003eb-\u003ec)-\u003ed a-\u003ed b-\u003ed c",
          "package": "EdisonCore",
          "partial": "With Using Lview",
          "signature": "(a-\u003eb-\u003ec)-\u003es a-\u003es b-\u003es c",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-Defaults.html#v:zipWithUsingLview"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "FingerSeq",
          "package": "EdisonCore",
          "source": "src/Data-Edison-Seq-FingerSeq.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "FingerSeq",
          "package": "EdisonCore",
          "partial": "Finger Seq",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "Seq",
          "package": "EdisonCore",
          "source": "src/Data-Edison-Seq-FingerSeq.html#Seq",
          "type": "data"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "Seq",
          "package": "EdisonCore",
          "partial": "Seq",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#t:Seq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "adjust",
          "package": "EdisonCore",
          "signature": "(a -\u003e a) -\u003e Int -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-FingerSeq.html#adjust",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "adjust",
          "normalized": "(a-\u003ea)-\u003eInt-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "(a-\u003ea)-\u003eInt-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:adjust"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "append",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-FingerSeq.html#append",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "append",
          "normalized": "Seq a-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Seq a-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:append"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "concat",
          "package": "EdisonCore",
          "signature": "Seq (Seq a) -\u003e Seq a",
          "source": "src/Data-Edison-Seq-FingerSeq.html#concat",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "concat",
          "normalized": "Seq(Seq a)-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Seq(Seq a)-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:concat"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "concatMap",
          "package": "EdisonCore",
          "signature": "(a -\u003e Seq b) -\u003e Seq a -\u003e Seq b",
          "source": "src/Data-Edison-Seq-FingerSeq.html#concatMap",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "concatMap",
          "normalized": "(a-\u003eSeq b)-\u003eSeq a-\u003eSeq b",
          "package": "EdisonCore",
          "partial": "Map",
          "signature": "(a-\u003eSeq b)-\u003eSeq a-\u003eSeq b",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:concatMap"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "copy",
          "package": "EdisonCore",
          "signature": "Int -\u003e a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-FingerSeq.html#copy",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "copy",
          "normalized": "Int-\u003ea-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Int-\u003ea-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:copy"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "drop",
          "package": "EdisonCore",
          "signature": "Int -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-FingerSeq.html#drop",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "drop",
          "normalized": "Int-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Int-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:drop"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "dropWhile",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-FingerSeq.html#dropWhile",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "dropWhile",
          "normalized": "(a-\u003eBool)-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "partial": "While",
          "signature": "(a-\u003eBool)-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:dropWhile"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "empty",
          "package": "EdisonCore",
          "signature": "Seq a",
          "source": "src/Data-Edison-Seq-FingerSeq.html#empty",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "empty",
          "package": "EdisonCore",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:empty"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "filter",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-FingerSeq.html#filter",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "filter",
          "normalized": "(a-\u003eBool)-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "(a-\u003eBool)-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:filter"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "fold",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-FingerSeq.html#fold",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "fold",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:fold"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "fold'",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-FingerSeq.html#fold%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "fold'",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:fold-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "fold1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-FingerSeq.html#fold1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "fold1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:fold1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "fold1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-FingerSeq.html#fold1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "fold1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:fold1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "foldl",
          "package": "EdisonCore",
          "signature": "(b -\u003e a -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-FingerSeq.html#foldl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "foldl",
          "normalized": "(a-\u003eb-\u003ea)-\u003ea-\u003eSeq b-\u003ea",
          "package": "EdisonCore",
          "signature": "(b-\u003ea-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:foldl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "foldl'",
          "package": "EdisonCore",
          "signature": "(b -\u003e a -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-FingerSeq.html#foldl%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "foldl'",
          "normalized": "(a-\u003eb-\u003ea)-\u003ea-\u003eSeq b-\u003ea",
          "package": "EdisonCore",
          "signature": "(b-\u003ea-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:foldl-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "foldl1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-FingerSeq.html#foldl1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "foldl1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:foldl1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "foldl1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-FingerSeq.html#foldl1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "foldl1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:foldl1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "foldlWithIndex",
          "package": "EdisonCore",
          "signature": "(b -\u003e Int -\u003e a -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-FingerSeq.html#foldlWithIndex",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "foldlWithIndex",
          "normalized": "(a-\u003eInt-\u003eb-\u003ea)-\u003ea-\u003eSeq b-\u003ea",
          "package": "EdisonCore",
          "partial": "With Index",
          "signature": "(b-\u003eInt-\u003ea-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:foldlWithIndex"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "foldr",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-FingerSeq.html#foldr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "foldr",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:foldr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "foldr'",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-FingerSeq.html#foldr%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "foldr'",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:foldr-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "foldr1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-FingerSeq.html#foldr1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "foldr1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:foldr1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "foldr1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-FingerSeq.html#foldr1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "foldr1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:foldr1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "foldrWithIndex",
          "package": "EdisonCore",
          "signature": "(Int -\u003e a -\u003e b -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-FingerSeq.html#foldrWithIndex",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "foldrWithIndex",
          "normalized": "(Int-\u003ea-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "package": "EdisonCore",
          "partial": "With Index",
          "signature": "(Int-\u003ea-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:foldrWithIndex"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "fromList",
          "package": "EdisonCore",
          "signature": "[a] -\u003e Seq a",
          "source": "src/Data-Edison-Seq-FingerSeq.html#fromList",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "fromList",
          "normalized": "[a]-\u003eSeq a",
          "package": "EdisonCore",
          "partial": "List",
          "signature": "[a]-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:fromList"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "inBounds",
          "package": "EdisonCore",
          "signature": "Int -\u003e Seq a -\u003e Bool",
          "source": "src/Data-Edison-Seq-FingerSeq.html#inBounds",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "inBounds",
          "normalized": "Int-\u003eSeq a-\u003eBool",
          "package": "EdisonCore",
          "partial": "Bounds",
          "signature": "Int-\u003eSeq a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:inBounds"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "lcons",
          "package": "EdisonCore",
          "signature": "a -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-FingerSeq.html#lcons",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "lcons",
          "normalized": "a-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "a-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:lcons"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "lhead",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-FingerSeq.html#lhead",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "lhead",
          "normalized": "Seq a-\u003ea",
          "package": "EdisonCore",
          "signature": "Seq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:lhead"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "lheadM",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e m a",
          "source": "src/Data-Edison-Seq-FingerSeq.html#lheadM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "lheadM",
          "normalized": "Seq a-\u003eb a",
          "package": "EdisonCore",
          "signature": "Seq a-\u003em a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:lheadM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "lookup",
          "package": "EdisonCore",
          "signature": "Int -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-FingerSeq.html#lookup",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "lookup",
          "normalized": "Int-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "Int-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:lookup"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "lookupM",
          "package": "EdisonCore",
          "signature": "Int -\u003e Seq a -\u003e m a",
          "source": "src/Data-Edison-Seq-FingerSeq.html#lookupM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "lookupM",
          "normalized": "Int-\u003eSeq a-\u003eb a",
          "package": "EdisonCore",
          "signature": "Int-\u003eSeq a-\u003em a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:lookupM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "lookupWithDefault",
          "package": "EdisonCore",
          "signature": "a -\u003e Int -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-FingerSeq.html#lookupWithDefault",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "lookupWithDefault",
          "normalized": "a-\u003eInt-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "partial": "With Default",
          "signature": "a-\u003eInt-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:lookupWithDefault"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "ltail",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-FingerSeq.html#ltail",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "ltail",
          "normalized": "Seq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Seq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:ltail"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "ltailM",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e m (Seq a)",
          "source": "src/Data-Edison-Seq-FingerSeq.html#ltailM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "ltailM",
          "normalized": "Seq a-\u003eb(Seq a)",
          "package": "EdisonCore",
          "signature": "Seq a-\u003em(Seq a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:ltailM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "lview",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e m (a, Seq a)",
          "source": "src/Data-Edison-Seq-FingerSeq.html#lview",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "lview",
          "normalized": "Seq a-\u003eb(a,Seq a)",
          "package": "EdisonCore",
          "signature": "Seq a-\u003em(a,Seq a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:lview"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "map",
          "package": "EdisonCore",
          "signature": "(a -\u003e b) -\u003e Seq a -\u003e Seq b",
          "source": "src/Data-Edison-Seq-FingerSeq.html#map",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "map",
          "normalized": "(a-\u003eb)-\u003eSeq a-\u003eSeq b",
          "package": "EdisonCore",
          "signature": "(a-\u003eb)-\u003eSeq a-\u003eSeq b",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:map"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "mapWithIndex",
          "package": "EdisonCore",
          "signature": "(Int -\u003e a -\u003e b) -\u003e Seq a -\u003e Seq b",
          "source": "src/Data-Edison-Seq-FingerSeq.html#mapWithIndex",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "mapWithIndex",
          "normalized": "(Int-\u003ea-\u003eb)-\u003eSeq a-\u003eSeq b",
          "package": "EdisonCore",
          "partial": "With Index",
          "signature": "(Int-\u003ea-\u003eb)-\u003eSeq a-\u003eSeq b",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:mapWithIndex"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "moduleName",
          "package": "EdisonCore",
          "signature": "String",
          "source": "src/Data-Edison-Seq-FingerSeq.html#moduleName",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "moduleName",
          "package": "EdisonCore",
          "partial": "Name",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:moduleName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "null",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Bool",
          "source": "src/Data-Edison-Seq-FingerSeq.html#null",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "null",
          "normalized": "Seq a-\u003eBool",
          "package": "EdisonCore",
          "signature": "Seq a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:null"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "partition",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e Seq a -\u003e (Seq a, Seq a)",
          "source": "src/Data-Edison-Seq-FingerSeq.html#partition",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "partition",
          "normalized": "(a-\u003eBool)-\u003eSeq a-\u003e(Seq a,Seq a)",
          "package": "EdisonCore",
          "signature": "(a-\u003eBool)-\u003eSeq a-\u003e(Seq a,Seq a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:partition"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "rcons",
          "package": "EdisonCore",
          "signature": "a -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-FingerSeq.html#rcons",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "rcons",
          "normalized": "a-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "a-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:rcons"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "reduce1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-FingerSeq.html#reduce1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "reduce1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:reduce1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "reduce1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-FingerSeq.html#reduce1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "reduce1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:reduce1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "reducel",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e a -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-FingerSeq.html#reducel",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "reducel",
          "normalized": "(a-\u003ea-\u003ea)-\u003ea-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003ea-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:reducel"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "reducel'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e a -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-FingerSeq.html#reducel%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "reducel'",
          "normalized": "(a-\u003ea-\u003ea)-\u003ea-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003ea-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:reducel-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "reducer",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e a -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-FingerSeq.html#reducer",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "reducer",
          "normalized": "(a-\u003ea-\u003ea)-\u003ea-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003ea-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:reducer"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "reducer'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e a -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-FingerSeq.html#reducer%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "reducer'",
          "normalized": "(a-\u003ea-\u003ea)-\u003ea-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003ea-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:reducer-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "reverse",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-FingerSeq.html#reverse",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "reverse",
          "normalized": "Seq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Seq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:reverse"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "reverseOnto",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-FingerSeq.html#reverseOnto",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "reverseOnto",
          "normalized": "Seq a-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "partial": "Onto",
          "signature": "Seq a-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:reverseOnto"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "rhead",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-FingerSeq.html#rhead",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "rhead",
          "normalized": "Seq a-\u003ea",
          "package": "EdisonCore",
          "signature": "Seq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:rhead"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "rheadM",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e m a",
          "source": "src/Data-Edison-Seq-FingerSeq.html#rheadM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "rheadM",
          "normalized": "Seq a-\u003eb a",
          "package": "EdisonCore",
          "signature": "Seq a-\u003em a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:rheadM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "rtail",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-FingerSeq.html#rtail",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "rtail",
          "normalized": "Seq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Seq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:rtail"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "rtailM",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e m (Seq a)",
          "source": "src/Data-Edison-Seq-FingerSeq.html#rtailM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "rtailM",
          "normalized": "Seq a-\u003eb(Seq a)",
          "package": "EdisonCore",
          "signature": "Seq a-\u003em(Seq a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:rtailM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "rview",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e m (a, Seq a)",
          "source": "src/Data-Edison-Seq-FingerSeq.html#rview",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "rview",
          "normalized": "Seq a-\u003eb(a,Seq a)",
          "package": "EdisonCore",
          "signature": "Seq a-\u003em(a,Seq a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:rview"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "singleton",
          "package": "EdisonCore",
          "signature": "a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-FingerSeq.html#singleton",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "singleton",
          "normalized": "a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:singleton"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "size",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Int",
          "source": "src/Data-Edison-Seq-FingerSeq.html#size",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "size",
          "normalized": "Seq a-\u003eInt",
          "package": "EdisonCore",
          "signature": "Seq a-\u003eInt",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:size"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "splitAt",
          "package": "EdisonCore",
          "signature": "Int -\u003e Seq a -\u003e (Seq a, Seq a)",
          "source": "src/Data-Edison-Seq-FingerSeq.html#splitAt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "splitAt",
          "normalized": "Int-\u003eSeq a-\u003e(Seq a,Seq a)",
          "package": "EdisonCore",
          "partial": "At",
          "signature": "Int-\u003eSeq a-\u003e(Seq a,Seq a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:splitAt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "splitWhile",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e Seq a -\u003e (Seq a, Seq a)",
          "source": "src/Data-Edison-Seq-FingerSeq.html#splitWhile",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "splitWhile",
          "normalized": "(a-\u003eBool)-\u003eSeq a-\u003e(Seq a,Seq a)",
          "package": "EdisonCore",
          "partial": "While",
          "signature": "(a-\u003eBool)-\u003eSeq a-\u003e(Seq a,Seq a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:splitWhile"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "strict",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-FingerSeq.html#strict",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "strict",
          "normalized": "Seq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Seq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:strict"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "strictWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e b) -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-FingerSeq.html#strictWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "strictWith",
          "normalized": "(a-\u003eb)-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003eb)-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:strictWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "structuralInvariant",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Bool",
          "source": "src/Data-Edison-Seq-FingerSeq.html#structuralInvariant",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "structuralInvariant",
          "normalized": "Seq a-\u003eBool",
          "package": "EdisonCore",
          "partial": "Invariant",
          "signature": "Seq a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:structuralInvariant"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "subseq",
          "package": "EdisonCore",
          "signature": "Int -\u003e Int -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-FingerSeq.html#subseq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "subseq",
          "normalized": "Int-\u003eInt-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Int-\u003eInt-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:subseq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "take",
          "package": "EdisonCore",
          "signature": "Int -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-FingerSeq.html#take",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "take",
          "normalized": "Int-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Int-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:take"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "takeWhile",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-FingerSeq.html#takeWhile",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "takeWhile",
          "normalized": "(a-\u003eBool)-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "partial": "While",
          "signature": "(a-\u003eBool)-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:takeWhile"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "toList",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e [a]",
          "source": "src/Data-Edison-Seq-FingerSeq.html#toList",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "toList",
          "normalized": "Seq a-\u003e[a]",
          "package": "EdisonCore",
          "partial": "List",
          "signature": "Seq a-\u003e[a]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:toList"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "unzip",
          "package": "EdisonCore",
          "signature": "Seq (a, b) -\u003e (Seq a, Seq b)",
          "source": "src/Data-Edison-Seq-FingerSeq.html#unzip",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "unzip",
          "normalized": "Seq(a,b)-\u003e(Seq a,Seq b)",
          "package": "EdisonCore",
          "signature": "Seq(a,b)-\u003e(Seq a,Seq b)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:unzip"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "unzip3",
          "package": "EdisonCore",
          "signature": "Seq (a, b, c) -\u003e (Seq a, Seq b, Seq c)",
          "source": "src/Data-Edison-Seq-FingerSeq.html#unzip3",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "unzip3",
          "normalized": "Seq(a,b,c)-\u003e(Seq a,Seq b,Seq c)",
          "package": "EdisonCore",
          "signature": "Seq(a,b,c)-\u003e(Seq a,Seq b,Seq c)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:unzip3"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "unzipWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e b) -\u003e (a -\u003e c) -\u003e Seq a -\u003e (Seq b, Seq c)",
          "source": "src/Data-Edison-Seq-FingerSeq.html#unzipWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "unzipWith",
          "normalized": "(a-\u003eb)-\u003e(a-\u003ec)-\u003eSeq a-\u003e(Seq b,Seq c)",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003eb)-\u003e(a-\u003ec)-\u003eSeq a-\u003e(Seq b,Seq c)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:unzipWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "unzipWith3",
          "package": "EdisonCore",
          "signature": "(a -\u003e b) -\u003e (a -\u003e c) -\u003e (a -\u003e d) -\u003e Seq a -\u003e (Seq b, Seq c, Seq d)",
          "source": "src/Data-Edison-Seq-FingerSeq.html#unzipWith3",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "unzipWith3",
          "normalized": "(a-\u003eb)-\u003e(a-\u003ec)-\u003e(a-\u003ed)-\u003eSeq a-\u003e(Seq b,Seq c,Seq d)",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003eb)-\u003e(a-\u003ec)-\u003e(a-\u003ed)-\u003eSeq a-\u003e(Seq b,Seq c,Seq d)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:unzipWith3"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "update",
          "package": "EdisonCore",
          "signature": "Int -\u003e a -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-FingerSeq.html#update",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "update",
          "normalized": "Int-\u003ea-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Int-\u003ea-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:update"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "zip",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Seq b -\u003e Seq (a, b)",
          "source": "src/Data-Edison-Seq-FingerSeq.html#zip",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "zip",
          "normalized": "Seq a-\u003eSeq b-\u003eSeq(a,b)",
          "package": "EdisonCore",
          "signature": "Seq a-\u003eSeq b-\u003eSeq(a,b)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:zip"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "zip3",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Seq b -\u003e Seq c -\u003e Seq (a, b, c)",
          "source": "src/Data-Edison-Seq-FingerSeq.html#zip3",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "zip3",
          "normalized": "Seq a-\u003eSeq b-\u003eSeq c-\u003eSeq(a,b,c)",
          "package": "EdisonCore",
          "signature": "Seq a-\u003eSeq b-\u003eSeq c-\u003eSeq(a,b,c)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:zip3"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "zipWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e c) -\u003e Seq a -\u003e Seq b -\u003e Seq c",
          "source": "src/Data-Edison-Seq-FingerSeq.html#zipWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "zipWith",
          "normalized": "(a-\u003eb-\u003ec)-\u003eSeq a-\u003eSeq b-\u003eSeq c",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003eb-\u003ec)-\u003eSeq a-\u003eSeq b-\u003eSeq c",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:zipWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "zipWith3",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e c -\u003e d) -\u003e Seq a -\u003e Seq b -\u003e Seq c -\u003e Seq d",
          "source": "src/Data-Edison-Seq-FingerSeq.html#zipWith3",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq FingerSeq",
          "module": "Data.Edison.Seq.FingerSeq",
          "name": "zipWith3",
          "normalized": "(a-\u003eb-\u003ec-\u003ed)-\u003eSeq a-\u003eSeq b-\u003eSeq c-\u003eSeq d",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003eb-\u003ec-\u003ed)-\u003eSeq a-\u003eSeq b-\u003eSeq c-\u003eSeq d",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-FingerSeq.html#v:zipWith3"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eJoin lists. All running times are as listed in \u003ca\u003eData.Edison.Seq\u003c/a\u003e except\n   for the following:\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e rcons, append         \u003ccode\u003eO( 1 )\u003c/code\u003e\n\u003c/li\u003e\u003cli\u003e ltail*, lview         \u003ccode\u003eO( 1 )\u003c/code\u003e    when used single-threaded, \u003ccode\u003eO( n )\u003c/code\u003e otherwise\n\u003c/li\u003e\u003cli\u003e lhead*                \u003ccode\u003eO( n )\u003c/code\u003e\n\u003c/li\u003e\u003cli\u003e inBounds, lookup      \u003ccode\u003eO( n )\u003c/code\u003e\n\u003c/li\u003e\u003cli\u003e copy                  \u003ccode\u003eO( log i )\u003c/code\u003e\n\u003c/li\u003e\u003cli\u003e concat                \u003ccode\u003eO( n1 )\u003c/code\u003e\n\u003c/li\u003e\u003cli\u003e concatMap, (\u003e\u003e=)      \u003ccode\u003eO( n * t )\u003c/code\u003e, where \u003ccode\u003en\u003c/code\u003e is the length of the input sequence and\n                                         \u003ccode\u003et\u003c/code\u003e is the running time of \u003ccode\u003ef\u003c/code\u003e\n\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e",
          "module": "Data.Edison.Seq.JoinList",
          "name": "JoinList",
          "package": "EdisonCore",
          "source": "src/Data-Edison-Seq-JoinList.html",
          "type": "module"
        },
        "index": {
          "description": "Join lists All running times are as listed in Data.Edison.Seq except for the following rcons append ltail lview when used single-threaded otherwise lhead inBounds lookup copy log concat n1 concatMap where is the length of the input sequence and is the running time of",
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "JoinList",
          "package": "EdisonCore",
          "partial": "Join List",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "Seq",
          "package": "EdisonCore",
          "source": "src/Data-Edison-Seq-JoinList.html#Seq",
          "type": "data"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "Seq",
          "package": "EdisonCore",
          "partial": "Seq",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#t:Seq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "adjust",
          "package": "EdisonCore",
          "signature": "(a -\u003e a) -\u003e Int -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-JoinList.html#adjust",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "adjust",
          "normalized": "(a-\u003ea)-\u003eInt-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "(a-\u003ea)-\u003eInt-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:adjust"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "append",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-JoinList.html#append",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "append",
          "normalized": "Seq a-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Seq a-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:append"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "concat",
          "package": "EdisonCore",
          "signature": "Seq (Seq a) -\u003e Seq a",
          "source": "src/Data-Edison-Seq-JoinList.html#concat",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "concat",
          "normalized": "Seq(Seq a)-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Seq(Seq a)-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:concat"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "concatMap",
          "package": "EdisonCore",
          "signature": "(a -\u003e Seq b) -\u003e Seq a -\u003e Seq b",
          "source": "src/Data-Edison-Seq-JoinList.html#concatMap",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "concatMap",
          "normalized": "(a-\u003eSeq b)-\u003eSeq a-\u003eSeq b",
          "package": "EdisonCore",
          "partial": "Map",
          "signature": "(a-\u003eSeq b)-\u003eSeq a-\u003eSeq b",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:concatMap"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "copy",
          "package": "EdisonCore",
          "signature": "Int -\u003e a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-JoinList.html#copy",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "copy",
          "normalized": "Int-\u003ea-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Int-\u003ea-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:copy"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "drop",
          "package": "EdisonCore",
          "signature": "Int -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-JoinList.html#drop",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "drop",
          "normalized": "Int-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Int-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:drop"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "dropWhile",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-JoinList.html#dropWhile",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "dropWhile",
          "normalized": "(a-\u003eBool)-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "partial": "While",
          "signature": "(a-\u003eBool)-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:dropWhile"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "empty",
          "package": "EdisonCore",
          "signature": "Seq a",
          "source": "src/Data-Edison-Seq-JoinList.html#empty",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "empty",
          "package": "EdisonCore",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:empty"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "filter",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-JoinList.html#filter",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "filter",
          "normalized": "(a-\u003eBool)-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "(a-\u003eBool)-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:filter"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "fold",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-JoinList.html#fold",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "fold",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:fold"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "fold'",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-JoinList.html#fold%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "fold'",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:fold-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "fold1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-JoinList.html#fold1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "fold1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:fold1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "fold1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-JoinList.html#fold1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "fold1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:fold1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "foldl",
          "package": "EdisonCore",
          "signature": "(b -\u003e a -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-JoinList.html#foldl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "foldl",
          "normalized": "(a-\u003eb-\u003ea)-\u003ea-\u003eSeq b-\u003ea",
          "package": "EdisonCore",
          "signature": "(b-\u003ea-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:foldl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "foldl'",
          "package": "EdisonCore",
          "signature": "(b -\u003e a -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-JoinList.html#foldl%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "foldl'",
          "normalized": "(a-\u003eb-\u003ea)-\u003ea-\u003eSeq b-\u003ea",
          "package": "EdisonCore",
          "signature": "(b-\u003ea-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:foldl-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "foldl1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-JoinList.html#foldl1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "foldl1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:foldl1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "foldl1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-JoinList.html#foldl1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "foldl1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:foldl1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "foldlWithIndex",
          "package": "EdisonCore",
          "signature": "(b -\u003e Int -\u003e a -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-JoinList.html#foldlWithIndex",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "foldlWithIndex",
          "normalized": "(a-\u003eInt-\u003eb-\u003ea)-\u003ea-\u003eSeq b-\u003ea",
          "package": "EdisonCore",
          "partial": "With Index",
          "signature": "(b-\u003eInt-\u003ea-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:foldlWithIndex"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "foldr",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-JoinList.html#foldr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "foldr",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:foldr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "foldr'",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-JoinList.html#foldr%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "foldr'",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:foldr-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "foldr1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-JoinList.html#foldr1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "foldr1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:foldr1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "foldr1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-JoinList.html#foldr1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "foldr1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:foldr1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "foldrWithIndex",
          "package": "EdisonCore",
          "signature": "(Int -\u003e a -\u003e b -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-JoinList.html#foldrWithIndex",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "foldrWithIndex",
          "normalized": "(Int-\u003ea-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "package": "EdisonCore",
          "partial": "With Index",
          "signature": "(Int-\u003ea-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:foldrWithIndex"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "fromList",
          "package": "EdisonCore",
          "signature": "[a] -\u003e Seq a",
          "source": "src/Data-Edison-Seq-JoinList.html#fromList",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "fromList",
          "normalized": "[a]-\u003eSeq a",
          "package": "EdisonCore",
          "partial": "List",
          "signature": "[a]-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:fromList"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "inBounds",
          "package": "EdisonCore",
          "signature": "Int -\u003e Seq a -\u003e Bool",
          "source": "src/Data-Edison-Seq-JoinList.html#inBounds",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "inBounds",
          "normalized": "Int-\u003eSeq a-\u003eBool",
          "package": "EdisonCore",
          "partial": "Bounds",
          "signature": "Int-\u003eSeq a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:inBounds"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "lcons",
          "package": "EdisonCore",
          "signature": "a -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-JoinList.html#lcons",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "lcons",
          "normalized": "a-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "a-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:lcons"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "lhead",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-JoinList.html#lhead",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "lhead",
          "normalized": "Seq a-\u003ea",
          "package": "EdisonCore",
          "signature": "Seq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:lhead"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "lheadM",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e m a",
          "source": "src/Data-Edison-Seq-JoinList.html#lheadM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "lheadM",
          "normalized": "Seq a-\u003eb a",
          "package": "EdisonCore",
          "signature": "Seq a-\u003em a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:lheadM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "lookup",
          "package": "EdisonCore",
          "signature": "Int -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-JoinList.html#lookup",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "lookup",
          "normalized": "Int-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "Int-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:lookup"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "lookupM",
          "package": "EdisonCore",
          "signature": "Int -\u003e Seq a -\u003e m a",
          "source": "src/Data-Edison-Seq-JoinList.html#lookupM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "lookupM",
          "normalized": "Int-\u003eSeq a-\u003eb a",
          "package": "EdisonCore",
          "signature": "Int-\u003eSeq a-\u003em a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:lookupM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "lookupWithDefault",
          "package": "EdisonCore",
          "signature": "a -\u003e Int -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-JoinList.html#lookupWithDefault",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "lookupWithDefault",
          "normalized": "a-\u003eInt-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "partial": "With Default",
          "signature": "a-\u003eInt-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:lookupWithDefault"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "ltail",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-JoinList.html#ltail",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "ltail",
          "normalized": "Seq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Seq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:ltail"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "ltailM",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e m (Seq a)",
          "source": "src/Data-Edison-Seq-JoinList.html#ltailM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "ltailM",
          "normalized": "Seq a-\u003eb(Seq a)",
          "package": "EdisonCore",
          "signature": "Seq a-\u003em(Seq a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:ltailM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "lview",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e m (a, Seq a)",
          "source": "src/Data-Edison-Seq-JoinList.html#lview",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "lview",
          "normalized": "Seq a-\u003eb(a,Seq a)",
          "package": "EdisonCore",
          "signature": "Seq a-\u003em(a,Seq a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:lview"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "map",
          "package": "EdisonCore",
          "signature": "(a -\u003e b) -\u003e Seq a -\u003e Seq b",
          "source": "src/Data-Edison-Seq-JoinList.html#map",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "map",
          "normalized": "(a-\u003eb)-\u003eSeq a-\u003eSeq b",
          "package": "EdisonCore",
          "signature": "(a-\u003eb)-\u003eSeq a-\u003eSeq b",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:map"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "mapWithIndex",
          "package": "EdisonCore",
          "signature": "(Int -\u003e a -\u003e b) -\u003e Seq a -\u003e Seq b",
          "source": "src/Data-Edison-Seq-JoinList.html#mapWithIndex",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "mapWithIndex",
          "normalized": "(Int-\u003ea-\u003eb)-\u003eSeq a-\u003eSeq b",
          "package": "EdisonCore",
          "partial": "With Index",
          "signature": "(Int-\u003ea-\u003eb)-\u003eSeq a-\u003eSeq b",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:mapWithIndex"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "moduleName",
          "package": "EdisonCore",
          "signature": "String",
          "source": "src/Data-Edison-Seq-JoinList.html#moduleName",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "moduleName",
          "package": "EdisonCore",
          "partial": "Name",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:moduleName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "null",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Bool",
          "source": "src/Data-Edison-Seq-JoinList.html#null",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "null",
          "normalized": "Seq a-\u003eBool",
          "package": "EdisonCore",
          "signature": "Seq a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:null"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "partition",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e Seq a -\u003e (Seq a, Seq a)",
          "source": "src/Data-Edison-Seq-JoinList.html#partition",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "partition",
          "normalized": "(a-\u003eBool)-\u003eSeq a-\u003e(Seq a,Seq a)",
          "package": "EdisonCore",
          "signature": "(a-\u003eBool)-\u003eSeq a-\u003e(Seq a,Seq a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:partition"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "rcons",
          "package": "EdisonCore",
          "signature": "a -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-JoinList.html#rcons",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "rcons",
          "normalized": "a-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "a-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:rcons"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "reduce1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-JoinList.html#reduce1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "reduce1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:reduce1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "reduce1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-JoinList.html#reduce1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "reduce1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:reduce1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "reducel",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e a -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-JoinList.html#reducel",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "reducel",
          "normalized": "(a-\u003ea-\u003ea)-\u003ea-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003ea-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:reducel"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "reducel'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e a -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-JoinList.html#reducel%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "reducel'",
          "normalized": "(a-\u003ea-\u003ea)-\u003ea-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003ea-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:reducel-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "reducer",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e a -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-JoinList.html#reducer",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "reducer",
          "normalized": "(a-\u003ea-\u003ea)-\u003ea-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003ea-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:reducer"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "reducer'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e a -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-JoinList.html#reducer%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "reducer'",
          "normalized": "(a-\u003ea-\u003ea)-\u003ea-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003ea-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:reducer-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "reverse",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-JoinList.html#reverse",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "reverse",
          "normalized": "Seq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Seq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:reverse"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "reverseOnto",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-JoinList.html#reverseOnto",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "reverseOnto",
          "normalized": "Seq a-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "partial": "Onto",
          "signature": "Seq a-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:reverseOnto"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "rhead",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-JoinList.html#rhead",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "rhead",
          "normalized": "Seq a-\u003ea",
          "package": "EdisonCore",
          "signature": "Seq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:rhead"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "rheadM",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e m a",
          "source": "src/Data-Edison-Seq-JoinList.html#rheadM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "rheadM",
          "normalized": "Seq a-\u003eb a",
          "package": "EdisonCore",
          "signature": "Seq a-\u003em a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:rheadM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "rtail",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-JoinList.html#rtail",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "rtail",
          "normalized": "Seq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Seq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:rtail"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "rtailM",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e m (Seq a)",
          "source": "src/Data-Edison-Seq-JoinList.html#rtailM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "rtailM",
          "normalized": "Seq a-\u003eb(Seq a)",
          "package": "EdisonCore",
          "signature": "Seq a-\u003em(Seq a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:rtailM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "rview",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e m (a, Seq a)",
          "source": "src/Data-Edison-Seq-JoinList.html#rview",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "rview",
          "normalized": "Seq a-\u003eb(a,Seq a)",
          "package": "EdisonCore",
          "signature": "Seq a-\u003em(a,Seq a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:rview"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "singleton",
          "package": "EdisonCore",
          "signature": "a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-JoinList.html#singleton",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "singleton",
          "normalized": "a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:singleton"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "size",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Int",
          "source": "src/Data-Edison-Seq-JoinList.html#size",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "size",
          "normalized": "Seq a-\u003eInt",
          "package": "EdisonCore",
          "signature": "Seq a-\u003eInt",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:size"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "splitAt",
          "package": "EdisonCore",
          "signature": "Int -\u003e Seq a -\u003e (Seq a, Seq a)",
          "source": "src/Data-Edison-Seq-JoinList.html#splitAt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "splitAt",
          "normalized": "Int-\u003eSeq a-\u003e(Seq a,Seq a)",
          "package": "EdisonCore",
          "partial": "At",
          "signature": "Int-\u003eSeq a-\u003e(Seq a,Seq a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:splitAt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "splitWhile",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e Seq a -\u003e (Seq a, Seq a)",
          "source": "src/Data-Edison-Seq-JoinList.html#splitWhile",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "splitWhile",
          "normalized": "(a-\u003eBool)-\u003eSeq a-\u003e(Seq a,Seq a)",
          "package": "EdisonCore",
          "partial": "While",
          "signature": "(a-\u003eBool)-\u003eSeq a-\u003e(Seq a,Seq a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:splitWhile"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "strict",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-JoinList.html#strict",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "strict",
          "normalized": "Seq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Seq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:strict"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "strictWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e b) -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-JoinList.html#strictWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "strictWith",
          "normalized": "(a-\u003eb)-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003eb)-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:strictWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "structuralInvariant",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Bool",
          "source": "src/Data-Edison-Seq-JoinList.html#structuralInvariant",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "structuralInvariant",
          "normalized": "Seq a-\u003eBool",
          "package": "EdisonCore",
          "partial": "Invariant",
          "signature": "Seq a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:structuralInvariant"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "subseq",
          "package": "EdisonCore",
          "signature": "Int -\u003e Int -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-JoinList.html#subseq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "subseq",
          "normalized": "Int-\u003eInt-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Int-\u003eInt-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:subseq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "take",
          "package": "EdisonCore",
          "signature": "Int -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-JoinList.html#take",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "take",
          "normalized": "Int-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Int-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:take"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "takeWhile",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-JoinList.html#takeWhile",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "takeWhile",
          "normalized": "(a-\u003eBool)-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "partial": "While",
          "signature": "(a-\u003eBool)-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:takeWhile"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "toList",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e [a]",
          "source": "src/Data-Edison-Seq-JoinList.html#toList",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "toList",
          "normalized": "Seq a-\u003e[a]",
          "package": "EdisonCore",
          "partial": "List",
          "signature": "Seq a-\u003e[a]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:toList"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "unzip",
          "package": "EdisonCore",
          "signature": "Seq (a, b) -\u003e (Seq a, Seq b)",
          "source": "src/Data-Edison-Seq-JoinList.html#unzip",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "unzip",
          "normalized": "Seq(a,b)-\u003e(Seq a,Seq b)",
          "package": "EdisonCore",
          "signature": "Seq(a,b)-\u003e(Seq a,Seq b)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:unzip"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "unzip3",
          "package": "EdisonCore",
          "signature": "Seq (a, b, c) -\u003e (Seq a, Seq b, Seq c)",
          "source": "src/Data-Edison-Seq-JoinList.html#unzip3",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "unzip3",
          "normalized": "Seq(a,b,c)-\u003e(Seq a,Seq b,Seq c)",
          "package": "EdisonCore",
          "signature": "Seq(a,b,c)-\u003e(Seq a,Seq b,Seq c)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:unzip3"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "unzipWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e b) -\u003e (a -\u003e c) -\u003e Seq a -\u003e (Seq b, Seq c)",
          "source": "src/Data-Edison-Seq-JoinList.html#unzipWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "unzipWith",
          "normalized": "(a-\u003eb)-\u003e(a-\u003ec)-\u003eSeq a-\u003e(Seq b,Seq c)",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003eb)-\u003e(a-\u003ec)-\u003eSeq a-\u003e(Seq b,Seq c)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:unzipWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "unzipWith3",
          "package": "EdisonCore",
          "signature": "(a -\u003e b) -\u003e (a -\u003e c) -\u003e (a -\u003e d) -\u003e Seq a -\u003e (Seq b, Seq c, Seq d)",
          "source": "src/Data-Edison-Seq-JoinList.html#unzipWith3",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "unzipWith3",
          "normalized": "(a-\u003eb)-\u003e(a-\u003ec)-\u003e(a-\u003ed)-\u003eSeq a-\u003e(Seq b,Seq c,Seq d)",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003eb)-\u003e(a-\u003ec)-\u003e(a-\u003ed)-\u003eSeq a-\u003e(Seq b,Seq c,Seq d)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:unzipWith3"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "update",
          "package": "EdisonCore",
          "signature": "Int -\u003e a -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-JoinList.html#update",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "update",
          "normalized": "Int-\u003ea-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Int-\u003ea-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:update"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "zip",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Seq b -\u003e Seq (a, b)",
          "source": "src/Data-Edison-Seq-JoinList.html#zip",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "zip",
          "normalized": "Seq a-\u003eSeq b-\u003eSeq(a,b)",
          "package": "EdisonCore",
          "signature": "Seq a-\u003eSeq b-\u003eSeq(a,b)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:zip"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "zip3",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Seq b -\u003e Seq c -\u003e Seq (a, b, c)",
          "source": "src/Data-Edison-Seq-JoinList.html#zip3",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "zip3",
          "normalized": "Seq a-\u003eSeq b-\u003eSeq c-\u003eSeq(a,b,c)",
          "package": "EdisonCore",
          "signature": "Seq a-\u003eSeq b-\u003eSeq c-\u003eSeq(a,b,c)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:zip3"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "zipWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e c) -\u003e Seq a -\u003e Seq b -\u003e Seq c",
          "source": "src/Data-Edison-Seq-JoinList.html#zipWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "zipWith",
          "normalized": "(a-\u003eb-\u003ec)-\u003eSeq a-\u003eSeq b-\u003eSeq c",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003eb-\u003ec)-\u003eSeq a-\u003eSeq b-\u003eSeq c",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:zipWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.JoinList",
          "name": "zipWith3",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e c -\u003e d) -\u003e Seq a -\u003e Seq b -\u003e Seq c -\u003e Seq d",
          "source": "src/Data-Edison-Seq-JoinList.html#zipWith3",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq JoinList",
          "module": "Data.Edison.Seq.JoinList",
          "name": "zipWith3",
          "normalized": "(a-\u003eb-\u003ec-\u003ed)-\u003eSeq a-\u003eSeq b-\u003eSeq c-\u003eSeq d",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003eb-\u003ec-\u003ed)-\u003eSeq a-\u003eSeq b-\u003eSeq c-\u003eSeq d",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-JoinList.html#v:zipWith3"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eMeyers Stacks.  All operations are as listed in \u003ca\u003eData.Edison.Seq\u003c/a\u003e except\n   the following:\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e lookup, inBounds, drop  \u003ccode\u003eO( min(i, log n) )\u003c/code\u003e\n\u003c/li\u003e\u003cli\u003e rhead*, size  \u003ccode\u003eO( log n )\u003c/code\u003e\n\u003c/li\u003e\u003cli\u003e subseq        \u003ccode\u003eO( min (i, log n) + len )\u003c/code\u003e\n\u003c/li\u003e\u003c/ul\u003e\u003cp\u003e\u003cem\u003eReferences:\u003c/em\u003e\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e Eugene Myers. \"An applicative random-access stack\". /Information\n   Processing Letters/, 17(5):241-248, December 1983.\n\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "MyersStack",
          "package": "EdisonCore",
          "source": "src/Data-Edison-Seq-MyersStack.html",
          "type": "module"
        },
        "index": {
          "description": "Meyers Stacks All operations are as listed in Data.Edison.Seq except the following lookup inBounds drop min log rhead size log subseq min log len References Eugene Myers An applicative random-access stack Information Processing Letters December",
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "MyersStack",
          "package": "EdisonCore",
          "partial": "Myers Stack",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "Seq",
          "package": "EdisonCore",
          "source": "src/Data-Edison-Seq-MyersStack.html#Seq",
          "type": "data"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "Seq",
          "package": "EdisonCore",
          "partial": "Seq",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#t:Seq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "adjust",
          "package": "EdisonCore",
          "signature": "(a -\u003e a) -\u003e Int -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-MyersStack.html#adjust",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "adjust",
          "normalized": "(a-\u003ea)-\u003eInt-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "(a-\u003ea)-\u003eInt-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:adjust"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "append",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-MyersStack.html#append",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "append",
          "normalized": "Seq a-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Seq a-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:append"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "concat",
          "package": "EdisonCore",
          "signature": "Seq (Seq a) -\u003e Seq a",
          "source": "src/Data-Edison-Seq-MyersStack.html#concat",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "concat",
          "normalized": "Seq(Seq a)-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Seq(Seq a)-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:concat"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "concatMap",
          "package": "EdisonCore",
          "signature": "(a -\u003e Seq b) -\u003e Seq a -\u003e Seq b",
          "source": "src/Data-Edison-Seq-MyersStack.html#concatMap",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "concatMap",
          "normalized": "(a-\u003eSeq b)-\u003eSeq a-\u003eSeq b",
          "package": "EdisonCore",
          "partial": "Map",
          "signature": "(a-\u003eSeq b)-\u003eSeq a-\u003eSeq b",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:concatMap"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "copy",
          "package": "EdisonCore",
          "signature": "Int -\u003e a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-MyersStack.html#copy",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "copy",
          "normalized": "Int-\u003ea-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Int-\u003ea-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:copy"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "drop",
          "package": "EdisonCore",
          "signature": "Int -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-MyersStack.html#drop",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "drop",
          "normalized": "Int-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Int-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:drop"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "dropWhile",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-MyersStack.html#dropWhile",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "dropWhile",
          "normalized": "(a-\u003eBool)-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "partial": "While",
          "signature": "(a-\u003eBool)-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:dropWhile"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "empty",
          "package": "EdisonCore",
          "signature": "Seq a",
          "source": "src/Data-Edison-Seq-MyersStack.html#empty",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "empty",
          "package": "EdisonCore",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:empty"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "filter",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-MyersStack.html#filter",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "filter",
          "normalized": "(a-\u003eBool)-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "(a-\u003eBool)-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:filter"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "fold",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-MyersStack.html#fold",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "fold",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:fold"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "fold'",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-MyersStack.html#fold%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "fold'",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:fold-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "fold1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-MyersStack.html#fold1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "fold1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:fold1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "fold1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-MyersStack.html#fold1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "fold1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:fold1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "foldl",
          "package": "EdisonCore",
          "signature": "(b -\u003e a -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-MyersStack.html#foldl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "foldl",
          "normalized": "(a-\u003eb-\u003ea)-\u003ea-\u003eSeq b-\u003ea",
          "package": "EdisonCore",
          "signature": "(b-\u003ea-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:foldl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "foldl'",
          "package": "EdisonCore",
          "signature": "(b -\u003e a -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-MyersStack.html#foldl%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "foldl'",
          "normalized": "(a-\u003eb-\u003ea)-\u003ea-\u003eSeq b-\u003ea",
          "package": "EdisonCore",
          "signature": "(b-\u003ea-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:foldl-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "foldl1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-MyersStack.html#foldl1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "foldl1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:foldl1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "foldl1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-MyersStack.html#foldl1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "foldl1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:foldl1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "foldlWithIndex",
          "package": "EdisonCore",
          "signature": "(b -\u003e Int -\u003e a -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-MyersStack.html#foldlWithIndex",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "foldlWithIndex",
          "normalized": "(a-\u003eInt-\u003eb-\u003ea)-\u003ea-\u003eSeq b-\u003ea",
          "package": "EdisonCore",
          "partial": "With Index",
          "signature": "(b-\u003eInt-\u003ea-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:foldlWithIndex"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "foldlWithIndex'",
          "package": "EdisonCore",
          "signature": "(b -\u003e Int -\u003e a -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-MyersStack.html#foldlWithIndex%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "foldlWithIndex'",
          "normalized": "(a-\u003eInt-\u003eb-\u003ea)-\u003ea-\u003eSeq b-\u003ea",
          "package": "EdisonCore",
          "partial": "With Index'",
          "signature": "(b-\u003eInt-\u003ea-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:foldlWithIndex-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "foldr",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-MyersStack.html#foldr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "foldr",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:foldr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "foldr'",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-MyersStack.html#foldr%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "foldr'",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:foldr-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "foldr1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-MyersStack.html#foldr1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "foldr1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:foldr1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "foldr1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-MyersStack.html#foldr1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "foldr1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:foldr1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "foldrWithIndex",
          "package": "EdisonCore",
          "signature": "(Int -\u003e a -\u003e b -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-MyersStack.html#foldrWithIndex",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "foldrWithIndex",
          "normalized": "(Int-\u003ea-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "package": "EdisonCore",
          "partial": "With Index",
          "signature": "(Int-\u003ea-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:foldrWithIndex"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "foldrWithIndex'",
          "package": "EdisonCore",
          "signature": "(Int -\u003e a -\u003e b -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-MyersStack.html#foldrWithIndex%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "foldrWithIndex'",
          "normalized": "(Int-\u003ea-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "package": "EdisonCore",
          "partial": "With Index'",
          "signature": "(Int-\u003ea-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:foldrWithIndex-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "fromList",
          "package": "EdisonCore",
          "signature": "[a] -\u003e Seq a",
          "source": "src/Data-Edison-Seq-MyersStack.html#fromList",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "fromList",
          "normalized": "[a]-\u003eSeq a",
          "package": "EdisonCore",
          "partial": "List",
          "signature": "[a]-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:fromList"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "inBounds",
          "package": "EdisonCore",
          "signature": "Int -\u003e Seq a -\u003e Bool",
          "source": "src/Data-Edison-Seq-MyersStack.html#inBounds",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "inBounds",
          "normalized": "Int-\u003eSeq a-\u003eBool",
          "package": "EdisonCore",
          "partial": "Bounds",
          "signature": "Int-\u003eSeq a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:inBounds"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "lcons",
          "package": "EdisonCore",
          "signature": "a -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-MyersStack.html#lcons",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "lcons",
          "normalized": "a-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "a-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:lcons"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "lhead",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-MyersStack.html#lhead",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "lhead",
          "normalized": "Seq a-\u003ea",
          "package": "EdisonCore",
          "signature": "Seq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:lhead"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "lheadM",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e m a",
          "source": "src/Data-Edison-Seq-MyersStack.html#lheadM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "lheadM",
          "normalized": "Seq a-\u003eb a",
          "package": "EdisonCore",
          "signature": "Seq a-\u003em a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:lheadM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "lookup",
          "package": "EdisonCore",
          "signature": "Int -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-MyersStack.html#lookup",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "lookup",
          "normalized": "Int-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "Int-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:lookup"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "lookupM",
          "package": "EdisonCore",
          "signature": "Int -\u003e Seq a -\u003e m a",
          "source": "src/Data-Edison-Seq-MyersStack.html#lookupM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "lookupM",
          "normalized": "Int-\u003eSeq a-\u003eb a",
          "package": "EdisonCore",
          "signature": "Int-\u003eSeq a-\u003em a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:lookupM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "lookupWithDefault",
          "package": "EdisonCore",
          "signature": "a -\u003e Int -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-MyersStack.html#lookupWithDefault",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "lookupWithDefault",
          "normalized": "a-\u003eInt-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "partial": "With Default",
          "signature": "a-\u003eInt-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:lookupWithDefault"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "ltail",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-MyersStack.html#ltail",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "ltail",
          "normalized": "Seq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Seq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:ltail"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "ltailM",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e m (Seq a)",
          "source": "src/Data-Edison-Seq-MyersStack.html#ltailM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "ltailM",
          "normalized": "Seq a-\u003eb(Seq a)",
          "package": "EdisonCore",
          "signature": "Seq a-\u003em(Seq a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:ltailM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "lview",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e m (a, Seq a)",
          "source": "src/Data-Edison-Seq-MyersStack.html#lview",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "lview",
          "normalized": "Seq a-\u003eb(a,Seq a)",
          "package": "EdisonCore",
          "signature": "Seq a-\u003em(a,Seq a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:lview"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "map",
          "package": "EdisonCore",
          "signature": "(a -\u003e b) -\u003e Seq a -\u003e Seq b",
          "source": "src/Data-Edison-Seq-MyersStack.html#map",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "map",
          "normalized": "(a-\u003eb)-\u003eSeq a-\u003eSeq b",
          "package": "EdisonCore",
          "signature": "(a-\u003eb)-\u003eSeq a-\u003eSeq b",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:map"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "mapWithIndex",
          "package": "EdisonCore",
          "signature": "(Int -\u003e a -\u003e b) -\u003e Seq a -\u003e Seq b",
          "source": "src/Data-Edison-Seq-MyersStack.html#mapWithIndex",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "mapWithIndex",
          "normalized": "(Int-\u003ea-\u003eb)-\u003eSeq a-\u003eSeq b",
          "package": "EdisonCore",
          "partial": "With Index",
          "signature": "(Int-\u003ea-\u003eb)-\u003eSeq a-\u003eSeq b",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:mapWithIndex"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "moduleName",
          "package": "EdisonCore",
          "signature": "String",
          "source": "src/Data-Edison-Seq-MyersStack.html#moduleName",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "moduleName",
          "package": "EdisonCore",
          "partial": "Name",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:moduleName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "null",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Bool",
          "source": "src/Data-Edison-Seq-MyersStack.html#null",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "null",
          "normalized": "Seq a-\u003eBool",
          "package": "EdisonCore",
          "signature": "Seq a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:null"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "partition",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e Seq a -\u003e (Seq a, Seq a)",
          "source": "src/Data-Edison-Seq-MyersStack.html#partition",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "partition",
          "normalized": "(a-\u003eBool)-\u003eSeq a-\u003e(Seq a,Seq a)",
          "package": "EdisonCore",
          "signature": "(a-\u003eBool)-\u003eSeq a-\u003e(Seq a,Seq a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:partition"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "rcons",
          "package": "EdisonCore",
          "signature": "a -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-MyersStack.html#rcons",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "rcons",
          "normalized": "a-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "a-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:rcons"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "reduce1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-MyersStack.html#reduce1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "reduce1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:reduce1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "reduce1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-MyersStack.html#reduce1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "reduce1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:reduce1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "reducel",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e a -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-MyersStack.html#reducel",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "reducel",
          "normalized": "(a-\u003ea-\u003ea)-\u003ea-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003ea-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:reducel"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "reducel'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e a -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-MyersStack.html#reducel%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "reducel'",
          "normalized": "(a-\u003ea-\u003ea)-\u003ea-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003ea-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:reducel-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "reducer",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e a -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-MyersStack.html#reducer",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "reducer",
          "normalized": "(a-\u003ea-\u003ea)-\u003ea-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003ea-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:reducer"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "reducer'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e a -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-MyersStack.html#reducer%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "reducer'",
          "normalized": "(a-\u003ea-\u003ea)-\u003ea-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003ea-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:reducer-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "reverse",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-MyersStack.html#reverse",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "reverse",
          "normalized": "Seq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Seq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:reverse"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "reverseOnto",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-MyersStack.html#reverseOnto",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "reverseOnto",
          "normalized": "Seq a-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "partial": "Onto",
          "signature": "Seq a-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:reverseOnto"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "rhead",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-MyersStack.html#rhead",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "rhead",
          "normalized": "Seq a-\u003ea",
          "package": "EdisonCore",
          "signature": "Seq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:rhead"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "rheadM",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e m a",
          "source": "src/Data-Edison-Seq-MyersStack.html#rheadM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "rheadM",
          "normalized": "Seq a-\u003eb a",
          "package": "EdisonCore",
          "signature": "Seq a-\u003em a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:rheadM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "rtail",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-MyersStack.html#rtail",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "rtail",
          "normalized": "Seq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Seq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:rtail"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "rtailM",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e m (Seq a)",
          "source": "src/Data-Edison-Seq-MyersStack.html#rtailM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "rtailM",
          "normalized": "Seq a-\u003eb(Seq a)",
          "package": "EdisonCore",
          "signature": "Seq a-\u003em(Seq a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:rtailM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "rview",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e m (a, Seq a)",
          "source": "src/Data-Edison-Seq-MyersStack.html#rview",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "rview",
          "normalized": "Seq a-\u003eb(a,Seq a)",
          "package": "EdisonCore",
          "signature": "Seq a-\u003em(a,Seq a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:rview"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "singleton",
          "package": "EdisonCore",
          "signature": "a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-MyersStack.html#singleton",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "singleton",
          "normalized": "a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:singleton"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "size",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Int",
          "source": "src/Data-Edison-Seq-MyersStack.html#size",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "size",
          "normalized": "Seq a-\u003eInt",
          "package": "EdisonCore",
          "signature": "Seq a-\u003eInt",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:size"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "splitAt",
          "package": "EdisonCore",
          "signature": "Int -\u003e Seq a -\u003e (Seq a, Seq a)",
          "source": "src/Data-Edison-Seq-MyersStack.html#splitAt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "splitAt",
          "normalized": "Int-\u003eSeq a-\u003e(Seq a,Seq a)",
          "package": "EdisonCore",
          "partial": "At",
          "signature": "Int-\u003eSeq a-\u003e(Seq a,Seq a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:splitAt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "splitWhile",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e Seq a -\u003e (Seq a, Seq a)",
          "source": "src/Data-Edison-Seq-MyersStack.html#splitWhile",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "splitWhile",
          "normalized": "(a-\u003eBool)-\u003eSeq a-\u003e(Seq a,Seq a)",
          "package": "EdisonCore",
          "partial": "While",
          "signature": "(a-\u003eBool)-\u003eSeq a-\u003e(Seq a,Seq a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:splitWhile"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "strict",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-MyersStack.html#strict",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "strict",
          "normalized": "Seq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Seq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:strict"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "strictWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e b) -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-MyersStack.html#strictWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "strictWith",
          "normalized": "(a-\u003eb)-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003eb)-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:strictWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "structuralInvariant",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Bool",
          "source": "src/Data-Edison-Seq-MyersStack.html#structuralInvariant",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "structuralInvariant",
          "normalized": "Seq a-\u003eBool",
          "package": "EdisonCore",
          "partial": "Invariant",
          "signature": "Seq a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:structuralInvariant"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "subseq",
          "package": "EdisonCore",
          "signature": "Int -\u003e Int -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-MyersStack.html#subseq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "subseq",
          "normalized": "Int-\u003eInt-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Int-\u003eInt-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:subseq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "take",
          "package": "EdisonCore",
          "signature": "Int -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-MyersStack.html#take",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "take",
          "normalized": "Int-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Int-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:take"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "takeWhile",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-MyersStack.html#takeWhile",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "takeWhile",
          "normalized": "(a-\u003eBool)-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "partial": "While",
          "signature": "(a-\u003eBool)-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:takeWhile"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "toList",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e [a]",
          "source": "src/Data-Edison-Seq-MyersStack.html#toList",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "toList",
          "normalized": "Seq a-\u003e[a]",
          "package": "EdisonCore",
          "partial": "List",
          "signature": "Seq a-\u003e[a]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:toList"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "unzip",
          "package": "EdisonCore",
          "signature": "Seq (a, b) -\u003e (Seq a, Seq b)",
          "source": "src/Data-Edison-Seq-MyersStack.html#unzip",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "unzip",
          "normalized": "Seq(a,b)-\u003e(Seq a,Seq b)",
          "package": "EdisonCore",
          "signature": "Seq(a,b)-\u003e(Seq a,Seq b)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:unzip"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "unzip3",
          "package": "EdisonCore",
          "signature": "Seq (a, b, c) -\u003e (Seq a, Seq b, Seq c)",
          "source": "src/Data-Edison-Seq-MyersStack.html#unzip3",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "unzip3",
          "normalized": "Seq(a,b,c)-\u003e(Seq a,Seq b,Seq c)",
          "package": "EdisonCore",
          "signature": "Seq(a,b,c)-\u003e(Seq a,Seq b,Seq c)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:unzip3"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "unzipWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e b) -\u003e (a -\u003e c) -\u003e Seq a -\u003e (Seq b, Seq c)",
          "source": "src/Data-Edison-Seq-MyersStack.html#unzipWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "unzipWith",
          "normalized": "(a-\u003eb)-\u003e(a-\u003ec)-\u003eSeq a-\u003e(Seq b,Seq c)",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003eb)-\u003e(a-\u003ec)-\u003eSeq a-\u003e(Seq b,Seq c)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:unzipWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "unzipWith3",
          "package": "EdisonCore",
          "signature": "(a -\u003e b) -\u003e (a -\u003e c) -\u003e (a -\u003e d) -\u003e Seq a -\u003e (Seq b, Seq c, Seq d)",
          "source": "src/Data-Edison-Seq-MyersStack.html#unzipWith3",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "unzipWith3",
          "normalized": "(a-\u003eb)-\u003e(a-\u003ec)-\u003e(a-\u003ed)-\u003eSeq a-\u003e(Seq b,Seq c,Seq d)",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003eb)-\u003e(a-\u003ec)-\u003e(a-\u003ed)-\u003eSeq a-\u003e(Seq b,Seq c,Seq d)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:unzipWith3"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "update",
          "package": "EdisonCore",
          "signature": "Int -\u003e a -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-MyersStack.html#update",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "update",
          "normalized": "Int-\u003ea-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Int-\u003ea-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:update"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "zip",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Seq b -\u003e Seq (a, b)",
          "source": "src/Data-Edison-Seq-MyersStack.html#zip",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "zip",
          "normalized": "Seq a-\u003eSeq b-\u003eSeq(a,b)",
          "package": "EdisonCore",
          "signature": "Seq a-\u003eSeq b-\u003eSeq(a,b)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:zip"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "zip3",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Seq b -\u003e Seq c -\u003e Seq (a, b, c)",
          "source": "src/Data-Edison-Seq-MyersStack.html#zip3",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "zip3",
          "normalized": "Seq a-\u003eSeq b-\u003eSeq c-\u003eSeq(a,b,c)",
          "package": "EdisonCore",
          "signature": "Seq a-\u003eSeq b-\u003eSeq c-\u003eSeq(a,b,c)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:zip3"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "zipWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e c) -\u003e Seq a -\u003e Seq b -\u003e Seq c",
          "source": "src/Data-Edison-Seq-MyersStack.html#zipWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "zipWith",
          "normalized": "(a-\u003eb-\u003ec)-\u003eSeq a-\u003eSeq b-\u003eSeq c",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003eb-\u003ec)-\u003eSeq a-\u003eSeq b-\u003eSeq c",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:zipWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.MyersStack",
          "name": "zipWith3",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e c -\u003e d) -\u003e Seq a -\u003e Seq b -\u003e Seq c -\u003e Seq d",
          "source": "src/Data-Edison-Seq-MyersStack.html#zipWith3",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq MyersStack",
          "module": "Data.Edison.Seq.MyersStack",
          "name": "zipWith3",
          "normalized": "(a-\u003eb-\u003ec-\u003ed)-\u003eSeq a-\u003eSeq b-\u003eSeq c-\u003eSeq d",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003eb-\u003ec-\u003ed)-\u003eSeq a-\u003eSeq b-\u003eSeq c-\u003eSeq d",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-MyersStack.html#v:zipWith3"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eRandom-Access Lists.  All operations are as listed in \u003ca\u003eData.Edison.Seq\u003c/a\u003e\n   except the following:\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e rhead*, size  \u003ccode\u003eO( log n )\u003c/code\u003e\n\u003c/li\u003e\u003cli\u003e copy, inBounds    \u003ccode\u003eO( log i )\u003c/code\u003e\n\u003c/li\u003e\u003cli\u003e lookup*, update, adjust, drop \u003ccode\u003eO( min( i, log n ) )\u003c/code\u003e\n\u003c/li\u003e\u003cli\u003e subseq            \u003ccode\u003eO( min( i, log n ) + len )\u003c/code\u003e\n\u003c/li\u003e\u003c/ul\u003e\u003cp\u003e\u003cem\u003eReferences:\u003c/em\u003e\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e Chris Okasaki. \u003cem\u003ePurely Functional Data Structures\u003c/em\u003e. 1998.\n     Section 9.3.1.\n\u003c/li\u003e\u003cli\u003e Chris Okasaki. \"Purely Functional Random Access Lists\".  FPCA'95,\n     pages 86-95.\n\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e",
          "module": "Data.Edison.Seq.RandList",
          "name": "RandList",
          "package": "EdisonCore",
          "source": "src/Data-Edison-Seq-RandList.html",
          "type": "module"
        },
        "index": {
          "description": "Random-Access Lists All operations are as listed in Data.Edison.Seq except the following rhead size log copy inBounds log lookup update adjust drop min log subseq min log len References Chris Okasaki Purely Functional Data Structures Section Chris Okasaki Purely Functional Random Access Lists FPCA pages",
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "RandList",
          "package": "EdisonCore",
          "partial": "Rand List",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "Seq",
          "package": "EdisonCore",
          "source": "src/Data-Edison-Seq-RandList.html#Seq",
          "type": "data"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "Seq",
          "package": "EdisonCore",
          "partial": "Seq",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#t:Seq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "adjust",
          "package": "EdisonCore",
          "signature": "(a -\u003e a) -\u003e Int -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-RandList.html#adjust",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "adjust",
          "normalized": "(a-\u003ea)-\u003eInt-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "(a-\u003ea)-\u003eInt-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:adjust"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "append",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-RandList.html#append",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "append",
          "normalized": "Seq a-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Seq a-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:append"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "concat",
          "package": "EdisonCore",
          "signature": "Seq (Seq a) -\u003e Seq a",
          "source": "src/Data-Edison-Seq-RandList.html#concat",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "concat",
          "normalized": "Seq(Seq a)-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Seq(Seq a)-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:concat"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "concatMap",
          "package": "EdisonCore",
          "signature": "(a -\u003e Seq b) -\u003e Seq a -\u003e Seq b",
          "source": "src/Data-Edison-Seq-RandList.html#concatMap",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "concatMap",
          "normalized": "(a-\u003eSeq b)-\u003eSeq a-\u003eSeq b",
          "package": "EdisonCore",
          "partial": "Map",
          "signature": "(a-\u003eSeq b)-\u003eSeq a-\u003eSeq b",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:concatMap"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "copy",
          "package": "EdisonCore",
          "signature": "Int -\u003e a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-RandList.html#copy",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "copy",
          "normalized": "Int-\u003ea-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Int-\u003ea-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:copy"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "drop",
          "package": "EdisonCore",
          "signature": "Int -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-RandList.html#drop",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "drop",
          "normalized": "Int-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Int-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:drop"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "dropWhile",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-RandList.html#dropWhile",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "dropWhile",
          "normalized": "(a-\u003eBool)-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "partial": "While",
          "signature": "(a-\u003eBool)-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:dropWhile"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "empty",
          "package": "EdisonCore",
          "signature": "Seq a",
          "source": "src/Data-Edison-Seq-RandList.html#empty",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "empty",
          "package": "EdisonCore",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:empty"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "filter",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-RandList.html#filter",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "filter",
          "normalized": "(a-\u003eBool)-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "(a-\u003eBool)-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:filter"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "fold",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-RandList.html#fold",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "fold",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:fold"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "fold'",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-RandList.html#fold%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "fold'",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:fold-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "fold1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-RandList.html#fold1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "fold1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:fold1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "fold1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-RandList.html#fold1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "fold1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:fold1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "foldl",
          "package": "EdisonCore",
          "signature": "(b -\u003e a -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-RandList.html#foldl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "foldl",
          "normalized": "(a-\u003eb-\u003ea)-\u003ea-\u003eSeq b-\u003ea",
          "package": "EdisonCore",
          "signature": "(b-\u003ea-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:foldl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "foldl'",
          "package": "EdisonCore",
          "signature": "(b -\u003e a -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-RandList.html#foldl%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "foldl'",
          "normalized": "(a-\u003eb-\u003ea)-\u003ea-\u003eSeq b-\u003ea",
          "package": "EdisonCore",
          "signature": "(b-\u003ea-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:foldl-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "foldl1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-RandList.html#foldl1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "foldl1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:foldl1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "foldl1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-RandList.html#foldl1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "foldl1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:foldl1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "foldlWithIndex",
          "package": "EdisonCore",
          "signature": "(b -\u003e Int -\u003e a -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-RandList.html#foldlWithIndex",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "foldlWithIndex",
          "normalized": "(a-\u003eInt-\u003eb-\u003ea)-\u003ea-\u003eSeq b-\u003ea",
          "package": "EdisonCore",
          "partial": "With Index",
          "signature": "(b-\u003eInt-\u003ea-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:foldlWithIndex"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "foldlWithIndex'",
          "package": "EdisonCore",
          "signature": "(b -\u003e Int -\u003e a -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-RandList.html#foldlWithIndex%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "foldlWithIndex'",
          "normalized": "(a-\u003eInt-\u003eb-\u003ea)-\u003ea-\u003eSeq b-\u003ea",
          "package": "EdisonCore",
          "partial": "With Index'",
          "signature": "(b-\u003eInt-\u003ea-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:foldlWithIndex-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "foldr",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-RandList.html#foldr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "foldr",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:foldr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "foldr'",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-RandList.html#foldr%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "foldr'",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:foldr-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "foldr1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-RandList.html#foldr1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "foldr1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:foldr1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "foldr1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-RandList.html#foldr1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "foldr1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:foldr1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "foldrWithIndex",
          "package": "EdisonCore",
          "signature": "(Int -\u003e a -\u003e b -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-RandList.html#foldrWithIndex",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "foldrWithIndex",
          "normalized": "(Int-\u003ea-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "package": "EdisonCore",
          "partial": "With Index",
          "signature": "(Int-\u003ea-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:foldrWithIndex"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "foldrWithIndex'",
          "package": "EdisonCore",
          "signature": "(Int -\u003e a -\u003e b -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-RandList.html#foldrWithIndex%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "foldrWithIndex'",
          "normalized": "(Int-\u003ea-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "package": "EdisonCore",
          "partial": "With Index'",
          "signature": "(Int-\u003ea-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:foldrWithIndex-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "fromList",
          "package": "EdisonCore",
          "signature": "[a] -\u003e Seq a",
          "source": "src/Data-Edison-Seq-RandList.html#fromList",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "fromList",
          "normalized": "[a]-\u003eSeq a",
          "package": "EdisonCore",
          "partial": "List",
          "signature": "[a]-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:fromList"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "inBounds",
          "package": "EdisonCore",
          "signature": "Int -\u003e Seq a -\u003e Bool",
          "source": "src/Data-Edison-Seq-RandList.html#inBounds",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "inBounds",
          "normalized": "Int-\u003eSeq a-\u003eBool",
          "package": "EdisonCore",
          "partial": "Bounds",
          "signature": "Int-\u003eSeq a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:inBounds"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "lcons",
          "package": "EdisonCore",
          "signature": "a -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-RandList.html#lcons",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "lcons",
          "normalized": "a-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "a-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:lcons"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "lhead",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-RandList.html#lhead",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "lhead",
          "normalized": "Seq a-\u003ea",
          "package": "EdisonCore",
          "signature": "Seq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:lhead"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "lheadM",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e m a",
          "source": "src/Data-Edison-Seq-RandList.html#lheadM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "lheadM",
          "normalized": "Seq a-\u003eb a",
          "package": "EdisonCore",
          "signature": "Seq a-\u003em a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:lheadM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "lookup",
          "package": "EdisonCore",
          "signature": "Int -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-RandList.html#lookup",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "lookup",
          "normalized": "Int-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "Int-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:lookup"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "lookupM",
          "package": "EdisonCore",
          "signature": "Int -\u003e Seq a -\u003e m a",
          "source": "src/Data-Edison-Seq-RandList.html#lookupM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "lookupM",
          "normalized": "Int-\u003eSeq a-\u003eb a",
          "package": "EdisonCore",
          "signature": "Int-\u003eSeq a-\u003em a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:lookupM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "lookupWithDefault",
          "package": "EdisonCore",
          "signature": "a -\u003e Int -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-RandList.html#lookupWithDefault",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "lookupWithDefault",
          "normalized": "a-\u003eInt-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "partial": "With Default",
          "signature": "a-\u003eInt-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:lookupWithDefault"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "ltail",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-RandList.html#ltail",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "ltail",
          "normalized": "Seq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Seq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:ltail"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "ltailM",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e m (Seq a)",
          "source": "src/Data-Edison-Seq-RandList.html#ltailM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "ltailM",
          "normalized": "Seq a-\u003eb(Seq a)",
          "package": "EdisonCore",
          "signature": "Seq a-\u003em(Seq a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:ltailM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "lview",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e m (a, Seq a)",
          "source": "src/Data-Edison-Seq-RandList.html#lview",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "lview",
          "normalized": "Seq a-\u003eb(a,Seq a)",
          "package": "EdisonCore",
          "signature": "Seq a-\u003em(a,Seq a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:lview"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "map",
          "package": "EdisonCore",
          "signature": "(a -\u003e b) -\u003e Seq a -\u003e Seq b",
          "source": "src/Data-Edison-Seq-RandList.html#map",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "map",
          "normalized": "(a-\u003eb)-\u003eSeq a-\u003eSeq b",
          "package": "EdisonCore",
          "signature": "(a-\u003eb)-\u003eSeq a-\u003eSeq b",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:map"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "mapWithIndex",
          "package": "EdisonCore",
          "signature": "(Int -\u003e a -\u003e b) -\u003e Seq a -\u003e Seq b",
          "source": "src/Data-Edison-Seq-RandList.html#mapWithIndex",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "mapWithIndex",
          "normalized": "(Int-\u003ea-\u003eb)-\u003eSeq a-\u003eSeq b",
          "package": "EdisonCore",
          "partial": "With Index",
          "signature": "(Int-\u003ea-\u003eb)-\u003eSeq a-\u003eSeq b",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:mapWithIndex"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "moduleName",
          "package": "EdisonCore",
          "signature": "String",
          "source": "src/Data-Edison-Seq-RandList.html#moduleName",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "moduleName",
          "package": "EdisonCore",
          "partial": "Name",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:moduleName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "null",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Bool",
          "source": "src/Data-Edison-Seq-RandList.html#null",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "null",
          "normalized": "Seq a-\u003eBool",
          "package": "EdisonCore",
          "signature": "Seq a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:null"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "partition",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e Seq a -\u003e (Seq a, Seq a)",
          "source": "src/Data-Edison-Seq-RandList.html#partition",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "partition",
          "normalized": "(a-\u003eBool)-\u003eSeq a-\u003e(Seq a,Seq a)",
          "package": "EdisonCore",
          "signature": "(a-\u003eBool)-\u003eSeq a-\u003e(Seq a,Seq a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:partition"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "rcons",
          "package": "EdisonCore",
          "signature": "a -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-RandList.html#rcons",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "rcons",
          "normalized": "a-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "a-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:rcons"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "reduce1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-RandList.html#reduce1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "reduce1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:reduce1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "reduce1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-RandList.html#reduce1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "reduce1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:reduce1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "reducel",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e a -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-RandList.html#reducel",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "reducel",
          "normalized": "(a-\u003ea-\u003ea)-\u003ea-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003ea-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:reducel"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "reducel'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e a -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-RandList.html#reducel%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "reducel'",
          "normalized": "(a-\u003ea-\u003ea)-\u003ea-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003ea-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:reducel-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "reducer",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e a -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-RandList.html#reducer",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "reducer",
          "normalized": "(a-\u003ea-\u003ea)-\u003ea-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003ea-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:reducer"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "reducer'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e a -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-RandList.html#reducer%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "reducer'",
          "normalized": "(a-\u003ea-\u003ea)-\u003ea-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003ea-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:reducer-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "reverse",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-RandList.html#reverse",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "reverse",
          "normalized": "Seq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Seq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:reverse"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "reverseOnto",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-RandList.html#reverseOnto",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "reverseOnto",
          "normalized": "Seq a-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "partial": "Onto",
          "signature": "Seq a-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:reverseOnto"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "rhead",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-RandList.html#rhead",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "rhead",
          "normalized": "Seq a-\u003ea",
          "package": "EdisonCore",
          "signature": "Seq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:rhead"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "rheadM",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e m a",
          "source": "src/Data-Edison-Seq-RandList.html#rheadM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "rheadM",
          "normalized": "Seq a-\u003eb a",
          "package": "EdisonCore",
          "signature": "Seq a-\u003em a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:rheadM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "rtail",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-RandList.html#rtail",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "rtail",
          "normalized": "Seq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Seq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:rtail"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "rtailM",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e m (Seq a)",
          "source": "src/Data-Edison-Seq-RandList.html#rtailM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "rtailM",
          "normalized": "Seq a-\u003eb(Seq a)",
          "package": "EdisonCore",
          "signature": "Seq a-\u003em(Seq a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:rtailM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "rview",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e m (a, Seq a)",
          "source": "src/Data-Edison-Seq-RandList.html#rview",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "rview",
          "normalized": "Seq a-\u003eb(a,Seq a)",
          "package": "EdisonCore",
          "signature": "Seq a-\u003em(a,Seq a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:rview"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "singleton",
          "package": "EdisonCore",
          "signature": "a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-RandList.html#singleton",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "singleton",
          "normalized": "a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:singleton"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "size",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Int",
          "source": "src/Data-Edison-Seq-RandList.html#size",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "size",
          "normalized": "Seq a-\u003eInt",
          "package": "EdisonCore",
          "signature": "Seq a-\u003eInt",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:size"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "splitAt",
          "package": "EdisonCore",
          "signature": "Int -\u003e Seq a -\u003e (Seq a, Seq a)",
          "source": "src/Data-Edison-Seq-RandList.html#splitAt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "splitAt",
          "normalized": "Int-\u003eSeq a-\u003e(Seq a,Seq a)",
          "package": "EdisonCore",
          "partial": "At",
          "signature": "Int-\u003eSeq a-\u003e(Seq a,Seq a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:splitAt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "splitWhile",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e Seq a -\u003e (Seq a, Seq a)",
          "source": "src/Data-Edison-Seq-RandList.html#splitWhile",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "splitWhile",
          "normalized": "(a-\u003eBool)-\u003eSeq a-\u003e(Seq a,Seq a)",
          "package": "EdisonCore",
          "partial": "While",
          "signature": "(a-\u003eBool)-\u003eSeq a-\u003e(Seq a,Seq a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:splitWhile"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "strict",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-RandList.html#strict",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "strict",
          "normalized": "Seq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Seq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:strict"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "strictWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e b) -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-RandList.html#strictWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "strictWith",
          "normalized": "(a-\u003eb)-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003eb)-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:strictWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "structuralInvariant",
          "package": "EdisonCore",
          "signature": "Seq t -\u003e Bool",
          "source": "src/Data-Edison-Seq-RandList.html#structuralInvariant",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "structuralInvariant",
          "normalized": "Seq a-\u003eBool",
          "package": "EdisonCore",
          "partial": "Invariant",
          "signature": "Seq t-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:structuralInvariant"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "subseq",
          "package": "EdisonCore",
          "signature": "Int -\u003e Int -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-RandList.html#subseq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "subseq",
          "normalized": "Int-\u003eInt-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Int-\u003eInt-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:subseq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "take",
          "package": "EdisonCore",
          "signature": "Int -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-RandList.html#take",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "take",
          "normalized": "Int-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Int-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:take"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "takeWhile",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-RandList.html#takeWhile",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "takeWhile",
          "normalized": "(a-\u003eBool)-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "partial": "While",
          "signature": "(a-\u003eBool)-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:takeWhile"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "toList",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e [a]",
          "source": "src/Data-Edison-Seq-RandList.html#toList",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "toList",
          "normalized": "Seq a-\u003e[a]",
          "package": "EdisonCore",
          "partial": "List",
          "signature": "Seq a-\u003e[a]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:toList"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "unzip",
          "package": "EdisonCore",
          "signature": "Seq (a, b) -\u003e (Seq a, Seq b)",
          "source": "src/Data-Edison-Seq-RandList.html#unzip",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "unzip",
          "normalized": "Seq(a,b)-\u003e(Seq a,Seq b)",
          "package": "EdisonCore",
          "signature": "Seq(a,b)-\u003e(Seq a,Seq b)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:unzip"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "unzip3",
          "package": "EdisonCore",
          "signature": "Seq (a, b, c) -\u003e (Seq a, Seq b, Seq c)",
          "source": "src/Data-Edison-Seq-RandList.html#unzip3",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "unzip3",
          "normalized": "Seq(a,b,c)-\u003e(Seq a,Seq b,Seq c)",
          "package": "EdisonCore",
          "signature": "Seq(a,b,c)-\u003e(Seq a,Seq b,Seq c)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:unzip3"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "unzipWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e b) -\u003e (a -\u003e c) -\u003e Seq a -\u003e (Seq b, Seq c)",
          "source": "src/Data-Edison-Seq-RandList.html#unzipWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "unzipWith",
          "normalized": "(a-\u003eb)-\u003e(a-\u003ec)-\u003eSeq a-\u003e(Seq b,Seq c)",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003eb)-\u003e(a-\u003ec)-\u003eSeq a-\u003e(Seq b,Seq c)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:unzipWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "unzipWith3",
          "package": "EdisonCore",
          "signature": "(a -\u003e b) -\u003e (a -\u003e c) -\u003e (a -\u003e d) -\u003e Seq a -\u003e (Seq b, Seq c, Seq d)",
          "source": "src/Data-Edison-Seq-RandList.html#unzipWith3",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "unzipWith3",
          "normalized": "(a-\u003eb)-\u003e(a-\u003ec)-\u003e(a-\u003ed)-\u003eSeq a-\u003e(Seq b,Seq c,Seq d)",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003eb)-\u003e(a-\u003ec)-\u003e(a-\u003ed)-\u003eSeq a-\u003e(Seq b,Seq c,Seq d)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:unzipWith3"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "update",
          "package": "EdisonCore",
          "signature": "Int -\u003e a -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-RandList.html#update",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "update",
          "normalized": "Int-\u003ea-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Int-\u003ea-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:update"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "zip",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Seq b -\u003e Seq (a, b)",
          "source": "src/Data-Edison-Seq-RandList.html#zip",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "zip",
          "normalized": "Seq a-\u003eSeq b-\u003eSeq(a,b)",
          "package": "EdisonCore",
          "signature": "Seq a-\u003eSeq b-\u003eSeq(a,b)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:zip"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "zip3",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Seq b -\u003e Seq c -\u003e Seq (a, b, c)",
          "source": "src/Data-Edison-Seq-RandList.html#zip3",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "zip3",
          "normalized": "Seq a-\u003eSeq b-\u003eSeq c-\u003eSeq(a,b,c)",
          "package": "EdisonCore",
          "signature": "Seq a-\u003eSeq b-\u003eSeq c-\u003eSeq(a,b,c)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:zip3"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "zipWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e c) -\u003e Seq a -\u003e Seq b -\u003e Seq c",
          "source": "src/Data-Edison-Seq-RandList.html#zipWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "zipWith",
          "normalized": "(a-\u003eb-\u003ec)-\u003eSeq a-\u003eSeq b-\u003eSeq c",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003eb-\u003ec)-\u003eSeq a-\u003eSeq b-\u003eSeq c",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:zipWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RandList",
          "name": "zipWith3",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e c -\u003e d) -\u003e Seq a -\u003e Seq b -\u003e Seq c -\u003e Seq d",
          "source": "src/Data-Edison-Seq-RandList.html#zipWith3",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RandList",
          "module": "Data.Edison.Seq.RandList",
          "name": "zipWith3",
          "normalized": "(a-\u003eb-\u003ec-\u003ed)-\u003eSeq a-\u003eSeq b-\u003eSeq c-\u003eSeq d",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003eb-\u003ec-\u003ed)-\u003eSeq a-\u003eSeq b-\u003eSeq c-\u003eSeq d",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RandList.html#v:zipWith3"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThis module defines a sequence adaptor \u003ccode\u003eRev s\u003c/code\u003e.\n   If \u003ccode\u003es\u003c/code\u003e is a sequence type constructor, then \u003ccode\u003eRev s\u003c/code\u003e\n   is a sequence type constructor that is identical to \u003ccode\u003es\u003c/code\u003e,\n   except that it is kept in the opposite order.\n   Also keeps explicit track of the size of the sequence,\n   similar to the \u003ccode\u003eSized\u003c/code\u003e adaptor in \u003ca\u003eData.Edison.Seq.SizedSeq\u003c/a\u003e.\n\u003c/p\u003e\u003cp\u003eThis module is most useful when s is a sequence type\n   that offers fast access to the front but slow access\n   to the rear, and your application needs the opposite\n   (i.e., fast access to the rear but slow access to the\n   front).\n\u003c/p\u003e\u003cp\u003eAll time complexities are determined by the underlying\n   sequence, except that the complexities for accessing\n   the left and right sides of the sequence are exchanged,\n   and size becomes \u003ccode\u003eO( 1 )\u003c/code\u003e.\n\u003c/p\u003e\u003c/div\u003e",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "RevSeq",
          "package": "EdisonCore",
          "source": "src/Data-Edison-Seq-RevSeq.html",
          "type": "module"
        },
        "index": {
          "description": "This module defines sequence adaptor Rev If is sequence type constructor then Rev is sequence type constructor that is identical to except that it is kept in the opposite order Also keeps explicit track of the size of the sequence similar to the Sized adaptor in Data.Edison.Seq.SizedSeq This module is most useful when is sequence type that offers fast access to the front but slow access to the rear and your application needs the opposite i.e fast access to the rear but slow access to the front All time complexities are determined by the underlying sequence except that the complexities for accessing the left and right sides of the sequence are exchanged and size becomes",
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "RevSeq",
          "package": "EdisonCore",
          "partial": "Rev Seq",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "Rev",
          "package": "EdisonCore",
          "source": "src/Data-Edison-Seq-RevSeq.html#Rev",
          "type": "data"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "Rev",
          "package": "EdisonCore",
          "partial": "Rev",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#t:Rev"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "adjust",
          "package": "EdisonCore",
          "signature": "(a -\u003e a) -\u003e Int -\u003e Rev s a -\u003e Rev s a",
          "source": "src/Data-Edison-Seq-RevSeq.html#adjust",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "adjust",
          "normalized": "(a-\u003ea)-\u003eInt-\u003eRev b a-\u003eRev b a",
          "package": "EdisonCore",
          "signature": "(a-\u003ea)-\u003eInt-\u003eRev s a-\u003eRev s a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:adjust"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "append",
          "package": "EdisonCore",
          "signature": "Rev s a -\u003e Rev s a -\u003e Rev s a",
          "source": "src/Data-Edison-Seq-RevSeq.html#append",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "append",
          "normalized": "Rev a b-\u003eRev a b-\u003eRev a b",
          "package": "EdisonCore",
          "signature": "Rev s a-\u003eRev s a-\u003eRev s a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:append"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "concat",
          "package": "EdisonCore",
          "signature": "Rev s (Rev s a) -\u003e Rev s a",
          "source": "src/Data-Edison-Seq-RevSeq.html#concat",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "concat",
          "normalized": "Rev a(Rev a b)-\u003eRev a b",
          "package": "EdisonCore",
          "signature": "Rev s(Rev s a)-\u003eRev s a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:concat"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "concatMap",
          "package": "EdisonCore",
          "signature": "(a -\u003e Rev s b) -\u003e Rev s a -\u003e Rev s b",
          "source": "src/Data-Edison-Seq-RevSeq.html#concatMap",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "concatMap",
          "normalized": "(a-\u003eRev b c)-\u003eRev b a-\u003eRev b c",
          "package": "EdisonCore",
          "partial": "Map",
          "signature": "(a-\u003eRev s b)-\u003eRev s a-\u003eRev s b",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:concatMap"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "copy",
          "package": "EdisonCore",
          "signature": "Int -\u003e a -\u003e Rev s a",
          "source": "src/Data-Edison-Seq-RevSeq.html#copy",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "copy",
          "normalized": "Int-\u003ea-\u003eRev b a",
          "package": "EdisonCore",
          "signature": "Int-\u003ea-\u003eRev s a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:copy"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "drop",
          "package": "EdisonCore",
          "signature": "Int -\u003e Rev s a -\u003e Rev s a",
          "source": "src/Data-Edison-Seq-RevSeq.html#drop",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "drop",
          "normalized": "Int-\u003eRev a b-\u003eRev a b",
          "package": "EdisonCore",
          "signature": "Int-\u003eRev s a-\u003eRev s a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:drop"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "dropWhile",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e Rev s a -\u003e Rev s a",
          "source": "src/Data-Edison-Seq-RevSeq.html#dropWhile",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "dropWhile",
          "normalized": "(a-\u003eBool)-\u003eRev b a-\u003eRev b a",
          "package": "EdisonCore",
          "partial": "While",
          "signature": "(a-\u003eBool)-\u003eRev s a-\u003eRev s a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:dropWhile"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "empty",
          "package": "EdisonCore",
          "signature": "Rev s a",
          "source": "src/Data-Edison-Seq-RevSeq.html#empty",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "empty",
          "package": "EdisonCore",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:empty"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "filter",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e Rev s a -\u003e Rev s a",
          "source": "src/Data-Edison-Seq-RevSeq.html#filter",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "filter",
          "normalized": "(a-\u003eBool)-\u003eRev b a-\u003eRev b a",
          "package": "EdisonCore",
          "signature": "(a-\u003eBool)-\u003eRev s a-\u003eRev s a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:filter"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "fold",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e Rev s a -\u003e b",
          "source": "src/Data-Edison-Seq-RevSeq.html#fold",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "fold",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eRev c a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eRev s a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:fold"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "fold'",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e Rev s a -\u003e b",
          "source": "src/Data-Edison-Seq-RevSeq.html#fold%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "fold'",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eRev c a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eRev s a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:fold-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "fold1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Rev s a -\u003e a",
          "source": "src/Data-Edison-Seq-RevSeq.html#fold1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "fold1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eRev b a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eRev s a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:fold1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "fold1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Rev s a -\u003e a",
          "source": "src/Data-Edison-Seq-RevSeq.html#fold1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "fold1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eRev b a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eRev s a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:fold1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "foldl",
          "package": "EdisonCore",
          "signature": "(b -\u003e a -\u003e b) -\u003e b -\u003e Rev s a -\u003e b",
          "source": "src/Data-Edison-Seq-RevSeq.html#foldl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "foldl",
          "normalized": "(a-\u003eb-\u003ea)-\u003ea-\u003eRev c b-\u003ea",
          "package": "EdisonCore",
          "signature": "(b-\u003ea-\u003eb)-\u003eb-\u003eRev s a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:foldl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "foldl'",
          "package": "EdisonCore",
          "signature": "(b -\u003e a -\u003e b) -\u003e b -\u003e Rev s a -\u003e b",
          "source": "src/Data-Edison-Seq-RevSeq.html#foldl%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "foldl'",
          "normalized": "(a-\u003eb-\u003ea)-\u003ea-\u003eRev c b-\u003ea",
          "package": "EdisonCore",
          "signature": "(b-\u003ea-\u003eb)-\u003eb-\u003eRev s a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:foldl-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "foldl1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Rev s a -\u003e a",
          "source": "src/Data-Edison-Seq-RevSeq.html#foldl1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "foldl1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eRev b a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eRev s a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:foldl1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "foldl1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Rev s a -\u003e a",
          "source": "src/Data-Edison-Seq-RevSeq.html#foldl1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "foldl1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eRev b a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eRev s a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:foldl1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "foldlWithIndex",
          "package": "EdisonCore",
          "signature": "(b -\u003e Int -\u003e a -\u003e b) -\u003e b -\u003e Rev s a -\u003e b",
          "source": "src/Data-Edison-Seq-RevSeq.html#foldlWithIndex",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "foldlWithIndex",
          "normalized": "(a-\u003eInt-\u003eb-\u003ea)-\u003ea-\u003eRev c b-\u003ea",
          "package": "EdisonCore",
          "partial": "With Index",
          "signature": "(b-\u003eInt-\u003ea-\u003eb)-\u003eb-\u003eRev s a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:foldlWithIndex"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "foldlWithIndex'",
          "package": "EdisonCore",
          "signature": "(b -\u003e Int -\u003e a -\u003e b) -\u003e b -\u003e Rev s a -\u003e b",
          "source": "src/Data-Edison-Seq-RevSeq.html#foldlWithIndex%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "foldlWithIndex'",
          "normalized": "(a-\u003eInt-\u003eb-\u003ea)-\u003ea-\u003eRev c b-\u003ea",
          "package": "EdisonCore",
          "partial": "With Index'",
          "signature": "(b-\u003eInt-\u003ea-\u003eb)-\u003eb-\u003eRev s a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:foldlWithIndex-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "foldr",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e Rev s a -\u003e b",
          "source": "src/Data-Edison-Seq-RevSeq.html#foldr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "foldr",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eRev c a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eRev s a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:foldr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "foldr'",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e Rev s a -\u003e b",
          "source": "src/Data-Edison-Seq-RevSeq.html#foldr%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "foldr'",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eRev c a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eRev s a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:foldr-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "foldr1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Rev s a -\u003e a",
          "source": "src/Data-Edison-Seq-RevSeq.html#foldr1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "foldr1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eRev b a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eRev s a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:foldr1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "foldr1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Rev s a -\u003e a",
          "source": "src/Data-Edison-Seq-RevSeq.html#foldr1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "foldr1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eRev b a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eRev s a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:foldr1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "foldrWithIndex",
          "package": "EdisonCore",
          "signature": "(Int -\u003e a -\u003e b -\u003e b) -\u003e b -\u003e Rev s a -\u003e b",
          "source": "src/Data-Edison-Seq-RevSeq.html#foldrWithIndex",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "foldrWithIndex",
          "normalized": "(Int-\u003ea-\u003eb-\u003eb)-\u003eb-\u003eRev c a-\u003eb",
          "package": "EdisonCore",
          "partial": "With Index",
          "signature": "(Int-\u003ea-\u003eb-\u003eb)-\u003eb-\u003eRev s a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:foldrWithIndex"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "foldrWithIndex'",
          "package": "EdisonCore",
          "signature": "(Int -\u003e a -\u003e b -\u003e b) -\u003e b -\u003e Rev s a -\u003e b",
          "source": "src/Data-Edison-Seq-RevSeq.html#foldrWithIndex%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "foldrWithIndex'",
          "normalized": "(Int-\u003ea-\u003eb-\u003eb)-\u003eb-\u003eRev c a-\u003eb",
          "package": "EdisonCore",
          "partial": "With Index'",
          "signature": "(Int-\u003ea-\u003eb-\u003eb)-\u003eb-\u003eRev s a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:foldrWithIndex-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "fromList",
          "package": "EdisonCore",
          "signature": "[a] -\u003e Rev s a",
          "source": "src/Data-Edison-Seq-RevSeq.html#fromList",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "fromList",
          "normalized": "[a]-\u003eRev b a",
          "package": "EdisonCore",
          "partial": "List",
          "signature": "[a]-\u003eRev s a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:fromList"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "fromSeq",
          "package": "EdisonCore",
          "signature": "s a -\u003e Rev s a",
          "source": "src/Data-Edison-Seq-RevSeq.html#fromSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "fromSeq",
          "normalized": "a b-\u003eRev a b",
          "package": "EdisonCore",
          "partial": "Seq",
          "signature": "s a-\u003eRev s a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:fromSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "inBounds",
          "package": "EdisonCore",
          "signature": "Int -\u003e Rev s a -\u003e Bool",
          "source": "src/Data-Edison-Seq-RevSeq.html#inBounds",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "inBounds",
          "normalized": "Int-\u003eRev a b-\u003eBool",
          "package": "EdisonCore",
          "partial": "Bounds",
          "signature": "Int-\u003eRev s a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:inBounds"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "instanceName",
          "package": "EdisonCore",
          "signature": "Rev s a -\u003e String",
          "source": "src/Data-Edison-Seq-RevSeq.html#instanceName",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "instanceName",
          "normalized": "Rev a b-\u003eString",
          "package": "EdisonCore",
          "partial": "Name",
          "signature": "Rev s a-\u003eString",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:instanceName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "lcons",
          "package": "EdisonCore",
          "signature": "a -\u003e Rev s a -\u003e Rev s a",
          "source": "src/Data-Edison-Seq-RevSeq.html#lcons",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "lcons",
          "normalized": "a-\u003eRev b a-\u003eRev b a",
          "package": "EdisonCore",
          "signature": "a-\u003eRev s a-\u003eRev s a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:lcons"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "lhead",
          "package": "EdisonCore",
          "signature": "Rev s a -\u003e a",
          "source": "src/Data-Edison-Seq-RevSeq.html#lhead",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "lhead",
          "normalized": "Rev a b-\u003eb",
          "package": "EdisonCore",
          "signature": "Rev s a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:lhead"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "lheadM",
          "package": "EdisonCore",
          "signature": "Rev s a -\u003e m a",
          "source": "src/Data-Edison-Seq-RevSeq.html#lheadM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "lheadM",
          "normalized": "Rev a b-\u003ec b",
          "package": "EdisonCore",
          "signature": "Rev s a-\u003em a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:lheadM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "lookup",
          "package": "EdisonCore",
          "signature": "Int -\u003e Rev s a -\u003e a",
          "source": "src/Data-Edison-Seq-RevSeq.html#lookup",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "lookup",
          "normalized": "Int-\u003eRev a b-\u003eb",
          "package": "EdisonCore",
          "signature": "Int-\u003eRev s a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:lookup"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "lookupM",
          "package": "EdisonCore",
          "signature": "Int -\u003e Rev s a -\u003e m a",
          "source": "src/Data-Edison-Seq-RevSeq.html#lookupM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "lookupM",
          "normalized": "Int-\u003eRev a b-\u003ec b",
          "package": "EdisonCore",
          "signature": "Int-\u003eRev s a-\u003em a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:lookupM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "lookupWithDefault",
          "package": "EdisonCore",
          "signature": "a -\u003e Int -\u003e Rev s a -\u003e a",
          "source": "src/Data-Edison-Seq-RevSeq.html#lookupWithDefault",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "lookupWithDefault",
          "normalized": "a-\u003eInt-\u003eRev b a-\u003ea",
          "package": "EdisonCore",
          "partial": "With Default",
          "signature": "a-\u003eInt-\u003eRev s a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:lookupWithDefault"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "ltail",
          "package": "EdisonCore",
          "signature": "Rev s a -\u003e Rev s a",
          "source": "src/Data-Edison-Seq-RevSeq.html#ltail",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "ltail",
          "normalized": "Rev a b-\u003eRev a b",
          "package": "EdisonCore",
          "signature": "Rev s a-\u003eRev s a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:ltail"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "ltailM",
          "package": "EdisonCore",
          "signature": "Rev s a -\u003e m (Rev s a)",
          "source": "src/Data-Edison-Seq-RevSeq.html#ltailM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "ltailM",
          "normalized": "Rev a b-\u003ec(Rev a b)",
          "package": "EdisonCore",
          "signature": "Rev s a-\u003em(Rev s a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:ltailM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "lview",
          "package": "EdisonCore",
          "signature": "Rev s a -\u003e m (a, Rev s a)",
          "source": "src/Data-Edison-Seq-RevSeq.html#lview",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "lview",
          "normalized": "Rev a b-\u003ec(b,Rev a b)",
          "package": "EdisonCore",
          "signature": "Rev s a-\u003em(a,Rev s a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:lview"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "map",
          "package": "EdisonCore",
          "signature": "(a -\u003e b) -\u003e Rev s a -\u003e Rev s b",
          "source": "src/Data-Edison-Seq-RevSeq.html#map",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "map",
          "normalized": "(a-\u003eb)-\u003eRev c a-\u003eRev c b",
          "package": "EdisonCore",
          "signature": "(a-\u003eb)-\u003eRev s a-\u003eRev s b",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:map"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "mapWithIndex",
          "package": "EdisonCore",
          "signature": "(Int -\u003e a -\u003e b) -\u003e Rev s a -\u003e Rev s b",
          "source": "src/Data-Edison-Seq-RevSeq.html#mapWithIndex",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "mapWithIndex",
          "normalized": "(Int-\u003ea-\u003eb)-\u003eRev c a-\u003eRev c b",
          "package": "EdisonCore",
          "partial": "With Index",
          "signature": "(Int-\u003ea-\u003eb)-\u003eRev s a-\u003eRev s b",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:mapWithIndex"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "moduleName",
          "package": "EdisonCore",
          "signature": "String",
          "source": "src/Data-Edison-Seq-RevSeq.html#moduleName",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "moduleName",
          "package": "EdisonCore",
          "partial": "Name",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:moduleName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "null",
          "package": "EdisonCore",
          "signature": "Rev s a -\u003e Bool",
          "source": "src/Data-Edison-Seq-RevSeq.html#null",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "null",
          "normalized": "Rev a b-\u003eBool",
          "package": "EdisonCore",
          "signature": "Rev s a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:null"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "partition",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e Rev s a -\u003e (Rev s a, Rev s a)",
          "source": "src/Data-Edison-Seq-RevSeq.html#partition",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "partition",
          "normalized": "(a-\u003eBool)-\u003eRev b a-\u003e(Rev b a,Rev b a)",
          "package": "EdisonCore",
          "signature": "(a-\u003eBool)-\u003eRev s a-\u003e(Rev s a,Rev s a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:partition"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "rcons",
          "package": "EdisonCore",
          "signature": "a -\u003e Rev s a -\u003e Rev s a",
          "source": "src/Data-Edison-Seq-RevSeq.html#rcons",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "rcons",
          "normalized": "a-\u003eRev b a-\u003eRev b a",
          "package": "EdisonCore",
          "signature": "a-\u003eRev s a-\u003eRev s a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:rcons"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "reduce1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Rev s a -\u003e a",
          "source": "src/Data-Edison-Seq-RevSeq.html#reduce1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "reduce1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eRev b a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eRev s a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:reduce1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "reduce1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Rev s a -\u003e a",
          "source": "src/Data-Edison-Seq-RevSeq.html#reduce1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "reduce1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eRev b a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eRev s a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:reduce1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "reducel",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e a -\u003e Rev s a -\u003e a",
          "source": "src/Data-Edison-Seq-RevSeq.html#reducel",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "reducel",
          "normalized": "(a-\u003ea-\u003ea)-\u003ea-\u003eRev b a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003ea-\u003eRev s a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:reducel"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "reducel'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e a -\u003e Rev s a -\u003e a",
          "source": "src/Data-Edison-Seq-RevSeq.html#reducel%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "reducel'",
          "normalized": "(a-\u003ea-\u003ea)-\u003ea-\u003eRev b a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003ea-\u003eRev s a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:reducel-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "reducer",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e a -\u003e Rev s a -\u003e a",
          "source": "src/Data-Edison-Seq-RevSeq.html#reducer",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "reducer",
          "normalized": "(a-\u003ea-\u003ea)-\u003ea-\u003eRev b a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003ea-\u003eRev s a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:reducer"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "reducer'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e a -\u003e Rev s a -\u003e a",
          "source": "src/Data-Edison-Seq-RevSeq.html#reducer%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "reducer'",
          "normalized": "(a-\u003ea-\u003ea)-\u003ea-\u003eRev b a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003ea-\u003eRev s a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:reducer-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "reverse",
          "package": "EdisonCore",
          "signature": "Rev s a -\u003e Rev s a",
          "source": "src/Data-Edison-Seq-RevSeq.html#reverse",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "reverse",
          "normalized": "Rev a b-\u003eRev a b",
          "package": "EdisonCore",
          "signature": "Rev s a-\u003eRev s a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:reverse"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "reverseOnto",
          "package": "EdisonCore",
          "signature": "Rev s a -\u003e Rev s a -\u003e Rev s a",
          "source": "src/Data-Edison-Seq-RevSeq.html#reverseOnto",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "reverseOnto",
          "normalized": "Rev a b-\u003eRev a b-\u003eRev a b",
          "package": "EdisonCore",
          "partial": "Onto",
          "signature": "Rev s a-\u003eRev s a-\u003eRev s a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:reverseOnto"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "rhead",
          "package": "EdisonCore",
          "signature": "Rev s a -\u003e a",
          "source": "src/Data-Edison-Seq-RevSeq.html#rhead",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "rhead",
          "normalized": "Rev a b-\u003eb",
          "package": "EdisonCore",
          "signature": "Rev s a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:rhead"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "rheadM",
          "package": "EdisonCore",
          "signature": "Rev s a -\u003e m a",
          "source": "src/Data-Edison-Seq-RevSeq.html#rheadM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "rheadM",
          "normalized": "Rev a b-\u003ec b",
          "package": "EdisonCore",
          "signature": "Rev s a-\u003em a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:rheadM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "rtail",
          "package": "EdisonCore",
          "signature": "Rev s a -\u003e Rev s a",
          "source": "src/Data-Edison-Seq-RevSeq.html#rtail",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "rtail",
          "normalized": "Rev a b-\u003eRev a b",
          "package": "EdisonCore",
          "signature": "Rev s a-\u003eRev s a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:rtail"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "rtailM",
          "package": "EdisonCore",
          "signature": "Rev s a -\u003e m (Rev s a)",
          "source": "src/Data-Edison-Seq-RevSeq.html#rtailM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "rtailM",
          "normalized": "Rev a b-\u003ec(Rev a b)",
          "package": "EdisonCore",
          "signature": "Rev s a-\u003em(Rev s a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:rtailM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "rview",
          "package": "EdisonCore",
          "signature": "Rev s a -\u003e m (a, Rev s a)",
          "source": "src/Data-Edison-Seq-RevSeq.html#rview",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "rview",
          "normalized": "Rev a b-\u003ec(b,Rev a b)",
          "package": "EdisonCore",
          "signature": "Rev s a-\u003em(a,Rev s a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:rview"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "singleton",
          "package": "EdisonCore",
          "signature": "a -\u003e Rev s a",
          "source": "src/Data-Edison-Seq-RevSeq.html#singleton",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "singleton",
          "normalized": "a-\u003eRev b a",
          "package": "EdisonCore",
          "signature": "a-\u003eRev s a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:singleton"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "size",
          "package": "EdisonCore",
          "signature": "Rev s a -\u003e Int",
          "source": "src/Data-Edison-Seq-RevSeq.html#size",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "size",
          "normalized": "Rev a b-\u003eInt",
          "package": "EdisonCore",
          "signature": "Rev s a-\u003eInt",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:size"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "splitAt",
          "package": "EdisonCore",
          "signature": "Int -\u003e Rev s a -\u003e (Rev s a, Rev s a)",
          "source": "src/Data-Edison-Seq-RevSeq.html#splitAt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "splitAt",
          "normalized": "Int-\u003eRev a b-\u003e(Rev a b,Rev a b)",
          "package": "EdisonCore",
          "partial": "At",
          "signature": "Int-\u003eRev s a-\u003e(Rev s a,Rev s a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:splitAt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "splitWhile",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e Rev s a -\u003e (Rev s a, Rev s a)",
          "source": "src/Data-Edison-Seq-RevSeq.html#splitWhile",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "splitWhile",
          "normalized": "(a-\u003eBool)-\u003eRev b a-\u003e(Rev b a,Rev b a)",
          "package": "EdisonCore",
          "partial": "While",
          "signature": "(a-\u003eBool)-\u003eRev s a-\u003e(Rev s a,Rev s a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:splitWhile"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "strict",
          "package": "EdisonCore",
          "signature": "Rev s a -\u003e Rev s a",
          "source": "src/Data-Edison-Seq-RevSeq.html#strict",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "strict",
          "normalized": "Rev a b-\u003eRev a b",
          "package": "EdisonCore",
          "signature": "Rev s a-\u003eRev s a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:strict"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "strictWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e b) -\u003e Rev s a -\u003e Rev s a",
          "source": "src/Data-Edison-Seq-RevSeq.html#strictWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "strictWith",
          "normalized": "(a-\u003eb)-\u003eRev c a-\u003eRev c a",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003eb)-\u003eRev s a-\u003eRev s a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:strictWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "structuralInvariant",
          "package": "EdisonCore",
          "signature": "Rev s a -\u003e Bool",
          "source": "src/Data-Edison-Seq-RevSeq.html#structuralInvariant",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "structuralInvariant",
          "normalized": "Rev a b-\u003eBool",
          "package": "EdisonCore",
          "partial": "Invariant",
          "signature": "Rev s a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:structuralInvariant"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "subseq",
          "package": "EdisonCore",
          "signature": "Int -\u003e Int -\u003e Rev s a -\u003e Rev s a",
          "source": "src/Data-Edison-Seq-RevSeq.html#subseq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "subseq",
          "normalized": "Int-\u003eInt-\u003eRev a b-\u003eRev a b",
          "package": "EdisonCore",
          "signature": "Int-\u003eInt-\u003eRev s a-\u003eRev s a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:subseq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "take",
          "package": "EdisonCore",
          "signature": "Int -\u003e Rev s a -\u003e Rev s a",
          "source": "src/Data-Edison-Seq-RevSeq.html#take",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "take",
          "normalized": "Int-\u003eRev a b-\u003eRev a b",
          "package": "EdisonCore",
          "signature": "Int-\u003eRev s a-\u003eRev s a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:take"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "takeWhile",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e Rev s a -\u003e Rev s a",
          "source": "src/Data-Edison-Seq-RevSeq.html#takeWhile",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "takeWhile",
          "normalized": "(a-\u003eBool)-\u003eRev b a-\u003eRev b a",
          "package": "EdisonCore",
          "partial": "While",
          "signature": "(a-\u003eBool)-\u003eRev s a-\u003eRev s a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:takeWhile"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "toList",
          "package": "EdisonCore",
          "signature": "Rev s a -\u003e [a]",
          "source": "src/Data-Edison-Seq-RevSeq.html#toList",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "toList",
          "normalized": "Rev a b-\u003e[b]",
          "package": "EdisonCore",
          "partial": "List",
          "signature": "Rev s a-\u003e[a]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:toList"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "toSeq",
          "package": "EdisonCore",
          "signature": "Rev s a -\u003e s a",
          "source": "src/Data-Edison-Seq-RevSeq.html#toSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "toSeq",
          "normalized": "Rev a b-\u003ea b",
          "package": "EdisonCore",
          "partial": "Seq",
          "signature": "Rev s a-\u003es a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:toSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "unzip",
          "package": "EdisonCore",
          "signature": "Rev s (a, b) -\u003e (Rev s a, Rev s b)",
          "source": "src/Data-Edison-Seq-RevSeq.html#unzip",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "unzip",
          "normalized": "Rev a(b,c)-\u003e(Rev a b,Rev a c)",
          "package": "EdisonCore",
          "signature": "Rev s(a,b)-\u003e(Rev s a,Rev s b)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:unzip"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "unzip3",
          "package": "EdisonCore",
          "signature": "Rev s (a, b, c) -\u003e (Rev s a, Rev s b, Rev s c)",
          "source": "src/Data-Edison-Seq-RevSeq.html#unzip3",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "unzip3",
          "normalized": "Rev a(b,c,d)-\u003e(Rev a b,Rev a c,Rev a d)",
          "package": "EdisonCore",
          "signature": "Rev s(a,b,c)-\u003e(Rev s a,Rev s b,Rev s c)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:unzip3"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "unzipWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e b) -\u003e (a -\u003e c) -\u003e Rev s a -\u003e (Rev s b, Rev s c)",
          "source": "src/Data-Edison-Seq-RevSeq.html#unzipWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "unzipWith",
          "normalized": "(a-\u003eb)-\u003e(a-\u003ec)-\u003eRev d a-\u003e(Rev d b,Rev d c)",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003eb)-\u003e(a-\u003ec)-\u003eRev s a-\u003e(Rev s b,Rev s c)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:unzipWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "unzipWith3",
          "package": "EdisonCore",
          "signature": "(a -\u003e b) -\u003e (a -\u003e c) -\u003e (a -\u003e d) -\u003e Rev s a -\u003e (Rev s b, Rev s c, Rev s d)",
          "source": "src/Data-Edison-Seq-RevSeq.html#unzipWith3",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "unzipWith3",
          "normalized": "(a-\u003eb)-\u003e(a-\u003ec)-\u003e(a-\u003ed)-\u003eRev e a-\u003e(Rev e b,Rev e c,Rev e d)",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003eb)-\u003e(a-\u003ec)-\u003e(a-\u003ed)-\u003eRev s a-\u003e(Rev s b,Rev s c,Rev s d)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:unzipWith3"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "update",
          "package": "EdisonCore",
          "signature": "Int -\u003e a -\u003e Rev s a -\u003e Rev s a",
          "source": "src/Data-Edison-Seq-RevSeq.html#update",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "update",
          "normalized": "Int-\u003ea-\u003eRev b a-\u003eRev b a",
          "package": "EdisonCore",
          "signature": "Int-\u003ea-\u003eRev s a-\u003eRev s a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:update"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "zip",
          "package": "EdisonCore",
          "signature": "Rev s a -\u003e Rev s b -\u003e Rev s (a, b)",
          "source": "src/Data-Edison-Seq-RevSeq.html#zip",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "zip",
          "normalized": "Rev a b-\u003eRev a c-\u003eRev a(b,c)",
          "package": "EdisonCore",
          "signature": "Rev s a-\u003eRev s b-\u003eRev s(a,b)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:zip"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "zip3",
          "package": "EdisonCore",
          "signature": "Rev s a -\u003e Rev s b -\u003e Rev s c -\u003e Rev s (a, b, c)",
          "source": "src/Data-Edison-Seq-RevSeq.html#zip3",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "zip3",
          "normalized": "Rev a b-\u003eRev a c-\u003eRev a d-\u003eRev a(b,c,d)",
          "package": "EdisonCore",
          "signature": "Rev s a-\u003eRev s b-\u003eRev s c-\u003eRev s(a,b,c)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:zip3"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "zipWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e c) -\u003e Rev s a -\u003e Rev s b -\u003e Rev s c",
          "source": "src/Data-Edison-Seq-RevSeq.html#zipWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "zipWith",
          "normalized": "(a-\u003eb-\u003ec)-\u003eRev d a-\u003eRev d b-\u003eRev d c",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003eb-\u003ec)-\u003eRev s a-\u003eRev s b-\u003eRev s c",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:zipWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.RevSeq",
          "name": "zipWith3",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e c -\u003e d) -\u003e Rev s a -\u003e Rev s b -\u003e Rev s c -\u003e Rev s d",
          "source": "src/Data-Edison-Seq-RevSeq.html#zipWith3",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq RevSeq",
          "module": "Data.Edison.Seq.RevSeq",
          "name": "zipWith3",
          "normalized": "(a-\u003eb-\u003ec-\u003ed)-\u003eRev e a-\u003eRev e b-\u003eRev e c-\u003eRev e d",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003eb-\u003ec-\u003ed)-\u003eRev s a-\u003eRev s b-\u003eRev s c-\u003eRev s d",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-RevSeq.html#v:zipWith3"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eSimple Queues.  All operations have running times as listed in\n   \u003ca\u003eData.Edison.Seq\u003c/a\u003e except for the following:\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e rcons, fromList   \u003ccode\u003eO( 1 )\u003c/code\u003e\n\u003c/li\u003e\u003cli\u003e lview, ltail*   \u003ccode\u003eO( 1 )\u003c/code\u003e if single threaded, \u003ccode\u003eO( n )\u003c/code\u003e otherwise\n\u003c/li\u003e\u003cli\u003e inBounds, lookup, update, drop, splitAt  \u003ccode\u003eO( n )\u003c/code\u003e\n\u003c/li\u003e\u003c/ul\u003e\u003cp\u003e\u003cem\u003eReferences:\u003c/em\u003e\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e Chris Okasaki. \u003cem\u003ePurely Functional Data Structures\u003c/em\u003e. 1998.\n     Section 5.2.\n\u003c/li\u003e\u003cli\u003e F. Warren Burton. \"An efficient functional implementation of FIFO queues\".\n     \u003cem\u003eInformation Processing Letters\u003c/em\u003e, 14(5):205-206, July 1982.\n\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "SimpleQueue",
          "package": "EdisonCore",
          "source": "src/Data-Edison-Seq-SimpleQueue.html",
          "type": "module"
        },
        "index": {
          "description": "Simple Queues All operations have running times as listed in Data.Edison.Seq except for the following rcons fromList lview ltail if single threaded otherwise inBounds lookup update drop splitAt References Chris Okasaki Purely Functional Data Structures Section Warren Burton An efficient functional implementation of FIFO queues Information Processing Letters July",
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "SimpleQueue",
          "package": "EdisonCore",
          "partial": "Simple Queue",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "Seq",
          "package": "EdisonCore",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#Seq",
          "type": "data"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "Seq",
          "package": "EdisonCore",
          "partial": "Seq",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#t:Seq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "adjust",
          "package": "EdisonCore",
          "signature": "(a -\u003e a) -\u003e Int -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#adjust",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "adjust",
          "normalized": "(a-\u003ea)-\u003eInt-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "(a-\u003ea)-\u003eInt-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:adjust"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "append",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#append",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "append",
          "normalized": "Seq a-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Seq a-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:append"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "concat",
          "package": "EdisonCore",
          "signature": "Seq (Seq a) -\u003e Seq a",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#concat",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "concat",
          "normalized": "Seq(Seq a)-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Seq(Seq a)-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:concat"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "concatMap",
          "package": "EdisonCore",
          "signature": "(a -\u003e Seq b) -\u003e Seq a -\u003e Seq b",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#concatMap",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "concatMap",
          "normalized": "(a-\u003eSeq b)-\u003eSeq a-\u003eSeq b",
          "package": "EdisonCore",
          "partial": "Map",
          "signature": "(a-\u003eSeq b)-\u003eSeq a-\u003eSeq b",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:concatMap"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "copy",
          "package": "EdisonCore",
          "signature": "Int -\u003e a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#copy",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "copy",
          "normalized": "Int-\u003ea-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Int-\u003ea-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:copy"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "drop",
          "package": "EdisonCore",
          "signature": "Int -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#drop",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "drop",
          "normalized": "Int-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Int-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:drop"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "dropWhile",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#dropWhile",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "dropWhile",
          "normalized": "(a-\u003eBool)-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "partial": "While",
          "signature": "(a-\u003eBool)-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:dropWhile"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "empty",
          "package": "EdisonCore",
          "signature": "Seq a",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#empty",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "empty",
          "package": "EdisonCore",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:empty"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "filter",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#filter",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "filter",
          "normalized": "(a-\u003eBool)-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "(a-\u003eBool)-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:filter"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "fold",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#fold",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "fold",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:fold"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "fold'",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#fold%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "fold'",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:fold-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "fold1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#fold1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "fold1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:fold1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "fold1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#fold1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "fold1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:fold1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "foldl",
          "package": "EdisonCore",
          "signature": "(b -\u003e a -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#foldl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "foldl",
          "normalized": "(a-\u003eb-\u003ea)-\u003ea-\u003eSeq b-\u003ea",
          "package": "EdisonCore",
          "signature": "(b-\u003ea-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:foldl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "foldl'",
          "package": "EdisonCore",
          "signature": "(b -\u003e a -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#foldl%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "foldl'",
          "normalized": "(a-\u003eb-\u003ea)-\u003ea-\u003eSeq b-\u003ea",
          "package": "EdisonCore",
          "signature": "(b-\u003ea-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:foldl-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "foldl1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#foldl1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "foldl1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:foldl1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "foldl1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#foldl1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "foldl1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:foldl1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "foldlWithIndex",
          "package": "EdisonCore",
          "signature": "(b -\u003e Int -\u003e a -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#foldlWithIndex",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "foldlWithIndex",
          "normalized": "(a-\u003eInt-\u003eb-\u003ea)-\u003ea-\u003eSeq b-\u003ea",
          "package": "EdisonCore",
          "partial": "With Index",
          "signature": "(b-\u003eInt-\u003ea-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:foldlWithIndex"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "foldlWithIndex'",
          "package": "EdisonCore",
          "signature": "(b -\u003e Int -\u003e a -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#foldlWithIndex%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "foldlWithIndex'",
          "normalized": "(a-\u003eInt-\u003eb-\u003ea)-\u003ea-\u003eSeq b-\u003ea",
          "package": "EdisonCore",
          "partial": "With Index'",
          "signature": "(b-\u003eInt-\u003ea-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:foldlWithIndex-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "foldr",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#foldr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "foldr",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:foldr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "foldr'",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#foldr%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "foldr'",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:foldr-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "foldr1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#foldr1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "foldr1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:foldr1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "foldr1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#foldr1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "foldr1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:foldr1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "foldrWithIndex",
          "package": "EdisonCore",
          "signature": "(Int -\u003e a -\u003e b -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#foldrWithIndex",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "foldrWithIndex",
          "normalized": "(Int-\u003ea-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "package": "EdisonCore",
          "partial": "With Index",
          "signature": "(Int-\u003ea-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:foldrWithIndex"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "foldrWithIndex'",
          "package": "EdisonCore",
          "signature": "(Int -\u003e a -\u003e b -\u003e b) -\u003e b -\u003e Seq a -\u003e b",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#foldrWithIndex%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "foldrWithIndex'",
          "normalized": "(Int-\u003ea-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "package": "EdisonCore",
          "partial": "With Index'",
          "signature": "(Int-\u003ea-\u003eb-\u003eb)-\u003eb-\u003eSeq a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:foldrWithIndex-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "fromList",
          "package": "EdisonCore",
          "signature": "[a] -\u003e Seq a",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#fromList",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "fromList",
          "normalized": "[a]-\u003eSeq a",
          "package": "EdisonCore",
          "partial": "List",
          "signature": "[a]-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:fromList"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "inBounds",
          "package": "EdisonCore",
          "signature": "Int -\u003e Seq a -\u003e Bool",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#inBounds",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "inBounds",
          "normalized": "Int-\u003eSeq a-\u003eBool",
          "package": "EdisonCore",
          "partial": "Bounds",
          "signature": "Int-\u003eSeq a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:inBounds"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "lcons",
          "package": "EdisonCore",
          "signature": "a -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#lcons",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "lcons",
          "normalized": "a-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "a-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:lcons"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "lhead",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#lhead",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "lhead",
          "normalized": "Seq a-\u003ea",
          "package": "EdisonCore",
          "signature": "Seq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:lhead"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "lheadM",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e m a",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#lheadM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "lheadM",
          "normalized": "Seq a-\u003eb a",
          "package": "EdisonCore",
          "signature": "Seq a-\u003em a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:lheadM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "lookup",
          "package": "EdisonCore",
          "signature": "Int -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#lookup",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "lookup",
          "normalized": "Int-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "Int-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:lookup"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "lookupM",
          "package": "EdisonCore",
          "signature": "Int -\u003e Seq a -\u003e m a",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#lookupM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "lookupM",
          "normalized": "Int-\u003eSeq a-\u003eb a",
          "package": "EdisonCore",
          "signature": "Int-\u003eSeq a-\u003em a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:lookupM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "lookupWithDefault",
          "package": "EdisonCore",
          "signature": "a -\u003e Int -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#lookupWithDefault",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "lookupWithDefault",
          "normalized": "a-\u003eInt-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "partial": "With Default",
          "signature": "a-\u003eInt-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:lookupWithDefault"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "ltail",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#ltail",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "ltail",
          "normalized": "Seq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Seq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:ltail"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "ltailM",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e m (Seq a)",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#ltailM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "ltailM",
          "normalized": "Seq a-\u003eb(Seq a)",
          "package": "EdisonCore",
          "signature": "Seq a-\u003em(Seq a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:ltailM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "lview",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e m (a, Seq a)",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#lview",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "lview",
          "normalized": "Seq a-\u003eb(a,Seq a)",
          "package": "EdisonCore",
          "signature": "Seq a-\u003em(a,Seq a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:lview"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "map",
          "package": "EdisonCore",
          "signature": "(a -\u003e b) -\u003e Seq a -\u003e Seq b",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#map",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "map",
          "normalized": "(a-\u003eb)-\u003eSeq a-\u003eSeq b",
          "package": "EdisonCore",
          "signature": "(a-\u003eb)-\u003eSeq a-\u003eSeq b",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:map"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "mapWithIndex",
          "package": "EdisonCore",
          "signature": "(Int -\u003e a -\u003e b) -\u003e Seq a -\u003e Seq b",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#mapWithIndex",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "mapWithIndex",
          "normalized": "(Int-\u003ea-\u003eb)-\u003eSeq a-\u003eSeq b",
          "package": "EdisonCore",
          "partial": "With Index",
          "signature": "(Int-\u003ea-\u003eb)-\u003eSeq a-\u003eSeq b",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:mapWithIndex"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "moduleName",
          "package": "EdisonCore",
          "signature": "String",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#moduleName",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "moduleName",
          "package": "EdisonCore",
          "partial": "Name",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:moduleName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "null",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Bool",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#null",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "null",
          "normalized": "Seq a-\u003eBool",
          "package": "EdisonCore",
          "signature": "Seq a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:null"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "partition",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e Seq a -\u003e (Seq a, Seq a)",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#partition",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "partition",
          "normalized": "(a-\u003eBool)-\u003eSeq a-\u003e(Seq a,Seq a)",
          "package": "EdisonCore",
          "signature": "(a-\u003eBool)-\u003eSeq a-\u003e(Seq a,Seq a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:partition"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "rcons",
          "package": "EdisonCore",
          "signature": "a -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#rcons",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "rcons",
          "normalized": "a-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "a-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:rcons"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "reduce1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#reduce1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "reduce1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:reduce1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "reduce1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#reduce1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "reduce1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:reduce1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "reducel",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e a -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#reducel",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "reducel",
          "normalized": "(a-\u003ea-\u003ea)-\u003ea-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003ea-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:reducel"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "reducel'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e a -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#reducel%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "reducel'",
          "normalized": "(a-\u003ea-\u003ea)-\u003ea-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003ea-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:reducel-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "reducer",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e a -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#reducer",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "reducer",
          "normalized": "(a-\u003ea-\u003ea)-\u003ea-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003ea-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:reducer"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "reducer'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e a -\u003e Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#reducer%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "reducer'",
          "normalized": "(a-\u003ea-\u003ea)-\u003ea-\u003eSeq a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003ea-\u003eSeq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:reducer-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "reverse",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#reverse",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "reverse",
          "normalized": "Seq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Seq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:reverse"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "reverseOnto",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#reverseOnto",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "reverseOnto",
          "normalized": "Seq a-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "partial": "Onto",
          "signature": "Seq a-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:reverseOnto"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "rhead",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e a",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#rhead",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "rhead",
          "normalized": "Seq a-\u003ea",
          "package": "EdisonCore",
          "signature": "Seq a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:rhead"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "rheadM",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e m a",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#rheadM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "rheadM",
          "normalized": "Seq a-\u003eb a",
          "package": "EdisonCore",
          "signature": "Seq a-\u003em a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:rheadM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "rtail",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#rtail",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "rtail",
          "normalized": "Seq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Seq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:rtail"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "rtailM",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e m (Seq a)",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#rtailM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "rtailM",
          "normalized": "Seq a-\u003eb(Seq a)",
          "package": "EdisonCore",
          "signature": "Seq a-\u003em(Seq a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:rtailM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "rview",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e m (a, Seq a)",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#rview",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "rview",
          "normalized": "Seq a-\u003eb(a,Seq a)",
          "package": "EdisonCore",
          "signature": "Seq a-\u003em(a,Seq a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:rview"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "singleton",
          "package": "EdisonCore",
          "signature": "a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#singleton",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "singleton",
          "normalized": "a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:singleton"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "size",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Int",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#size",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "size",
          "normalized": "Seq a-\u003eInt",
          "package": "EdisonCore",
          "signature": "Seq a-\u003eInt",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:size"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "splitAt",
          "package": "EdisonCore",
          "signature": "Int -\u003e Seq a -\u003e (Seq a, Seq a)",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#splitAt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "splitAt",
          "normalized": "Int-\u003eSeq a-\u003e(Seq a,Seq a)",
          "package": "EdisonCore",
          "partial": "At",
          "signature": "Int-\u003eSeq a-\u003e(Seq a,Seq a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:splitAt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "splitWhile",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e Seq a -\u003e (Seq a, Seq a)",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#splitWhile",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "splitWhile",
          "normalized": "(a-\u003eBool)-\u003eSeq a-\u003e(Seq a,Seq a)",
          "package": "EdisonCore",
          "partial": "While",
          "signature": "(a-\u003eBool)-\u003eSeq a-\u003e(Seq a,Seq a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:splitWhile"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "strict",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#strict",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "strict",
          "normalized": "Seq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Seq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:strict"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "strictWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e b) -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#strictWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "strictWith",
          "normalized": "(a-\u003eb)-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003eb)-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:strictWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "structuralInvariant",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Bool",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#structuralInvariant",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "structuralInvariant",
          "normalized": "Seq a-\u003eBool",
          "package": "EdisonCore",
          "partial": "Invariant",
          "signature": "Seq a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:structuralInvariant"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "subseq",
          "package": "EdisonCore",
          "signature": "Int -\u003e Int -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#subseq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "subseq",
          "normalized": "Int-\u003eInt-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Int-\u003eInt-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:subseq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "take",
          "package": "EdisonCore",
          "signature": "Int -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#take",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "take",
          "normalized": "Int-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Int-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:take"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "takeWhile",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#takeWhile",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "takeWhile",
          "normalized": "(a-\u003eBool)-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "partial": "While",
          "signature": "(a-\u003eBool)-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:takeWhile"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "toList",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e [a]",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#toList",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "toList",
          "normalized": "Seq a-\u003e[a]",
          "package": "EdisonCore",
          "partial": "List",
          "signature": "Seq a-\u003e[a]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:toList"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "unzip",
          "package": "EdisonCore",
          "signature": "Seq (a, b) -\u003e (Seq a, Seq b)",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#unzip",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "unzip",
          "normalized": "Seq(a,b)-\u003e(Seq a,Seq b)",
          "package": "EdisonCore",
          "signature": "Seq(a,b)-\u003e(Seq a,Seq b)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:unzip"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "unzip3",
          "package": "EdisonCore",
          "signature": "Seq (a, b, c) -\u003e (Seq a, Seq b, Seq c)",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#unzip3",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "unzip3",
          "normalized": "Seq(a,b,c)-\u003e(Seq a,Seq b,Seq c)",
          "package": "EdisonCore",
          "signature": "Seq(a,b,c)-\u003e(Seq a,Seq b,Seq c)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:unzip3"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "unzipWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e b) -\u003e (a -\u003e c) -\u003e Seq a -\u003e (Seq b, Seq c)",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#unzipWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "unzipWith",
          "normalized": "(a-\u003eb)-\u003e(a-\u003ec)-\u003eSeq a-\u003e(Seq b,Seq c)",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003eb)-\u003e(a-\u003ec)-\u003eSeq a-\u003e(Seq b,Seq c)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:unzipWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "unzipWith3",
          "package": "EdisonCore",
          "signature": "(a -\u003e b) -\u003e (a -\u003e c) -\u003e (a -\u003e d) -\u003e Seq a -\u003e (Seq b, Seq c, Seq d)",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#unzipWith3",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "unzipWith3",
          "normalized": "(a-\u003eb)-\u003e(a-\u003ec)-\u003e(a-\u003ed)-\u003eSeq a-\u003e(Seq b,Seq c,Seq d)",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003eb)-\u003e(a-\u003ec)-\u003e(a-\u003ed)-\u003eSeq a-\u003e(Seq b,Seq c,Seq d)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:unzipWith3"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "update",
          "package": "EdisonCore",
          "signature": "Int -\u003e a -\u003e Seq a -\u003e Seq a",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#update",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "update",
          "normalized": "Int-\u003ea-\u003eSeq a-\u003eSeq a",
          "package": "EdisonCore",
          "signature": "Int-\u003ea-\u003eSeq a-\u003eSeq a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:update"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "zip",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Seq b -\u003e Seq (a, b)",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#zip",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "zip",
          "normalized": "Seq a-\u003eSeq b-\u003eSeq(a,b)",
          "package": "EdisonCore",
          "signature": "Seq a-\u003eSeq b-\u003eSeq(a,b)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:zip"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "zip3",
          "package": "EdisonCore",
          "signature": "Seq a -\u003e Seq b -\u003e Seq c -\u003e Seq (a, b, c)",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#zip3",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "zip3",
          "normalized": "Seq a-\u003eSeq b-\u003eSeq c-\u003eSeq(a,b,c)",
          "package": "EdisonCore",
          "signature": "Seq a-\u003eSeq b-\u003eSeq c-\u003eSeq(a,b,c)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:zip3"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "zipWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e c) -\u003e Seq a -\u003e Seq b -\u003e Seq c",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#zipWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "zipWith",
          "normalized": "(a-\u003eb-\u003ec)-\u003eSeq a-\u003eSeq b-\u003eSeq c",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003eb-\u003ec)-\u003eSeq a-\u003eSeq b-\u003eSeq c",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:zipWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "zipWith3",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e c -\u003e d) -\u003e Seq a -\u003e Seq b -\u003e Seq c -\u003e Seq d",
          "source": "src/Data-Edison-Seq-SimpleQueue.html#zipWith3",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SimpleQueue",
          "module": "Data.Edison.Seq.SimpleQueue",
          "name": "zipWith3",
          "normalized": "(a-\u003eb-\u003ec-\u003ed)-\u003eSeq a-\u003eSeq b-\u003eSeq c-\u003eSeq d",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003eb-\u003ec-\u003ed)-\u003eSeq a-\u003eSeq b-\u003eSeq c-\u003eSeq d",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SimpleQueue.html#v:zipWith3"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThis module defines a sequence adaptor \u003ccode\u003eSized s\u003c/code\u003e.\n   If \u003ccode\u003es\u003c/code\u003e is a sequence type constructor, then \u003ccode\u003eSized s\u003c/code\u003e\n   is a sequence type constructor that is identical to \u003ccode\u003es\u003c/code\u003e,\n   except that it also keeps track of the current size of\n   each sequence.\n\u003c/p\u003e\u003cp\u003eAll time complexities are determined by the underlying\n   sequence, except that size becomes \u003ccode\u003eO( 1 )\u003c/code\u003e.\n\u003c/p\u003e\u003c/div\u003e",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "SizedSeq",
          "package": "EdisonCore",
          "source": "src/Data-Edison-Seq-SizedSeq.html",
          "type": "module"
        },
        "index": {
          "description": "This module defines sequence adaptor Sized If is sequence type constructor then Sized is sequence type constructor that is identical to except that it also keeps track of the current size of each sequence All time complexities are determined by the underlying sequence except that size becomes",
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "SizedSeq",
          "package": "EdisonCore",
          "partial": "Sized Seq",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "Sized",
          "package": "EdisonCore",
          "source": "src/Data-Edison-Seq-SizedSeq.html#Sized",
          "type": "data"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "Sized",
          "package": "EdisonCore",
          "partial": "Sized",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#t:Sized"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "adjust",
          "package": "EdisonCore",
          "signature": "(a -\u003e a) -\u003e Int -\u003e Sized s a -\u003e Sized s a",
          "source": "src/Data-Edison-Seq-SizedSeq.html#adjust",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "adjust",
          "normalized": "(a-\u003ea)-\u003eInt-\u003eSized b a-\u003eSized b a",
          "package": "EdisonCore",
          "signature": "(a-\u003ea)-\u003eInt-\u003eSized s a-\u003eSized s a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:adjust"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "append",
          "package": "EdisonCore",
          "signature": "Sized s a -\u003e Sized s a -\u003e Sized s a",
          "source": "src/Data-Edison-Seq-SizedSeq.html#append",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "append",
          "normalized": "Sized a b-\u003eSized a b-\u003eSized a b",
          "package": "EdisonCore",
          "signature": "Sized s a-\u003eSized s a-\u003eSized s a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:append"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "concat",
          "package": "EdisonCore",
          "signature": "Sized s (Sized s a) -\u003e Sized s a",
          "source": "src/Data-Edison-Seq-SizedSeq.html#concat",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "concat",
          "normalized": "Sized a(Sized a b)-\u003eSized a b",
          "package": "EdisonCore",
          "signature": "Sized s(Sized s a)-\u003eSized s a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:concat"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "concatMap",
          "package": "EdisonCore",
          "signature": "(a -\u003e Sized s b) -\u003e Sized s a -\u003e Sized s b",
          "source": "src/Data-Edison-Seq-SizedSeq.html#concatMap",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "concatMap",
          "normalized": "(a-\u003eSized b c)-\u003eSized b a-\u003eSized b c",
          "package": "EdisonCore",
          "partial": "Map",
          "signature": "(a-\u003eSized s b)-\u003eSized s a-\u003eSized s b",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:concatMap"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "copy",
          "package": "EdisonCore",
          "signature": "Int -\u003e a -\u003e Sized s a",
          "source": "src/Data-Edison-Seq-SizedSeq.html#copy",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "copy",
          "normalized": "Int-\u003ea-\u003eSized b a",
          "package": "EdisonCore",
          "signature": "Int-\u003ea-\u003eSized s a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:copy"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "drop",
          "package": "EdisonCore",
          "signature": "Int -\u003e Sized s a -\u003e Sized s a",
          "source": "src/Data-Edison-Seq-SizedSeq.html#drop",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "drop",
          "normalized": "Int-\u003eSized a b-\u003eSized a b",
          "package": "EdisonCore",
          "signature": "Int-\u003eSized s a-\u003eSized s a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:drop"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "dropWhile",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e Sized s a -\u003e Sized s a",
          "source": "src/Data-Edison-Seq-SizedSeq.html#dropWhile",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "dropWhile",
          "normalized": "(a-\u003eBool)-\u003eSized b a-\u003eSized b a",
          "package": "EdisonCore",
          "partial": "While",
          "signature": "(a-\u003eBool)-\u003eSized s a-\u003eSized s a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:dropWhile"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "empty",
          "package": "EdisonCore",
          "signature": "Sized s a",
          "source": "src/Data-Edison-Seq-SizedSeq.html#empty",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "empty",
          "package": "EdisonCore",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:empty"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "filter",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e Sized s a -\u003e Sized s a",
          "source": "src/Data-Edison-Seq-SizedSeq.html#filter",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "filter",
          "normalized": "(a-\u003eBool)-\u003eSized b a-\u003eSized b a",
          "package": "EdisonCore",
          "signature": "(a-\u003eBool)-\u003eSized s a-\u003eSized s a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:filter"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "fold",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e Sized s a -\u003e b",
          "source": "src/Data-Edison-Seq-SizedSeq.html#fold",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "fold",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eSized c a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eSized s a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:fold"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "fold'",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e Sized s a -\u003e b",
          "source": "src/Data-Edison-Seq-SizedSeq.html#fold%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "fold'",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eSized c a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eSized s a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:fold-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "fold1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Sized s a -\u003e a",
          "source": "src/Data-Edison-Seq-SizedSeq.html#fold1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "fold1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSized b a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSized s a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:fold1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "fold1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Sized s a -\u003e a",
          "source": "src/Data-Edison-Seq-SizedSeq.html#fold1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "fold1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSized b a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSized s a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:fold1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "foldl",
          "package": "EdisonCore",
          "signature": "(b -\u003e a -\u003e b) -\u003e b -\u003e Sized s a -\u003e b",
          "source": "src/Data-Edison-Seq-SizedSeq.html#foldl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "foldl",
          "normalized": "(a-\u003eb-\u003ea)-\u003ea-\u003eSized c b-\u003ea",
          "package": "EdisonCore",
          "signature": "(b-\u003ea-\u003eb)-\u003eb-\u003eSized s a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:foldl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "foldl'",
          "package": "EdisonCore",
          "signature": "(b -\u003e a -\u003e b) -\u003e b -\u003e Sized s a -\u003e b",
          "source": "src/Data-Edison-Seq-SizedSeq.html#foldl%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "foldl'",
          "normalized": "(a-\u003eb-\u003ea)-\u003ea-\u003eSized c b-\u003ea",
          "package": "EdisonCore",
          "signature": "(b-\u003ea-\u003eb)-\u003eb-\u003eSized s a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:foldl-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "foldl1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Sized s a -\u003e a",
          "source": "src/Data-Edison-Seq-SizedSeq.html#foldl1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "foldl1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSized b a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSized s a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:foldl1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "foldl1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Sized s a -\u003e a",
          "source": "src/Data-Edison-Seq-SizedSeq.html#foldl1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "foldl1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSized b a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSized s a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:foldl1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "foldlWithIndex",
          "package": "EdisonCore",
          "signature": "(b -\u003e Int -\u003e a -\u003e b) -\u003e b -\u003e Sized s a -\u003e b",
          "source": "src/Data-Edison-Seq-SizedSeq.html#foldlWithIndex",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "foldlWithIndex",
          "normalized": "(a-\u003eInt-\u003eb-\u003ea)-\u003ea-\u003eSized c b-\u003ea",
          "package": "EdisonCore",
          "partial": "With Index",
          "signature": "(b-\u003eInt-\u003ea-\u003eb)-\u003eb-\u003eSized s a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:foldlWithIndex"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "foldlWithIndex'",
          "package": "EdisonCore",
          "signature": "(b -\u003e Int -\u003e a -\u003e b) -\u003e b -\u003e Sized s a -\u003e b",
          "source": "src/Data-Edison-Seq-SizedSeq.html#foldlWithIndex%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "foldlWithIndex'",
          "normalized": "(a-\u003eInt-\u003eb-\u003ea)-\u003ea-\u003eSized c b-\u003ea",
          "package": "EdisonCore",
          "partial": "With Index'",
          "signature": "(b-\u003eInt-\u003ea-\u003eb)-\u003eb-\u003eSized s a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:foldlWithIndex-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "foldr",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e Sized s a -\u003e b",
          "source": "src/Data-Edison-Seq-SizedSeq.html#foldr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "foldr",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eSized c a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eSized s a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:foldr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "foldr'",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e b) -\u003e b -\u003e Sized s a -\u003e b",
          "source": "src/Data-Edison-Seq-SizedSeq.html#foldr%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "foldr'",
          "normalized": "(a-\u003eb-\u003eb)-\u003eb-\u003eSized c a-\u003eb",
          "package": "EdisonCore",
          "signature": "(a-\u003eb-\u003eb)-\u003eb-\u003eSized s a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:foldr-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "foldr1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Sized s a -\u003e a",
          "source": "src/Data-Edison-Seq-SizedSeq.html#foldr1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "foldr1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSized b a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSized s a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:foldr1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "foldr1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Sized s a -\u003e a",
          "source": "src/Data-Edison-Seq-SizedSeq.html#foldr1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "foldr1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSized b a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSized s a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:foldr1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "foldrWithIndex",
          "package": "EdisonCore",
          "signature": "(Int -\u003e a -\u003e b -\u003e b) -\u003e b -\u003e Sized s a -\u003e b",
          "source": "src/Data-Edison-Seq-SizedSeq.html#foldrWithIndex",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "foldrWithIndex",
          "normalized": "(Int-\u003ea-\u003eb-\u003eb)-\u003eb-\u003eSized c a-\u003eb",
          "package": "EdisonCore",
          "partial": "With Index",
          "signature": "(Int-\u003ea-\u003eb-\u003eb)-\u003eb-\u003eSized s a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:foldrWithIndex"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "foldrWithIndex'",
          "package": "EdisonCore",
          "signature": "(Int -\u003e a -\u003e b -\u003e b) -\u003e b -\u003e Sized s a -\u003e b",
          "source": "src/Data-Edison-Seq-SizedSeq.html#foldrWithIndex%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "foldrWithIndex'",
          "normalized": "(Int-\u003ea-\u003eb-\u003eb)-\u003eb-\u003eSized c a-\u003eb",
          "package": "EdisonCore",
          "partial": "With Index'",
          "signature": "(Int-\u003ea-\u003eb-\u003eb)-\u003eb-\u003eSized s a-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:foldrWithIndex-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "fromList",
          "package": "EdisonCore",
          "signature": "[a] -\u003e Sized s a",
          "source": "src/Data-Edison-Seq-SizedSeq.html#fromList",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "fromList",
          "normalized": "[a]-\u003eSized b a",
          "package": "EdisonCore",
          "partial": "List",
          "signature": "[a]-\u003eSized s a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:fromList"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "fromSeq",
          "package": "EdisonCore",
          "signature": "s a -\u003e Sized s a",
          "source": "src/Data-Edison-Seq-SizedSeq.html#fromSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "fromSeq",
          "normalized": "a b-\u003eSized a b",
          "package": "EdisonCore",
          "partial": "Seq",
          "signature": "s a-\u003eSized s a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:fromSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "inBounds",
          "package": "EdisonCore",
          "signature": "Int -\u003e Sized s a -\u003e Bool",
          "source": "src/Data-Edison-Seq-SizedSeq.html#inBounds",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "inBounds",
          "normalized": "Int-\u003eSized a b-\u003eBool",
          "package": "EdisonCore",
          "partial": "Bounds",
          "signature": "Int-\u003eSized s a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:inBounds"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "instanceName",
          "package": "EdisonCore",
          "signature": "Sized s a -\u003e String",
          "source": "src/Data-Edison-Seq-SizedSeq.html#instanceName",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "instanceName",
          "normalized": "Sized a b-\u003eString",
          "package": "EdisonCore",
          "partial": "Name",
          "signature": "Sized s a-\u003eString",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:instanceName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "lcons",
          "package": "EdisonCore",
          "signature": "a -\u003e Sized s a -\u003e Sized s a",
          "source": "src/Data-Edison-Seq-SizedSeq.html#lcons",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "lcons",
          "normalized": "a-\u003eSized b a-\u003eSized b a",
          "package": "EdisonCore",
          "signature": "a-\u003eSized s a-\u003eSized s a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:lcons"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "lhead",
          "package": "EdisonCore",
          "signature": "Sized s a -\u003e a",
          "source": "src/Data-Edison-Seq-SizedSeq.html#lhead",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "lhead",
          "normalized": "Sized a b-\u003eb",
          "package": "EdisonCore",
          "signature": "Sized s a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:lhead"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "lheadM",
          "package": "EdisonCore",
          "signature": "Sized s a -\u003e m a",
          "source": "src/Data-Edison-Seq-SizedSeq.html#lheadM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "lheadM",
          "normalized": "Sized a b-\u003ec b",
          "package": "EdisonCore",
          "signature": "Sized s a-\u003em a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:lheadM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "lookup",
          "package": "EdisonCore",
          "signature": "Int -\u003e Sized s a -\u003e a",
          "source": "src/Data-Edison-Seq-SizedSeq.html#lookup",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "lookup",
          "normalized": "Int-\u003eSized a b-\u003eb",
          "package": "EdisonCore",
          "signature": "Int-\u003eSized s a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:lookup"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "lookupM",
          "package": "EdisonCore",
          "signature": "Int -\u003e Sized s a -\u003e m a",
          "source": "src/Data-Edison-Seq-SizedSeq.html#lookupM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "lookupM",
          "normalized": "Int-\u003eSized a b-\u003ec b",
          "package": "EdisonCore",
          "signature": "Int-\u003eSized s a-\u003em a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:lookupM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "lookupWithDefault",
          "package": "EdisonCore",
          "signature": "a -\u003e Int -\u003e Sized s a -\u003e a",
          "source": "src/Data-Edison-Seq-SizedSeq.html#lookupWithDefault",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "lookupWithDefault",
          "normalized": "a-\u003eInt-\u003eSized b a-\u003ea",
          "package": "EdisonCore",
          "partial": "With Default",
          "signature": "a-\u003eInt-\u003eSized s a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:lookupWithDefault"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "ltail",
          "package": "EdisonCore",
          "signature": "Sized s a -\u003e Sized s a",
          "source": "src/Data-Edison-Seq-SizedSeq.html#ltail",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "ltail",
          "normalized": "Sized a b-\u003eSized a b",
          "package": "EdisonCore",
          "signature": "Sized s a-\u003eSized s a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:ltail"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "ltailM",
          "package": "EdisonCore",
          "signature": "Sized s a -\u003e m (Sized s a)",
          "source": "src/Data-Edison-Seq-SizedSeq.html#ltailM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "ltailM",
          "normalized": "Sized a b-\u003ec(Sized a b)",
          "package": "EdisonCore",
          "signature": "Sized s a-\u003em(Sized s a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:ltailM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "lview",
          "package": "EdisonCore",
          "signature": "Sized s a -\u003e m (a, Sized s a)",
          "source": "src/Data-Edison-Seq-SizedSeq.html#lview",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "lview",
          "normalized": "Sized a b-\u003ec(b,Sized a b)",
          "package": "EdisonCore",
          "signature": "Sized s a-\u003em(a,Sized s a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:lview"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "map",
          "package": "EdisonCore",
          "signature": "(a -\u003e b) -\u003e Sized s a -\u003e Sized s b",
          "source": "src/Data-Edison-Seq-SizedSeq.html#map",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "map",
          "normalized": "(a-\u003eb)-\u003eSized c a-\u003eSized c b",
          "package": "EdisonCore",
          "signature": "(a-\u003eb)-\u003eSized s a-\u003eSized s b",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:map"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "mapWithIndex",
          "package": "EdisonCore",
          "signature": "(Int -\u003e a -\u003e b) -\u003e Sized s a -\u003e Sized s b",
          "source": "src/Data-Edison-Seq-SizedSeq.html#mapWithIndex",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "mapWithIndex",
          "normalized": "(Int-\u003ea-\u003eb)-\u003eSized c a-\u003eSized c b",
          "package": "EdisonCore",
          "partial": "With Index",
          "signature": "(Int-\u003ea-\u003eb)-\u003eSized s a-\u003eSized s b",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:mapWithIndex"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "moduleName",
          "package": "EdisonCore",
          "signature": "String",
          "source": "src/Data-Edison-Seq-SizedSeq.html#moduleName",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "moduleName",
          "package": "EdisonCore",
          "partial": "Name",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:moduleName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "null",
          "package": "EdisonCore",
          "signature": "Sized s a -\u003e Bool",
          "source": "src/Data-Edison-Seq-SizedSeq.html#null",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "null",
          "normalized": "Sized a b-\u003eBool",
          "package": "EdisonCore",
          "signature": "Sized s a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:null"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "partition",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e Sized s a -\u003e (Sized s a, Sized s a)",
          "source": "src/Data-Edison-Seq-SizedSeq.html#partition",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "partition",
          "normalized": "(a-\u003eBool)-\u003eSized b a-\u003e(Sized b a,Sized b a)",
          "package": "EdisonCore",
          "signature": "(a-\u003eBool)-\u003eSized s a-\u003e(Sized s a,Sized s a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:partition"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "rcons",
          "package": "EdisonCore",
          "signature": "a -\u003e Sized s a -\u003e Sized s a",
          "source": "src/Data-Edison-Seq-SizedSeq.html#rcons",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "rcons",
          "normalized": "a-\u003eSized b a-\u003eSized b a",
          "package": "EdisonCore",
          "signature": "a-\u003eSized s a-\u003eSized s a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:rcons"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "reduce1",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Sized s a -\u003e a",
          "source": "src/Data-Edison-Seq-SizedSeq.html#reduce1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "reduce1",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSized b a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSized s a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:reduce1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "reduce1'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e Sized s a -\u003e a",
          "source": "src/Data-Edison-Seq-SizedSeq.html#reduce1%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "reduce1'",
          "normalized": "(a-\u003ea-\u003ea)-\u003eSized b a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003eSized s a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:reduce1-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "reducel",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e a -\u003e Sized s a -\u003e a",
          "source": "src/Data-Edison-Seq-SizedSeq.html#reducel",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "reducel",
          "normalized": "(a-\u003ea-\u003ea)-\u003ea-\u003eSized b a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003ea-\u003eSized s a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:reducel"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "reducel'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e a -\u003e Sized s a -\u003e a",
          "source": "src/Data-Edison-Seq-SizedSeq.html#reducel%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "reducel'",
          "normalized": "(a-\u003ea-\u003ea)-\u003ea-\u003eSized b a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003ea-\u003eSized s a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:reducel-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "reducer",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e a -\u003e Sized s a -\u003e a",
          "source": "src/Data-Edison-Seq-SizedSeq.html#reducer",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "reducer",
          "normalized": "(a-\u003ea-\u003ea)-\u003ea-\u003eSized b a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003ea-\u003eSized s a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:reducer"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "reducer'",
          "package": "EdisonCore",
          "signature": "(a -\u003e a -\u003e a) -\u003e a -\u003e Sized s a -\u003e a",
          "source": "src/Data-Edison-Seq-SizedSeq.html#reducer%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "reducer'",
          "normalized": "(a-\u003ea-\u003ea)-\u003ea-\u003eSized b a-\u003ea",
          "package": "EdisonCore",
          "signature": "(a-\u003ea-\u003ea)-\u003ea-\u003eSized s a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:reducer-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "reverse",
          "package": "EdisonCore",
          "signature": "Sized s a -\u003e Sized s a",
          "source": "src/Data-Edison-Seq-SizedSeq.html#reverse",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "reverse",
          "normalized": "Sized a b-\u003eSized a b",
          "package": "EdisonCore",
          "signature": "Sized s a-\u003eSized s a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:reverse"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "reverseOnto",
          "package": "EdisonCore",
          "signature": "Sized s a -\u003e Sized s a -\u003e Sized s a",
          "source": "src/Data-Edison-Seq-SizedSeq.html#reverseOnto",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "reverseOnto",
          "normalized": "Sized a b-\u003eSized a b-\u003eSized a b",
          "package": "EdisonCore",
          "partial": "Onto",
          "signature": "Sized s a-\u003eSized s a-\u003eSized s a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:reverseOnto"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "rhead",
          "package": "EdisonCore",
          "signature": "Sized s a -\u003e a",
          "source": "src/Data-Edison-Seq-SizedSeq.html#rhead",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "rhead",
          "normalized": "Sized a b-\u003eb",
          "package": "EdisonCore",
          "signature": "Sized s a-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:rhead"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "rheadM",
          "package": "EdisonCore",
          "signature": "Sized s a -\u003e m a",
          "source": "src/Data-Edison-Seq-SizedSeq.html#rheadM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "rheadM",
          "normalized": "Sized a b-\u003ec b",
          "package": "EdisonCore",
          "signature": "Sized s a-\u003em a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:rheadM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "rtail",
          "package": "EdisonCore",
          "signature": "Sized s a -\u003e Sized s a",
          "source": "src/Data-Edison-Seq-SizedSeq.html#rtail",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "rtail",
          "normalized": "Sized a b-\u003eSized a b",
          "package": "EdisonCore",
          "signature": "Sized s a-\u003eSized s a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:rtail"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "rtailM",
          "package": "EdisonCore",
          "signature": "Sized s a -\u003e m (Sized s a)",
          "source": "src/Data-Edison-Seq-SizedSeq.html#rtailM",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "rtailM",
          "normalized": "Sized a b-\u003ec(Sized a b)",
          "package": "EdisonCore",
          "signature": "Sized s a-\u003em(Sized s a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:rtailM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "rview",
          "package": "EdisonCore",
          "signature": "Sized s a -\u003e m (a, Sized s a)",
          "source": "src/Data-Edison-Seq-SizedSeq.html#rview",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "rview",
          "normalized": "Sized a b-\u003ec(b,Sized a b)",
          "package": "EdisonCore",
          "signature": "Sized s a-\u003em(a,Sized s a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:rview"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "singleton",
          "package": "EdisonCore",
          "signature": "a -\u003e Sized s a",
          "source": "src/Data-Edison-Seq-SizedSeq.html#singleton",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "singleton",
          "normalized": "a-\u003eSized b a",
          "package": "EdisonCore",
          "signature": "a-\u003eSized s a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:singleton"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "size",
          "package": "EdisonCore",
          "signature": "Sized s a -\u003e Int",
          "source": "src/Data-Edison-Seq-SizedSeq.html#size",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "size",
          "normalized": "Sized a b-\u003eInt",
          "package": "EdisonCore",
          "signature": "Sized s a-\u003eInt",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:size"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "splitAt",
          "package": "EdisonCore",
          "signature": "Int -\u003e Sized s a -\u003e (Sized s a, Sized s a)",
          "source": "src/Data-Edison-Seq-SizedSeq.html#splitAt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "splitAt",
          "normalized": "Int-\u003eSized a b-\u003e(Sized a b,Sized a b)",
          "package": "EdisonCore",
          "partial": "At",
          "signature": "Int-\u003eSized s a-\u003e(Sized s a,Sized s a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:splitAt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "splitWhile",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e Sized s a -\u003e (Sized s a, Sized s a)",
          "source": "src/Data-Edison-Seq-SizedSeq.html#splitWhile",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "splitWhile",
          "normalized": "(a-\u003eBool)-\u003eSized b a-\u003e(Sized b a,Sized b a)",
          "package": "EdisonCore",
          "partial": "While",
          "signature": "(a-\u003eBool)-\u003eSized s a-\u003e(Sized s a,Sized s a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:splitWhile"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "strict",
          "package": "EdisonCore",
          "signature": "Sized s a -\u003e Sized s a",
          "source": "src/Data-Edison-Seq-SizedSeq.html#strict",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "strict",
          "normalized": "Sized a b-\u003eSized a b",
          "package": "EdisonCore",
          "signature": "Sized s a-\u003eSized s a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:strict"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "strictWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e b) -\u003e Sized s a -\u003e Sized s a",
          "source": "src/Data-Edison-Seq-SizedSeq.html#strictWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "strictWith",
          "normalized": "(a-\u003eb)-\u003eSized c a-\u003eSized c a",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003eb)-\u003eSized s a-\u003eSized s a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:strictWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "structuralInvariant",
          "package": "EdisonCore",
          "signature": "Sized s a -\u003e Bool",
          "source": "src/Data-Edison-Seq-SizedSeq.html#structuralInvariant",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "structuralInvariant",
          "normalized": "Sized a b-\u003eBool",
          "package": "EdisonCore",
          "partial": "Invariant",
          "signature": "Sized s a-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:structuralInvariant"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "subseq",
          "package": "EdisonCore",
          "signature": "Int -\u003e Int -\u003e Sized s a -\u003e Sized s a",
          "source": "src/Data-Edison-Seq-SizedSeq.html#subseq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "subseq",
          "normalized": "Int-\u003eInt-\u003eSized a b-\u003eSized a b",
          "package": "EdisonCore",
          "signature": "Int-\u003eInt-\u003eSized s a-\u003eSized s a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:subseq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "take",
          "package": "EdisonCore",
          "signature": "Int -\u003e Sized s a -\u003e Sized s a",
          "source": "src/Data-Edison-Seq-SizedSeq.html#take",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "take",
          "normalized": "Int-\u003eSized a b-\u003eSized a b",
          "package": "EdisonCore",
          "signature": "Int-\u003eSized s a-\u003eSized s a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:take"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "takeWhile",
          "package": "EdisonCore",
          "signature": "(a -\u003e Bool) -\u003e Sized s a -\u003e Sized s a",
          "source": "src/Data-Edison-Seq-SizedSeq.html#takeWhile",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "takeWhile",
          "normalized": "(a-\u003eBool)-\u003eSized b a-\u003eSized b a",
          "package": "EdisonCore",
          "partial": "While",
          "signature": "(a-\u003eBool)-\u003eSized s a-\u003eSized s a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:takeWhile"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "toList",
          "package": "EdisonCore",
          "signature": "Sized s a -\u003e [a]",
          "source": "src/Data-Edison-Seq-SizedSeq.html#toList",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "toList",
          "normalized": "Sized a b-\u003e[b]",
          "package": "EdisonCore",
          "partial": "List",
          "signature": "Sized s a-\u003e[a]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:toList"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "toSeq",
          "package": "EdisonCore",
          "signature": "Sized s a -\u003e s a",
          "source": "src/Data-Edison-Seq-SizedSeq.html#toSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "toSeq",
          "normalized": "Sized a b-\u003ea b",
          "package": "EdisonCore",
          "partial": "Seq",
          "signature": "Sized s a-\u003es a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:toSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "unzip",
          "package": "EdisonCore",
          "signature": "Sized s (a, b) -\u003e (Sized s a, Sized s b)",
          "source": "src/Data-Edison-Seq-SizedSeq.html#unzip",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "unzip",
          "normalized": "Sized a(b,c)-\u003e(Sized a b,Sized a c)",
          "package": "EdisonCore",
          "signature": "Sized s(a,b)-\u003e(Sized s a,Sized s b)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:unzip"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "unzip3",
          "package": "EdisonCore",
          "signature": "Sized s (a, b, c) -\u003e (Sized s a, Sized s b, Sized s c)",
          "source": "src/Data-Edison-Seq-SizedSeq.html#unzip3",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "unzip3",
          "normalized": "Sized a(b,c,d)-\u003e(Sized a b,Sized a c,Sized a d)",
          "package": "EdisonCore",
          "signature": "Sized s(a,b,c)-\u003e(Sized s a,Sized s b,Sized s c)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:unzip3"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "unzipWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e b) -\u003e (a -\u003e c) -\u003e Sized s a -\u003e (Sized s b, Sized s c)",
          "source": "src/Data-Edison-Seq-SizedSeq.html#unzipWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "unzipWith",
          "normalized": "(a-\u003eb)-\u003e(a-\u003ec)-\u003eSized d a-\u003e(Sized d b,Sized d c)",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003eb)-\u003e(a-\u003ec)-\u003eSized s a-\u003e(Sized s b,Sized s c)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:unzipWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "unzipWith3",
          "package": "EdisonCore",
          "signature": "(a -\u003e b) -\u003e (a -\u003e c) -\u003e (a -\u003e d) -\u003e Sized s a -\u003e (Sized s b, Sized s c, Sized s d)",
          "source": "src/Data-Edison-Seq-SizedSeq.html#unzipWith3",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "unzipWith3",
          "normalized": "(a-\u003eb)-\u003e(a-\u003ec)-\u003e(a-\u003ed)-\u003eSized e a-\u003e(Sized e b,Sized e c,Sized e d)",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003eb)-\u003e(a-\u003ec)-\u003e(a-\u003ed)-\u003eSized s a-\u003e(Sized s b,Sized s c,Sized s d)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:unzipWith3"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "update",
          "package": "EdisonCore",
          "signature": "Int -\u003e a -\u003e Sized s a -\u003e Sized s a",
          "source": "src/Data-Edison-Seq-SizedSeq.html#update",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "update",
          "normalized": "Int-\u003ea-\u003eSized b a-\u003eSized b a",
          "package": "EdisonCore",
          "signature": "Int-\u003ea-\u003eSized s a-\u003eSized s a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:update"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "zip",
          "package": "EdisonCore",
          "signature": "Sized s a -\u003e Sized s b -\u003e Sized s (a, b)",
          "source": "src/Data-Edison-Seq-SizedSeq.html#zip",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "zip",
          "normalized": "Sized a b-\u003eSized a c-\u003eSized a(b,c)",
          "package": "EdisonCore",
          "signature": "Sized s a-\u003eSized s b-\u003eSized s(a,b)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:zip"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "zip3",
          "package": "EdisonCore",
          "signature": "Sized s a -\u003e Sized s b -\u003e Sized s c -\u003e Sized s (a, b, c)",
          "source": "src/Data-Edison-Seq-SizedSeq.html#zip3",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "zip3",
          "normalized": "Sized a b-\u003eSized a c-\u003eSized a d-\u003eSized a(b,c,d)",
          "package": "EdisonCore",
          "signature": "Sized s a-\u003eSized s b-\u003eSized s c-\u003eSized s(a,b,c)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:zip3"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "zipWith",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e c) -\u003e Sized s a -\u003e Sized s b -\u003e Sized s c",
          "source": "src/Data-Edison-Seq-SizedSeq.html#zipWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "zipWith",
          "normalized": "(a-\u003eb-\u003ec)-\u003eSized d a-\u003eSized d b-\u003eSized d c",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003eb-\u003ec)-\u003eSized s a-\u003eSized s b-\u003eSized s c",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:zipWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "zipWith3",
          "package": "EdisonCore",
          "signature": "(a -\u003e b -\u003e c -\u003e d) -\u003e Sized s a -\u003e Sized s b -\u003e Sized s c -\u003e Sized s d",
          "source": "src/Data-Edison-Seq-SizedSeq.html#zipWith3",
          "type": "function"
        },
        "index": {
          "hierarchy": "Data Edison Seq SizedSeq",
          "module": "Data.Edison.Seq.SizedSeq",
          "name": "zipWith3",
          "normalized": "(a-\u003eb-\u003ec-\u003ed)-\u003eSized e a-\u003eSized e b-\u003eSized e c-\u003eSized e d",
          "package": "EdisonCore",
          "partial": "With",
          "signature": "(a-\u003eb-\u003ec-\u003ed)-\u003eSized s a-\u003eSized s b-\u003eSized s c-\u003eSized s d",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/EdisonCore/docs/Data-Edison-Seq-SizedSeq.html#v:zipWith3"
      }
    }
  ]
]
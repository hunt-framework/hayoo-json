[
  {
    "cmd": "delete-by-query",
    "query": {
      "contexts": [
        "package"
      ],
      "query": {
        "op": "case",
        "type": "word",
        "word": "HaXml"
      },
      "type": "context"
    }
  },
  [
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThis is a fast non-pretty-printer for turning the internal representation\n   of generic structured XML documents into Lazy ByteStrings.\n   Like in Text.Xml.HaXml.Pretty, there is one pp function for each type in\n   Text.Xml.HaXml.Types, so you can pretty-print as much or as little\n   of the document as you wish.\n\u003c/p\u003e\u003c/div\u003e",
          "module": "Text.XML.HaXml.ByteStringPP",
          "name": "ByteStringPP",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-ByteStringPP.html",
          "type": "module"
        },
        "index": {
          "description": "This is fast non-pretty-printer for turning the internal representation of generic structured XML documents into Lazy ByteStrings Like in Text.Xml.HaXml.Pretty there is one pp function for each type in Text.Xml.HaXml.Types so you can pretty-print as much or as little of the document as you wish",
          "hierarchy": "Text XML HaXml ByteStringPP",
          "module": "Text.XML.HaXml.ByteStringPP",
          "name": "ByteStringPP",
          "package": "HaXml",
          "partial": "Byte String PP",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-ByteStringPP.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.ByteStringPP",
          "name": "content",
          "package": "HaXml",
          "signature": "Content i -\u003e ByteString",
          "source": "src/Text-XML-HaXml-ByteStringPP.html#content",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml ByteStringPP",
          "module": "Text.XML.HaXml.ByteStringPP",
          "name": "content",
          "normalized": "Content a-\u003eByteString",
          "package": "HaXml",
          "signature": "Content i-\u003eByteString",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-ByteStringPP.html#v:content"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.ByteStringPP",
          "name": "cp",
          "package": "HaXml",
          "signature": "CP -\u003e ByteString",
          "source": "src/Text-XML-HaXml-ByteStringPP.html#cp",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml ByteStringPP",
          "module": "Text.XML.HaXml.ByteStringPP",
          "name": "cp",
          "normalized": "CP-\u003eByteString",
          "package": "HaXml",
          "signature": "CP-\u003eByteString",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-ByteStringPP.html#v:cp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.ByteStringPP",
          "name": "doctypedecl",
          "package": "HaXml",
          "signature": "DocTypeDecl -\u003e ByteString",
          "source": "src/Text-XML-HaXml-ByteStringPP.html#doctypedecl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml ByteStringPP",
          "module": "Text.XML.HaXml.ByteStringPP",
          "name": "doctypedecl",
          "normalized": "DocTypeDecl-\u003eByteString",
          "package": "HaXml",
          "signature": "DocTypeDecl-\u003eByteString",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-ByteStringPP.html#v:doctypedecl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.ByteStringPP",
          "name": "document",
          "package": "HaXml",
          "signature": "Document i -\u003e ByteString",
          "source": "src/Text-XML-HaXml-ByteStringPP.html#document",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml ByteStringPP",
          "module": "Text.XML.HaXml.ByteStringPP",
          "name": "document",
          "normalized": "Document a-\u003eByteString",
          "package": "HaXml",
          "signature": "Document i-\u003eByteString",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-ByteStringPP.html#v:document"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.ByteStringPP",
          "name": "element",
          "package": "HaXml",
          "signature": "Element i -\u003e ByteString",
          "source": "src/Text-XML-HaXml-ByteStringPP.html#element",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml ByteStringPP",
          "module": "Text.XML.HaXml.ByteStringPP",
          "name": "element",
          "normalized": "Element a-\u003eByteString",
          "package": "HaXml",
          "signature": "Element i-\u003eByteString",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-ByteStringPP.html#v:element"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.ByteStringPP",
          "name": "prolog",
          "package": "HaXml",
          "signature": "Prolog -\u003e ByteString",
          "source": "src/Text-XML-HaXml-ByteStringPP.html#prolog",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml ByteStringPP",
          "module": "Text.XML.HaXml.ByteStringPP",
          "name": "prolog",
          "normalized": "Prolog-\u003eByteString",
          "package": "HaXml",
          "signature": "Prolog-\u003eByteString",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-ByteStringPP.html#v:prolog"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThis module defines the notion of filters and filter combinators\n   for processing XML documents.\n\u003c/p\u003e\u003cp\u003eThese XML transformation combinators are described in the paper\n   ``Haskell and XML: Generic Combinators or Type-Based Translation?''\n   Malcolm Wallace and Colin Runciman, Proceedings ICFP'99.\n\u003c/p\u003e\u003c/div\u003e",
          "module": "Text.XML.HaXml.Combinators",
          "name": "Combinators",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Combinators.html",
          "type": "module"
        },
        "index": {
          "description": "This module defines the notion of filters and filter combinators for processing XML documents These XML transformation combinators are described in the paper Haskell and XML Generic Combinators or Type-Based Translation Malcolm Wallace and Colin Runciman Proceedings ICFP",
          "hierarchy": "Text XML HaXml Combinators",
          "module": "Text.XML.HaXml.Combinators",
          "name": "Combinators",
          "package": "HaXml",
          "partial": "Combinators",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Combinators.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eAll document transformations are \u003cem\u003econtent filters\u003c/em\u003e.\n   A filter takes a single XML \u003ccode\u003e\u003ca\u003eContent\u003c/a\u003e\u003c/code\u003e value and returns a sequence\n   of \u003ccode\u003e\u003ca\u003eContent\u003c/a\u003e\u003c/code\u003e values, possibly empty.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Combinators",
          "name": "CFilter",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Combinators.html#CFilter",
          "type": "type"
        },
        "index": {
          "description": "All document transformations are content filters filter takes single XML Content value and returns sequence of Content values possibly empty",
          "hierarchy": "Text XML HaXml Combinators",
          "module": "Text.XML.HaXml.Combinators",
          "name": "CFilter",
          "package": "HaXml",
          "partial": "CFilter",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Combinators.html#t:CFilter"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eA LabelFilter is like a CFilter except that it pairs up a polymorphic\n   value (label) with each of its results.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Combinators",
          "name": "LabelFilter",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Combinators.html#LabelFilter",
          "type": "type"
        },
        "index": {
          "description": "LabelFilter is like CFilter except that it pairs up polymorphic value label with each of its results",
          "hierarchy": "Text XML HaXml Combinators",
          "module": "Text.XML.HaXml.Combinators",
          "name": "LabelFilter",
          "package": "HaXml",
          "partial": "Label Filter",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Combinators.html#t:LabelFilter"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eConjoin the two branches of a conditional.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Combinators",
          "name": "ThenElse",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Combinators.html#ThenElse",
          "type": "data"
        },
        "index": {
          "description": "Conjoin the two branches of conditional",
          "hierarchy": "Text XML HaXml Combinators",
          "module": "Text.XML.HaXml.Combinators",
          "name": "ThenElse",
          "package": "HaXml",
          "partial": "Then Else",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Combinators.html#t:ThenElse"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eDirectional choice:\n   in \u003ccode\u003ef |\u003e| g\u003c/code\u003e give g-productions only if no f-productions\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Combinators",
          "name": "(|\u003e|)",
          "package": "HaXml",
          "signature": "(a -\u003e [b]) -\u003e (a -\u003e [b]) -\u003e a -\u003e [b]",
          "source": "src/Text-XML-HaXml-Combinators.html#%7C%3E%7C",
          "type": "function"
        },
        "index": {
          "description": "Directional choice in give g-productions only if no f-productions",
          "hierarchy": "Text XML HaXml Combinators",
          "module": "Text.XML.HaXml.Combinators",
          "name": "(|\u003e|) |\u003e|",
          "normalized": "(a-\u003e[b])-\u003e(a-\u003e[b])-\u003ea-\u003e[b]",
          "package": "HaXml",
          "signature": "(a-\u003e[b])-\u003e(a-\u003e[b])-\u003ea-\u003e[b]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Combinators.html#v:-124--62--124-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003ePronounced \u003cem\u003eslash\u003c/em\u003e, \u003ccode\u003ef /\u003e g\u003c/code\u003e means g inside f\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Combinators",
          "name": "(/\u003e)",
          "package": "HaXml",
          "signature": "CFilter i -\u003e CFilter i -\u003e CFilter i",
          "source": "src/Text-XML-HaXml-Combinators.html#%2F%3E",
          "type": "function"
        },
        "index": {
          "description": "Pronounced slash means inside",
          "hierarchy": "Text XML HaXml Combinators",
          "module": "Text.XML.HaXml.Combinators",
          "name": "(/\u003e) /\u003e",
          "normalized": "CFilter a-\u003eCFilter a-\u003eCFilter a",
          "package": "HaXml",
          "signature": "CFilter i-\u003eCFilter i-\u003eCFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Combinators.html#v:-47--62-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003ePronounced \u003cem\u003eoutside\u003c/em\u003e, \u003ccode\u003ef \u003c/ g\u003c/code\u003e means f containing g\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Combinators",
          "name": "(\u003c/)",
          "package": "HaXml",
          "signature": "CFilter i -\u003e CFilter i -\u003e CFilter i",
          "source": "src/Text-XML-HaXml-Combinators.html#%3C%2F",
          "type": "function"
        },
        "index": {
          "description": "Pronounced outside means containing",
          "hierarchy": "Text XML HaXml Combinators",
          "module": "Text.XML.HaXml.Combinators",
          "name": "(\u003c/) \u003c/",
          "normalized": "CFilter a-\u003eCFilter a-\u003eCFilter a",
          "package": "HaXml",
          "signature": "CFilter i-\u003eCFilter i-\u003eCFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Combinators.html#v:-60--47-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eSelect between the two branches of a joined conditional.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Combinators",
          "name": "(?\u003e)",
          "package": "HaXml",
          "signature": "(a -\u003e [b]) -\u003e ThenElse (a -\u003e [b]) -\u003e a -\u003e [b]",
          "source": "src/Text-XML-HaXml-Combinators.html#%3F%3E",
          "type": "function"
        },
        "index": {
          "description": "Select between the two branches of joined conditional",
          "hierarchy": "Text XML HaXml Combinators",
          "module": "Text.XML.HaXml.Combinators",
          "name": "(?\u003e) ?\u003e",
          "normalized": "(a-\u003e[b])-\u003eThenElse(a-\u003e[b])-\u003ea-\u003e[b]",
          "package": "HaXml",
          "signature": "(a-\u003e[b])-\u003eThenElse(a-\u003e[b])-\u003ea-\u003e[b]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Combinators.html#v:-63--62-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Combinators",
          "name": ":\u003e",
          "package": "HaXml",
          "signature": "a :\u003e a",
          "source": "src/Text-XML-HaXml-Combinators.html#ThenElse",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Combinators",
          "module": "Text.XML.HaXml.Combinators",
          "name": ":\u003e",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Combinators.html#v::-62-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eA special form of filter composition where the second filter\n   works over the same data as the first, but also uses the\n   first's result.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Combinators",
          "name": "andThen",
          "package": "HaXml",
          "signature": "(a -\u003e c) -\u003e (c -\u003e a -\u003e b) -\u003e a -\u003e b",
          "source": "src/Text-XML-HaXml-Combinators.html#andThen",
          "type": "function"
        },
        "index": {
          "description": "special form of filter composition where the second filter works over the same data as the first but also uses the first result",
          "hierarchy": "Text XML HaXml Combinators",
          "module": "Text.XML.HaXml.Combinators",
          "name": "andThen",
          "normalized": "(a-\u003eb)-\u003e(b-\u003ea-\u003ec)-\u003ea-\u003ec",
          "package": "HaXml",
          "partial": "Then",
          "signature": "(a-\u003ec)-\u003e(c-\u003ea-\u003eb)-\u003ea-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Combinators.html#v:andThen"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Combinators",
          "name": "attr",
          "package": "HaXml",
          "signature": "String -\u003e CFilter i",
          "source": "src/Text-XML-HaXml-Combinators.html#attr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Combinators",
          "module": "Text.XML.HaXml.Combinators",
          "name": "attr",
          "normalized": "String-\u003eCFilter a",
          "package": "HaXml",
          "signature": "String-\u003eCFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Combinators.html#v:attr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eLabel each element in the result with the value of the named attribute.\n   Elements without the attribute, and non-element results, get an\n   empty string label.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Combinators",
          "name": "attributed",
          "package": "HaXml",
          "signature": "String -\u003e CFilter i -\u003e LabelFilter i String",
          "source": "src/Text-XML-HaXml-Combinators.html#attributed",
          "type": "function"
        },
        "index": {
          "description": "Label each element in the result with the value of the named attribute Elements without the attribute and non-element results get an empty string label",
          "hierarchy": "Text XML HaXml Combinators",
          "module": "Text.XML.HaXml.Combinators",
          "name": "attributed",
          "normalized": "String-\u003eCFilter a-\u003eLabelFilter a String",
          "package": "HaXml",
          "signature": "String-\u003eCFilter i-\u003eLabelFilter i String",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Combinators.html#v:attributed"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Combinators",
          "name": "attrval",
          "package": "HaXml",
          "signature": "Attribute -\u003e CFilter i",
          "source": "src/Text-XML-HaXml-Combinators.html#attrval",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Combinators",
          "module": "Text.XML.HaXml.Combinators",
          "name": "attrval",
          "normalized": "Attribute-\u003eCFilter a",
          "package": "HaXml",
          "signature": "Attribute-\u003eCFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Combinators.html#v:attrval"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eGlue a list of filters together.  (A list version of union;\n   also has a more general type than just CFilter.)\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Combinators",
          "name": "cat",
          "package": "HaXml",
          "signature": "[a -\u003e [b]] -\u003e a -\u003e [b]",
          "source": "src/Text-XML-HaXml-Combinators.html#cat",
          "type": "function"
        },
        "index": {
          "description": "Glue list of filters together list version of union also has more general type than just CFilter",
          "hierarchy": "Text XML HaXml Combinators",
          "module": "Text.XML.HaXml.Combinators",
          "name": "cat",
          "normalized": "[a-\u003e[b]]-\u003ea-\u003e[b]",
          "package": "HaXml",
          "signature": "[a-\u003e[b]]-\u003ea-\u003e[b]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Combinators.html#v:cat"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eBuild some CDATA content.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Combinators",
          "name": "cdata",
          "package": "HaXml",
          "signature": "String -\u003e CFilter i",
          "source": "src/Text-XML-HaXml-Combinators.html#cdata",
          "type": "function"
        },
        "index": {
          "description": "Build some CDATA content",
          "hierarchy": "Text XML HaXml Combinators",
          "module": "Text.XML.HaXml.Combinators",
          "name": "cdata",
          "normalized": "String-\u003eCFilter a",
          "package": "HaXml",
          "signature": "String-\u003eCFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Combinators.html#v:cdata"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eThrow away current node, keep just the (unprocessed) children.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Combinators",
          "name": "children",
          "package": "HaXml",
          "signature": "CFilter i",
          "source": "src/Text-XML-HaXml-Combinators.html#children",
          "type": "function"
        },
        "index": {
          "description": "Throw away current node keep just the unprocessed children",
          "hierarchy": "Text XML HaXml Combinators",
          "module": "Text.XML.HaXml.Combinators",
          "name": "children",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Combinators.html#v:children"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eProcess children using specified filters.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Combinators",
          "name": "childrenBy",
          "package": "HaXml",
          "signature": "CFilter i -\u003e CFilter i",
          "source": "src/Text-XML-HaXml-Combinators.html#childrenBy",
          "type": "function"
        },
        "index": {
          "description": "Process children using specified filters",
          "hierarchy": "Text XML HaXml Combinators",
          "module": "Text.XML.HaXml.Combinators",
          "name": "childrenBy",
          "normalized": "CFilter a-\u003eCFilter a",
          "package": "HaXml",
          "partial": "By",
          "signature": "CFilter i-\u003eCFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Combinators.html#v:childrenBy"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eProcess CHildren In Place.  The filter is applied to any children\n   of an element content, and the element rebuilt around the results.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Combinators",
          "name": "chip",
          "package": "HaXml",
          "signature": "CFilter i -\u003e CFilter i",
          "source": "src/Text-XML-HaXml-Combinators.html#chip",
          "type": "function"
        },
        "index": {
          "description": "Process CHildren In Place The filter is applied to any children of an element content and the element rebuilt around the results",
          "hierarchy": "Text XML HaXml Combinators",
          "module": "Text.XML.HaXml.Combinators",
          "name": "chip",
          "normalized": "CFilter a-\u003eCFilter a",
          "package": "HaXml",
          "signature": "CFilter i-\u003eCFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Combinators.html#v:chip"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Combinators",
          "name": "deep",
          "package": "HaXml",
          "signature": "CFilter i -\u003e CFilter i",
          "source": "src/Text-XML-HaXml-Combinators.html#deep",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Combinators",
          "module": "Text.XML.HaXml.Combinators",
          "name": "deep",
          "normalized": "CFilter a-\u003eCFilter a",
          "package": "HaXml",
          "signature": "CFilter i-\u003eCFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Combinators.html#v:deep"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Combinators",
          "name": "deepest",
          "package": "HaXml",
          "signature": "CFilter i -\u003e CFilter i",
          "source": "src/Text-XML-HaXml-Combinators.html#deepest",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Combinators",
          "module": "Text.XML.HaXml.Combinators",
          "name": "deepest",
          "normalized": "CFilter a-\u003eCFilter a",
          "package": "HaXml",
          "signature": "CFilter i-\u003eCFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Combinators.html#v:deepest"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Combinators",
          "name": "elm",
          "package": "HaXml",
          "signature": "CFilter i",
          "source": "src/Text-XML-HaXml-Combinators.html#elm",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Combinators",
          "module": "Text.XML.HaXml.Combinators",
          "name": "elm",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Combinators.html#v:elm"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eJoin an element-matching filter with a text-only filter\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Combinators",
          "name": "et",
          "package": "HaXml",
          "signature": "(String -\u003e CFilter i) -\u003e CFilter i -\u003e CFilter i",
          "source": "src/Text-XML-HaXml-Combinators.html#et",
          "type": "function"
        },
        "index": {
          "description": "Join an element-matching filter with text-only filter",
          "hierarchy": "Text XML HaXml Combinators",
          "module": "Text.XML.HaXml.Combinators",
          "name": "et",
          "normalized": "(String-\u003eCFilter a)-\u003eCFilter a-\u003eCFilter a",
          "package": "HaXml",
          "signature": "(String-\u003eCFilter i)-\u003eCFilter i-\u003eCFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Combinators.html#v:et"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eLabel each content with some information extracted from itself.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Combinators",
          "name": "extracted",
          "package": "HaXml",
          "signature": "(Content i -\u003e a) -\u003e CFilter i -\u003e LabelFilter i a",
          "source": "src/Text-XML-HaXml-Combinators.html#extracted",
          "type": "function"
        },
        "index": {
          "description": "Label each content with some information extracted from itself",
          "hierarchy": "Text XML HaXml Combinators",
          "module": "Text.XML.HaXml.Combinators",
          "name": "extracted",
          "normalized": "(Content a-\u003eb)-\u003eCFilter a-\u003eLabelFilter a b",
          "package": "HaXml",
          "signature": "(Content i-\u003ea)-\u003eCFilter i-\u003eLabelFilter i a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Combinators.html#v:extracted"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eFor a mandatory attribute field, \u003ccode\u003efind key cont\u003c/code\u003e looks up the value of\n   the attribute name \u003ccode\u003ekey\u003c/code\u003e, and applies the continuation \u003ccode\u003econt\u003c/code\u003e to\n   the value.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Combinators",
          "name": "find",
          "package": "HaXml",
          "signature": "String -\u003e (String -\u003e CFilter i) -\u003e CFilter i",
          "source": "src/Text-XML-HaXml-Combinators.html#find",
          "type": "function"
        },
        "index": {
          "description": "For mandatory attribute field find key cont looks up the value of the attribute name key and applies the continuation cont to the value",
          "hierarchy": "Text XML HaXml Combinators",
          "module": "Text.XML.HaXml.Combinators",
          "name": "find",
          "normalized": "String-\u003e(String-\u003eCFilter a)-\u003eCFilter a",
          "package": "HaXml",
          "signature": "String-\u003e(String-\u003eCFilter i)-\u003eCFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Combinators.html#v:find"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eRecursive application of filters: a fold-like operator.  Defined\n   as \u003ccode\u003ef \u003ccode\u003e\u003ca\u003eo\u003c/a\u003e\u003c/code\u003e chip (foldXml f)\u003c/code\u003e.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Combinators",
          "name": "foldXml",
          "package": "HaXml",
          "signature": "CFilter i -\u003e CFilter i",
          "source": "src/Text-XML-HaXml-Combinators.html#foldXml",
          "type": "function"
        },
        "index": {
          "description": "Recursive application of filters fold-like operator Defined as chip foldXml",
          "hierarchy": "Text XML HaXml Combinators",
          "module": "Text.XML.HaXml.Combinators",
          "name": "foldXml",
          "normalized": "CFilter a-\u003eCFilter a",
          "package": "HaXml",
          "partial": "Xml",
          "signature": "CFilter i-\u003eCFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Combinators.html#v:foldXml"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eInterior editing:\n   \u003ccode\u003eg \u003ccode\u003e\u003ca\u003eguards\u003c/a\u003e\u003c/code\u003e f\u003c/code\u003e applies \u003ccode\u003ef\u003c/code\u003e only when the predicate \u003ccode\u003eg\u003c/code\u003e succeeds,\n   otherwise the content is discarded.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Combinators",
          "name": "guards",
          "package": "HaXml",
          "signature": "CFilter i -\u003e CFilter i -\u003e CFilter i",
          "source": "src/Text-XML-HaXml-Combinators.html#guards",
          "type": "function"
        },
        "index": {
          "description": "Interior editing guards applies only when the predicate succeeds otherwise the content is discarded",
          "hierarchy": "Text XML HaXml Combinators",
          "module": "Text.XML.HaXml.Combinators",
          "name": "guards",
          "normalized": "CFilter a-\u003eCFilter a-\u003eCFilter a",
          "package": "HaXml",
          "signature": "CFilter i-\u003eCFilter i-\u003eCFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Combinators.html#v:guards"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e\u003ccode\u003eifTxt yes no\u003c/code\u003e processes any textual content with the \u003ccode\u003eyes\u003c/code\u003e filter,\n   but otherwise is the same as the \u003ccode\u003eno\u003c/code\u003e filter.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Combinators",
          "name": "ifTxt",
          "package": "HaXml",
          "signature": "(String -\u003e CFilter i) -\u003e CFilter i -\u003e CFilter i",
          "source": "src/Text-XML-HaXml-Combinators.html#ifTxt",
          "type": "function"
        },
        "index": {
          "description": "ifTxt yes no processes any textual content with the yes filter but otherwise is the same as the no filter",
          "hierarchy": "Text XML HaXml Combinators",
          "module": "Text.XML.HaXml.Combinators",
          "name": "ifTxt",
          "normalized": "(String-\u003eCFilter a)-\u003eCFilter a-\u003eCFilter a",
          "package": "HaXml",
          "partial": "Txt",
          "signature": "(String-\u003eCFilter i)-\u003eCFilter i-\u003eCFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Combinators.html#v:ifTxt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eWhen an attribute field may be absent, use \u003ccode\u003eiffind key yes no\u003c/code\u003e to lookup\n   its value.  If the attribute is absent, it acts as the \u003ccode\u003eno\u003c/code\u003e filter,\n   otherwise it applies the \u003ccode\u003eyes\u003c/code\u003e filter.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Combinators",
          "name": "iffind",
          "package": "HaXml",
          "signature": "String -\u003e (String -\u003e CFilter i) -\u003e CFilter i -\u003e CFilter i",
          "source": "src/Text-XML-HaXml-Combinators.html#iffind",
          "type": "function"
        },
        "index": {
          "description": "When an attribute field may be absent use iffind key yes no to lookup its value If the attribute is absent it acts as the no filter otherwise it applies the yes filter",
          "hierarchy": "Text XML HaXml Combinators",
          "module": "Text.XML.HaXml.Combinators",
          "name": "iffind",
          "normalized": "String-\u003e(String-\u003eCFilter a)-\u003eCFilter a-\u003eCFilter a",
          "package": "HaXml",
          "signature": "String-\u003e(String-\u003eCFilter i)-\u003eCFilter i-\u003eCFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Combinators.html#v:iffind"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eProcess an element In Place.  The filter is applied to the element\n   itself, and then the original element rebuilt around the results.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Combinators",
          "name": "inplace",
          "package": "HaXml",
          "signature": "CFilter i -\u003e CFilter i",
          "source": "src/Text-XML-HaXml-Combinators.html#inplace",
          "type": "function"
        },
        "index": {
          "description": "Process an element In Place The filter is applied to the element itself and then the original element rebuilt around the results",
          "hierarchy": "Text XML HaXml Combinators",
          "module": "Text.XML.HaXml.Combinators",
          "name": "inplace",
          "normalized": "CFilter a-\u003eCFilter a",
          "package": "HaXml",
          "signature": "CFilter i-\u003eCFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Combinators.html#v:inplace"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eIn \u003ccode\u003einterspersed a f b\u003c/code\u003e, label each result of \u003ccode\u003ef\u003c/code\u003e with the string \u003ccode\u003ea\u003c/code\u003e,\n   except for the last one which is labelled with the string \u003ccode\u003eb\u003c/code\u003e.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Combinators",
          "name": "interspersed",
          "package": "HaXml",
          "signature": "String -\u003e CFilter i -\u003e String -\u003e LabelFilter i String",
          "source": "src/Text-XML-HaXml-Combinators.html#interspersed",
          "type": "function"
        },
        "index": {
          "description": "In interspersed label each result of with the string except for the last one which is labelled with the string",
          "hierarchy": "Text XML HaXml Combinators",
          "module": "Text.XML.HaXml.Combinators",
          "name": "interspersed",
          "normalized": "String-\u003eCFilter a-\u003eString-\u003eLabelFilter a String",
          "package": "HaXml",
          "signature": "String-\u003eCFilter i-\u003eString-\u003eLabelFilter i String",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Combinators.html#v:interspersed"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Combinators",
          "name": "keep",
          "package": "HaXml",
          "signature": "a -\u003e [a]",
          "source": "src/Text-XML-HaXml-Combinators.html#keep",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Combinators",
          "module": "Text.XML.HaXml.Combinators",
          "name": "keep",
          "normalized": "a-\u003e[a]",
          "package": "HaXml",
          "signature": "a-\u003e[a]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Combinators.html#v:keep"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eBuild some textual content.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Combinators",
          "name": "literal",
          "package": "HaXml",
          "signature": "String -\u003e CFilter i",
          "source": "src/Text-XML-HaXml-Combinators.html#literal",
          "type": "function"
        },
        "index": {
          "description": "Build some textual content",
          "hierarchy": "Text XML HaXml Combinators",
          "module": "Text.XML.HaXml.Combinators",
          "name": "literal",
          "normalized": "String-\u003eCFilter a",
          "package": "HaXml",
          "signature": "String-\u003eCFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Combinators.html#v:literal"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eBuild an element with the given tag name - its content is the results\n   of the given list of filters.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Combinators",
          "name": "mkElem",
          "package": "HaXml",
          "signature": "String -\u003e [CFilter i] -\u003e CFilter i",
          "source": "src/Text-XML-HaXml-Combinators.html#mkElem",
          "type": "function"
        },
        "index": {
          "description": "Build an element with the given tag name its content is the results of the given list of filters",
          "hierarchy": "Text XML HaXml Combinators",
          "module": "Text.XML.HaXml.Combinators",
          "name": "mkElem",
          "normalized": "String-\u003e[CFilter a]-\u003eCFilter a",
          "package": "HaXml",
          "partial": "Elem",
          "signature": "String-\u003e[CFilter i]-\u003eCFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Combinators.html#v:mkElem"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eBuild an element with the given name, attributes, and content.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Combinators",
          "name": "mkElemAttr",
          "package": "HaXml",
          "signature": "String -\u003e [(String, CFilter i)] -\u003e [CFilter i] -\u003e CFilter i",
          "source": "src/Text-XML-HaXml-Combinators.html#mkElemAttr",
          "type": "function"
        },
        "index": {
          "description": "Build an element with the given name attributes and content",
          "hierarchy": "Text XML HaXml Combinators",
          "module": "Text.XML.HaXml.Combinators",
          "name": "mkElemAttr",
          "normalized": "String-\u003e[(String,CFilter a)]-\u003e[CFilter a]-\u003eCFilter a",
          "package": "HaXml",
          "partial": "Elem Attr",
          "signature": "String-\u003e[(String,CFilter i)]-\u003e[CFilter i]-\u003eCFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Combinators.html#v:mkElemAttr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Combinators",
          "name": "multi",
          "package": "HaXml",
          "signature": "CFilter i -\u003e CFilter i",
          "source": "src/Text-XML-HaXml-Combinators.html#multi",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Combinators",
          "module": "Text.XML.HaXml.Combinators",
          "name": "multi",
          "normalized": "CFilter a-\u003eCFilter a",
          "package": "HaXml",
          "signature": "CFilter i-\u003eCFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Combinators.html#v:multi"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Combinators",
          "name": "none",
          "package": "HaXml",
          "signature": "a -\u003e [b]",
          "source": "src/Text-XML-HaXml-Combinators.html#none",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Combinators",
          "module": "Text.XML.HaXml.Combinators",
          "name": "none",
          "normalized": "a-\u003e[b]",
          "package": "HaXml",
          "signature": "a-\u003e[b]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Combinators.html#v:none"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eNumber the results from 1 upwards.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Combinators",
          "name": "numbered",
          "package": "HaXml",
          "signature": "CFilter i -\u003e LabelFilter i Int",
          "source": "src/Text-XML-HaXml-Combinators.html#numbered",
          "type": "function"
        },
        "index": {
          "description": "Number the results from upwards",
          "hierarchy": "Text XML HaXml Combinators",
          "module": "Text.XML.HaXml.Combinators",
          "name": "numbered",
          "normalized": "CFilter a-\u003eLabelFilter a Int",
          "package": "HaXml",
          "signature": "CFilter i-\u003eLabelFilter i Int",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Combinators.html#v:numbered"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eSequential (\u003cem\u003eIrish\u003c/em\u003e,\u003cem\u003ebackwards\u003c/em\u003e) composition\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Combinators",
          "name": "o",
          "package": "HaXml",
          "signature": "CFilter i -\u003e CFilter i -\u003e CFilter i",
          "source": "src/Text-XML-HaXml-Combinators.html#o",
          "type": "function"
        },
        "index": {
          "description": "Sequential Irish backwards composition",
          "hierarchy": "Text XML HaXml Combinators",
          "module": "Text.XML.HaXml.Combinators",
          "name": "o",
          "normalized": "CFilter a-\u003eCFilter a-\u003eCFilter a",
          "package": "HaXml",
          "signature": "CFilter i-\u003eCFilter i-\u003eCFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Combinators.html#v:o"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eCompose a label-processing filter with a label-generating filter.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Combinators",
          "name": "oo",
          "package": "HaXml",
          "signature": "(a -\u003e CFilter i) -\u003e LabelFilter i a -\u003e CFilter i",
          "source": "src/Text-XML-HaXml-Combinators.html#oo",
          "type": "function"
        },
        "index": {
          "description": "Compose label-processing filter with label-generating filter",
          "hierarchy": "Text XML HaXml Combinators",
          "module": "Text.XML.HaXml.Combinators",
          "name": "oo",
          "normalized": "(a-\u003eCFilter b)-\u003eLabelFilter b a-\u003eCFilter b",
          "package": "HaXml",
          "signature": "(a-\u003eCFilter i)-\u003eLabelFilter i a-\u003eCFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Combinators.html#v:oo"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eExpress a list of filters like an XPath query, e.g.\n   \u003ccode\u003epath [children, tag \"name1\", attr \"attr1\", children, tag \"name2\"]\u003c/code\u003e\n   is like the XPath query \u003ccode\u003e/name1[@attr1]/name2\u003c/code\u003e.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Combinators",
          "name": "path",
          "package": "HaXml",
          "signature": "[CFilter i] -\u003e CFilter i",
          "source": "src/Text-XML-HaXml-Combinators.html#path",
          "type": "function"
        },
        "index": {
          "description": "Express list of filters like an XPath query e.g path children tag name1 attr attr1 children tag name2 is like the XPath query name1 attr1 name2",
          "hierarchy": "Text XML HaXml Combinators",
          "module": "Text.XML.HaXml.Combinators",
          "name": "path",
          "normalized": "[CFilter a]-\u003eCFilter a",
          "package": "HaXml",
          "signature": "[CFilter i]-\u003eCFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Combinators.html#v:path"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eSelect the \u003ccode\u003en\u003c/code\u003e'th positional result of a filter.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Combinators",
          "name": "position",
          "package": "HaXml",
          "signature": "Int -\u003e CFilter i -\u003e CFilter i",
          "source": "src/Text-XML-HaXml-Combinators.html#position",
          "type": "function"
        },
        "index": {
          "description": "Select the th positional result of filter",
          "hierarchy": "Text XML HaXml Combinators",
          "module": "Text.XML.HaXml.Combinators",
          "name": "position",
          "normalized": "Int-\u003eCFilter a-\u003eCFilter a",
          "package": "HaXml",
          "signature": "Int-\u003eCFilter i-\u003eCFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Combinators.html#v:position"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eReplace the attributes of an element (leaving tag the same).\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Combinators",
          "name": "replaceAttrs",
          "package": "HaXml",
          "signature": "[(String, String)] -\u003e CFilter i",
          "source": "src/Text-XML-HaXml-Combinators.html#replaceAttrs",
          "type": "function"
        },
        "index": {
          "description": "Replace the attributes of an element leaving tag the same",
          "hierarchy": "Text XML HaXml Combinators",
          "module": "Text.XML.HaXml.Combinators",
          "name": "replaceAttrs",
          "normalized": "[(String,String)]-\u003eCFilter a",
          "package": "HaXml",
          "partial": "Attrs",
          "signature": "[(String,String)]-\u003eCFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Combinators.html#v:replaceAttrs"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eRename an element tag (leaving attributes in place).\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Combinators",
          "name": "replaceTag",
          "package": "HaXml",
          "signature": "String -\u003e CFilter i",
          "source": "src/Text-XML-HaXml-Combinators.html#replaceTag",
          "type": "function"
        },
        "index": {
          "description": "Rename an element tag leaving attributes in place",
          "hierarchy": "Text XML HaXml Combinators",
          "module": "Text.XML.HaXml.Combinators",
          "name": "replaceTag",
          "normalized": "String-\u003eCFilter a",
          "package": "HaXml",
          "partial": "Tag",
          "signature": "String-\u003eCFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Combinators.html#v:replaceTag"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Combinators",
          "name": "tag",
          "package": "HaXml",
          "signature": "String -\u003e CFilter i",
          "source": "src/Text-XML-HaXml-Combinators.html#tag",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Combinators",
          "module": "Text.XML.HaXml.Combinators",
          "name": "tag",
          "normalized": "String-\u003eCFilter a",
          "package": "HaXml",
          "signature": "String-\u003eCFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Combinators.html#v:tag"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Combinators",
          "name": "tagWith",
          "package": "HaXml",
          "signature": "(String -\u003e Bool) -\u003e CFilter i",
          "source": "src/Text-XML-HaXml-Combinators.html#tagWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Combinators",
          "module": "Text.XML.HaXml.Combinators",
          "name": "tagWith",
          "normalized": "(String-\u003eBool)-\u003eCFilter a",
          "package": "HaXml",
          "partial": "With",
          "signature": "(String-\u003eBool)-\u003eCFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Combinators.html#v:tagWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eLabel each element in the result with its tag name.  Non-element\n   results get an empty string label.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Combinators",
          "name": "tagged",
          "package": "HaXml",
          "signature": "CFilter i -\u003e LabelFilter i String",
          "source": "src/Text-XML-HaXml-Combinators.html#tagged",
          "type": "function"
        },
        "index": {
          "description": "Label each element in the result with its tag name Non-element results get an empty string label",
          "hierarchy": "Text XML HaXml Combinators",
          "module": "Text.XML.HaXml.Combinators",
          "name": "tagged",
          "normalized": "CFilter a-\u003eLabelFilter a String",
          "package": "HaXml",
          "signature": "CFilter i-\u003eLabelFilter i String",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Combinators.html#v:tagged"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eLabel each textual part of the result with its text.  Element\n   results get an empty string label.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Combinators",
          "name": "textlabelled",
          "package": "HaXml",
          "signature": "CFilter i -\u003e LabelFilter i (Maybe String)",
          "source": "src/Text-XML-HaXml-Combinators.html#textlabelled",
          "type": "function"
        },
        "index": {
          "description": "Label each textual part of the result with its text Element results get an empty string label",
          "hierarchy": "Text XML HaXml Combinators",
          "module": "Text.XML.HaXml.Combinators",
          "name": "textlabelled",
          "normalized": "CFilter a-\u003eLabelFilter a(Maybe String)",
          "package": "HaXml",
          "signature": "CFilter i-\u003eLabelFilter i(Maybe String)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Combinators.html#v:textlabelled"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Combinators",
          "name": "txt",
          "package": "HaXml",
          "signature": "CFilter i",
          "source": "src/Text-XML-HaXml-Combinators.html#txt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Combinators",
          "module": "Text.XML.HaXml.Combinators",
          "name": "txt",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Combinators.html#v:txt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eBinary parallel composition.  Each filter uses a copy of the input,\n rather than one filter using the result of the other.\n   (Has a more general type than just CFilter.)\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Combinators",
          "name": "union",
          "package": "HaXml",
          "signature": "(a -\u003e [b]) -\u003e (a -\u003e [b]) -\u003e a -\u003e [b]",
          "source": "src/Text-XML-HaXml-Combinators.html#union",
          "type": "function"
        },
        "index": {
          "description": "Binary parallel composition Each filter uses copy of the input rather than one filter using the result of the other Has more general type than just CFilter",
          "hierarchy": "Text XML HaXml Combinators",
          "module": "Text.XML.HaXml.Combinators",
          "name": "union",
          "normalized": "(a-\u003e[b])-\u003e(a-\u003e[b])-\u003ea-\u003e[b]",
          "package": "HaXml",
          "signature": "(a-\u003e[b])-\u003e(a-\u003e[b])-\u003ea-\u003e[b]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Combinators.html#v:union"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eInterior editing:\n   \u003ccode\u003ef \u003ccode\u003e\u003ca\u003ewhen\u003c/a\u003e\u003c/code\u003e g\u003c/code\u003e applies \u003ccode\u003ef\u003c/code\u003e only when the predicate \u003ccode\u003eg\u003c/code\u003e succeeds,\n   otherwise the content is unchanged.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Combinators",
          "name": "when",
          "package": "HaXml",
          "signature": "CFilter i -\u003e CFilter i -\u003e CFilter i",
          "source": "src/Text-XML-HaXml-Combinators.html#when",
          "type": "function"
        },
        "index": {
          "description": "Interior editing when applies only when the predicate succeeds otherwise the content is unchanged",
          "hierarchy": "Text XML HaXml Combinators",
          "module": "Text.XML.HaXml.Combinators",
          "name": "when",
          "normalized": "CFilter a-\u003eCFilter a-\u003eCFilter a",
          "package": "HaXml",
          "signature": "CFilter i-\u003eCFilter i-\u003eCFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Combinators.html#v:when"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003ePruning: in \u003ccode\u003ef \u003ccode\u003e\u003ca\u003ewith\u003c/a\u003e\u003c/code\u003e g\u003c/code\u003e,\n   keep only those f-productions which have at least one g-production\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Combinators",
          "name": "with",
          "package": "HaXml",
          "signature": "CFilter i -\u003e CFilter i -\u003e CFilter i",
          "source": "src/Text-XML-HaXml-Combinators.html#with",
          "type": "function"
        },
        "index": {
          "description": "Pruning in with keep only those f-productions which have at least one g-production",
          "hierarchy": "Text XML HaXml Combinators",
          "module": "Text.XML.HaXml.Combinators",
          "name": "with",
          "normalized": "CFilter a-\u003eCFilter a-\u003eCFilter a",
          "package": "HaXml",
          "signature": "CFilter i-\u003eCFilter i-\u003eCFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Combinators.html#v:with"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003ePruning: in \u003ccode\u003ef \u003ccode\u003e\u003ca\u003ewithout\u003c/a\u003e\u003c/code\u003e g\u003c/code\u003e,\n   keep only those f-productions which have no g-productions\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Combinators",
          "name": "without",
          "package": "HaXml",
          "signature": "CFilter i -\u003e CFilter i -\u003e CFilter i",
          "source": "src/Text-XML-HaXml-Combinators.html#without",
          "type": "function"
        },
        "index": {
          "description": "Pruning in without keep only those f-productions which have no g-productions",
          "hierarchy": "Text XML HaXml Combinators",
          "module": "Text.XML.HaXml.Combinators",
          "name": "without",
          "normalized": "CFilter a-\u003eCFilter a-\u003eCFilter a",
          "package": "HaXml",
          "signature": "CFilter i-\u003eCFilter i-\u003eCFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Combinators.html#v:without"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eCombine labels.  Think of this as a pair-wise zip on labels.\n   e.g. \u003ccode\u003e(numbered \u003ccode\u003e\u003ca\u003ex\u003c/a\u003e\u003c/code\u003e tagged)\u003c/code\u003e\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Combinators",
          "name": "x",
          "package": "HaXml",
          "signature": "(CFilter i -\u003e LabelFilter i a) -\u003e (CFilter i -\u003e LabelFilter i b) -\u003e CFilter i -\u003e LabelFilter i (a, b)",
          "source": "src/Text-XML-HaXml-Combinators.html#x",
          "type": "function"
        },
        "index": {
          "description": "Combine labels Think of this as pair-wise zip on labels e.g numbered tagged",
          "hierarchy": "Text XML HaXml Combinators",
          "module": "Text.XML.HaXml.Combinators",
          "name": "x",
          "normalized": "(CFilter a-\u003eLabelFilter a b)-\u003e(CFilter a-\u003eLabelFilter a c)-\u003eCFilter a-\u003eLabelFilter a(b,c)",
          "package": "HaXml",
          "signature": "(CFilter i-\u003eLabelFilter i a)-\u003e(CFilter i-\u003eLabelFilter i b)-\u003eCFilter i-\u003eLabelFilter i(a,b)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Combinators.html#v:x"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThis module performs the translation of a parsed XML DTD into the\n   internal representation of corresponding Haskell data/newtypes.\n\u003c/p\u003e\u003cp\u003eNote that dtdToTypeDef is partial - it will crash if you resolve\n   qualified names (namespaces) to URIs beforehand.  It will only work\n   on the original literal name forms \u003ca\u003eprefix:name\u003c/a\u003e.\n\u003c/p\u003e\u003c/div\u003e",
          "module": "Text.XML.HaXml.DtdToHaskell.Convert",
          "name": "Convert",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-DtdToHaskell-Convert.html",
          "type": "module"
        },
        "index": {
          "description": "This module performs the translation of parsed XML DTD into the internal representation of corresponding Haskell data newtypes Note that dtdToTypeDef is partial it will crash if you resolve qualified names namespaces to URIs beforehand It will only work on the original literal name forms prefix name",
          "hierarchy": "Text XML HaXml DtdToHaskell Convert",
          "module": "Text.XML.HaXml.DtdToHaskell.Convert",
          "name": "Convert",
          "package": "HaXml",
          "partial": "Convert",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-DtdToHaskell-Convert.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.DtdToHaskell.Convert",
          "name": "dtd2TypeDef",
          "package": "HaXml",
          "signature": "[MarkupDecl] -\u003e [TypeDef]",
          "source": "src/Text-XML-HaXml-DtdToHaskell-Convert.html#dtd2TypeDef",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml DtdToHaskell Convert",
          "module": "Text.XML.HaXml.DtdToHaskell.Convert",
          "name": "dtd2TypeDef",
          "normalized": "[MarkupDecl]-\u003e[TypeDef]",
          "package": "HaXml",
          "partial": "Type Def",
          "signature": "[MarkupDecl]-\u003e[TypeDef]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-DtdToHaskell-Convert.html#v:dtd2TypeDef"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.DtdToHaskell.Instance",
          "name": "Instance",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-DtdToHaskell-Instance.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "Text XML HaXml DtdToHaskell Instance",
          "module": "Text.XML.HaXml.DtdToHaskell.Instance",
          "name": "Instance",
          "package": "HaXml",
          "partial": "Instance",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-DtdToHaskell-Instance.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eConvert typedef to appropriate instance declaration, either \u003ccode\u003eXmlContent\u003c/code\u003e,\n   \u003ccode\u003eXmlAttributes\u003c/code\u003e, or \u003ccode\u003eXmlAttrType\u003c/code\u003e.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.DtdToHaskell.Instance",
          "name": "mkInstance",
          "package": "HaXml",
          "signature": "TypeDef -\u003e Doc",
          "source": "src/Text-XML-HaXml-DtdToHaskell-Instance.html#mkInstance",
          "type": "function"
        },
        "index": {
          "description": "Convert typedef to appropriate instance declaration either XmlContent XmlAttributes or XmlAttrType",
          "hierarchy": "Text XML HaXml DtdToHaskell Instance",
          "module": "Text.XML.HaXml.DtdToHaskell.Instance",
          "name": "mkInstance",
          "normalized": "TypeDef-\u003eDoc",
          "package": "HaXml",
          "partial": "Instance",
          "signature": "TypeDef-\u003eDoc",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-DtdToHaskell-Instance.html#v:mkInstance"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eDefines an internal representation of Haskell data/newtype definitions\n   that correspond to the XML DTD types, and provides pretty-printers to\n   convert these types into the \u003ccode\u003e\u003ca\u003eDoc\u003c/a\u003e\u003c/code\u003e type of \u003ca\u003eText.PrettyPrint.HughesPJ\u003c/a\u003e.\n\u003c/p\u003e\u003c/div\u003e",
          "module": "Text.XML.HaXml.DtdToHaskell.TypeDef",
          "name": "TypeDef",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-DtdToHaskell-TypeDef.html",
          "type": "module"
        },
        "index": {
          "description": "Defines an internal representation of Haskell data newtype definitions that correspond to the XML DTD types and provides pretty-printers to convert these types into the Doc type of Text.PrettyPrint.HughesPJ",
          "hierarchy": "Text XML HaXml DtdToHaskell TypeDef",
          "module": "Text.XML.HaXml.DtdToHaskell.TypeDef",
          "name": "TypeDef",
          "package": "HaXml",
          "partial": "Type Def",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-DtdToHaskell-TypeDef.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.DtdToHaskell.TypeDef",
          "name": "AttrFields",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-DtdToHaskell-TypeDef.html#AttrFields",
          "type": "type"
        },
        "index": {
          "hierarchy": "Text XML HaXml DtdToHaskell TypeDef",
          "module": "Text.XML.HaXml.DtdToHaskell.TypeDef",
          "name": "AttrFields",
          "package": "HaXml",
          "partial": "Attr Fields",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-DtdToHaskell-TypeDef.html#t:AttrFields"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.DtdToHaskell.TypeDef",
          "name": "Constructors",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-DtdToHaskell-TypeDef.html#Constructors",
          "type": "type"
        },
        "index": {
          "hierarchy": "Text XML HaXml DtdToHaskell TypeDef",
          "module": "Text.XML.HaXml.DtdToHaskell.TypeDef",
          "name": "Constructors",
          "package": "HaXml",
          "partial": "Constructors",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-DtdToHaskell-TypeDef.html#t:Constructors"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eNeed to keep both the XML and Haskell versions of a name.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.DtdToHaskell.TypeDef",
          "name": "Name",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-DtdToHaskell-TypeDef.html#Name",
          "type": "data"
        },
        "index": {
          "description": "Need to keep both the XML and Haskell versions of name",
          "hierarchy": "Text XML HaXml DtdToHaskell TypeDef",
          "module": "Text.XML.HaXml.DtdToHaskell.TypeDef",
          "name": "Name",
          "package": "HaXml",
          "partial": "Name",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-DtdToHaskell-TypeDef.html#t:Name"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.DtdToHaskell.TypeDef",
          "name": "StructType",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-DtdToHaskell-TypeDef.html#StructType",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml DtdToHaskell TypeDef",
          "module": "Text.XML.HaXml.DtdToHaskell.TypeDef",
          "name": "StructType",
          "package": "HaXml",
          "partial": "Struct Type",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-DtdToHaskell-TypeDef.html#t:StructType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.DtdToHaskell.TypeDef",
          "name": "TypeDef",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-DtdToHaskell-TypeDef.html#TypeDef",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml DtdToHaskell TypeDef",
          "module": "Text.XML.HaXml.DtdToHaskell.TypeDef",
          "name": "TypeDef",
          "package": "HaXml",
          "partial": "Type Def",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-DtdToHaskell-TypeDef.html#t:TypeDef"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eXML's contentspec allows ANY\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.DtdToHaskell.TypeDef",
          "name": "Any",
          "package": "HaXml",
          "signature": "Any",
          "source": "src/Text-XML-HaXml-DtdToHaskell-TypeDef.html#StructType",
          "type": "function"
        },
        "index": {
          "description": "XML contentspec allows ANY",
          "hierarchy": "Text XML HaXml DtdToHaskell TypeDef",
          "module": "Text.XML.HaXml.DtdToHaskell.TypeDef",
          "name": "Any",
          "package": "HaXml",
          "partial": "Any",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-DtdToHaskell-TypeDef.html#v:Any"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eBool for main/aux.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.DtdToHaskell.TypeDef",
          "name": "DataDef",
          "package": "HaXml",
          "signature": "DataDef Bool Name AttrFields Constructors",
          "source": "src/Text-XML-HaXml-DtdToHaskell-TypeDef.html#TypeDef",
          "type": "function"
        },
        "index": {
          "description": "Bool for main aux",
          "hierarchy": "Text XML HaXml DtdToHaskell TypeDef",
          "module": "Text.XML.HaXml.DtdToHaskell.TypeDef",
          "name": "DataDef",
          "package": "HaXml",
          "partial": "Data Def",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-DtdToHaskell-TypeDef.html#v:DataDef"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eString holds default value.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.DtdToHaskell.TypeDef",
          "name": "Defaultable",
          "package": "HaXml",
          "signature": "Defaultable StructType String",
          "source": "src/Text-XML-HaXml-DtdToHaskell-TypeDef.html#StructType",
          "type": "function"
        },
        "index": {
          "description": "String holds default value",
          "hierarchy": "Text XML HaXml DtdToHaskell TypeDef",
          "module": "Text.XML.HaXml.DtdToHaskell.TypeDef",
          "name": "Defaultable",
          "package": "HaXml",
          "partial": "Defaultable",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-DtdToHaskell-TypeDef.html#v:Defaultable"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.DtdToHaskell.TypeDef",
          "name": "Defined",
          "package": "HaXml",
          "signature": "Defined Name",
          "source": "src/Text-XML-HaXml-DtdToHaskell-TypeDef.html#StructType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml DtdToHaskell TypeDef",
          "module": "Text.XML.HaXml.DtdToHaskell.TypeDef",
          "name": "Defined",
          "package": "HaXml",
          "partial": "Defined",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-DtdToHaskell-TypeDef.html#v:Defined"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.DtdToHaskell.TypeDef",
          "name": "EnumDef",
          "package": "HaXml",
          "signature": "EnumDef Name [Name]",
          "source": "src/Text-XML-HaXml-DtdToHaskell-TypeDef.html#TypeDef",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml DtdToHaskell TypeDef",
          "module": "Text.XML.HaXml.DtdToHaskell.TypeDef",
          "name": "EnumDef",
          "normalized": "EnumDef Name[Name]",
          "package": "HaXml",
          "partial": "Enum Def",
          "signature": "EnumDef Name[Name]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-DtdToHaskell-TypeDef.html#v:EnumDef"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.DtdToHaskell.TypeDef",
          "name": "List",
          "package": "HaXml",
          "signature": "List StructType",
          "source": "src/Text-XML-HaXml-DtdToHaskell-TypeDef.html#StructType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml DtdToHaskell TypeDef",
          "module": "Text.XML.HaXml.DtdToHaskell.TypeDef",
          "name": "List",
          "package": "HaXml",
          "partial": "List",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-DtdToHaskell-TypeDef.html#v:List"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eNon-empty lists.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.DtdToHaskell.TypeDef",
          "name": "List1",
          "package": "HaXml",
          "signature": "List1 StructType",
          "source": "src/Text-XML-HaXml-DtdToHaskell-TypeDef.html#StructType",
          "type": "function"
        },
        "index": {
          "description": "Non-empty lists",
          "hierarchy": "Text XML HaXml DtdToHaskell TypeDef",
          "module": "Text.XML.HaXml.DtdToHaskell.TypeDef",
          "name": "List1",
          "package": "HaXml",
          "partial": "List",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-DtdToHaskell-TypeDef.html#v:List1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.DtdToHaskell.TypeDef",
          "name": "Maybe",
          "package": "HaXml",
          "signature": "Maybe StructType",
          "source": "src/Text-XML-HaXml-DtdToHaskell-TypeDef.html#StructType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml DtdToHaskell TypeDef",
          "module": "Text.XML.HaXml.DtdToHaskell.TypeDef",
          "name": "Maybe",
          "package": "HaXml",
          "partial": "Maybe",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-DtdToHaskell-TypeDef.html#v:Maybe"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.DtdToHaskell.TypeDef",
          "name": "Name",
          "package": "HaXml",
          "signature": "Name",
          "source": "src/Text-XML-HaXml-DtdToHaskell-TypeDef.html#Name",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml DtdToHaskell TypeDef",
          "module": "Text.XML.HaXml.DtdToHaskell.TypeDef",
          "name": "Name",
          "package": "HaXml",
          "partial": "Name",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-DtdToHaskell-TypeDef.html#v:Name"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.DtdToHaskell.TypeDef",
          "name": "OneOf",
          "package": "HaXml",
          "signature": "OneOf [StructType]",
          "source": "src/Text-XML-HaXml-DtdToHaskell-TypeDef.html#StructType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml DtdToHaskell TypeDef",
          "module": "Text.XML.HaXml.DtdToHaskell.TypeDef",
          "name": "OneOf",
          "normalized": "OneOf[StructType]",
          "package": "HaXml",
          "partial": "One Of",
          "signature": "OneOf[StructType]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-DtdToHaskell-TypeDef.html#v:OneOf"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003estring only (#PCDATA)\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.DtdToHaskell.TypeDef",
          "name": "String",
          "package": "HaXml",
          "signature": "String",
          "source": "src/Text-XML-HaXml-DtdToHaskell-TypeDef.html#StructType",
          "type": "function"
        },
        "index": {
          "description": "string only PCDATA",
          "hierarchy": "Text XML HaXml DtdToHaskell TypeDef",
          "module": "Text.XML.HaXml.DtdToHaskell.TypeDef",
          "name": "String",
          "package": "HaXml",
          "partial": "String",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-DtdToHaskell-TypeDef.html#v:String"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003emixed (#PCDATA | ... )*\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.DtdToHaskell.TypeDef",
          "name": "StringMixed",
          "package": "HaXml",
          "signature": "StringMixed",
          "source": "src/Text-XML-HaXml-DtdToHaskell-TypeDef.html#StructType",
          "type": "function"
        },
        "index": {
          "description": "mixed PCDATA",
          "hierarchy": "Text XML HaXml DtdToHaskell TypeDef",
          "module": "Text.XML.HaXml.DtdToHaskell.TypeDef",
          "name": "StringMixed",
          "package": "HaXml",
          "partial": "String Mixed",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-DtdToHaskell-TypeDef.html#v:StringMixed"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.DtdToHaskell.TypeDef",
          "name": "Tuple",
          "package": "HaXml",
          "signature": "Tuple [StructType]",
          "source": "src/Text-XML-HaXml-DtdToHaskell-TypeDef.html#StructType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml DtdToHaskell TypeDef",
          "module": "Text.XML.HaXml.DtdToHaskell.TypeDef",
          "name": "Tuple",
          "normalized": "Tuple[StructType]",
          "package": "HaXml",
          "partial": "Tuple",
          "signature": "Tuple[StructType]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-DtdToHaskell-TypeDef.html#v:Tuple"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003emangled Haskell name\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.DtdToHaskell.TypeDef",
          "name": "hName",
          "package": "HaXml",
          "signature": "String",
          "source": "src/Text-XML-HaXml-DtdToHaskell-TypeDef.html#Name",
          "type": "function"
        },
        "index": {
          "description": "mangled Haskell name",
          "hierarchy": "Text XML HaXml DtdToHaskell TypeDef",
          "module": "Text.XML.HaXml.DtdToHaskell.TypeDef",
          "name": "hName",
          "package": "HaXml",
          "partial": "Name",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-DtdToHaskell-TypeDef.html#v:hName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eConvert an XML name to a Haskell conid.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.DtdToHaskell.TypeDef",
          "name": "mangle",
          "package": "HaXml",
          "signature": "String -\u003e String",
          "source": "src/Text-XML-HaXml-DtdToHaskell-TypeDef.html#mangle",
          "type": "function"
        },
        "index": {
          "description": "Convert an XML name to Haskell conid",
          "hierarchy": "Text XML HaXml DtdToHaskell TypeDef",
          "module": "Text.XML.HaXml.DtdToHaskell.TypeDef",
          "name": "mangle",
          "normalized": "String-\u003eString",
          "package": "HaXml",
          "signature": "String-\u003eString",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-DtdToHaskell-TypeDef.html#v:mangle"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eConvert an XML name to a Haskell varid.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.DtdToHaskell.TypeDef",
          "name": "manglef",
          "package": "HaXml",
          "signature": "String -\u003e String",
          "source": "src/Text-XML-HaXml-DtdToHaskell-TypeDef.html#manglef",
          "type": "function"
        },
        "index": {
          "description": "Convert an XML name to Haskell varid",
          "hierarchy": "Text XML HaXml DtdToHaskell TypeDef",
          "module": "Text.XML.HaXml.DtdToHaskell.TypeDef",
          "name": "manglef",
          "normalized": "String-\u003eString",
          "package": "HaXml",
          "signature": "String-\u003eString",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-DtdToHaskell-TypeDef.html#v:manglef"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eMake a type name valid in both XML and Haskell.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.DtdToHaskell.TypeDef",
          "name": "name",
          "package": "HaXml",
          "signature": "String -\u003e Name",
          "source": "src/Text-XML-HaXml-DtdToHaskell-TypeDef.html#name",
          "type": "function"
        },
        "index": {
          "description": "Make type name valid in both XML and Haskell",
          "hierarchy": "Text XML HaXml DtdToHaskell TypeDef",
          "module": "Text.XML.HaXml.DtdToHaskell.TypeDef",
          "name": "name",
          "normalized": "String-\u003eName",
          "package": "HaXml",
          "signature": "String-\u003eName",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-DtdToHaskell-TypeDef.html#v:name"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eAppend an underscore to the Haskell version of the name.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.DtdToHaskell.TypeDef",
          "name": "name_",
          "package": "HaXml",
          "signature": "String -\u003e Name",
          "source": "src/Text-XML-HaXml-DtdToHaskell-TypeDef.html#name_",
          "type": "function"
        },
        "index": {
          "description": "Append an underscore to the Haskell version of the name",
          "hierarchy": "Text XML HaXml DtdToHaskell TypeDef",
          "module": "Text.XML.HaXml.DtdToHaskell.TypeDef",
          "name": "name_",
          "normalized": "String-\u003eName",
          "package": "HaXml",
          "signature": "String-\u003eName",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-DtdToHaskell-TypeDef.html#v:name_"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003ePrefix an attribute enumeration type name with its containing element\n   name.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.DtdToHaskell.TypeDef",
          "name": "name_a",
          "package": "HaXml",
          "signature": "String -\u003e String -\u003e Name",
          "source": "src/Text-XML-HaXml-DtdToHaskell-TypeDef.html#name_a",
          "type": "function"
        },
        "index": {
          "description": "Prefix an attribute enumeration type name with its containing element name",
          "hierarchy": "Text XML HaXml DtdToHaskell TypeDef",
          "module": "Text.XML.HaXml.DtdToHaskell.TypeDef",
          "name": "name_a",
          "normalized": "String-\u003eString-\u003eName",
          "package": "HaXml",
          "signature": "String-\u003eString-\u003eName",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-DtdToHaskell-TypeDef.html#v:name_a"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003ePrefix an attribute enumeration constructor with its element-tag name,\n   and its enumeration type name.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.DtdToHaskell.TypeDef",
          "name": "name_ac",
          "package": "HaXml",
          "signature": "String -\u003e String -\u003e String -\u003e Name",
          "source": "src/Text-XML-HaXml-DtdToHaskell-TypeDef.html#name_ac",
          "type": "function"
        },
        "index": {
          "description": "Prefix an attribute enumeration constructor with its element-tag name and its enumeration type name",
          "hierarchy": "Text XML HaXml DtdToHaskell TypeDef",
          "module": "Text.XML.HaXml.DtdToHaskell.TypeDef",
          "name": "name_ac",
          "normalized": "String-\u003eString-\u003eString-\u003eName",
          "package": "HaXml",
          "signature": "String-\u003eString-\u003eString-\u003eName",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-DtdToHaskell-TypeDef.html#v:name_ac"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003ePrefix a field name with its enclosing element name.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.DtdToHaskell.TypeDef",
          "name": "name_f",
          "package": "HaXml",
          "signature": "String -\u003e String -\u003e Name",
          "source": "src/Text-XML-HaXml-DtdToHaskell-TypeDef.html#name_f",
          "type": "function"
        },
        "index": {
          "description": "Prefix field name with its enclosing element name",
          "hierarchy": "Text XML HaXml DtdToHaskell TypeDef",
          "module": "Text.XML.HaXml.DtdToHaskell.TypeDef",
          "name": "name_f",
          "normalized": "String-\u003eString-\u003eName",
          "package": "HaXml",
          "signature": "String-\u003eString-\u003eName",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-DtdToHaskell-TypeDef.html#v:name_f"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003ePretty print Haskell attributes name.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.DtdToHaskell.TypeDef",
          "name": "ppAName",
          "package": "HaXml",
          "signature": "Name -\u003e Doc",
          "source": "src/Text-XML-HaXml-DtdToHaskell-TypeDef.html#ppAName",
          "type": "function"
        },
        "index": {
          "description": "Pretty print Haskell attributes name",
          "hierarchy": "Text XML HaXml DtdToHaskell TypeDef",
          "module": "Text.XML.HaXml.DtdToHaskell.TypeDef",
          "name": "ppAName",
          "normalized": "Name-\u003eDoc",
          "package": "HaXml",
          "partial": "AName",
          "signature": "Name-\u003eDoc",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-DtdToHaskell-TypeDef.html#v:ppAName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003ePretty print Haskell name.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.DtdToHaskell.TypeDef",
          "name": "ppHName",
          "package": "HaXml",
          "signature": "Name -\u003e Doc",
          "source": "src/Text-XML-HaXml-DtdToHaskell-TypeDef.html#ppHName",
          "type": "function"
        },
        "index": {
          "description": "Pretty print Haskell name",
          "hierarchy": "Text XML HaXml DtdToHaskell TypeDef",
          "module": "Text.XML.HaXml.DtdToHaskell.TypeDef",
          "name": "ppHName",
          "normalized": "Name-\u003eDoc",
          "package": "HaXml",
          "partial": "HName",
          "signature": "Name-\u003eDoc",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-DtdToHaskell-TypeDef.html#v:ppHName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.DtdToHaskell.TypeDef",
          "name": "ppTypeDef",
          "package": "HaXml",
          "signature": "TypeDef -\u003e Doc",
          "source": "src/Text-XML-HaXml-DtdToHaskell-TypeDef.html#ppTypeDef",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml DtdToHaskell TypeDef",
          "module": "Text.XML.HaXml.DtdToHaskell.TypeDef",
          "name": "ppTypeDef",
          "normalized": "TypeDef-\u003eDoc",
          "package": "HaXml",
          "partial": "Type Def",
          "signature": "TypeDef-\u003eDoc",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-DtdToHaskell-TypeDef.html#v:ppTypeDef"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003ePretty print XML name.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.DtdToHaskell.TypeDef",
          "name": "ppXName",
          "package": "HaXml",
          "signature": "Name -\u003e Doc",
          "source": "src/Text-XML-HaXml-DtdToHaskell-TypeDef.html#ppXName",
          "type": "function"
        },
        "index": {
          "description": "Pretty print XML name",
          "hierarchy": "Text XML HaXml DtdToHaskell TypeDef",
          "module": "Text.XML.HaXml.DtdToHaskell.TypeDef",
          "name": "ppXName",
          "normalized": "Name-\u003eDoc",
          "package": "HaXml",
          "partial": "XName",
          "signature": "Name-\u003eDoc",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-DtdToHaskell-TypeDef.html#v:ppXName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eoriginal XML name\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.DtdToHaskell.TypeDef",
          "name": "xName",
          "package": "HaXml",
          "signature": "String",
          "source": "src/Text-XML-HaXml-DtdToHaskell-TypeDef.html#Name",
          "type": "function"
        },
        "index": {
          "description": "original XML name",
          "hierarchy": "Text XML HaXml DtdToHaskell TypeDef",
          "module": "Text.XML.HaXml.DtdToHaskell.TypeDef",
          "name": "xName",
          "package": "HaXml",
          "partial": "Name",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-DtdToHaskell-TypeDef.html#v:xName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Escape",
          "name": "Escape",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Escape.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "Text XML HaXml Escape",
          "module": "Text.XML.HaXml.Escape",
          "name": "Escape",
          "package": "HaXml",
          "partial": "Escape",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Escape.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Escape",
          "name": "XmlEscaper",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Escape.html#XmlEscaper",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Escape",
          "module": "Text.XML.HaXml.Escape",
          "name": "XmlEscaper",
          "package": "HaXml",
          "partial": "Xml Escaper",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Escape.html#t:XmlEscaper"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Escape",
          "name": "mkXmlEscaper",
          "package": "HaXml",
          "signature": "[(Char, String)] -\u003e (Char -\u003e Bool) -\u003e XmlEscaper",
          "source": "src/Text-XML-HaXml-Escape.html#mkXmlEscaper",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Escape",
          "module": "Text.XML.HaXml.Escape",
          "name": "mkXmlEscaper",
          "normalized": "[(Char,String)]-\u003e(Char-\u003eBool)-\u003eXmlEscaper",
          "package": "HaXml",
          "partial": "Xml Escaper",
          "signature": "[(Char,String)]-\u003e(Char-\u003eBool)-\u003eXmlEscaper",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Escape.html#v:mkXmlEscaper"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Escape",
          "name": "stdXmlEscaper",
          "package": "HaXml",
          "signature": "XmlEscaper",
          "source": "src/Text-XML-HaXml-Escape.html#stdXmlEscaper",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Escape",
          "module": "Text.XML.HaXml.Escape",
          "name": "stdXmlEscaper",
          "package": "HaXml",
          "partial": "Xml Escaper",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Escape.html#v:stdXmlEscaper"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Escape",
          "name": "xmlEscape",
          "package": "HaXml",
          "signature": "XmlEscaper -\u003e Element i -\u003e Element i",
          "source": "src/Text-XML-HaXml-Escape.html#xmlEscape",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Escape",
          "module": "Text.XML.HaXml.Escape",
          "name": "xmlEscape",
          "normalized": "XmlEscaper-\u003eElement a-\u003eElement a",
          "package": "HaXml",
          "partial": "Escape",
          "signature": "XmlEscaper-\u003eElement i-\u003eElement i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Escape.html#v:xmlEscape"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Escape",
          "name": "xmlEscapeContent",
          "package": "HaXml",
          "signature": "XmlEscaper -\u003e [Content i] -\u003e [Content i]",
          "source": "src/Text-XML-HaXml-Escape.html#xmlEscapeContent",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Escape",
          "module": "Text.XML.HaXml.Escape",
          "name": "xmlEscapeContent",
          "normalized": "XmlEscaper-\u003e[Content a]-\u003e[Content a]",
          "package": "HaXml",
          "partial": "Escape Content",
          "signature": "XmlEscaper-\u003e[Content i]-\u003e[Content i]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Escape.html#v:xmlEscapeContent"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Escape",
          "name": "xmlUnEscape",
          "package": "HaXml",
          "signature": "XmlEscaper -\u003e Element i -\u003e Element i",
          "source": "src/Text-XML-HaXml-Escape.html#xmlUnEscape",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Escape",
          "module": "Text.XML.HaXml.Escape",
          "name": "xmlUnEscape",
          "normalized": "XmlEscaper-\u003eElement a-\u003eElement a",
          "package": "HaXml",
          "partial": "Un Escape",
          "signature": "XmlEscaper-\u003eElement i-\u003eElement i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Escape.html#v:xmlUnEscape"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Escape",
          "name": "xmlUnEscapeContent",
          "package": "HaXml",
          "signature": "XmlEscaper -\u003e [Content i] -\u003e [Content i]",
          "source": "src/Text-XML-HaXml-Escape.html#xmlUnEscapeContent",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Escape",
          "module": "Text.XML.HaXml.Escape",
          "name": "xmlUnEscapeContent",
          "normalized": "XmlEscaper-\u003e[Content a]-\u003e[Content a]",
          "package": "HaXml",
          "partial": "Un Escape Content",
          "signature": "XmlEscaper-\u003e[Content i]-\u003e[Content i]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Escape.html#v:xmlUnEscapeContent"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThese are just some common abbreviations for generating HTML\n   content within the XML transformation framework defined\n   by \u003ca\u003eText.Xml.HaXml.Combinators\u003c/a\u003e.\n\u003c/p\u003e\u003c/div\u003e",
          "module": "Text.XML.HaXml.Html.Generate",
          "name": "Generate",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Html-Generate.html",
          "type": "module"
        },
        "index": {
          "description": "These are just some common abbreviations for generating HTML content within the XML transformation framework defined by Text.Xml.HaXml.Combinators",
          "hierarchy": "Text XML HaXml Html Generate",
          "module": "Text.XML.HaXml.Html.Generate",
          "name": "Generate",
          "package": "HaXml",
          "partial": "Generate",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Html-Generate.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Html.Generate",
          "name": "(!)",
          "package": "HaXml",
          "signature": "String -\u003e CFilter i",
          "source": "src/Text-XML-HaXml-Html-Generate.html#%21",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Html Generate",
          "module": "Text.XML.HaXml.Html.Generate",
          "name": "(!) !",
          "normalized": "String-\u003eCFilter a",
          "package": "HaXml",
          "signature": "String-\u003eCFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Html-Generate.html#v:-33-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Html.Generate",
          "name": "(?)",
          "package": "HaXml",
          "signature": "String -\u003e CFilter i",
          "source": "src/Text-XML-HaXml-Html-Generate.html#%3F",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Html Generate",
          "module": "Text.XML.HaXml.Html.Generate",
          "name": "(?) ?",
          "normalized": "String-\u003eCFilter a",
          "package": "HaXml",
          "signature": "String-\u003eCFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Html-Generate.html#v:-63-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Html.Generate",
          "name": "anchor",
          "package": "HaXml",
          "signature": "[(String, CFilter i)] -\u003e [CFilter i] -\u003e CFilter i",
          "source": "src/Text-XML-HaXml-Html-Generate.html#anchor",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Html Generate",
          "module": "Text.XML.HaXml.Html.Generate",
          "name": "anchor",
          "normalized": "[(String,CFilter a)]-\u003e[CFilter a]-\u003eCFilter a",
          "package": "HaXml",
          "signature": "[(String,CFilter i)]-\u003e[CFilter i]-\u003eCFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Html-Generate.html#v:anchor"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Html.Generate",
          "name": "anchorname",
          "package": "HaXml",
          "signature": "CFilter i -\u003e [CFilter i] -\u003e CFilter i",
          "source": "src/Text-XML-HaXml-Html-Generate.html#anchorname",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Html Generate",
          "module": "Text.XML.HaXml.Html.Generate",
          "name": "anchorname",
          "normalized": "CFilter a-\u003e[CFilter a]-\u003eCFilter a",
          "package": "HaXml",
          "signature": "CFilter i-\u003e[CFilter i]-\u003eCFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Html-Generate.html#v:anchorname"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Html.Generate",
          "name": "bullet",
          "package": "HaXml",
          "signature": "[CFilter i] -\u003e CFilter i",
          "source": "src/Text-XML-HaXml-Html-Generate.html#bullet",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Html Generate",
          "module": "Text.XML.HaXml.Html.Generate",
          "name": "bullet",
          "normalized": "[CFilter a]-\u003eCFilter a",
          "package": "HaXml",
          "signature": "[CFilter i]-\u003eCFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Html-Generate.html#v:bullet"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Html.Generate",
          "name": "h1",
          "package": "HaXml",
          "signature": "[CFilter i] -\u003e CFilter i",
          "source": "src/Text-XML-HaXml-Html-Generate.html#h1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Html Generate",
          "module": "Text.XML.HaXml.Html.Generate",
          "name": "h1",
          "normalized": "[CFilter a]-\u003eCFilter a",
          "package": "HaXml",
          "signature": "[CFilter i]-\u003eCFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Html-Generate.html#v:h1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Html.Generate",
          "name": "h2",
          "package": "HaXml",
          "signature": "[CFilter i] -\u003e CFilter i",
          "source": "src/Text-XML-HaXml-Html-Generate.html#h2",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Html Generate",
          "module": "Text.XML.HaXml.Html.Generate",
          "name": "h2",
          "normalized": "[CFilter a]-\u003eCFilter a",
          "package": "HaXml",
          "signature": "[CFilter i]-\u003eCFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Html-Generate.html#v:h2"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Html.Generate",
          "name": "h3",
          "package": "HaXml",
          "signature": "[CFilter i] -\u003e CFilter i",
          "source": "src/Text-XML-HaXml-Html-Generate.html#h3",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Html Generate",
          "module": "Text.XML.HaXml.Html.Generate",
          "name": "h3",
          "normalized": "[CFilter a]-\u003eCFilter a",
          "package": "HaXml",
          "signature": "[CFilter i]-\u003eCFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Html-Generate.html#v:h3"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Html.Generate",
          "name": "h4",
          "package": "HaXml",
          "signature": "[CFilter i] -\u003e CFilter i",
          "source": "src/Text-XML-HaXml-Html-Generate.html#h4",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Html Generate",
          "module": "Text.XML.HaXml.Html.Generate",
          "name": "h4",
          "normalized": "[CFilter a]-\u003eCFilter a",
          "package": "HaXml",
          "signature": "[CFilter i]-\u003eCFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Html-Generate.html#v:h4"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Html.Generate",
          "name": "hbody",
          "package": "HaXml",
          "signature": "[CFilter i] -\u003e CFilter i",
          "source": "src/Text-XML-HaXml-Html-Generate.html#hbody",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Html Generate",
          "module": "Text.XML.HaXml.Html.Generate",
          "name": "hbody",
          "normalized": "[CFilter a]-\u003eCFilter a",
          "package": "HaXml",
          "signature": "[CFilter i]-\u003eCFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Html-Generate.html#v:hbody"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Html.Generate",
          "name": "hbold",
          "package": "HaXml",
          "signature": "[CFilter i] -\u003e CFilter i",
          "source": "src/Text-XML-HaXml-Html-Generate.html#hbold",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Html Generate",
          "module": "Text.XML.HaXml.Html.Generate",
          "name": "hbold",
          "normalized": "[CFilter a]-\u003eCFilter a",
          "package": "HaXml",
          "signature": "[CFilter i]-\u003eCFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Html-Generate.html#v:hbold"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Html.Generate",
          "name": "hbr",
          "package": "HaXml",
          "signature": "CFilter i",
          "source": "src/Text-XML-HaXml-Html-Generate.html#hbr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Html Generate",
          "module": "Text.XML.HaXml.Html.Generate",
          "name": "hbr",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Html-Generate.html#v:hbr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Html.Generate",
          "name": "hcentre",
          "package": "HaXml",
          "signature": "[CFilter i] -\u003e CFilter i",
          "source": "src/Text-XML-HaXml-Html-Generate.html#hcentre",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Html Generate",
          "module": "Text.XML.HaXml.Html.Generate",
          "name": "hcentre",
          "normalized": "[CFilter a]-\u003eCFilter a",
          "package": "HaXml",
          "signature": "[CFilter i]-\u003eCFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Html-Generate.html#v:hcentre"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Html.Generate",
          "name": "hcol",
          "package": "HaXml",
          "signature": "[CFilter i] -\u003e CFilter i",
          "source": "src/Text-XML-HaXml-Html-Generate.html#hcol",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Html Generate",
          "module": "Text.XML.HaXml.Html.Generate",
          "name": "hcol",
          "normalized": "[CFilter a]-\u003eCFilter a",
          "package": "HaXml",
          "signature": "[CFilter i]-\u003eCFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Html-Generate.html#v:hcol"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Html.Generate",
          "name": "hdiv",
          "package": "HaXml",
          "signature": "[CFilter i] -\u003e CFilter i",
          "source": "src/Text-XML-HaXml-Html-Generate.html#hdiv",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Html Generate",
          "module": "Text.XML.HaXml.Html.Generate",
          "name": "hdiv",
          "normalized": "[CFilter a]-\u003eCFilter a",
          "package": "HaXml",
          "signature": "[CFilter i]-\u003eCFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Html-Generate.html#v:hdiv"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Html.Generate",
          "name": "hem",
          "package": "HaXml",
          "signature": "[CFilter i] -\u003e CFilter i",
          "source": "src/Text-XML-HaXml-Html-Generate.html#hem",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Html Generate",
          "module": "Text.XML.HaXml.Html.Generate",
          "name": "hem",
          "normalized": "[CFilter a]-\u003eCFilter a",
          "package": "HaXml",
          "signature": "[CFilter i]-\u003eCFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Html-Generate.html#v:hem"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Html.Generate",
          "name": "hhead",
          "package": "HaXml",
          "signature": "[CFilter i] -\u003e CFilter i",
          "source": "src/Text-XML-HaXml-Html-Generate.html#hhead",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Html Generate",
          "module": "Text.XML.HaXml.Html.Generate",
          "name": "hhead",
          "normalized": "[CFilter a]-\u003eCFilter a",
          "package": "HaXml",
          "signature": "[CFilter i]-\u003eCFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Html-Generate.html#v:hhead"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Html.Generate",
          "name": "hhr",
          "package": "HaXml",
          "signature": "CFilter i",
          "source": "src/Text-XML-HaXml-Html-Generate.html#hhr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Html Generate",
          "module": "Text.XML.HaXml.Html.Generate",
          "name": "hhr",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Html-Generate.html#v:hhr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Html.Generate",
          "name": "hpara",
          "package": "HaXml",
          "signature": "[CFilter i] -\u003e CFilter i",
          "source": "src/Text-XML-HaXml-Html-Generate.html#hpara",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Html Generate",
          "module": "Text.XML.HaXml.Html.Generate",
          "name": "hpara",
          "normalized": "[CFilter a]-\u003eCFilter a",
          "package": "HaXml",
          "signature": "[CFilter i]-\u003eCFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Html-Generate.html#v:hpara"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Html.Generate",
          "name": "hpre",
          "package": "HaXml",
          "signature": "[CFilter i] -\u003e CFilter i",
          "source": "src/Text-XML-HaXml-Html-Generate.html#hpre",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Html Generate",
          "module": "Text.XML.HaXml.Html.Generate",
          "name": "hpre",
          "normalized": "[CFilter a]-\u003eCFilter a",
          "package": "HaXml",
          "signature": "[CFilter i]-\u003eCFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Html-Generate.html#v:hpre"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Html.Generate",
          "name": "hrow",
          "package": "HaXml",
          "signature": "[CFilter i] -\u003e CFilter i",
          "source": "src/Text-XML-HaXml-Html-Generate.html#hrow",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Html Generate",
          "module": "Text.XML.HaXml.Html.Generate",
          "name": "hrow",
          "normalized": "[CFilter a]-\u003eCFilter a",
          "package": "HaXml",
          "signature": "[CFilter i]-\u003eCFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Html-Generate.html#v:hrow"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Html.Generate",
          "name": "hspan",
          "package": "HaXml",
          "signature": "[CFilter i] -\u003e CFilter i",
          "source": "src/Text-XML-HaXml-Html-Generate.html#hspan",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Html Generate",
          "module": "Text.XML.HaXml.Html.Generate",
          "name": "hspan",
          "normalized": "[CFilter a]-\u003eCFilter a",
          "package": "HaXml",
          "signature": "[CFilter i]-\u003eCFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Html-Generate.html#v:hspan"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Html.Generate",
          "name": "htable",
          "package": "HaXml",
          "signature": "[CFilter i] -\u003e CFilter i",
          "source": "src/Text-XML-HaXml-Html-Generate.html#htable",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Html Generate",
          "module": "Text.XML.HaXml.Html.Generate",
          "name": "htable",
          "normalized": "[CFilter a]-\u003eCFilter a",
          "package": "HaXml",
          "signature": "[CFilter i]-\u003eCFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Html-Generate.html#v:htable"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Html.Generate",
          "name": "htitle",
          "package": "HaXml",
          "signature": "[CFilter i] -\u003e CFilter i",
          "source": "src/Text-XML-HaXml-Html-Generate.html#htitle",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Html Generate",
          "module": "Text.XML.HaXml.Html.Generate",
          "name": "htitle",
          "normalized": "[CFilter a]-\u003eCFilter a",
          "package": "HaXml",
          "signature": "[CFilter i]-\u003eCFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Html-Generate.html#v:htitle"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Html.Generate",
          "name": "html",
          "package": "HaXml",
          "signature": "[CFilter i] -\u003e CFilter i",
          "source": "src/Text-XML-HaXml-Html-Generate.html#html",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Html Generate",
          "module": "Text.XML.HaXml.Html.Generate",
          "name": "html",
          "normalized": "[CFilter a]-\u003eCFilter a",
          "package": "HaXml",
          "signature": "[CFilter i]-\u003eCFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Html-Generate.html#v:html"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Html.Generate",
          "name": "htmlprint",
          "package": "HaXml",
          "signature": "[Content i] -\u003e Doc",
          "source": "src/Text-XML-HaXml-Html-Generate.html#htmlprint",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Html Generate",
          "module": "Text.XML.HaXml.Html.Generate",
          "name": "htmlprint",
          "normalized": "[Content a]-\u003eDoc",
          "package": "HaXml",
          "signature": "[Content i]-\u003eDoc",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Html-Generate.html#v:htmlprint"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Html.Generate",
          "name": "htt",
          "package": "HaXml",
          "signature": "[CFilter i] -\u003e CFilter i",
          "source": "src/Text-XML-HaXml-Html-Generate.html#htt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Html Generate",
          "module": "Text.XML.HaXml.Html.Generate",
          "name": "htt",
          "normalized": "[CFilter a]-\u003eCFilter a",
          "package": "HaXml",
          "signature": "[CFilter i]-\u003eCFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Html-Generate.html#v:htt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Html.Generate",
          "name": "makehref",
          "package": "HaXml",
          "signature": "CFilter i -\u003e [CFilter i] -\u003e CFilter i",
          "source": "src/Text-XML-HaXml-Html-Generate.html#makehref",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Html Generate",
          "module": "Text.XML.HaXml.Html.Generate",
          "name": "makehref",
          "normalized": "CFilter a-\u003e[CFilter a]-\u003eCFilter a",
          "package": "HaXml",
          "signature": "CFilter i-\u003e[CFilter i]-\u003eCFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Html-Generate.html#v:makehref"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Html.Generate",
          "name": "margin",
          "package": "HaXml",
          "signature": "[CFilter i] -\u003e CFilter i",
          "source": "src/Text-XML-HaXml-Html-Generate.html#margin",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Html Generate",
          "module": "Text.XML.HaXml.Html.Generate",
          "name": "margin",
          "normalized": "[CFilter a]-\u003eCFilter a",
          "package": "HaXml",
          "signature": "[CFilter i]-\u003eCFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Html-Generate.html#v:margin"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Html.Generate",
          "name": "parens",
          "package": "HaXml",
          "signature": "CFilter i -\u003e CFilter i",
          "source": "src/Text-XML-HaXml-Html-Generate.html#parens",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Html Generate",
          "module": "Text.XML.HaXml.Html.Generate",
          "name": "parens",
          "normalized": "CFilter a-\u003eCFilter a",
          "package": "HaXml",
          "signature": "CFilter i-\u003eCFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Html-Generate.html#v:parens"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Html.Generate",
          "name": "showattr",
          "package": "HaXml",
          "signature": "String -\u003e CFilter i",
          "source": "src/Text-XML-HaXml-Html-Generate.html#showattr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Html Generate",
          "module": "Text.XML.HaXml.Html.Generate",
          "name": "showattr",
          "normalized": "String-\u003eCFilter a",
          "package": "HaXml",
          "signature": "String-\u003eCFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Html-Generate.html#v:showattr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThis is a parser for HTML documents.  Unlike for XML documents, it\n   must include a certain amount of error-correction to account for\n   HTML features like self-terminating tags, unterminated tags, and\n   incorrect nesting.  The input is tokenised by the\n   XML lexer (a separate lexer is not required for HTML).\n\u003c/p\u003e\u003c/div\u003e",
          "module": "Text.XML.HaXml.Html.Parse",
          "name": "Parse",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Html-Parse.html",
          "type": "module"
        },
        "index": {
          "description": "This is parser for HTML documents Unlike for XML documents it must include certain amount of error-correction to account for HTML features like self-terminating tags unterminated tags and incorrect nesting The input is tokenised by the XML lexer separate lexer is not required for HTML",
          "hierarchy": "Text XML HaXml Html Parse",
          "module": "Text.XML.HaXml.Html.Parse",
          "name": "Parse",
          "package": "HaXml",
          "partial": "Parse",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Html-Parse.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eThe first argument is the name of the file, the second is the string\n   contents of the file.  The result is the generic representation of\n   an XML document.  Any errors cause program failure with message to stderr.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Html.Parse",
          "name": "htmlParse",
          "package": "HaXml",
          "signature": "String -\u003e String -\u003e Document Posn",
          "source": "src/Text-XML-HaXml-Html-Parse.html#htmlParse",
          "type": "function"
        },
        "index": {
          "description": "The first argument is the name of the file the second is the string contents of the file The result is the generic representation of an XML document Any errors cause program failure with message to stderr",
          "hierarchy": "Text XML HaXml Html Parse",
          "module": "Text.XML.HaXml.Html.Parse",
          "name": "htmlParse",
          "normalized": "String-\u003eString-\u003eDocument Posn",
          "package": "HaXml",
          "partial": "Parse",
          "signature": "String-\u003eString-\u003eDocument Posn",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Html-Parse.html#v:htmlParse"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eThe first argument is the name of the file, the second is the string\n   contents of the file.  The result is the generic representation of\n   an XML document.  Any parsing errors are returned in the \u003ccode\u003eEither\u003c/code\u003e type.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Html.Parse",
          "name": "htmlParse'",
          "package": "HaXml",
          "signature": "String -\u003e String -\u003e Either String (Document Posn)",
          "source": "src/Text-XML-HaXml-Html-Parse.html#htmlParse%27",
          "type": "function"
        },
        "index": {
          "description": "The first argument is the name of the file the second is the string contents of the file The result is the generic representation of an XML document Any parsing errors are returned in the Either type",
          "hierarchy": "Text XML HaXml Html Parse",
          "module": "Text.XML.HaXml.Html.Parse",
          "name": "htmlParse'",
          "normalized": "String-\u003eString-\u003eEither String(Document Posn)",
          "package": "HaXml",
          "partial": "Parse'",
          "signature": "String-\u003eString-\u003eEither String(Document Posn)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Html-Parse.html#v:htmlParse-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThis is a parser for HTML documents.  Unlike for XML documents, it\n   must include a certain amount of error-correction to account for\n   HTML features like self-terminating tags, unterminated tags, and\n   incorrect nesting.  The input is tokenised by the\n   XML lexer (a separate lexer is not required for HTML).\n\u003c/p\u003e\u003c/div\u003e",
          "module": "Text.XML.HaXml.Html.ParseLazy",
          "name": "ParseLazy",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Html-ParseLazy.html",
          "type": "module"
        },
        "index": {
          "description": "This is parser for HTML documents Unlike for XML documents it must include certain amount of error-correction to account for HTML features like self-terminating tags unterminated tags and incorrect nesting The input is tokenised by the XML lexer separate lexer is not required for HTML",
          "hierarchy": "Text XML HaXml Html ParseLazy",
          "module": "Text.XML.HaXml.Html.ParseLazy",
          "name": "ParseLazy",
          "package": "HaXml",
          "partial": "Parse Lazy",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Html-ParseLazy.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eThe first argument is the name of the file, the second is the string\n   contents of the file.  The result is the generic representation of\n   an XML document.  Any errors cause program failure with message to stderr.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Html.ParseLazy",
          "name": "htmlParse",
          "package": "HaXml",
          "signature": "String -\u003e String -\u003e Document Posn",
          "source": "src/Text-XML-HaXml-Html-ParseLazy.html#htmlParse",
          "type": "function"
        },
        "index": {
          "description": "The first argument is the name of the file the second is the string contents of the file The result is the generic representation of an XML document Any errors cause program failure with message to stderr",
          "hierarchy": "Text XML HaXml Html ParseLazy",
          "module": "Text.XML.HaXml.Html.ParseLazy",
          "name": "htmlParse",
          "normalized": "String-\u003eString-\u003eDocument Posn",
          "package": "HaXml",
          "partial": "Parse",
          "signature": "String-\u003eString-\u003eDocument Posn",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Html-ParseLazy.html#v:htmlParse"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThis is a separate pretty-printer for HTML documents, recognising\n   some of the differences between HTML and true XML.\n\u003c/p\u003e\u003c/div\u003e",
          "module": "Text.XML.HaXml.Html.Pretty",
          "name": "Pretty",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Html-Pretty.html",
          "type": "module"
        },
        "index": {
          "description": "This is separate pretty-printer for HTML documents recognising some of the differences between HTML and true XML",
          "hierarchy": "Text XML HaXml Html Pretty",
          "module": "Text.XML.HaXml.Html.Pretty",
          "name": "Pretty",
          "package": "HaXml",
          "partial": "Pretty",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Html-Pretty.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Html.Pretty",
          "name": "attribute",
          "package": "HaXml",
          "signature": "Attribute -\u003e Doc",
          "source": "src/Text-XML-HaXml-Html-Pretty.html#attribute",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Html Pretty",
          "module": "Text.XML.HaXml.Html.Pretty",
          "name": "attribute",
          "normalized": "Attribute-\u003eDoc",
          "package": "HaXml",
          "signature": "Attribute-\u003eDoc",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Html-Pretty.html#v:attribute"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Html.Pretty",
          "name": "content",
          "package": "HaXml",
          "signature": "Content i -\u003e Doc",
          "source": "src/Text-XML-HaXml-Html-Pretty.html#content",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Html Pretty",
          "module": "Text.XML.HaXml.Html.Pretty",
          "name": "content",
          "normalized": "Content a-\u003eDoc",
          "package": "HaXml",
          "signature": "Content i-\u003eDoc",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Html-Pretty.html#v:content"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Html.Pretty",
          "name": "document",
          "package": "HaXml",
          "signature": "Document i -\u003e Doc",
          "source": "src/Text-XML-HaXml-Html-Pretty.html#document",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Html Pretty",
          "module": "Text.XML.HaXml.Html.Pretty",
          "name": "document",
          "normalized": "Document a-\u003eDoc",
          "package": "HaXml",
          "signature": "Document i-\u003eDoc",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Html-Pretty.html#v:document"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Html.Pretty",
          "name": "element",
          "package": "HaXml",
          "signature": "Element i -\u003e Doc",
          "source": "src/Text-XML-HaXml-Html-Pretty.html#element",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Html Pretty",
          "module": "Text.XML.HaXml.Html.Pretty",
          "name": "element",
          "normalized": "Element a-\u003eDoc",
          "package": "HaXml",
          "signature": "Element i-\u003eDoc",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Html-Pretty.html#v:element"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eYou don't normally need to use this Lex module directly - it is\n   called automatically by the parser.  (This interface is only exposed\n   for debugging purposes.)\n\u003c/p\u003e\u003cp\u003eThis is a hand-written lexer for tokenising the text of an XML\n document so that it is ready for parsing.  It attaches position\n information in (line,column) format to every token.  The main\n entry point is \u003ccode\u003e\u003ca\u003exmlLex\u003c/a\u003e\u003c/code\u003e.  A secondary entry point, \u003ccode\u003e\u003ca\u003exmlReLex\u003c/a\u003e\u003c/code\u003e, is\n provided for when the parser needs to stuff a string back onto\n the front of the text and re-tokenise it (typically when expanding\n macros).\n\u003c/p\u003e\u003cp\u003eAs one would expect, the lexer is essentially a small finite\n state machine.\n\u003c/p\u003e\u003c/div\u003e",
          "module": "Text.XML.HaXml.Lex",
          "name": "Lex",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Lex.html",
          "type": "module"
        },
        "index": {
          "description": "You don normally need to use this Lex module directly it is called automatically by the parser This interface is only exposed for debugging purposes This is hand-written lexer for tokenising the text of an XML document so that it is ready for parsing It attaches position information in line column format to every token The main entry point is xmlLex secondary entry point xmlReLex is provided for when the parser needs to stuff string back onto the front of the text and re-tokenise it typically when expanding macros As one would expect the lexer is essentially small finite state machine",
          "hierarchy": "Text XML HaXml Lex",
          "module": "Text.XML.HaXml.Lex",
          "name": "Lex",
          "package": "HaXml",
          "partial": "Lex",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Lex.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Lex",
          "name": "Section",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Lex.html#Section",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Lex",
          "module": "Text.XML.HaXml.Lex",
          "name": "Section",
          "package": "HaXml",
          "partial": "Section",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Lex.html#t:Section"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Lex",
          "name": "Special",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Lex.html#Special",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Lex",
          "module": "Text.XML.HaXml.Lex",
          "name": "Special",
          "package": "HaXml",
          "partial": "Special",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Lex.html#t:Special"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eAll tokens are paired up with a source position.\n   Lexical errors are passed back as a special \u003ccode\u003eTokenT\u003c/code\u003e value.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Lex",
          "name": "Token",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Lex.html#Token",
          "type": "type"
        },
        "index": {
          "description": "All tokens are paired up with source position Lexical errors are passed back as special TokenT value",
          "hierarchy": "Text XML HaXml Lex",
          "module": "Text.XML.HaXml.Lex",
          "name": "Token",
          "package": "HaXml",
          "partial": "Token",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Lex.html#t:Token"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eThe basic token type.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Lex",
          "name": "TokenT",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Lex.html#TokenT",
          "type": "data"
        },
        "index": {
          "description": "The basic token type",
          "hierarchy": "Text XML HaXml Lex",
          "module": "Text.XML.HaXml.Lex",
          "name": "TokenT",
          "package": "HaXml",
          "partial": "Token",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Lex.html#t:TokenT"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Lex",
          "name": "ATTLISTx",
          "package": "HaXml",
          "signature": "ATTLISTx",
          "source": "src/Text-XML-HaXml-Lex.html#Special",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Lex",
          "module": "Text.XML.HaXml.Lex",
          "name": "ATTLISTx",
          "package": "HaXml",
          "partial": "ATTLISTx",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Lex.html#v:ATTLISTx"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Lex",
          "name": "CDATAx",
          "package": "HaXml",
          "signature": "CDATAx",
          "source": "src/Text-XML-HaXml-Lex.html#Section",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Lex",
          "module": "Text.XML.HaXml.Lex",
          "name": "CDATAx",
          "package": "HaXml",
          "partial": "CDATAx",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Lex.html#v:CDATAx"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Lex",
          "name": "DOCTYPEx",
          "package": "HaXml",
          "signature": "DOCTYPEx",
          "source": "src/Text-XML-HaXml-Lex.html#Special",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Lex",
          "module": "Text.XML.HaXml.Lex",
          "name": "DOCTYPEx",
          "package": "HaXml",
          "partial": "DOCTYPEx",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Lex.html#v:DOCTYPEx"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Lex",
          "name": "ELEMENTx",
          "package": "HaXml",
          "signature": "ELEMENTx",
          "source": "src/Text-XML-HaXml-Lex.html#Special",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Lex",
          "module": "Text.XML.HaXml.Lex",
          "name": "ELEMENTx",
          "package": "HaXml",
          "partial": "ELEMENTx",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Lex.html#v:ELEMENTx"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Lex",
          "name": "ENTITYx",
          "package": "HaXml",
          "signature": "ENTITYx",
          "source": "src/Text-XML-HaXml-Lex.html#Special",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Lex",
          "module": "Text.XML.HaXml.Lex",
          "name": "ENTITYx",
          "package": "HaXml",
          "partial": "ENTITYx",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Lex.html#v:ENTITYx"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Lex",
          "name": "IGNOREx",
          "package": "HaXml",
          "signature": "IGNOREx",
          "source": "src/Text-XML-HaXml-Lex.html#Section",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Lex",
          "module": "Text.XML.HaXml.Lex",
          "name": "IGNOREx",
          "package": "HaXml",
          "partial": "IGNOREx",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Lex.html#v:IGNOREx"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Lex",
          "name": "INCLUDEx",
          "package": "HaXml",
          "signature": "INCLUDEx",
          "source": "src/Text-XML-HaXml-Lex.html#Section",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Lex",
          "module": "Text.XML.HaXml.Lex",
          "name": "INCLUDEx",
          "package": "HaXml",
          "partial": "INCLUDEx",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Lex.html#v:INCLUDEx"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Lex",
          "name": "NOTATIONx",
          "package": "HaXml",
          "signature": "NOTATIONx",
          "source": "src/Text-XML-HaXml-Lex.html#Special",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Lex",
          "module": "Text.XML.HaXml.Lex",
          "name": "NOTATIONx",
          "package": "HaXml",
          "partial": "NOTATIONx",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Lex.html#v:NOTATIONx"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e&\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Lex",
          "name": "TokAmp",
          "package": "HaXml",
          "signature": "TokAmp",
          "source": "src/Text-XML-HaXml-Lex.html#TokenT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Lex",
          "module": "Text.XML.HaXml.Lex",
          "name": "TokAmp",
          "package": "HaXml",
          "partial": "Tok Amp",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Lex.html#v:TokAmp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cpre\u003e\n\u003c/pre\u003e",
          "module": "Text.XML.HaXml.Lex",
          "name": "TokAnyClose",
          "package": "HaXml",
          "signature": "TokAnyClose",
          "source": "src/Text-XML-HaXml-Lex.html#TokenT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Lex",
          "module": "Text.XML.HaXml.Lex",
          "name": "TokAnyClose",
          "package": "HaXml",
          "partial": "Tok Any Close",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Lex.html#v:TokAnyClose"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e\u003c\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Lex",
          "name": "TokAnyOpen",
          "package": "HaXml",
          "signature": "TokAnyOpen",
          "source": "src/Text-XML-HaXml-Lex.html#TokenT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Lex",
          "module": "Text.XML.HaXml.Lex",
          "name": "TokAnyOpen",
          "package": "HaXml",
          "partial": "Tok Any Open",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Lex.html#v:TokAnyOpen"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e)\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Lex",
          "name": "TokBraClose",
          "package": "HaXml",
          "signature": "TokBraClose",
          "source": "src/Text-XML-HaXml-Lex.html#TokenT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Lex",
          "module": "Text.XML.HaXml.Lex",
          "name": "TokBraClose",
          "package": "HaXml",
          "partial": "Tok Bra Close",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Lex.html#v:TokBraClose"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e(\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Lex",
          "name": "TokBraOpen",
          "package": "HaXml",
          "signature": "TokBraOpen",
          "source": "src/Text-XML-HaXml-Lex.html#TokenT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Lex",
          "module": "Text.XML.HaXml.Lex",
          "name": "TokBraOpen",
          "package": "HaXml",
          "partial": "Tok Bra Open",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Lex.html#v:TokBraOpen"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e,\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Lex",
          "name": "TokComma",
          "package": "HaXml",
          "signature": "TokComma",
          "source": "src/Text-XML-HaXml-Lex.html#TokenT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Lex",
          "module": "Text.XML.HaXml.Lex",
          "name": "TokComma",
          "package": "HaXml",
          "partial": "Tok Comma",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Lex.html#v:TokComma"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cul\u003e\u003cli\u003e-\u003e\n\u003c/li\u003e\u003c/ul\u003e",
          "module": "Text.XML.HaXml.Lex",
          "name": "TokCommentClose",
          "package": "HaXml",
          "signature": "TokCommentClose",
          "source": "src/Text-XML-HaXml-Lex.html#TokenT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Lex",
          "module": "Text.XML.HaXml.Lex",
          "name": "TokCommentClose",
          "package": "HaXml",
          "partial": "Tok Comment Close",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Lex.html#v:TokCommentClose"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e\u003c!--\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Lex",
          "name": "TokCommentOpen",
          "package": "HaXml",
          "signature": "TokCommentOpen",
          "source": "src/Text-XML-HaXml-Lex.html#TokenT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Lex",
          "module": "Text.XML.HaXml.Lex",
          "name": "TokCommentOpen",
          "package": "HaXml",
          "partial": "Tok Comment Open",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Lex.html#v:TokCommentOpen"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e/\u003e\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Lex",
          "name": "TokEndClose",
          "package": "HaXml",
          "signature": "TokEndClose",
          "source": "src/Text-XML-HaXml-Lex.html#TokenT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Lex",
          "module": "Text.XML.HaXml.Lex",
          "name": "TokEndClose",
          "package": "HaXml",
          "partial": "Tok End Close",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Lex.html#v:TokEndClose"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e\u003c/\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Lex",
          "name": "TokEndOpen",
          "package": "HaXml",
          "signature": "TokEndOpen",
          "source": "src/Text-XML-HaXml-Lex.html#TokenT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Lex",
          "module": "Text.XML.HaXml.Lex",
          "name": "TokEndOpen",
          "package": "HaXml",
          "partial": "Tok End Open",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Lex.html#v:TokEndOpen"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e=\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Lex",
          "name": "TokEqual",
          "package": "HaXml",
          "signature": "TokEqual",
          "source": "src/Text-XML-HaXml-Lex.html#TokenT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Lex",
          "module": "Text.XML.HaXml.Lex",
          "name": "TokEqual",
          "package": "HaXml",
          "partial": "Tok Equal",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Lex.html#v:TokEqual"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003elexical error\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Lex",
          "name": "TokError",
          "package": "HaXml",
          "signature": "TokError String",
          "source": "src/Text-XML-HaXml-Lex.html#TokenT",
          "type": "function"
        },
        "index": {
          "description": "lexical error",
          "hierarchy": "Text XML HaXml Lex",
          "module": "Text.XML.HaXml.Lex",
          "name": "TokError",
          "package": "HaXml",
          "partial": "Tok Error",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Lex.html#v:TokError"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eany character data\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Lex",
          "name": "TokFreeText",
          "package": "HaXml",
          "signature": "TokFreeText String",
          "source": "src/Text-XML-HaXml-Lex.html#TokenT",
          "type": "function"
        },
        "index": {
          "description": "any character data",
          "hierarchy": "Text XML HaXml Lex",
          "module": "Text.XML.HaXml.Lex",
          "name": "TokFreeText",
          "package": "HaXml",
          "partial": "Tok Free Text",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Lex.html#v:TokFreeText"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e#\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Lex",
          "name": "TokHash",
          "package": "HaXml",
          "signature": "TokHash",
          "source": "src/Text-XML-HaXml-Lex.html#TokenT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Lex",
          "module": "Text.XML.HaXml.Lex",
          "name": "TokHash",
          "package": "HaXml",
          "partial": "Tok Hash",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Lex.html#v:TokHash"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003ebegins with letter, no spaces\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Lex",
          "name": "TokName",
          "package": "HaXml",
          "signature": "TokName String",
          "source": "src/Text-XML-HaXml-Lex.html#TokenT",
          "type": "function"
        },
        "index": {
          "description": "begins with letter no spaces",
          "hierarchy": "Text XML HaXml Lex",
          "module": "Text.XML.HaXml.Lex",
          "name": "TokName",
          "package": "HaXml",
          "partial": "Tok Name",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Lex.html#v:TokName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003efake token\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Lex",
          "name": "TokNull",
          "package": "HaXml",
          "signature": "TokNull",
          "source": "src/Text-XML-HaXml-Lex.html#TokenT",
          "type": "function"
        },
        "index": {
          "description": "fake token",
          "hierarchy": "Text XML HaXml Lex",
          "module": "Text.XML.HaXml.Lex",
          "name": "TokNull",
          "package": "HaXml",
          "partial": "Tok Null",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Lex.html#v:TokNull"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e?\u003e\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Lex",
          "name": "TokPIClose",
          "package": "HaXml",
          "signature": "TokPIClose",
          "source": "src/Text-XML-HaXml-Lex.html#TokenT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Lex",
          "module": "Text.XML.HaXml.Lex",
          "name": "TokPIClose",
          "package": "HaXml",
          "partial": "Tok PIClose",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Lex.html#v:TokPIClose"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e\u003c?\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Lex",
          "name": "TokPIOpen",
          "package": "HaXml",
          "signature": "TokPIOpen",
          "source": "src/Text-XML-HaXml-Lex.html#TokenT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Lex",
          "module": "Text.XML.HaXml.Lex",
          "name": "TokPIOpen",
          "package": "HaXml",
          "partial": "Tok PIOpen",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Lex.html#v:TokPIOpen"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e%\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Lex",
          "name": "TokPercent",
          "package": "HaXml",
          "signature": "TokPercent",
          "source": "src/Text-XML-HaXml-Lex.html#TokenT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Lex",
          "module": "Text.XML.HaXml.Lex",
          "name": "TokPercent",
          "package": "HaXml",
          "partial": "Tok Percent",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Lex.html#v:TokPercent"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e|\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Lex",
          "name": "TokPipe",
          "package": "HaXml",
          "signature": "TokPipe",
          "source": "src/Text-XML-HaXml-Lex.html#TokenT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Lex",
          "module": "Text.XML.HaXml.Lex",
          "name": "TokPipe",
          "package": "HaXml",
          "partial": "Tok Pipe",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Lex.html#v:TokPipe"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e+\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Lex",
          "name": "TokPlus",
          "package": "HaXml",
          "signature": "TokPlus",
          "source": "src/Text-XML-HaXml-Lex.html#TokenT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Lex",
          "module": "Text.XML.HaXml.Lex",
          "name": "TokPlus",
          "package": "HaXml",
          "partial": "Tok Plus",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Lex.html#v:TokPlus"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e?\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Lex",
          "name": "TokQuery",
          "package": "HaXml",
          "signature": "TokQuery",
          "source": "src/Text-XML-HaXml-Lex.html#TokenT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Lex",
          "module": "Text.XML.HaXml.Lex",
          "name": "TokQuery",
          "package": "HaXml",
          "partial": "Tok Query",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Lex.html#v:TokQuery"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e'' or \"\"\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Lex",
          "name": "TokQuote",
          "package": "HaXml",
          "signature": "TokQuote",
          "source": "src/Text-XML-HaXml-Lex.html#TokenT",
          "type": "function"
        },
        "index": {
          "description": "or",
          "hierarchy": "Text XML HaXml Lex",
          "module": "Text.XML.HaXml.Lex",
          "name": "TokQuote",
          "package": "HaXml",
          "partial": "Tok Quote",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Lex.html#v:TokQuote"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eCDATA INCLUDE IGNORE etc\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Lex",
          "name": "TokSection",
          "package": "HaXml",
          "signature": "TokSection Section",
          "source": "src/Text-XML-HaXml-Lex.html#TokenT",
          "type": "function"
        },
        "index": {
          "description": "CDATA INCLUDE IGNORE etc",
          "hierarchy": "Text XML HaXml Lex",
          "module": "Text.XML.HaXml.Lex",
          "name": "TokSection",
          "package": "HaXml",
          "partial": "Tok Section",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Lex.html#v:TokSection"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e]]\u003e\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Lex",
          "name": "TokSectionClose",
          "package": "HaXml",
          "signature": "TokSectionClose",
          "source": "src/Text-XML-HaXml-Lex.html#TokenT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Lex",
          "module": "Text.XML.HaXml.Lex",
          "name": "TokSectionClose",
          "package": "HaXml",
          "partial": "Tok Section Close",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Lex.html#v:TokSectionClose"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e\u003c![\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Lex",
          "name": "TokSectionOpen",
          "package": "HaXml",
          "signature": "TokSectionOpen",
          "source": "src/Text-XML-HaXml-Lex.html#TokenT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Lex",
          "module": "Text.XML.HaXml.Lex",
          "name": "TokSectionOpen",
          "package": "HaXml",
          "partial": "Tok Section Open",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Lex.html#v:TokSectionOpen"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e;\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Lex",
          "name": "TokSemi",
          "package": "HaXml",
          "signature": "TokSemi",
          "source": "src/Text-XML-HaXml-Lex.html#TokenT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Lex",
          "module": "Text.XML.HaXml.Lex",
          "name": "TokSemi",
          "package": "HaXml",
          "partial": "Tok Semi",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Lex.html#v:TokSemi"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eDOCTYPE ELEMENT ATTLIST etc\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Lex",
          "name": "TokSpecial",
          "package": "HaXml",
          "signature": "TokSpecial Special",
          "source": "src/Text-XML-HaXml-Lex.html#TokenT",
          "type": "function"
        },
        "index": {
          "description": "DOCTYPE ELEMENT ATTLIST etc",
          "hierarchy": "Text XML HaXml Lex",
          "module": "Text.XML.HaXml.Lex",
          "name": "TokSpecial",
          "package": "HaXml",
          "partial": "Tok Special",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Lex.html#v:TokSpecial"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e\u003c!\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Lex",
          "name": "TokSpecialOpen",
          "package": "HaXml",
          "signature": "TokSpecialOpen",
          "source": "src/Text-XML-HaXml-Lex.html#TokenT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Lex",
          "module": "Text.XML.HaXml.Lex",
          "name": "TokSpecialOpen",
          "package": "HaXml",
          "partial": "Tok Special Open",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Lex.html#v:TokSpecialOpen"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e]\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Lex",
          "name": "TokSqClose",
          "package": "HaXml",
          "signature": "TokSqClose",
          "source": "src/Text-XML-HaXml-Lex.html#TokenT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Lex",
          "module": "Text.XML.HaXml.Lex",
          "name": "TokSqClose",
          "package": "HaXml",
          "partial": "Tok Sq Close",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Lex.html#v:TokSqClose"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e[\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Lex",
          "name": "TokSqOpen",
          "package": "HaXml",
          "signature": "TokSqOpen",
          "source": "src/Text-XML-HaXml-Lex.html#TokenT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Lex",
          "module": "Text.XML.HaXml.Lex",
          "name": "TokSqOpen",
          "package": "HaXml",
          "partial": "Tok Sq Open",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Lex.html#v:TokSqOpen"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e*\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Lex",
          "name": "TokStar",
          "package": "HaXml",
          "signature": "TokStar",
          "source": "src/Text-XML-HaXml-Lex.html#TokenT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Lex",
          "module": "Text.XML.HaXml.Lex",
          "name": "TokStar",
          "package": "HaXml",
          "partial": "Tok Star",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Lex.html#v:TokStar"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e\u003ccode\u003e\u003ca\u003ereLexEntityValue\u003c/a\u003e\u003c/code\u003e is used solely within parsing an entityvalue.\n   Normally, a PERef is logically separated from its surroundings by\n   whitespace.  But in an entityvalue, a PERef can be juxtaposed to\n   an identifier, so the expansion forms a new identifier.\n   Thus the need to rescan the whole text for possible PERefs.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Lex",
          "name": "reLexEntityValue",
          "package": "HaXml",
          "signature": "(String -\u003e Maybe String) -\u003e Posn -\u003e String -\u003e [Token]",
          "source": "src/Text-XML-HaXml-Lex.html#reLexEntityValue",
          "type": "function"
        },
        "index": {
          "description": "reLexEntityValue is used solely within parsing an entityvalue Normally PERef is logically separated from its surroundings by whitespace But in an entityvalue PERef can be juxtaposed to an identifier so the expansion forms new identifier Thus the need to rescan the whole text for possible PERefs",
          "hierarchy": "Text XML HaXml Lex",
          "module": "Text.XML.HaXml.Lex",
          "name": "reLexEntityValue",
          "normalized": "(String-\u003eMaybe String)-\u003ePosn-\u003eString-\u003e[Token]",
          "package": "HaXml",
          "partial": "Lex Entity Value",
          "signature": "(String-\u003eMaybe String)-\u003ePosn-\u003eString-\u003e[Token]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Lex.html#v:reLexEntityValue"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eThe first argument to \u003ccode\u003e\u003ca\u003exmlLex\u003c/a\u003e\u003c/code\u003e is the filename (used for source positions,\n   especially in error messages), and the second is the string content of\n   the XML file.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Lex",
          "name": "xmlLex",
          "package": "HaXml",
          "signature": "String -\u003e String -\u003e [Token]",
          "source": "src/Text-XML-HaXml-Lex.html#xmlLex",
          "type": "function"
        },
        "index": {
          "description": "The first argument to xmlLex is the filename used for source positions especially in error messages and the second is the string content of the XML file",
          "hierarchy": "Text XML HaXml Lex",
          "module": "Text.XML.HaXml.Lex",
          "name": "xmlLex",
          "normalized": "String-\u003eString-\u003e[Token]",
          "package": "HaXml",
          "partial": "Lex",
          "signature": "String-\u003eString-\u003e[Token]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Lex.html#v:xmlLex"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e\u003ccode\u003e\u003ca\u003exmlReLex\u003c/a\u003e\u003c/code\u003e is used when the parser expands a macro (PE reference).\n    The expansion of the macro must be re-lexed as if for the first time.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Lex",
          "name": "xmlReLex",
          "package": "HaXml",
          "signature": "Posn -\u003e String -\u003e [Token]",
          "source": "src/Text-XML-HaXml-Lex.html#xmlReLex",
          "type": "function"
        },
        "index": {
          "description": "xmlReLex is used when the parser expands macro PE reference The expansion of the macro must be re-lexed as if for the first time",
          "hierarchy": "Text XML HaXml Lex",
          "module": "Text.XML.HaXml.Lex",
          "name": "xmlReLex",
          "normalized": "Posn-\u003eString-\u003e[Token]",
          "package": "HaXml",
          "partial": "Re Lex",
          "signature": "Posn-\u003eString-\u003e[Token]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Lex.html#v:xmlReLex"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Namespaces",
          "name": "Namespaces",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Namespaces.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "Text XML HaXml Namespaces",
          "module": "Text.XML.HaXml.Namespaces",
          "name": "Namespaces",
          "package": "HaXml",
          "partial": "Namespaces",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Namespaces.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eAdd a fresh Namespace into the Namespace environment.  It is not\n   permitted to rebind the prefixes \u003ccode\u003exml\u003c/code\u003e or \u003ccode\u003exmlns\u003c/code\u003e, but that is not\n   checked here.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Namespaces",
          "name": "augmentNamespaceEnv",
          "package": "HaXml",
          "signature": "Namespace -\u003e Map String Namespace -\u003e Map String Namespace",
          "source": "src/Text-XML-HaXml-Namespaces.html#augmentNamespaceEnv",
          "type": "function"
        },
        "index": {
          "description": "Add fresh Namespace into the Namespace environment It is not permitted to rebind the prefixes xml or xmlns but that is not checked here",
          "hierarchy": "Text XML HaXml Namespaces",
          "module": "Text.XML.HaXml.Namespaces",
          "name": "augmentNamespaceEnv",
          "normalized": "Namespace-\u003eMap String Namespace-\u003eMap String Namespace",
          "package": "HaXml",
          "partial": "Namespace Env",
          "signature": "Namespace-\u003eMap String Namespace-\u003eMap String Namespace",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Namespaces.html#v:augmentNamespaceEnv"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e\u003ccode\u003e\u003ca\u003edeQualify\u003c/a\u003e\u003c/code\u003e has the same signature as \u003ccode\u003e\u003ca\u003equalify\u003c/a\u003e\u003c/code\u003e, but ignores the\n   arguments for default namespace and environment, and simply removes any\n   pre-existing qualification.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Namespaces",
          "name": "deQualify",
          "package": "HaXml",
          "signature": "Maybe Namespace -\u003e Map String Namespace -\u003e QName -\u003e QName",
          "source": "src/Text-XML-HaXml-Namespaces.html#deQualify",
          "type": "function"
        },
        "index": {
          "description": "deQualify has the same signature as qualify but ignores the arguments for default namespace and environment and simply removes any pre-existing qualification",
          "hierarchy": "Text XML HaXml Namespaces",
          "module": "Text.XML.HaXml.Namespaces",
          "name": "deQualify",
          "normalized": "Maybe Namespace-\u003eMap String Namespace-\u003eQName-\u003eQName",
          "package": "HaXml",
          "partial": "Qualify",
          "signature": "Maybe Namespace-\u003eMap String Namespace-\u003eQName-\u003eQName",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Namespaces.html#v:deQualify"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eEvery Name can be split into a Namespace and local Name.  The Namespace\n   might of course be missing.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Namespaces",
          "name": "expandedName",
          "package": "HaXml",
          "signature": "QName -\u003e (Maybe Namespace, String)",
          "source": "src/Text-XML-HaXml-Namespaces.html#expandedName",
          "type": "function"
        },
        "index": {
          "description": "Every Name can be split into Namespace and local Name The Namespace might of course be missing",
          "hierarchy": "Text XML HaXml Namespaces",
          "module": "Text.XML.HaXml.Namespaces",
          "name": "expandedName",
          "normalized": "QName-\u003e(Maybe Namespace,String)",
          "package": "HaXml",
          "partial": "Name",
          "signature": "QName-\u003e(Maybe Namespace,String)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Namespaces.html#v:expandedName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eThe initial Namespace environment.  It always has bindings for the\n   prefixes \u003ccode\u003exml\u003c/code\u003e and \u003ccode\u003exmlns\u003c/code\u003e.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Namespaces",
          "name": "initNamespaceEnv",
          "package": "HaXml",
          "signature": "Map String Namespace",
          "source": "src/Text-XML-HaXml-Namespaces.html#initNamespaceEnv",
          "type": "function"
        },
        "index": {
          "description": "The initial Namespace environment It always has bindings for the prefixes xml and xmlns",
          "hierarchy": "Text XML HaXml Namespaces",
          "module": "Text.XML.HaXml.Namespaces",
          "name": "initNamespaceEnv",
          "package": "HaXml",
          "partial": "Namespace Env",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Namespaces.html#v:initNamespaceEnv"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eReturn the local component of a Name, without its Namespace.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Namespaces",
          "name": "localName",
          "package": "HaXml",
          "signature": "QName -\u003e String",
          "source": "src/Text-XML-HaXml-Namespaces.html#localName",
          "type": "function"
        },
        "index": {
          "description": "Return the local component of Name without its Namespace",
          "hierarchy": "Text XML HaXml Namespaces",
          "module": "Text.XML.HaXml.Namespaces",
          "name": "localName",
          "normalized": "QName-\u003eString",
          "package": "HaXml",
          "partial": "Name",
          "signature": "QName-\u003eString",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Namespaces.html#v:localName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eReturn the (possibly absent) Namespace component of a Name.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Namespaces",
          "name": "namespaceName",
          "package": "HaXml",
          "signature": "QName -\u003e Maybe Namespace",
          "source": "src/Text-XML-HaXml-Namespaces.html#namespaceName",
          "type": "function"
        },
        "index": {
          "description": "Return the possibly absent Namespace component of Name",
          "hierarchy": "Text XML HaXml Namespaces",
          "module": "Text.XML.HaXml.Namespaces",
          "name": "namespaceName",
          "normalized": "QName-\u003eMaybe Namespace",
          "package": "HaXml",
          "partial": "Name",
          "signature": "QName-\u003eMaybe Namespace",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Namespaces.html#v:namespaceName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eThe null Namespace (no prefix, no URI).\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Namespaces",
          "name": "nullNamespace",
          "package": "HaXml",
          "signature": "Namespace",
          "source": "src/Text-XML-HaXml-Namespaces.html#nullNamespace",
          "type": "function"
        },
        "index": {
          "description": "The null Namespace no prefix no URI",
          "hierarchy": "Text XML HaXml Namespaces",
          "module": "Text.XML.HaXml.Namespaces",
          "name": "nullNamespace",
          "package": "HaXml",
          "partial": "Namespace",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Namespaces.html#v:nullNamespace"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eReturn the printable string for a Name, i.e. attaching a prefix\n   for its namespace (if it has one).\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Namespaces",
          "name": "printableName",
          "package": "HaXml",
          "signature": "QName -\u003e String",
          "source": "src/Text-XML-HaXml-Namespaces.html#printableName",
          "type": "function"
        },
        "index": {
          "description": "Return the printable string for Name i.e attaching prefix for its namespace if it has one",
          "hierarchy": "Text XML HaXml Namespaces",
          "module": "Text.XML.HaXml.Namespaces",
          "name": "printableName",
          "normalized": "QName-\u003eString",
          "package": "HaXml",
          "partial": "Name",
          "signature": "QName-\u003eString",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Namespaces.html#v:printableName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e\u003ccode\u003e\u003ca\u003equalify\u003c/a\u003e\u003c/code\u003e splits a Name of the form \u003ca\u003epr:nm\u003c/a\u003e into the\n   prefix \u003ca\u003epr\u003c/a\u003e and local name \u003ca\u003enm\u003c/a\u003e, and looks up the prefix in the\n   given environment to determine its Namespace.  There may also be a\n   default namespace (the first argument) for unqualified names.\n   In the absence of a default Namespace, a Name that does not have\n   a prefix remains unqualified.  A prefix that is not known in the\n   environment becomes a fresh namespace with null URI.  A Name that is\n   already qualified is passed unchanged, unless its URI was null, in\n   which case we check afresh for that prefix in the environment.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Namespaces",
          "name": "qualify",
          "package": "HaXml",
          "signature": "Maybe Namespace -\u003e Map String Namespace -\u003e QName -\u003e QName",
          "source": "src/Text-XML-HaXml-Namespaces.html#qualify",
          "type": "function"
        },
        "index": {
          "description": "qualify splits Name of the form pr nm into the prefix pr and local name nm and looks up the prefix in the given environment to determine its Namespace There may also be default namespace the first argument for unqualified names In the absence of default Namespace Name that does not have prefix remains unqualified prefix that is not known in the environment becomes fresh namespace with null URI Name that is already qualified is passed unchanged unless its URI was null in which case we check afresh for that prefix in the environment",
          "hierarchy": "Text XML HaXml Namespaces",
          "module": "Text.XML.HaXml.Namespaces",
          "name": "qualify",
          "normalized": "Maybe Namespace-\u003eMap String Namespace-\u003eQName-\u003eQName",
          "package": "HaXml",
          "signature": "Maybe Namespace-\u003eMap String Namespace-\u003eQName-\u003eQName",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Namespaces.html#v:qualify"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e\u003ccode\u003e\u003ca\u003equalifyExceptLocal\u003c/a\u003e\u003c/code\u003e converts names to qualified names, except where\n   an existing qualification matches the default namespace, in which case\n   the qualification is removed.  (This is useful when translating QNames\n   to Haskell, because Haskell qualified names cannot use the current\n   module name.)\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Namespaces",
          "name": "qualifyExceptLocal",
          "package": "HaXml",
          "signature": "Maybe Namespace -\u003e Map String Namespace -\u003e QName -\u003e QName",
          "source": "src/Text-XML-HaXml-Namespaces.html#qualifyExceptLocal",
          "type": "function"
        },
        "index": {
          "description": "qualifyExceptLocal converts names to qualified names except where an existing qualification matches the default namespace in which case the qualification is removed This is useful when translating QNames to Haskell because Haskell qualified names cannot use the current module name",
          "hierarchy": "Text XML HaXml Namespaces",
          "module": "Text.XML.HaXml.Namespaces",
          "name": "qualifyExceptLocal",
          "normalized": "Maybe Namespace-\u003eMap String Namespace-\u003eQName-\u003eQName",
          "package": "HaXml",
          "partial": "Except Local",
          "signature": "Maybe Namespace-\u003eMap String Namespace-\u003eQName-\u003eQName",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Namespaces.html#v:qualifyExceptLocal"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eresolveAllNames in a document, causes every name to be properly\n   qualified with its namespace.  There is a default namespace for any\n   name that was originally unqualified.  This is likely only useful when\n   dealing with parsed document, less useful when generating a document\n   from scratch.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Namespaces",
          "name": "resolveAllNames",
          "package": "HaXml",
          "signature": "(Maybe Namespace -\u003e Map String Namespace -\u003e QName -\u003e QName) -\u003e Document i -\u003e Document i",
          "source": "src/Text-XML-HaXml-Namespaces.html#resolveAllNames",
          "type": "function"
        },
        "index": {
          "description": "resolveAllNames in document causes every name to be properly qualified with its namespace There is default namespace for any name that was originally unqualified This is likely only useful when dealing with parsed document less useful when generating document from scratch",
          "hierarchy": "Text XML HaXml Namespaces",
          "module": "Text.XML.HaXml.Namespaces",
          "name": "resolveAllNames",
          "normalized": "(Maybe Namespace-\u003eMap String Namespace-\u003eQName-\u003eQName)-\u003eDocument a-\u003eDocument a",
          "package": "HaXml",
          "partial": "All Names",
          "signature": "(Maybe Namespace-\u003eMap String Namespace-\u003eQName-\u003eQName)-\u003eDocument i-\u003eDocument i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Namespaces.html#v:resolveAllNames"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOfN",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-OneOfN.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOfN",
          "package": "HaXml",
          "partial": "One Of",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eSomewhat of a nonsense - a choice of a single item.  But sometimes it\n   occurs in auto-generated code.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf1",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf1",
          "type": "data"
        },
        "index": {
          "description": "Somewhat of nonsense choice of single item But sometimes it occurs in auto-generated code",
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf1",
          "package": "HaXml",
          "partial": "One Of",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#t:OneOf1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf10",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf10",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf10",
          "package": "HaXml",
          "partial": "One Of",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#t:OneOf10"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf11",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf11",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf11",
          "package": "HaXml",
          "partial": "One Of",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#t:OneOf11"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf12",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf12",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf12",
          "package": "HaXml",
          "partial": "One Of",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#t:OneOf12"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf13",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf13",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf13",
          "package": "HaXml",
          "partial": "One Of",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#t:OneOf13"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf14",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf14",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf14",
          "package": "HaXml",
          "partial": "One Of",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#t:OneOf14"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf15",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf15",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf15",
          "package": "HaXml",
          "partial": "One Of",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#t:OneOf15"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf16",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf16",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf16",
          "package": "HaXml",
          "partial": "One Of",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#t:OneOf16"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf17",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf17",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf17",
          "package": "HaXml",
          "partial": "One Of",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#t:OneOf17"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf18",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf18",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf18",
          "package": "HaXml",
          "partial": "One Of",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#t:OneOf18"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf19",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf19",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf19",
          "package": "HaXml",
          "partial": "One Of",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#t:OneOf19"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eEquivalent to the Either type, but using the regular naming\n   scheme of this module.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf2",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf2",
          "type": "data"
        },
        "index": {
          "description": "Equivalent to the Either type but using the regular naming scheme of this module",
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf2",
          "package": "HaXml",
          "partial": "One Of",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#t:OneOf2"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf20",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf20",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf20",
          "package": "HaXml",
          "partial": "One Of",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#t:OneOf20"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf3",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf3",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf3",
          "package": "HaXml",
          "partial": "One Of",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#t:OneOf3"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf4",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf4",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf4",
          "package": "HaXml",
          "partial": "One Of",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#t:OneOf4"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf5",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf5",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf5",
          "package": "HaXml",
          "partial": "One Of",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#t:OneOf5"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf6",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf6",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf6",
          "package": "HaXml",
          "partial": "One Of",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#t:OneOf6"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf7",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf7",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf7",
          "package": "HaXml",
          "partial": "One Of",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#t:OneOf7"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf8",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf8",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf8",
          "package": "HaXml",
          "partial": "One Of",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#t:OneOf8"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf9",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf9",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf9",
          "package": "HaXml",
          "partial": "One Of",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#t:OneOf9"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "EightOf10",
          "package": "HaXml",
          "signature": "EightOf10 h",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf10",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "EightOf10",
          "package": "HaXml",
          "partial": "Eight Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:EightOf10"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "EightOf11",
          "package": "HaXml",
          "signature": "EightOf11 h",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf11",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "EightOf11",
          "package": "HaXml",
          "partial": "Eight Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:EightOf11"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "EightOf12",
          "package": "HaXml",
          "signature": "EightOf12 h",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf12",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "EightOf12",
          "package": "HaXml",
          "partial": "Eight Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:EightOf12"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "EightOf13",
          "package": "HaXml",
          "signature": "EightOf13 h",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf13",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "EightOf13",
          "package": "HaXml",
          "partial": "Eight Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:EightOf13"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "EightOf14",
          "package": "HaXml",
          "signature": "EightOf14 h",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf14",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "EightOf14",
          "package": "HaXml",
          "partial": "Eight Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:EightOf14"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "EightOf15",
          "package": "HaXml",
          "signature": "EightOf15 h",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf15",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "EightOf15",
          "package": "HaXml",
          "partial": "Eight Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:EightOf15"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "EightOf16",
          "package": "HaXml",
          "signature": "EightOf16 h",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf16",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "EightOf16",
          "package": "HaXml",
          "partial": "Eight Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:EightOf16"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "EightOf17",
          "package": "HaXml",
          "signature": "EightOf17 h",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf17",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "EightOf17",
          "package": "HaXml",
          "partial": "Eight Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:EightOf17"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "EightOf18",
          "package": "HaXml",
          "signature": "EightOf18 h",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf18",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "EightOf18",
          "package": "HaXml",
          "partial": "Eight Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:EightOf18"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "EightOf19",
          "package": "HaXml",
          "signature": "EightOf19 h",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf19",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "EightOf19",
          "package": "HaXml",
          "partial": "Eight Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:EightOf19"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "EightOf20",
          "package": "HaXml",
          "signature": "EightOf20 h",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf20",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "EightOf20",
          "package": "HaXml",
          "partial": "Eight Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:EightOf20"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "EightOf8",
          "package": "HaXml",
          "signature": "EightOf8 h",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf8",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "EightOf8",
          "package": "HaXml",
          "partial": "Eight Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:EightOf8"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "EightOf9",
          "package": "HaXml",
          "signature": "EightOf9 h",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf9",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "EightOf9",
          "package": "HaXml",
          "partial": "Eight Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:EightOf9"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "EighteenOf18",
          "package": "HaXml",
          "signature": "EighteenOf18 r",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf18",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "EighteenOf18",
          "package": "HaXml",
          "partial": "Eighteen Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:EighteenOf18"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "EighteenOf19",
          "package": "HaXml",
          "signature": "EighteenOf19 r",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf19",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "EighteenOf19",
          "package": "HaXml",
          "partial": "Eighteen Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:EighteenOf19"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "EighteenOf20",
          "package": "HaXml",
          "signature": "EighteenOf20 r",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf20",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "EighteenOf20",
          "package": "HaXml",
          "partial": "Eighteen Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:EighteenOf20"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "ElevenOf11",
          "package": "HaXml",
          "signature": "ElevenOf11 k",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf11",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "ElevenOf11",
          "package": "HaXml",
          "partial": "Eleven Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:ElevenOf11"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "ElevenOf12",
          "package": "HaXml",
          "signature": "ElevenOf12 k",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf12",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "ElevenOf12",
          "package": "HaXml",
          "partial": "Eleven Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:ElevenOf12"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "ElevenOf13",
          "package": "HaXml",
          "signature": "ElevenOf13 k",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf13",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "ElevenOf13",
          "package": "HaXml",
          "partial": "Eleven Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:ElevenOf13"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "ElevenOf14",
          "package": "HaXml",
          "signature": "ElevenOf14 k",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf14",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "ElevenOf14",
          "package": "HaXml",
          "partial": "Eleven Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:ElevenOf14"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "ElevenOf15",
          "package": "HaXml",
          "signature": "ElevenOf15 k",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf15",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "ElevenOf15",
          "package": "HaXml",
          "partial": "Eleven Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:ElevenOf15"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "ElevenOf16",
          "package": "HaXml",
          "signature": "ElevenOf16 k",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf16",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "ElevenOf16",
          "package": "HaXml",
          "partial": "Eleven Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:ElevenOf16"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "ElevenOf17",
          "package": "HaXml",
          "signature": "ElevenOf17 k",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf17",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "ElevenOf17",
          "package": "HaXml",
          "partial": "Eleven Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:ElevenOf17"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "ElevenOf18",
          "package": "HaXml",
          "signature": "ElevenOf18 k",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf18",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "ElevenOf18",
          "package": "HaXml",
          "partial": "Eleven Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:ElevenOf18"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "ElevenOf19",
          "package": "HaXml",
          "signature": "ElevenOf19 k",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf19",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "ElevenOf19",
          "package": "HaXml",
          "partial": "Eleven Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:ElevenOf19"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "ElevenOf20",
          "package": "HaXml",
          "signature": "ElevenOf20 k",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf20",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "ElevenOf20",
          "package": "HaXml",
          "partial": "Eleven Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:ElevenOf20"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FifteenOf15",
          "package": "HaXml",
          "signature": "FifteenOf15 o",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf15",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FifteenOf15",
          "package": "HaXml",
          "partial": "Fifteen Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:FifteenOf15"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FifteenOf16",
          "package": "HaXml",
          "signature": "FifteenOf16 o",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf16",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FifteenOf16",
          "package": "HaXml",
          "partial": "Fifteen Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:FifteenOf16"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FifteenOf17",
          "package": "HaXml",
          "signature": "FifteenOf17 o",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf17",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FifteenOf17",
          "package": "HaXml",
          "partial": "Fifteen Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:FifteenOf17"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FifteenOf18",
          "package": "HaXml",
          "signature": "FifteenOf18 o",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf18",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FifteenOf18",
          "package": "HaXml",
          "partial": "Fifteen Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:FifteenOf18"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FifteenOf19",
          "package": "HaXml",
          "signature": "FifteenOf19 o",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf19",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FifteenOf19",
          "package": "HaXml",
          "partial": "Fifteen Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:FifteenOf19"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FifteenOf20",
          "package": "HaXml",
          "signature": "FifteenOf20 o",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf20",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FifteenOf20",
          "package": "HaXml",
          "partial": "Fifteen Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:FifteenOf20"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FiveOf10",
          "package": "HaXml",
          "signature": "FiveOf10 e",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf10",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FiveOf10",
          "package": "HaXml",
          "partial": "Five Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:FiveOf10"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FiveOf11",
          "package": "HaXml",
          "signature": "FiveOf11 e",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf11",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FiveOf11",
          "package": "HaXml",
          "partial": "Five Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:FiveOf11"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FiveOf12",
          "package": "HaXml",
          "signature": "FiveOf12 e",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf12",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FiveOf12",
          "package": "HaXml",
          "partial": "Five Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:FiveOf12"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FiveOf13",
          "package": "HaXml",
          "signature": "FiveOf13 e",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf13",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FiveOf13",
          "package": "HaXml",
          "partial": "Five Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:FiveOf13"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FiveOf14",
          "package": "HaXml",
          "signature": "FiveOf14 e",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf14",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FiveOf14",
          "package": "HaXml",
          "partial": "Five Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:FiveOf14"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FiveOf15",
          "package": "HaXml",
          "signature": "FiveOf15 e",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf15",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FiveOf15",
          "package": "HaXml",
          "partial": "Five Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:FiveOf15"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FiveOf16",
          "package": "HaXml",
          "signature": "FiveOf16 e",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf16",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FiveOf16",
          "package": "HaXml",
          "partial": "Five Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:FiveOf16"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FiveOf17",
          "package": "HaXml",
          "signature": "FiveOf17 e",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf17",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FiveOf17",
          "package": "HaXml",
          "partial": "Five Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:FiveOf17"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FiveOf18",
          "package": "HaXml",
          "signature": "FiveOf18 e",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf18",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FiveOf18",
          "package": "HaXml",
          "partial": "Five Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:FiveOf18"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FiveOf19",
          "package": "HaXml",
          "signature": "FiveOf19 e",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf19",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FiveOf19",
          "package": "HaXml",
          "partial": "Five Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:FiveOf19"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FiveOf20",
          "package": "HaXml",
          "signature": "FiveOf20 e",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf20",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FiveOf20",
          "package": "HaXml",
          "partial": "Five Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:FiveOf20"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FiveOf5",
          "package": "HaXml",
          "signature": "FiveOf5 e",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf5",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FiveOf5",
          "package": "HaXml",
          "partial": "Five Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:FiveOf5"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FiveOf6",
          "package": "HaXml",
          "signature": "FiveOf6 e",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf6",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FiveOf6",
          "package": "HaXml",
          "partial": "Five Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:FiveOf6"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FiveOf7",
          "package": "HaXml",
          "signature": "FiveOf7 e",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf7",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FiveOf7",
          "package": "HaXml",
          "partial": "Five Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:FiveOf7"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FiveOf8",
          "package": "HaXml",
          "signature": "FiveOf8 e",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf8",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FiveOf8",
          "package": "HaXml",
          "partial": "Five Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:FiveOf8"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FiveOf9",
          "package": "HaXml",
          "signature": "FiveOf9 e",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf9",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FiveOf9",
          "package": "HaXml",
          "partial": "Five Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:FiveOf9"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FourOf10",
          "package": "HaXml",
          "signature": "FourOf10 d",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf10",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FourOf10",
          "package": "HaXml",
          "partial": "Four Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:FourOf10"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FourOf11",
          "package": "HaXml",
          "signature": "FourOf11 d",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf11",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FourOf11",
          "package": "HaXml",
          "partial": "Four Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:FourOf11"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FourOf12",
          "package": "HaXml",
          "signature": "FourOf12 d",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf12",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FourOf12",
          "package": "HaXml",
          "partial": "Four Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:FourOf12"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FourOf13",
          "package": "HaXml",
          "signature": "FourOf13 d",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf13",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FourOf13",
          "package": "HaXml",
          "partial": "Four Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:FourOf13"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FourOf14",
          "package": "HaXml",
          "signature": "FourOf14 d",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf14",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FourOf14",
          "package": "HaXml",
          "partial": "Four Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:FourOf14"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FourOf15",
          "package": "HaXml",
          "signature": "FourOf15 d",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf15",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FourOf15",
          "package": "HaXml",
          "partial": "Four Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:FourOf15"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FourOf16",
          "package": "HaXml",
          "signature": "FourOf16 d",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf16",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FourOf16",
          "package": "HaXml",
          "partial": "Four Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:FourOf16"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FourOf17",
          "package": "HaXml",
          "signature": "FourOf17 d",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf17",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FourOf17",
          "package": "HaXml",
          "partial": "Four Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:FourOf17"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FourOf18",
          "package": "HaXml",
          "signature": "FourOf18 d",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf18",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FourOf18",
          "package": "HaXml",
          "partial": "Four Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:FourOf18"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FourOf19",
          "package": "HaXml",
          "signature": "FourOf19 d",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf19",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FourOf19",
          "package": "HaXml",
          "partial": "Four Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:FourOf19"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FourOf20",
          "package": "HaXml",
          "signature": "FourOf20 d",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf20",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FourOf20",
          "package": "HaXml",
          "partial": "Four Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:FourOf20"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FourOf4",
          "package": "HaXml",
          "signature": "FourOf4 d",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf4",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FourOf4",
          "package": "HaXml",
          "partial": "Four Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:FourOf4"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FourOf5",
          "package": "HaXml",
          "signature": "FourOf5 d",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf5",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FourOf5",
          "package": "HaXml",
          "partial": "Four Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:FourOf5"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FourOf6",
          "package": "HaXml",
          "signature": "FourOf6 d",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf6",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FourOf6",
          "package": "HaXml",
          "partial": "Four Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:FourOf6"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FourOf7",
          "package": "HaXml",
          "signature": "FourOf7 d",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf7",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FourOf7",
          "package": "HaXml",
          "partial": "Four Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:FourOf7"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FourOf8",
          "package": "HaXml",
          "signature": "FourOf8 d",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf8",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FourOf8",
          "package": "HaXml",
          "partial": "Four Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:FourOf8"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FourOf9",
          "package": "HaXml",
          "signature": "FourOf9 d",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf9",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FourOf9",
          "package": "HaXml",
          "partial": "Four Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:FourOf9"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FourteenOf14",
          "package": "HaXml",
          "signature": "FourteenOf14 n",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf14",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FourteenOf14",
          "package": "HaXml",
          "partial": "Fourteen Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:FourteenOf14"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FourteenOf15",
          "package": "HaXml",
          "signature": "FourteenOf15 n",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf15",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FourteenOf15",
          "package": "HaXml",
          "partial": "Fourteen Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:FourteenOf15"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FourteenOf16",
          "package": "HaXml",
          "signature": "FourteenOf16 n",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf16",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FourteenOf16",
          "package": "HaXml",
          "partial": "Fourteen Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:FourteenOf16"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FourteenOf17",
          "package": "HaXml",
          "signature": "FourteenOf17 n",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf17",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FourteenOf17",
          "package": "HaXml",
          "partial": "Fourteen Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:FourteenOf17"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FourteenOf18",
          "package": "HaXml",
          "signature": "FourteenOf18 n",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf18",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FourteenOf18",
          "package": "HaXml",
          "partial": "Fourteen Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:FourteenOf18"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FourteenOf19",
          "package": "HaXml",
          "signature": "FourteenOf19 n",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf19",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FourteenOf19",
          "package": "HaXml",
          "partial": "Fourteen Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:FourteenOf19"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FourteenOf20",
          "package": "HaXml",
          "signature": "FourteenOf20 n",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf20",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "FourteenOf20",
          "package": "HaXml",
          "partial": "Fourteen Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:FourteenOf20"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "NineOf10",
          "package": "HaXml",
          "signature": "NineOf10 i",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf10",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "NineOf10",
          "package": "HaXml",
          "partial": "Nine Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:NineOf10"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "NineOf11",
          "package": "HaXml",
          "signature": "NineOf11 i",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf11",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "NineOf11",
          "package": "HaXml",
          "partial": "Nine Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:NineOf11"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "NineOf12",
          "package": "HaXml",
          "signature": "NineOf12 i",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf12",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "NineOf12",
          "package": "HaXml",
          "partial": "Nine Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:NineOf12"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "NineOf13",
          "package": "HaXml",
          "signature": "NineOf13 i",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf13",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "NineOf13",
          "package": "HaXml",
          "partial": "Nine Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:NineOf13"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "NineOf14",
          "package": "HaXml",
          "signature": "NineOf14 i",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf14",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "NineOf14",
          "package": "HaXml",
          "partial": "Nine Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:NineOf14"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "NineOf15",
          "package": "HaXml",
          "signature": "NineOf15 i",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf15",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "NineOf15",
          "package": "HaXml",
          "partial": "Nine Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:NineOf15"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "NineOf16",
          "package": "HaXml",
          "signature": "NineOf16 i",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf16",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "NineOf16",
          "package": "HaXml",
          "partial": "Nine Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:NineOf16"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "NineOf17",
          "package": "HaXml",
          "signature": "NineOf17 i",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf17",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "NineOf17",
          "package": "HaXml",
          "partial": "Nine Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:NineOf17"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "NineOf18",
          "package": "HaXml",
          "signature": "NineOf18 i",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf18",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "NineOf18",
          "package": "HaXml",
          "partial": "Nine Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:NineOf18"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "NineOf19",
          "package": "HaXml",
          "signature": "NineOf19 i",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf19",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "NineOf19",
          "package": "HaXml",
          "partial": "Nine Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:NineOf19"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "NineOf20",
          "package": "HaXml",
          "signature": "NineOf20 i",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf20",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "NineOf20",
          "package": "HaXml",
          "partial": "Nine Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:NineOf20"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "NineOf9",
          "package": "HaXml",
          "signature": "NineOf9 i",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf9",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "NineOf9",
          "package": "HaXml",
          "partial": "Nine Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:NineOf9"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "NineteenOf19",
          "package": "HaXml",
          "signature": "NineteenOf19 s",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf19",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "NineteenOf19",
          "package": "HaXml",
          "partial": "Nineteen Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:NineteenOf19"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "NineteenOf20",
          "package": "HaXml",
          "signature": "NineteenOf20 s",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf20",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "NineteenOf20",
          "package": "HaXml",
          "partial": "Nineteen Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:NineteenOf20"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf1",
          "package": "HaXml",
          "signature": "OneOf1 a",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf1",
          "package": "HaXml",
          "partial": "One Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:OneOf1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf10",
          "package": "HaXml",
          "signature": "OneOf10 a",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf10",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf10",
          "package": "HaXml",
          "partial": "One Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:OneOf10"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf11",
          "package": "HaXml",
          "signature": "OneOf11 a",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf11",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf11",
          "package": "HaXml",
          "partial": "One Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:OneOf11"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf12",
          "package": "HaXml",
          "signature": "OneOf12 a",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf12",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf12",
          "package": "HaXml",
          "partial": "One Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:OneOf12"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf13",
          "package": "HaXml",
          "signature": "OneOf13 a",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf13",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf13",
          "package": "HaXml",
          "partial": "One Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:OneOf13"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf14",
          "package": "HaXml",
          "signature": "OneOf14 a",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf14",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf14",
          "package": "HaXml",
          "partial": "One Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:OneOf14"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf15",
          "package": "HaXml",
          "signature": "OneOf15 a",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf15",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf15",
          "package": "HaXml",
          "partial": "One Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:OneOf15"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf16",
          "package": "HaXml",
          "signature": "OneOf16 a",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf16",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf16",
          "package": "HaXml",
          "partial": "One Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:OneOf16"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf17",
          "package": "HaXml",
          "signature": "OneOf17 a",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf17",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf17",
          "package": "HaXml",
          "partial": "One Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:OneOf17"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf18",
          "package": "HaXml",
          "signature": "OneOf18 a",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf18",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf18",
          "package": "HaXml",
          "partial": "One Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:OneOf18"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf19",
          "package": "HaXml",
          "signature": "OneOf19 a",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf19",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf19",
          "package": "HaXml",
          "partial": "One Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:OneOf19"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf2",
          "package": "HaXml",
          "signature": "OneOf2 a",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf2",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf2",
          "package": "HaXml",
          "partial": "One Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:OneOf2"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf20",
          "package": "HaXml",
          "signature": "OneOf20 a",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf20",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf20",
          "package": "HaXml",
          "partial": "One Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:OneOf20"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf3",
          "package": "HaXml",
          "signature": "OneOf3 a",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf3",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf3",
          "package": "HaXml",
          "partial": "One Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:OneOf3"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf4",
          "package": "HaXml",
          "signature": "OneOf4 a",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf4",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf4",
          "package": "HaXml",
          "partial": "One Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:OneOf4"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf5",
          "package": "HaXml",
          "signature": "OneOf5 a",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf5",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf5",
          "package": "HaXml",
          "partial": "One Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:OneOf5"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf6",
          "package": "HaXml",
          "signature": "OneOf6 a",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf6",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf6",
          "package": "HaXml",
          "partial": "One Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:OneOf6"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf7",
          "package": "HaXml",
          "signature": "OneOf7 a",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf7",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf7",
          "package": "HaXml",
          "partial": "One Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:OneOf7"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf8",
          "package": "HaXml",
          "signature": "OneOf8 a",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf8",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf8",
          "package": "HaXml",
          "partial": "One Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:OneOf8"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf9",
          "package": "HaXml",
          "signature": "OneOf9 a",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf9",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "OneOf9",
          "package": "HaXml",
          "partial": "One Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:OneOf9"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SevenOf10",
          "package": "HaXml",
          "signature": "SevenOf10 g",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf10",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SevenOf10",
          "package": "HaXml",
          "partial": "Seven Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:SevenOf10"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SevenOf11",
          "package": "HaXml",
          "signature": "SevenOf11 g",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf11",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SevenOf11",
          "package": "HaXml",
          "partial": "Seven Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:SevenOf11"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SevenOf12",
          "package": "HaXml",
          "signature": "SevenOf12 g",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf12",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SevenOf12",
          "package": "HaXml",
          "partial": "Seven Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:SevenOf12"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SevenOf13",
          "package": "HaXml",
          "signature": "SevenOf13 g",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf13",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SevenOf13",
          "package": "HaXml",
          "partial": "Seven Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:SevenOf13"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SevenOf14",
          "package": "HaXml",
          "signature": "SevenOf14 g",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf14",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SevenOf14",
          "package": "HaXml",
          "partial": "Seven Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:SevenOf14"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SevenOf15",
          "package": "HaXml",
          "signature": "SevenOf15 g",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf15",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SevenOf15",
          "package": "HaXml",
          "partial": "Seven Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:SevenOf15"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SevenOf16",
          "package": "HaXml",
          "signature": "SevenOf16 g",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf16",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SevenOf16",
          "package": "HaXml",
          "partial": "Seven Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:SevenOf16"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SevenOf17",
          "package": "HaXml",
          "signature": "SevenOf17 g",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf17",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SevenOf17",
          "package": "HaXml",
          "partial": "Seven Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:SevenOf17"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SevenOf18",
          "package": "HaXml",
          "signature": "SevenOf18 g",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf18",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SevenOf18",
          "package": "HaXml",
          "partial": "Seven Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:SevenOf18"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SevenOf19",
          "package": "HaXml",
          "signature": "SevenOf19 g",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf19",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SevenOf19",
          "package": "HaXml",
          "partial": "Seven Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:SevenOf19"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SevenOf20",
          "package": "HaXml",
          "signature": "SevenOf20 g",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf20",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SevenOf20",
          "package": "HaXml",
          "partial": "Seven Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:SevenOf20"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SevenOf7",
          "package": "HaXml",
          "signature": "SevenOf7 g",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf7",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SevenOf7",
          "package": "HaXml",
          "partial": "Seven Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:SevenOf7"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SevenOf8",
          "package": "HaXml",
          "signature": "SevenOf8 g",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf8",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SevenOf8",
          "package": "HaXml",
          "partial": "Seven Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:SevenOf8"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SevenOf9",
          "package": "HaXml",
          "signature": "SevenOf9 g",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf9",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SevenOf9",
          "package": "HaXml",
          "partial": "Seven Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:SevenOf9"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SeventeenOf17",
          "package": "HaXml",
          "signature": "SeventeenOf17 q",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf17",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SeventeenOf17",
          "package": "HaXml",
          "partial": "Seventeen Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:SeventeenOf17"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SeventeenOf18",
          "package": "HaXml",
          "signature": "SeventeenOf18 q",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf18",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SeventeenOf18",
          "package": "HaXml",
          "partial": "Seventeen Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:SeventeenOf18"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SeventeenOf19",
          "package": "HaXml",
          "signature": "SeventeenOf19 q",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf19",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SeventeenOf19",
          "package": "HaXml",
          "partial": "Seventeen Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:SeventeenOf19"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SeventeenOf20",
          "package": "HaXml",
          "signature": "SeventeenOf20 q",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf20",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SeventeenOf20",
          "package": "HaXml",
          "partial": "Seventeen Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:SeventeenOf20"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SixOf10",
          "package": "HaXml",
          "signature": "SixOf10 f",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf10",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SixOf10",
          "package": "HaXml",
          "partial": "Six Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:SixOf10"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SixOf11",
          "package": "HaXml",
          "signature": "SixOf11 f",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf11",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SixOf11",
          "package": "HaXml",
          "partial": "Six Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:SixOf11"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SixOf12",
          "package": "HaXml",
          "signature": "SixOf12 f",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf12",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SixOf12",
          "package": "HaXml",
          "partial": "Six Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:SixOf12"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SixOf13",
          "package": "HaXml",
          "signature": "SixOf13 f",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf13",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SixOf13",
          "package": "HaXml",
          "partial": "Six Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:SixOf13"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SixOf14",
          "package": "HaXml",
          "signature": "SixOf14 f",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf14",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SixOf14",
          "package": "HaXml",
          "partial": "Six Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:SixOf14"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SixOf15",
          "package": "HaXml",
          "signature": "SixOf15 f",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf15",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SixOf15",
          "package": "HaXml",
          "partial": "Six Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:SixOf15"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SixOf16",
          "package": "HaXml",
          "signature": "SixOf16 f",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf16",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SixOf16",
          "package": "HaXml",
          "partial": "Six Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:SixOf16"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SixOf17",
          "package": "HaXml",
          "signature": "SixOf17 f",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf17",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SixOf17",
          "package": "HaXml",
          "partial": "Six Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:SixOf17"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SixOf18",
          "package": "HaXml",
          "signature": "SixOf18 f",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf18",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SixOf18",
          "package": "HaXml",
          "partial": "Six Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:SixOf18"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SixOf19",
          "package": "HaXml",
          "signature": "SixOf19 f",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf19",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SixOf19",
          "package": "HaXml",
          "partial": "Six Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:SixOf19"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SixOf20",
          "package": "HaXml",
          "signature": "SixOf20 f",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf20",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SixOf20",
          "package": "HaXml",
          "partial": "Six Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:SixOf20"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SixOf6",
          "package": "HaXml",
          "signature": "SixOf6 f",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf6",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SixOf6",
          "package": "HaXml",
          "partial": "Six Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:SixOf6"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SixOf7",
          "package": "HaXml",
          "signature": "SixOf7 f",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf7",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SixOf7",
          "package": "HaXml",
          "partial": "Six Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:SixOf7"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SixOf8",
          "package": "HaXml",
          "signature": "SixOf8 f",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf8",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SixOf8",
          "package": "HaXml",
          "partial": "Six Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:SixOf8"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SixOf9",
          "package": "HaXml",
          "signature": "SixOf9 f",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf9",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SixOf9",
          "package": "HaXml",
          "partial": "Six Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:SixOf9"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SixteenOf16",
          "package": "HaXml",
          "signature": "SixteenOf16 p",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf16",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SixteenOf16",
          "package": "HaXml",
          "partial": "Sixteen Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:SixteenOf16"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SixteenOf17",
          "package": "HaXml",
          "signature": "SixteenOf17 p",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf17",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SixteenOf17",
          "package": "HaXml",
          "partial": "Sixteen Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:SixteenOf17"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SixteenOf18",
          "package": "HaXml",
          "signature": "SixteenOf18 p",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf18",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SixteenOf18",
          "package": "HaXml",
          "partial": "Sixteen Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:SixteenOf18"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SixteenOf19",
          "package": "HaXml",
          "signature": "SixteenOf19 p",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf19",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SixteenOf19",
          "package": "HaXml",
          "partial": "Sixteen Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:SixteenOf19"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SixteenOf20",
          "package": "HaXml",
          "signature": "SixteenOf20 p",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf20",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "SixteenOf20",
          "package": "HaXml",
          "partial": "Sixteen Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:SixteenOf20"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TenOf10",
          "package": "HaXml",
          "signature": "TenOf10 j",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf10",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TenOf10",
          "package": "HaXml",
          "partial": "Ten Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:TenOf10"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TenOf11",
          "package": "HaXml",
          "signature": "TenOf11 j",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf11",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TenOf11",
          "package": "HaXml",
          "partial": "Ten Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:TenOf11"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TenOf12",
          "package": "HaXml",
          "signature": "TenOf12 j",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf12",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TenOf12",
          "package": "HaXml",
          "partial": "Ten Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:TenOf12"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TenOf13",
          "package": "HaXml",
          "signature": "TenOf13 j",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf13",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TenOf13",
          "package": "HaXml",
          "partial": "Ten Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:TenOf13"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TenOf14",
          "package": "HaXml",
          "signature": "TenOf14 j",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf14",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TenOf14",
          "package": "HaXml",
          "partial": "Ten Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:TenOf14"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TenOf15",
          "package": "HaXml",
          "signature": "TenOf15 j",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf15",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TenOf15",
          "package": "HaXml",
          "partial": "Ten Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:TenOf15"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TenOf16",
          "package": "HaXml",
          "signature": "TenOf16 j",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf16",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TenOf16",
          "package": "HaXml",
          "partial": "Ten Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:TenOf16"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TenOf17",
          "package": "HaXml",
          "signature": "TenOf17 j",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf17",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TenOf17",
          "package": "HaXml",
          "partial": "Ten Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:TenOf17"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TenOf18",
          "package": "HaXml",
          "signature": "TenOf18 j",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf18",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TenOf18",
          "package": "HaXml",
          "partial": "Ten Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:TenOf18"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TenOf19",
          "package": "HaXml",
          "signature": "TenOf19 j",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf19",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TenOf19",
          "package": "HaXml",
          "partial": "Ten Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:TenOf19"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TenOf20",
          "package": "HaXml",
          "signature": "TenOf20 j",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf20",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TenOf20",
          "package": "HaXml",
          "partial": "Ten Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:TenOf20"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "ThirteenOf13",
          "package": "HaXml",
          "signature": "ThirteenOf13 m",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf13",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "ThirteenOf13",
          "package": "HaXml",
          "partial": "Thirteen Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:ThirteenOf13"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "ThirteenOf14",
          "package": "HaXml",
          "signature": "ThirteenOf14 m",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf14",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "ThirteenOf14",
          "package": "HaXml",
          "partial": "Thirteen Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:ThirteenOf14"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "ThirteenOf15",
          "package": "HaXml",
          "signature": "ThirteenOf15 m",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf15",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "ThirteenOf15",
          "package": "HaXml",
          "partial": "Thirteen Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:ThirteenOf15"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "ThirteenOf16",
          "package": "HaXml",
          "signature": "ThirteenOf16 m",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf16",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "ThirteenOf16",
          "package": "HaXml",
          "partial": "Thirteen Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:ThirteenOf16"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "ThirteenOf17",
          "package": "HaXml",
          "signature": "ThirteenOf17 m",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf17",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "ThirteenOf17",
          "package": "HaXml",
          "partial": "Thirteen Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:ThirteenOf17"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "ThirteenOf18",
          "package": "HaXml",
          "signature": "ThirteenOf18 m",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf18",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "ThirteenOf18",
          "package": "HaXml",
          "partial": "Thirteen Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:ThirteenOf18"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "ThirteenOf19",
          "package": "HaXml",
          "signature": "ThirteenOf19 m",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf19",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "ThirteenOf19",
          "package": "HaXml",
          "partial": "Thirteen Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:ThirteenOf19"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "ThirteenOf20",
          "package": "HaXml",
          "signature": "ThirteenOf20 m",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf20",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "ThirteenOf20",
          "package": "HaXml",
          "partial": "Thirteen Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:ThirteenOf20"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "ThreeOf10",
          "package": "HaXml",
          "signature": "ThreeOf10 c",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf10",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "ThreeOf10",
          "package": "HaXml",
          "partial": "Three Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:ThreeOf10"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "ThreeOf11",
          "package": "HaXml",
          "signature": "ThreeOf11 c",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf11",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "ThreeOf11",
          "package": "HaXml",
          "partial": "Three Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:ThreeOf11"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "ThreeOf12",
          "package": "HaXml",
          "signature": "ThreeOf12 c",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf12",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "ThreeOf12",
          "package": "HaXml",
          "partial": "Three Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:ThreeOf12"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "ThreeOf13",
          "package": "HaXml",
          "signature": "ThreeOf13 c",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf13",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "ThreeOf13",
          "package": "HaXml",
          "partial": "Three Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:ThreeOf13"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "ThreeOf14",
          "package": "HaXml",
          "signature": "ThreeOf14 c",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf14",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "ThreeOf14",
          "package": "HaXml",
          "partial": "Three Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:ThreeOf14"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "ThreeOf15",
          "package": "HaXml",
          "signature": "ThreeOf15 c",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf15",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "ThreeOf15",
          "package": "HaXml",
          "partial": "Three Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:ThreeOf15"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "ThreeOf16",
          "package": "HaXml",
          "signature": "ThreeOf16 c",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf16",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "ThreeOf16",
          "package": "HaXml",
          "partial": "Three Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:ThreeOf16"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "ThreeOf17",
          "package": "HaXml",
          "signature": "ThreeOf17 c",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf17",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "ThreeOf17",
          "package": "HaXml",
          "partial": "Three Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:ThreeOf17"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "ThreeOf18",
          "package": "HaXml",
          "signature": "ThreeOf18 c",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf18",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "ThreeOf18",
          "package": "HaXml",
          "partial": "Three Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:ThreeOf18"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "ThreeOf19",
          "package": "HaXml",
          "signature": "ThreeOf19 c",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf19",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "ThreeOf19",
          "package": "HaXml",
          "partial": "Three Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:ThreeOf19"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "ThreeOf20",
          "package": "HaXml",
          "signature": "ThreeOf20 c",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf20",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "ThreeOf20",
          "package": "HaXml",
          "partial": "Three Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:ThreeOf20"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "ThreeOf3",
          "package": "HaXml",
          "signature": "ThreeOf3 c",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf3",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "ThreeOf3",
          "package": "HaXml",
          "partial": "Three Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:ThreeOf3"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "ThreeOf4",
          "package": "HaXml",
          "signature": "ThreeOf4 c",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf4",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "ThreeOf4",
          "package": "HaXml",
          "partial": "Three Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:ThreeOf4"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "ThreeOf5",
          "package": "HaXml",
          "signature": "ThreeOf5 c",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf5",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "ThreeOf5",
          "package": "HaXml",
          "partial": "Three Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:ThreeOf5"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "ThreeOf6",
          "package": "HaXml",
          "signature": "ThreeOf6 c",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf6",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "ThreeOf6",
          "package": "HaXml",
          "partial": "Three Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:ThreeOf6"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "ThreeOf7",
          "package": "HaXml",
          "signature": "ThreeOf7 c",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf7",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "ThreeOf7",
          "package": "HaXml",
          "partial": "Three Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:ThreeOf7"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "ThreeOf8",
          "package": "HaXml",
          "signature": "ThreeOf8 c",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf8",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "ThreeOf8",
          "package": "HaXml",
          "partial": "Three Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:ThreeOf8"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "ThreeOf9",
          "package": "HaXml",
          "signature": "ThreeOf9 c",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf9",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "ThreeOf9",
          "package": "HaXml",
          "partial": "Three Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:ThreeOf9"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TwelveOf12",
          "package": "HaXml",
          "signature": "TwelveOf12 l",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf12",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TwelveOf12",
          "package": "HaXml",
          "partial": "Twelve Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:TwelveOf12"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TwelveOf13",
          "package": "HaXml",
          "signature": "TwelveOf13 l",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf13",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TwelveOf13",
          "package": "HaXml",
          "partial": "Twelve Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:TwelveOf13"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TwelveOf14",
          "package": "HaXml",
          "signature": "TwelveOf14 l",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf14",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TwelveOf14",
          "package": "HaXml",
          "partial": "Twelve Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:TwelveOf14"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TwelveOf15",
          "package": "HaXml",
          "signature": "TwelveOf15 l",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf15",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TwelveOf15",
          "package": "HaXml",
          "partial": "Twelve Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:TwelveOf15"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TwelveOf16",
          "package": "HaXml",
          "signature": "TwelveOf16 l",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf16",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TwelveOf16",
          "package": "HaXml",
          "partial": "Twelve Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:TwelveOf16"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TwelveOf17",
          "package": "HaXml",
          "signature": "TwelveOf17 l",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf17",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TwelveOf17",
          "package": "HaXml",
          "partial": "Twelve Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:TwelveOf17"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TwelveOf18",
          "package": "HaXml",
          "signature": "TwelveOf18 l",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf18",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TwelveOf18",
          "package": "HaXml",
          "partial": "Twelve Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:TwelveOf18"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TwelveOf19",
          "package": "HaXml",
          "signature": "TwelveOf19 l",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf19",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TwelveOf19",
          "package": "HaXml",
          "partial": "Twelve Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:TwelveOf19"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TwelveOf20",
          "package": "HaXml",
          "signature": "TwelveOf20 l",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf20",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TwelveOf20",
          "package": "HaXml",
          "partial": "Twelve Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:TwelveOf20"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TwentyOf20",
          "package": "HaXml",
          "signature": "TwentyOf20 t",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf20",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TwentyOf20",
          "package": "HaXml",
          "partial": "Twenty Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:TwentyOf20"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TwoOf10",
          "package": "HaXml",
          "signature": "TwoOf10 b",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf10",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TwoOf10",
          "package": "HaXml",
          "partial": "Two Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:TwoOf10"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TwoOf11",
          "package": "HaXml",
          "signature": "TwoOf11 b",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf11",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TwoOf11",
          "package": "HaXml",
          "partial": "Two Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:TwoOf11"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TwoOf12",
          "package": "HaXml",
          "signature": "TwoOf12 b",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf12",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TwoOf12",
          "package": "HaXml",
          "partial": "Two Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:TwoOf12"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TwoOf13",
          "package": "HaXml",
          "signature": "TwoOf13 b",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf13",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TwoOf13",
          "package": "HaXml",
          "partial": "Two Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:TwoOf13"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TwoOf14",
          "package": "HaXml",
          "signature": "TwoOf14 b",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf14",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TwoOf14",
          "package": "HaXml",
          "partial": "Two Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:TwoOf14"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TwoOf15",
          "package": "HaXml",
          "signature": "TwoOf15 b",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf15",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TwoOf15",
          "package": "HaXml",
          "partial": "Two Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:TwoOf15"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TwoOf16",
          "package": "HaXml",
          "signature": "TwoOf16 b",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf16",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TwoOf16",
          "package": "HaXml",
          "partial": "Two Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:TwoOf16"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TwoOf17",
          "package": "HaXml",
          "signature": "TwoOf17 b",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf17",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TwoOf17",
          "package": "HaXml",
          "partial": "Two Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:TwoOf17"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TwoOf18",
          "package": "HaXml",
          "signature": "TwoOf18 b",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf18",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TwoOf18",
          "package": "HaXml",
          "partial": "Two Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:TwoOf18"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TwoOf19",
          "package": "HaXml",
          "signature": "TwoOf19 b",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf19",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TwoOf19",
          "package": "HaXml",
          "partial": "Two Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:TwoOf19"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TwoOf2",
          "package": "HaXml",
          "signature": "TwoOf2 b",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf2",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TwoOf2",
          "package": "HaXml",
          "partial": "Two Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:TwoOf2"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TwoOf20",
          "package": "HaXml",
          "signature": "TwoOf20 b",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf20",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TwoOf20",
          "package": "HaXml",
          "partial": "Two Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:TwoOf20"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TwoOf3",
          "package": "HaXml",
          "signature": "TwoOf3 b",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf3",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TwoOf3",
          "package": "HaXml",
          "partial": "Two Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:TwoOf3"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TwoOf4",
          "package": "HaXml",
          "signature": "TwoOf4 b",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf4",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TwoOf4",
          "package": "HaXml",
          "partial": "Two Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:TwoOf4"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TwoOf5",
          "package": "HaXml",
          "signature": "TwoOf5 b",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf5",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TwoOf5",
          "package": "HaXml",
          "partial": "Two Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:TwoOf5"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TwoOf6",
          "package": "HaXml",
          "signature": "TwoOf6 b",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf6",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TwoOf6",
          "package": "HaXml",
          "partial": "Two Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:TwoOf6"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TwoOf7",
          "package": "HaXml",
          "signature": "TwoOf7 b",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf7",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TwoOf7",
          "package": "HaXml",
          "partial": "Two Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:TwoOf7"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TwoOf8",
          "package": "HaXml",
          "signature": "TwoOf8 b",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf8",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TwoOf8",
          "package": "HaXml",
          "partial": "Two Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:TwoOf8"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TwoOf9",
          "package": "HaXml",
          "signature": "TwoOf9 b",
          "source": "src/Text-XML-HaXml-OneOfN.html#OneOf9",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "TwoOf9",
          "package": "HaXml",
          "partial": "Two Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:TwoOf9"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "foldOneOf1",
          "package": "HaXml",
          "signature": "(a -\u003e z) -\u003e OneOf1 a -\u003e z",
          "source": "src/Text-XML-HaXml-OneOfN.html#foldOneOf1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "foldOneOf1",
          "normalized": "(a-\u003eb)-\u003eOneOf a-\u003eb",
          "package": "HaXml",
          "partial": "One Of",
          "signature": "(a-\u003ez)-\u003eOneOf a-\u003ez",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:foldOneOf1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "foldOneOf10",
          "package": "HaXml",
          "signature": "(a -\u003e z) -\u003e (b -\u003e z) -\u003e (c -\u003e z) -\u003e (d -\u003e z) -\u003e (e -\u003e z) -\u003e (f -\u003e z) -\u003e (g -\u003e z) -\u003e (h -\u003e z) -\u003e (i -\u003e z) -\u003e (j -\u003e z) -\u003e OneOf10 a b c d e f g h i j -\u003e z",
          "source": "src/Text-XML-HaXml-OneOfN.html#foldOneOf10",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "foldOneOf10",
          "normalized": "(a-\u003eb)-\u003e(c-\u003eb)-\u003e(d-\u003eb)-\u003e(e-\u003eb)-\u003e(f-\u003eb)-\u003e(g-\u003eb)-\u003e(h-\u003eb)-\u003e(i-\u003eb)-\u003e(j-\u003eb)-\u003e(k-\u003eb)-\u003eOneOf a c d e f g h i j k-\u003eb",
          "package": "HaXml",
          "partial": "One Of",
          "signature": "(a-\u003ez)-\u003e(b-\u003ez)-\u003e(c-\u003ez)-\u003e(d-\u003ez)-\u003e(e-\u003ez)-\u003e(f-\u003ez)-\u003e(g-\u003ez)-\u003e(h-\u003ez)-\u003e(i-\u003ez)-\u003e(j-\u003ez)-\u003eOneOf a b c d e f g h i j-\u003ez",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:foldOneOf10"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "foldOneOf11",
          "package": "HaXml",
          "signature": "(a -\u003e z) -\u003e (b -\u003e z) -\u003e (c -\u003e z) -\u003e (d -\u003e z) -\u003e (e -\u003e z) -\u003e (f -\u003e z) -\u003e (g -\u003e z) -\u003e (h -\u003e z) -\u003e (i -\u003e z) -\u003e (j -\u003e z) -\u003e (k -\u003e z) -\u003e OneOf11 a b c d e f g h i j k -\u003e z",
          "source": "src/Text-XML-HaXml-OneOfN.html#foldOneOf11",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "foldOneOf11",
          "normalized": "(a-\u003eb)-\u003e(c-\u003eb)-\u003e(d-\u003eb)-\u003e(e-\u003eb)-\u003e(f-\u003eb)-\u003e(g-\u003eb)-\u003e(h-\u003eb)-\u003e(i-\u003eb)-\u003e(j-\u003eb)-\u003e(k-\u003eb)-\u003e(l-\u003eb)-\u003eOneOf a c d e f g h i j k l-\u003eb",
          "package": "HaXml",
          "partial": "One Of",
          "signature": "(a-\u003ez)-\u003e(b-\u003ez)-\u003e(c-\u003ez)-\u003e(d-\u003ez)-\u003e(e-\u003ez)-\u003e(f-\u003ez)-\u003e(g-\u003ez)-\u003e(h-\u003ez)-\u003e(i-\u003ez)-\u003e(j-\u003ez)-\u003e(k-\u003ez)-\u003eOneOf a b c d e f g h i j k-\u003ez",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:foldOneOf11"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "foldOneOf12",
          "package": "HaXml",
          "signature": "(a -\u003e z) -\u003e (b -\u003e z) -\u003e (c -\u003e z) -\u003e (d -\u003e z) -\u003e (e -\u003e z) -\u003e (f -\u003e z) -\u003e (g -\u003e z) -\u003e (h -\u003e z) -\u003e (i -\u003e z) -\u003e (j -\u003e z) -\u003e (k -\u003e z) -\u003e (l -\u003e z) -\u003e OneOf12 a b c d e f g h i j k l -\u003e z",
          "source": "src/Text-XML-HaXml-OneOfN.html#foldOneOf12",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "foldOneOf12",
          "normalized": "(a-\u003eb)-\u003e(c-\u003eb)-\u003e(d-\u003eb)-\u003e(e-\u003eb)-\u003e(f-\u003eb)-\u003e(g-\u003eb)-\u003e(h-\u003eb)-\u003e(i-\u003eb)-\u003e(j-\u003eb)-\u003e(k-\u003eb)-\u003e(l-\u003eb)-\u003e(m-\u003eb)-\u003eOneOf a c d e f g h i j k l m-\u003eb",
          "package": "HaXml",
          "partial": "One Of",
          "signature": "(a-\u003ez)-\u003e(b-\u003ez)-\u003e(c-\u003ez)-\u003e(d-\u003ez)-\u003e(e-\u003ez)-\u003e(f-\u003ez)-\u003e(g-\u003ez)-\u003e(h-\u003ez)-\u003e(i-\u003ez)-\u003e(j-\u003ez)-\u003e(k-\u003ez)-\u003e(l-\u003ez)-\u003eOneOf a b c d e f g h i j k l-\u003ez",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:foldOneOf12"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "foldOneOf13",
          "package": "HaXml",
          "signature": "(a -\u003e z) -\u003e (b -\u003e z) -\u003e (c -\u003e z) -\u003e (d -\u003e z) -\u003e (e -\u003e z) -\u003e (f -\u003e z) -\u003e (g -\u003e z) -\u003e (h -\u003e z) -\u003e (i -\u003e z) -\u003e (j -\u003e z) -\u003e (k -\u003e z) -\u003e (l -\u003e z) -\u003e (m -\u003e z) -\u003e OneOf13 a b c d e f g h i j k l m -\u003e z",
          "source": "src/Text-XML-HaXml-OneOfN.html#foldOneOf13",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "foldOneOf13",
          "normalized": "(a-\u003eb)-\u003e(c-\u003eb)-\u003e(d-\u003eb)-\u003e(e-\u003eb)-\u003e(f-\u003eb)-\u003e(g-\u003eb)-\u003e(h-\u003eb)-\u003e(i-\u003eb)-\u003e(j-\u003eb)-\u003e(k-\u003eb)-\u003e(l-\u003eb)-\u003e(m-\u003eb)-\u003e(n-\u003eb)-\u003eOneOf a c d e f g h i j k l m n-\u003eb",
          "package": "HaXml",
          "partial": "One Of",
          "signature": "(a-\u003ez)-\u003e(b-\u003ez)-\u003e(c-\u003ez)-\u003e(d-\u003ez)-\u003e(e-\u003ez)-\u003e(f-\u003ez)-\u003e(g-\u003ez)-\u003e(h-\u003ez)-\u003e(i-\u003ez)-\u003e(j-\u003ez)-\u003e(k-\u003ez)-\u003e(l-\u003ez)-\u003e(m-\u003ez)-\u003eOneOf a b c d e f g h i j k l m-\u003ez",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:foldOneOf13"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "foldOneOf14",
          "package": "HaXml",
          "signature": "(a -\u003e z) -\u003e (b -\u003e z) -\u003e (c -\u003e z) -\u003e (d -\u003e z) -\u003e (e -\u003e z) -\u003e (f -\u003e z) -\u003e (g -\u003e z) -\u003e (h -\u003e z) -\u003e (i -\u003e z) -\u003e (j -\u003e z) -\u003e (k -\u003e z) -\u003e (l -\u003e z) -\u003e (m -\u003e z) -\u003e (n -\u003e z) -\u003e OneOf14 a b c d e f g h i j k l m n -\u003e z",
          "source": "src/Text-XML-HaXml-OneOfN.html#foldOneOf14",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "foldOneOf14",
          "normalized": "(a-\u003eb)-\u003e(c-\u003eb)-\u003e(d-\u003eb)-\u003e(e-\u003eb)-\u003e(f-\u003eb)-\u003e(g-\u003eb)-\u003e(h-\u003eb)-\u003e(i-\u003eb)-\u003e(j-\u003eb)-\u003e(k-\u003eb)-\u003e(l-\u003eb)-\u003e(m-\u003eb)-\u003e(n-\u003eb)-\u003e(o-\u003eb)-\u003eOneOf a c d e f g h i j k l m n o-\u003eb",
          "package": "HaXml",
          "partial": "One Of",
          "signature": "(a-\u003ez)-\u003e(b-\u003ez)-\u003e(c-\u003ez)-\u003e(d-\u003ez)-\u003e(e-\u003ez)-\u003e(f-\u003ez)-\u003e(g-\u003ez)-\u003e(h-\u003ez)-\u003e(i-\u003ez)-\u003e(j-\u003ez)-\u003e(k-\u003ez)-\u003e(l-\u003ez)-\u003e(m-\u003ez)-\u003e(n-\u003ez)-\u003eOneOf a b c d e f g h i j k l m n-\u003ez",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:foldOneOf14"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "foldOneOf15",
          "package": "HaXml",
          "signature": "(a -\u003e z) -\u003e (b -\u003e z) -\u003e (c -\u003e z) -\u003e (d -\u003e z) -\u003e (e -\u003e z) -\u003e (f -\u003e z) -\u003e (g -\u003e z) -\u003e (h -\u003e z) -\u003e (i -\u003e z) -\u003e (j -\u003e z) -\u003e (k -\u003e z) -\u003e (l -\u003e z) -\u003e (m -\u003e z) -\u003e (n -\u003e z) -\u003e (o -\u003e z) -\u003e OneOf15 a b c d e f g h i j k l m n o -\u003e z",
          "source": "src/Text-XML-HaXml-OneOfN.html#foldOneOf15",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "foldOneOf15",
          "normalized": "(a-\u003eb)-\u003e(c-\u003eb)-\u003e(d-\u003eb)-\u003e(e-\u003eb)-\u003e(f-\u003eb)-\u003e(g-\u003eb)-\u003e(h-\u003eb)-\u003e(i-\u003eb)-\u003e(j-\u003eb)-\u003e(k-\u003eb)-\u003e(l-\u003eb)-\u003e(m-\u003eb)-\u003e(n-\u003eb)-\u003e(o-\u003eb)-\u003e(p-\u003eb)-\u003eOneOf a c d e f g h i j k l m n o p-\u003eb",
          "package": "HaXml",
          "partial": "One Of",
          "signature": "(a-\u003ez)-\u003e(b-\u003ez)-\u003e(c-\u003ez)-\u003e(d-\u003ez)-\u003e(e-\u003ez)-\u003e(f-\u003ez)-\u003e(g-\u003ez)-\u003e(h-\u003ez)-\u003e(i-\u003ez)-\u003e(j-\u003ez)-\u003e(k-\u003ez)-\u003e(l-\u003ez)-\u003e(m-\u003ez)-\u003e(n-\u003ez)-\u003e(o-\u003ez)-\u003eOneOf a b c d e f g h i j k l m n o-\u003ez",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:foldOneOf15"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "foldOneOf16",
          "package": "HaXml",
          "signature": "(a -\u003e z) -\u003e (b -\u003e z) -\u003e (c -\u003e z) -\u003e (d -\u003e z) -\u003e (e -\u003e z) -\u003e (f -\u003e z) -\u003e (g -\u003e z) -\u003e (h -\u003e z) -\u003e (i -\u003e z) -\u003e (j -\u003e z) -\u003e (k -\u003e z) -\u003e (l -\u003e z) -\u003e (m -\u003e z) -\u003e (n -\u003e z) -\u003e (o -\u003e z) -\u003e (p -\u003e z) -\u003e OneOf16 a b c d e f g h i j k l m n o p -\u003e z",
          "source": "src/Text-XML-HaXml-OneOfN.html#foldOneOf16",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "foldOneOf16",
          "normalized": "(a-\u003eb)-\u003e(c-\u003eb)-\u003e(d-\u003eb)-\u003e(e-\u003eb)-\u003e(f-\u003eb)-\u003e(g-\u003eb)-\u003e(h-\u003eb)-\u003e(i-\u003eb)-\u003e(j-\u003eb)-\u003e(k-\u003eb)-\u003e(l-\u003eb)-\u003e(m-\u003eb)-\u003e(n-\u003eb)-\u003e(o-\u003eb)-\u003e(p-\u003eb)-\u003e(q-\u003eb)-\u003eOneOf a c d e f g h i j k l m n o p q-\u003eb",
          "package": "HaXml",
          "partial": "One Of",
          "signature": "(a-\u003ez)-\u003e(b-\u003ez)-\u003e(c-\u003ez)-\u003e(d-\u003ez)-\u003e(e-\u003ez)-\u003e(f-\u003ez)-\u003e(g-\u003ez)-\u003e(h-\u003ez)-\u003e(i-\u003ez)-\u003e(j-\u003ez)-\u003e(k-\u003ez)-\u003e(l-\u003ez)-\u003e(m-\u003ez)-\u003e(n-\u003ez)-\u003e(o-\u003ez)-\u003e(p-\u003ez)-\u003eOneOf a b c d e f g h i j k l m n o p-\u003ez",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:foldOneOf16"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "foldOneOf17",
          "package": "HaXml",
          "signature": "(a -\u003e z) -\u003e (b -\u003e z) -\u003e (c -\u003e z) -\u003e (d -\u003e z) -\u003e (e -\u003e z) -\u003e (f -\u003e z) -\u003e (g -\u003e z) -\u003e (h -\u003e z) -\u003e (i -\u003e z) -\u003e (j -\u003e z) -\u003e (k -\u003e z) -\u003e (l -\u003e z) -\u003e (m -\u003e z) -\u003e (n -\u003e z) -\u003e (o -\u003e z) -\u003e (p -\u003e z) -\u003e (q -\u003e z) -\u003e OneOf17 a b c d e f g h i j k l m n o p q -\u003e z",
          "source": "src/Text-XML-HaXml-OneOfN.html#foldOneOf17",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "foldOneOf17",
          "normalized": "(a-\u003eb)-\u003e(c-\u003eb)-\u003e(d-\u003eb)-\u003e(e-\u003eb)-\u003e(f-\u003eb)-\u003e(g-\u003eb)-\u003e(h-\u003eb)-\u003e(i-\u003eb)-\u003e(j-\u003eb)-\u003e(k-\u003eb)-\u003e(l-\u003eb)-\u003e(m-\u003eb)-\u003e(n-\u003eb)-\u003e(o-\u003eb)-\u003e(p-\u003eb)-\u003e(q-\u003eb)-\u003e(r-\u003eb)-\u003eOneOf a c d e f g h i j k l m n o p q r-\u003eb",
          "package": "HaXml",
          "partial": "One Of",
          "signature": "(a-\u003ez)-\u003e(b-\u003ez)-\u003e(c-\u003ez)-\u003e(d-\u003ez)-\u003e(e-\u003ez)-\u003e(f-\u003ez)-\u003e(g-\u003ez)-\u003e(h-\u003ez)-\u003e(i-\u003ez)-\u003e(j-\u003ez)-\u003e(k-\u003ez)-\u003e(l-\u003ez)-\u003e(m-\u003ez)-\u003e(n-\u003ez)-\u003e(o-\u003ez)-\u003e(p-\u003ez)-\u003e(q-\u003ez)-\u003eOneOf a b c d e f g h i j k l m n o p q-\u003ez",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:foldOneOf17"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "foldOneOf18",
          "package": "HaXml",
          "signature": "(a -\u003e z) -\u003e (b -\u003e z) -\u003e (c -\u003e z) -\u003e (d -\u003e z) -\u003e (e -\u003e z) -\u003e (f -\u003e z) -\u003e (g -\u003e z) -\u003e (h -\u003e z) -\u003e (i -\u003e z) -\u003e (j -\u003e z) -\u003e (k -\u003e z) -\u003e (l -\u003e z) -\u003e (m -\u003e z) -\u003e (n -\u003e z) -\u003e (o -\u003e z) -\u003e (p -\u003e z) -\u003e (q -\u003e z) -\u003e (r -\u003e z) -\u003e OneOf18 a b c d e f g h i j k l m n o p q r -\u003e z",
          "source": "src/Text-XML-HaXml-OneOfN.html#foldOneOf18",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "foldOneOf18",
          "normalized": "(a-\u003eb)-\u003e(c-\u003eb)-\u003e(d-\u003eb)-\u003e(e-\u003eb)-\u003e(f-\u003eb)-\u003e(g-\u003eb)-\u003e(h-\u003eb)-\u003e(i-\u003eb)-\u003e(j-\u003eb)-\u003e(k-\u003eb)-\u003e(l-\u003eb)-\u003e(m-\u003eb)-\u003e(n-\u003eb)-\u003e(o-\u003eb)-\u003e(p-\u003eb)-\u003e(q-\u003eb)-\u003e(r-\u003eb)-\u003e(s-\u003eb)-\u003eOneOf a c d e f g h i j k l m n o p q r s-\u003eb",
          "package": "HaXml",
          "partial": "One Of",
          "signature": "(a-\u003ez)-\u003e(b-\u003ez)-\u003e(c-\u003ez)-\u003e(d-\u003ez)-\u003e(e-\u003ez)-\u003e(f-\u003ez)-\u003e(g-\u003ez)-\u003e(h-\u003ez)-\u003e(i-\u003ez)-\u003e(j-\u003ez)-\u003e(k-\u003ez)-\u003e(l-\u003ez)-\u003e(m-\u003ez)-\u003e(n-\u003ez)-\u003e(o-\u003ez)-\u003e(p-\u003ez)-\u003e(q-\u003ez)-\u003e(r-\u003ez)-\u003eOneOf a b c d e f g h i j k l m n o p q r-\u003ez",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:foldOneOf18"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "foldOneOf19",
          "package": "HaXml",
          "signature": "(a -\u003e z) -\u003e (b -\u003e z) -\u003e (c -\u003e z) -\u003e (d -\u003e z) -\u003e (e -\u003e z) -\u003e (f -\u003e z) -\u003e (g -\u003e z) -\u003e (h -\u003e z) -\u003e (i -\u003e z) -\u003e (j -\u003e z) -\u003e (k -\u003e z) -\u003e (l -\u003e z) -\u003e (m -\u003e z) -\u003e (n -\u003e z) -\u003e (o -\u003e z) -\u003e (p -\u003e z) -\u003e (q -\u003e z) -\u003e (r -\u003e z) -\u003e (s -\u003e z) -\u003e OneOf19 a b c d e f g h i j k l m n o p q r s -\u003e z",
          "source": "src/Text-XML-HaXml-OneOfN.html#foldOneOf19",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "foldOneOf19",
          "normalized": "(a-\u003eb)-\u003e(c-\u003eb)-\u003e(d-\u003eb)-\u003e(e-\u003eb)-\u003e(f-\u003eb)-\u003e(g-\u003eb)-\u003e(h-\u003eb)-\u003e(i-\u003eb)-\u003e(j-\u003eb)-\u003e(k-\u003eb)-\u003e(l-\u003eb)-\u003e(m-\u003eb)-\u003e(n-\u003eb)-\u003e(o-\u003eb)-\u003e(p-\u003eb)-\u003e(q-\u003eb)-\u003e(r-\u003eb)-\u003e(s-\u003eb)-\u003e(t-\u003eb)-\u003eOneOf a c d e f g h i j k l m n o p q r s t-\u003eb",
          "package": "HaXml",
          "partial": "One Of",
          "signature": "(a-\u003ez)-\u003e(b-\u003ez)-\u003e(c-\u003ez)-\u003e(d-\u003ez)-\u003e(e-\u003ez)-\u003e(f-\u003ez)-\u003e(g-\u003ez)-\u003e(h-\u003ez)-\u003e(i-\u003ez)-\u003e(j-\u003ez)-\u003e(k-\u003ez)-\u003e(l-\u003ez)-\u003e(m-\u003ez)-\u003e(n-\u003ez)-\u003e(o-\u003ez)-\u003e(p-\u003ez)-\u003e(q-\u003ez)-\u003e(r-\u003ez)-\u003e(s-\u003ez)-\u003eOneOf a b c d e f g h i j k l m n o p q r s-\u003ez",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:foldOneOf19"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "foldOneOf2",
          "package": "HaXml",
          "signature": "(a -\u003e z) -\u003e (b -\u003e z) -\u003e OneOf2 a b -\u003e z",
          "source": "src/Text-XML-HaXml-OneOfN.html#foldOneOf2",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "foldOneOf2",
          "normalized": "(a-\u003eb)-\u003e(c-\u003eb)-\u003eOneOf a c-\u003eb",
          "package": "HaXml",
          "partial": "One Of",
          "signature": "(a-\u003ez)-\u003e(b-\u003ez)-\u003eOneOf a b-\u003ez",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:foldOneOf2"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "foldOneOf20",
          "package": "HaXml",
          "signature": "(a -\u003e z) -\u003e (b -\u003e z) -\u003e (c -\u003e z) -\u003e (d -\u003e z) -\u003e (e -\u003e z) -\u003e (f -\u003e z) -\u003e (g -\u003e z) -\u003e (h -\u003e z) -\u003e (i -\u003e z) -\u003e (j -\u003e z) -\u003e (k -\u003e z) -\u003e (l -\u003e z) -\u003e (m -\u003e z) -\u003e (n -\u003e z) -\u003e (o -\u003e z) -\u003e (p -\u003e z) -\u003e (q -\u003e z) -\u003e (r -\u003e z) -\u003e (s -\u003e z) -\u003e (t -\u003e z) -\u003e OneOf20 a b c d e f g h i j k l m n o p q r s t -\u003e z",
          "source": "src/Text-XML-HaXml-OneOfN.html#foldOneOf20",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "foldOneOf20",
          "normalized": "(a-\u003eb)-\u003e(c-\u003eb)-\u003e(d-\u003eb)-\u003e(e-\u003eb)-\u003e(f-\u003eb)-\u003e(g-\u003eb)-\u003e(h-\u003eb)-\u003e(i-\u003eb)-\u003e(j-\u003eb)-\u003e(k-\u003eb)-\u003e(l-\u003eb)-\u003e(m-\u003eb)-\u003e(n-\u003eb)-\u003e(o-\u003eb)-\u003e(p-\u003eb)-\u003e(q-\u003eb)-\u003e(r-\u003eb)-\u003e(s-\u003eb)-\u003e(t-\u003eb)-\u003e(u-\u003eb)-\u003eOneOf a c d e f g h i j k l m n o p q r s t u-\u003eb",
          "package": "HaXml",
          "partial": "One Of",
          "signature": "(a-\u003ez)-\u003e(b-\u003ez)-\u003e(c-\u003ez)-\u003e(d-\u003ez)-\u003e(e-\u003ez)-\u003e(f-\u003ez)-\u003e(g-\u003ez)-\u003e(h-\u003ez)-\u003e(i-\u003ez)-\u003e(j-\u003ez)-\u003e(k-\u003ez)-\u003e(l-\u003ez)-\u003e(m-\u003ez)-\u003e(n-\u003ez)-\u003e(o-\u003ez)-\u003e(p-\u003ez)-\u003e(q-\u003ez)-\u003e(r-\u003ez)-\u003e(s-\u003ez)-\u003e(t-\u003ez)-\u003eOneOf a b c d e f g h i j k l m n o p q r s t-\u003ez",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:foldOneOf20"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "foldOneOf3",
          "package": "HaXml",
          "signature": "(a -\u003e z) -\u003e (b -\u003e z) -\u003e (c -\u003e z) -\u003e OneOf3 a b c -\u003e z",
          "source": "src/Text-XML-HaXml-OneOfN.html#foldOneOf3",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "foldOneOf3",
          "normalized": "(a-\u003eb)-\u003e(c-\u003eb)-\u003e(d-\u003eb)-\u003eOneOf a c d-\u003eb",
          "package": "HaXml",
          "partial": "One Of",
          "signature": "(a-\u003ez)-\u003e(b-\u003ez)-\u003e(c-\u003ez)-\u003eOneOf a b c-\u003ez",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:foldOneOf3"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "foldOneOf4",
          "package": "HaXml",
          "signature": "(a -\u003e z) -\u003e (b -\u003e z) -\u003e (c -\u003e z) -\u003e (d -\u003e z) -\u003e OneOf4 a b c d -\u003e z",
          "source": "src/Text-XML-HaXml-OneOfN.html#foldOneOf4",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "foldOneOf4",
          "normalized": "(a-\u003eb)-\u003e(c-\u003eb)-\u003e(d-\u003eb)-\u003e(e-\u003eb)-\u003eOneOf a c d e-\u003eb",
          "package": "HaXml",
          "partial": "One Of",
          "signature": "(a-\u003ez)-\u003e(b-\u003ez)-\u003e(c-\u003ez)-\u003e(d-\u003ez)-\u003eOneOf a b c d-\u003ez",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:foldOneOf4"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "foldOneOf5",
          "package": "HaXml",
          "signature": "(a -\u003e z) -\u003e (b -\u003e z) -\u003e (c -\u003e z) -\u003e (d -\u003e z) -\u003e (e -\u003e z) -\u003e OneOf5 a b c d e -\u003e z",
          "source": "src/Text-XML-HaXml-OneOfN.html#foldOneOf5",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "foldOneOf5",
          "normalized": "(a-\u003eb)-\u003e(c-\u003eb)-\u003e(d-\u003eb)-\u003e(e-\u003eb)-\u003e(f-\u003eb)-\u003eOneOf a c d e f-\u003eb",
          "package": "HaXml",
          "partial": "One Of",
          "signature": "(a-\u003ez)-\u003e(b-\u003ez)-\u003e(c-\u003ez)-\u003e(d-\u003ez)-\u003e(e-\u003ez)-\u003eOneOf a b c d e-\u003ez",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:foldOneOf5"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "foldOneOf6",
          "package": "HaXml",
          "signature": "(a -\u003e z) -\u003e (b -\u003e z) -\u003e (c -\u003e z) -\u003e (d -\u003e z) -\u003e (e -\u003e z) -\u003e (f -\u003e z) -\u003e OneOf6 a b c d e f -\u003e z",
          "source": "src/Text-XML-HaXml-OneOfN.html#foldOneOf6",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "foldOneOf6",
          "normalized": "(a-\u003eb)-\u003e(c-\u003eb)-\u003e(d-\u003eb)-\u003e(e-\u003eb)-\u003e(f-\u003eb)-\u003e(g-\u003eb)-\u003eOneOf a c d e f g-\u003eb",
          "package": "HaXml",
          "partial": "One Of",
          "signature": "(a-\u003ez)-\u003e(b-\u003ez)-\u003e(c-\u003ez)-\u003e(d-\u003ez)-\u003e(e-\u003ez)-\u003e(f-\u003ez)-\u003eOneOf a b c d e f-\u003ez",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:foldOneOf6"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "foldOneOf7",
          "package": "HaXml",
          "signature": "(a -\u003e z) -\u003e (b -\u003e z) -\u003e (c -\u003e z) -\u003e (d -\u003e z) -\u003e (e -\u003e z) -\u003e (f -\u003e z) -\u003e (g -\u003e z) -\u003e OneOf7 a b c d e f g -\u003e z",
          "source": "src/Text-XML-HaXml-OneOfN.html#foldOneOf7",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "foldOneOf7",
          "normalized": "(a-\u003eb)-\u003e(c-\u003eb)-\u003e(d-\u003eb)-\u003e(e-\u003eb)-\u003e(f-\u003eb)-\u003e(g-\u003eb)-\u003e(h-\u003eb)-\u003eOneOf a c d e f g h-\u003eb",
          "package": "HaXml",
          "partial": "One Of",
          "signature": "(a-\u003ez)-\u003e(b-\u003ez)-\u003e(c-\u003ez)-\u003e(d-\u003ez)-\u003e(e-\u003ez)-\u003e(f-\u003ez)-\u003e(g-\u003ez)-\u003eOneOf a b c d e f g-\u003ez",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:foldOneOf7"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "foldOneOf8",
          "package": "HaXml",
          "signature": "(a -\u003e z) -\u003e (b -\u003e z) -\u003e (c -\u003e z) -\u003e (d -\u003e z) -\u003e (e -\u003e z) -\u003e (f -\u003e z) -\u003e (g -\u003e z) -\u003e (h -\u003e z) -\u003e OneOf8 a b c d e f g h -\u003e z",
          "source": "src/Text-XML-HaXml-OneOfN.html#foldOneOf8",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "foldOneOf8",
          "normalized": "(a-\u003eb)-\u003e(c-\u003eb)-\u003e(d-\u003eb)-\u003e(e-\u003eb)-\u003e(f-\u003eb)-\u003e(g-\u003eb)-\u003e(h-\u003eb)-\u003e(i-\u003eb)-\u003eOneOf a c d e f g h i-\u003eb",
          "package": "HaXml",
          "partial": "One Of",
          "signature": "(a-\u003ez)-\u003e(b-\u003ez)-\u003e(c-\u003ez)-\u003e(d-\u003ez)-\u003e(e-\u003ez)-\u003e(f-\u003ez)-\u003e(g-\u003ez)-\u003e(h-\u003ez)-\u003eOneOf a b c d e f g h-\u003ez",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:foldOneOf8"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.OneOfN",
          "name": "foldOneOf9",
          "package": "HaXml",
          "signature": "(a -\u003e z) -\u003e (b -\u003e z) -\u003e (c -\u003e z) -\u003e (d -\u003e z) -\u003e (e -\u003e z) -\u003e (f -\u003e z) -\u003e (g -\u003e z) -\u003e (h -\u003e z) -\u003e (i -\u003e z) -\u003e OneOf9 a b c d e f g h i -\u003e z",
          "source": "src/Text-XML-HaXml-OneOfN.html#foldOneOf9",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml OneOfN",
          "module": "Text.XML.HaXml.OneOfN",
          "name": "foldOneOf9",
          "normalized": "(a-\u003eb)-\u003e(c-\u003eb)-\u003e(d-\u003eb)-\u003e(e-\u003eb)-\u003e(f-\u003eb)-\u003e(g-\u003eb)-\u003e(h-\u003eb)-\u003e(i-\u003eb)-\u003e(j-\u003eb)-\u003eOneOf a c d e f g h i j-\u003eb",
          "package": "HaXml",
          "partial": "One Of",
          "signature": "(a-\u003ez)-\u003e(b-\u003ez)-\u003e(c-\u003ez)-\u003e(d-\u003ez)-\u003e(e-\u003ez)-\u003e(f-\u003ez)-\u003e(g-\u003ez)-\u003e(h-\u003ez)-\u003e(i-\u003ez)-\u003eOneOf a b c d e f g h i-\u003ez",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-OneOfN.html#v:foldOneOf9"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA non-validating XML parser.  For the input grammar, see\n   \u003ca\u003ehttp://www.w3.org/TR/REC-xml\u003c/a\u003e.\n\u003c/p\u003e\u003c/div\u003e",
          "module": "Text.XML.HaXml.Parse",
          "name": "Parse",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Parse.html",
          "type": "module"
        },
        "index": {
          "description": "non-validating XML parser For the input grammar see http www.w3.org TR REC-xml",
          "hierarchy": "Text XML HaXml Parse",
          "module": "Text.XML.HaXml.Parse",
          "name": "Parse",
          "package": "HaXml",
          "partial": "Parse",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Parse.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eXParser is just a specialisation of the PolyState parser.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Parse",
          "name": "XParser",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Parse.html#XParser",
          "type": "type"
        },
        "index": {
          "description": "XParser is just specialisation of the PolyState parser",
          "hierarchy": "Text XML HaXml Parse",
          "module": "Text.XML.HaXml.Parse",
          "name": "XParser",
          "package": "HaXml",
          "partial": "XParser",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Parse.html#t:XParser"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Parse",
          "name": "cdsect",
          "package": "HaXml",
          "signature": "XParser CDSect",
          "source": "src/Text-XML-HaXml-Parse.html#cdsect",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Parse",
          "module": "Text.XML.HaXml.Parse",
          "name": "cdsect",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Parse.html#v:cdsect"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eReturn parsed freetext (i.e. until the next markup)\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Parse",
          "name": "chardata",
          "package": "HaXml",
          "signature": "XParser CharData",
          "source": "src/Text-XML-HaXml-Parse.html#chardata",
          "type": "function"
        },
        "index": {
          "description": "Return parsed freetext i.e until the next markup",
          "hierarchy": "Text XML HaXml Parse",
          "module": "Text.XML.HaXml.Parse",
          "name": "chardata",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Parse.html#v:chardata"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eReturn an XML comment.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Parse",
          "name": "comment",
          "package": "HaXml",
          "signature": "XParser Comment",
          "source": "src/Text-XML-HaXml-Parse.html#comment",
          "type": "function"
        },
        "index": {
          "description": "Return an XML comment",
          "hierarchy": "Text XML HaXml Parse",
          "module": "Text.XML.HaXml.Parse",
          "name": "comment",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Parse.html#v:comment"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eReturn a content particle, e.g. text, element, reference, etc\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Parse",
          "name": "content",
          "package": "HaXml",
          "signature": "XParser (Content Posn)",
          "source": "src/Text-XML-HaXml-Parse.html#content",
          "type": "function"
        },
        "index": {
          "description": "Return content particle e.g text element reference etc",
          "hierarchy": "Text XML HaXml Parse",
          "module": "Text.XML.HaXml.Parse",
          "name": "content",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Parse.html#v:content"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eReturn a DOCTYPE decl, indicating a DTD.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Parse",
          "name": "doctypedecl",
          "package": "HaXml",
          "signature": "XParser DocTypeDecl",
          "source": "src/Text-XML-HaXml-Parse.html#doctypedecl",
          "type": "function"
        },
        "index": {
          "description": "Return DOCTYPE decl indicating DTD",
          "hierarchy": "Text XML HaXml Parse",
          "module": "Text.XML.HaXml.Parse",
          "name": "doctypedecl",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Parse.html#v:doctypedecl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eReturn an entire XML document including prolog and trailing junk.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Parse",
          "name": "document",
          "package": "HaXml",
          "signature": "XParser (Document Posn)",
          "source": "src/Text-XML-HaXml-Parse.html#document",
          "type": "function"
        },
        "index": {
          "description": "Return an entire XML document including prolog and trailing junk",
          "hierarchy": "Text XML HaXml Parse",
          "module": "Text.XML.HaXml.Parse",
          "name": "document",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Parse.html#v:document"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eTo parse just a DTD, \u003ccode\u003edtdParse file content\u003c/code\u003e takes a filename\n   (for generating error reports) and the string content of that\n   file.  If no DTD was found, you get \u003ccode\u003eNothing\u003c/code\u003e rather than an error.\n   However, if a DTD is found but contains errors, the program crashes.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Parse",
          "name": "dtdParse",
          "package": "HaXml",
          "signature": "String -\u003e String -\u003e Maybe DocTypeDecl",
          "source": "src/Text-XML-HaXml-Parse.html#dtdParse",
          "type": "function"
        },
        "index": {
          "description": "To parse just DTD dtdParse file content takes filename for generating error reports and the string content of that file If no DTD was found you get Nothing rather than an error However if DTD is found but contains errors the program crashes",
          "hierarchy": "Text XML HaXml Parse",
          "module": "Text.XML.HaXml.Parse",
          "name": "dtdParse",
          "normalized": "String-\u003eString-\u003eMaybe DocTypeDecl",
          "package": "HaXml",
          "partial": "Parse",
          "signature": "String-\u003eString-\u003eMaybe DocTypeDecl",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Parse.html#v:dtdParse"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eTo parse just a DTD, \u003ccode\u003edtdParse' file content\u003c/code\u003e takes a filename\n   (for generating error reports) and the string content of that\n   file.  If no DTD was found, you get \u003ccode\u003eRight Nothing\u003c/code\u003e.\n   If a DTD was found but contains errors, you get a \u003ccode\u003eLeft message\u003c/code\u003e.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Parse",
          "name": "dtdParse'",
          "package": "HaXml",
          "signature": "String -\u003e String -\u003e Either String (Maybe DocTypeDecl)",
          "source": "src/Text-XML-HaXml-Parse.html#dtdParse%27",
          "type": "function"
        },
        "index": {
          "description": "To parse just DTD dtdParse file content takes filename for generating error reports and the string content of that file If no DTD was found you get Right Nothing If DTD was found but contains errors you get Left message",
          "hierarchy": "Text XML HaXml Parse",
          "module": "Text.XML.HaXml.Parse",
          "name": "dtdParse'",
          "normalized": "String-\u003eString-\u003eEither String(Maybe DocTypeDecl)",
          "package": "HaXml",
          "partial": "Parse'",
          "signature": "String-\u003eString-\u003eEither String(Maybe DocTypeDecl)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Parse.html#v:dtdParse-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eFor use with stream parsers - accepts a closing tag, provided it\n   matches the given element name.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Parse",
          "name": "elemCloseTag",
          "package": "HaXml",
          "signature": "QName -\u003e XParser ()",
          "source": "src/Text-XML-HaXml-Parse.html#elemCloseTag",
          "type": "function"
        },
        "index": {
          "description": "For use with stream parsers accepts closing tag provided it matches the given element name",
          "hierarchy": "Text XML HaXml Parse",
          "module": "Text.XML.HaXml.Parse",
          "name": "elemCloseTag",
          "normalized": "QName-\u003eXParser()",
          "package": "HaXml",
          "partial": "Close Tag",
          "signature": "QName-\u003eXParser()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Parse.html#v:elemCloseTag"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eFor use with stream parsers - returns the complete opening element tag.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Parse",
          "name": "elemOpenTag",
          "package": "HaXml",
          "signature": "XParser ElemTag",
          "source": "src/Text-XML-HaXml-Parse.html#elemOpenTag",
          "type": "function"
        },
        "index": {
          "description": "For use with stream parsers returns the complete opening element tag",
          "hierarchy": "Text XML HaXml Parse",
          "module": "Text.XML.HaXml.Parse",
          "name": "elemOpenTag",
          "package": "HaXml",
          "partial": "Open Tag",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Parse.html#v:elemOpenTag"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eReturn a complete element including all its inner content.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Parse",
          "name": "element",
          "package": "HaXml",
          "signature": "XParser (Element Posn)",
          "source": "src/Text-XML-HaXml-Parse.html#element",
          "type": "function"
        },
        "index": {
          "description": "Return complete element including all its inner content",
          "hierarchy": "Text XML HaXml Parse",
          "module": "Text.XML.HaXml.Parse",
          "name": "element",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Parse.html#v:element"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParse only the parts between angle brackets in an element tag.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Parse",
          "name": "elemtag",
          "package": "HaXml",
          "signature": "XParser ElemTag",
          "source": "src/Text-XML-HaXml-Parse.html#elemtag",
          "type": "function"
        },
        "index": {
          "description": "Parse only the parts between angle brackets in an element tag",
          "hierarchy": "Text XML HaXml Parse",
          "module": "Text.XML.HaXml.Parse",
          "name": "elemtag",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Parse.html#v:elemtag"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eSome empty symbol tables for GE and PE references.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Parse",
          "name": "emptySTs",
          "package": "HaXml",
          "signature": "SymTabs",
          "source": "src/Text-XML-HaXml-Parse.html#emptySTs",
          "type": "function"
        },
        "index": {
          "description": "Some empty symbol tables for GE and PE references",
          "hierarchy": "Text XML HaXml Parse",
          "module": "Text.XML.HaXml.Parse",
          "name": "emptySTs",
          "package": "HaXml",
          "partial": "STs",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Parse.html#v:emptySTs"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Parse",
          "name": "fst3",
          "package": "HaXml",
          "signature": "(a, b, c) -\u003e a",
          "source": "src/Text-XML-HaXml-Parse.html#fst3",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Parse",
          "module": "Text.XML.HaXml.Parse",
          "name": "fst3",
          "normalized": "(a,b,c)-\u003ea",
          "package": "HaXml",
          "signature": "(a,b,c)-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Parse.html#v:fst3"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eReturn just a name, e.g. element name, attribute name.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Parse",
          "name": "name",
          "package": "HaXml",
          "signature": "XParser Name",
          "source": "src/Text-XML-HaXml-Parse.html#name",
          "type": "function"
        },
        "index": {
          "description": "Return just name e.g element name attribute name",
          "hierarchy": "Text XML HaXml Parse",
          "module": "Text.XML.HaXml.Parse",
          "name": "name",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Parse.html#v:name"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParse a processing instruction.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Parse",
          "name": "processinginstruction",
          "package": "HaXml",
          "signature": "XParser ProcessingInstruction",
          "source": "src/Text-XML-HaXml-Parse.html#processinginstruction",
          "type": "function"
        },
        "index": {
          "description": "Parse processing instruction",
          "hierarchy": "Text XML HaXml Parse",
          "module": "Text.XML.HaXml.Parse",
          "name": "processinginstruction",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Parse.html#v:processinginstruction"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eReturn a qualified name (although the namespace qualification is not\n   processed here; this is merely to get the correct type).\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Parse",
          "name": "qname",
          "package": "HaXml",
          "signature": "XParser QName",
          "source": "src/Text-XML-HaXml-Parse.html#qname",
          "type": "function"
        },
        "index": {
          "description": "Return qualified name although the namespace qualification is not processed here this is merely to get the correct type",
          "hierarchy": "Text XML HaXml Parse",
          "module": "Text.XML.HaXml.Parse",
          "name": "qname",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Parse.html#v:qname"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eReturn either a general entity reference, or a character reference.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Parse",
          "name": "reference",
          "package": "HaXml",
          "signature": "XParser Reference",
          "source": "src/Text-XML-HaXml-Parse.html#reference",
          "type": "function"
        },
        "index": {
          "description": "Return either general entity reference or character reference",
          "hierarchy": "Text XML HaXml Parse",
          "module": "Text.XML.HaXml.Parse",
          "name": "reference",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Parse.html#v:reference"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Parse",
          "name": "snd3",
          "package": "HaXml",
          "signature": "(a, b, c) -\u003e b",
          "source": "src/Text-XML-HaXml-Parse.html#snd3",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Parse",
          "module": "Text.XML.HaXml.Parse",
          "name": "snd3",
          "normalized": "(a,b,c)-\u003eb",
          "package": "HaXml",
          "signature": "(a,b,c)-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Parse.html#v:snd3"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Parse",
          "name": "thd3",
          "package": "HaXml",
          "signature": "(a, b, c) -\u003e c",
          "source": "src/Text-XML-HaXml-Parse.html#thd3",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Parse",
          "module": "Text.XML.HaXml.Parse",
          "name": "thd3",
          "normalized": "(a,b,c)-\u003ec",
          "package": "HaXml",
          "signature": "(a,b,c)-\u003ec",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Parse.html#v:thd3"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eReturn the next token from the input only if it matches the given token.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Parse",
          "name": "tok",
          "package": "HaXml",
          "signature": "TokenT -\u003e XParser TokenT",
          "source": "src/Text-XML-HaXml-Parse.html#tok",
          "type": "function"
        },
        "index": {
          "description": "Return the next token from the input only if it matches the given token",
          "hierarchy": "Text XML HaXml Parse",
          "module": "Text.XML.HaXml.Parse",
          "name": "tok",
          "normalized": "TokenT-\u003eXParser TokenT",
          "package": "HaXml",
          "signature": "TokenT-\u003eXParser TokenT",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Parse.html#v:tok"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eTo parse a whole document, \u003ccode\u003exmlParse file content\u003c/code\u003e takes a filename\n   (for generating error reports) and the string content of that file.\n   A parse error causes program failure, with message to stderr.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Parse",
          "name": "xmlParse",
          "package": "HaXml",
          "signature": "String -\u003e String -\u003e Document Posn",
          "source": "src/Text-XML-HaXml-Parse.html#xmlParse",
          "type": "function"
        },
        "index": {
          "description": "To parse whole document xmlParse file content takes filename for generating error reports and the string content of that file parse error causes program failure with message to stderr",
          "hierarchy": "Text XML HaXml Parse",
          "module": "Text.XML.HaXml.Parse",
          "name": "xmlParse",
          "normalized": "String-\u003eString-\u003eDocument Posn",
          "package": "HaXml",
          "partial": "Parse",
          "signature": "String-\u003eString-\u003eDocument Posn",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Parse.html#v:xmlParse"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eTo parse a whole document, \u003ccode\u003exmlParse' file content\u003c/code\u003e takes a filename\n   (for generating error reports) and the string content of that file.\n   Any parse error message is passed back to the caller through the\n   \u003ccode\u003eEither\u003c/code\u003e type.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Parse",
          "name": "xmlParse'",
          "package": "HaXml",
          "signature": "String -\u003e String -\u003e Either String (Document Posn)",
          "source": "src/Text-XML-HaXml-Parse.html#xmlParse%27",
          "type": "function"
        },
        "index": {
          "description": "To parse whole document xmlParse file content takes filename for generating error reports and the string content of that file Any parse error message is passed back to the caller through the Either type",
          "hierarchy": "Text XML HaXml Parse",
          "module": "Text.XML.HaXml.Parse",
          "name": "xmlParse'",
          "normalized": "String-\u003eString-\u003eEither String(Document Posn)",
          "package": "HaXml",
          "partial": "Parse'",
          "signature": "String-\u003eString-\u003eEither String(Document Posn)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Parse.html#v:xmlParse-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eTo parse a partial document, e.g. from an XML-based stream protocol,\n   where you may later want to get more document elements from the same\n   stream.  Arguments are: a parser for the item you want, and the\n   already-lexed input to parse from.  Returns the item you wanted\n   (or an error message), plus the remainder of the input.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Parse",
          "name": "xmlParseWith",
          "package": "HaXml",
          "signature": "XParser a -\u003e [(Posn, TokenT)] -\u003e (Either String a, [(Posn, TokenT)])",
          "source": "src/Text-XML-HaXml-Parse.html#xmlParseWith",
          "type": "function"
        },
        "index": {
          "description": "To parse partial document e.g from an XML-based stream protocol where you may later want to get more document elements from the same stream Arguments are parser for the item you want and the already-lexed input to parse from Returns the item you wanted or an error message plus the remainder of the input",
          "hierarchy": "Text XML HaXml Parse",
          "module": "Text.XML.HaXml.Parse",
          "name": "xmlParseWith",
          "normalized": "XParser a-\u003e[(Posn,TokenT)]-\u003e(Either String a,[(Posn,TokenT)])",
          "package": "HaXml",
          "partial": "Parse With",
          "signature": "XParser a-\u003e[(Posn,TokenT)]-\u003e(Either String a,[(Posn,TokenT)])",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Parse.html#v:xmlParseWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA non-validating XML parser.  For the input grammar, see\n   \u003ca\u003ehttp://www.w3.org/TR/REC-xml\u003c/a\u003e.\n\u003c/p\u003e\u003c/div\u003e",
          "module": "Text.XML.HaXml.ParseLazy",
          "name": "ParseLazy",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-ParseLazy.html",
          "type": "module"
        },
        "index": {
          "description": "non-validating XML parser For the input grammar see http www.w3.org TR REC-xml",
          "hierarchy": "Text XML HaXml ParseLazy",
          "module": "Text.XML.HaXml.ParseLazy",
          "name": "ParseLazy",
          "package": "HaXml",
          "partial": "Parse Lazy",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-ParseLazy.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eXParser is just a specialisation of the PolyStateLazy parser.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.ParseLazy",
          "name": "XParser",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-ParseLazy.html#XParser",
          "type": "type"
        },
        "index": {
          "description": "XParser is just specialisation of the PolyStateLazy parser",
          "hierarchy": "Text XML HaXml ParseLazy",
          "module": "Text.XML.HaXml.ParseLazy",
          "name": "XParser",
          "package": "HaXml",
          "partial": "XParser",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-ParseLazy.html#t:XParser"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eReturn parsed freetext (i.e. until the next markup)\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.ParseLazy",
          "name": "chardata",
          "package": "HaXml",
          "signature": "XParser CharData",
          "source": "src/Text-XML-HaXml-ParseLazy.html#chardata",
          "type": "function"
        },
        "index": {
          "description": "Return parsed freetext i.e until the next markup",
          "hierarchy": "Text XML HaXml ParseLazy",
          "module": "Text.XML.HaXml.ParseLazy",
          "name": "chardata",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-ParseLazy.html#v:chardata"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eReturn an XML comment.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.ParseLazy",
          "name": "comment",
          "package": "HaXml",
          "signature": "XParser Comment",
          "source": "src/Text-XML-HaXml-ParseLazy.html#comment",
          "type": "function"
        },
        "index": {
          "description": "Return an XML comment",
          "hierarchy": "Text XML HaXml ParseLazy",
          "module": "Text.XML.HaXml.ParseLazy",
          "name": "comment",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-ParseLazy.html#v:comment"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eReturn a content particle, e.g. text, element, reference, etc\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.ParseLazy",
          "name": "content",
          "package": "HaXml",
          "signature": "XParser (Content Posn)",
          "source": "src/Text-XML-HaXml-ParseLazy.html#content",
          "type": "function"
        },
        "index": {
          "description": "Return content particle e.g text element reference etc",
          "hierarchy": "Text XML HaXml ParseLazy",
          "module": "Text.XML.HaXml.ParseLazy",
          "name": "content",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-ParseLazy.html#v:content"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eReturn a DOCTYPE decl, indicating a DTD.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.ParseLazy",
          "name": "doctypedecl",
          "package": "HaXml",
          "signature": "XParser DocTypeDecl",
          "source": "src/Text-XML-HaXml-ParseLazy.html#doctypedecl",
          "type": "function"
        },
        "index": {
          "description": "Return DOCTYPE decl indicating DTD",
          "hierarchy": "Text XML HaXml ParseLazy",
          "module": "Text.XML.HaXml.ParseLazy",
          "name": "doctypedecl",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-ParseLazy.html#v:doctypedecl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eReturn an entire XML document including prolog and trailing junk.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.ParseLazy",
          "name": "document",
          "package": "HaXml",
          "signature": "XParser (Document Posn)",
          "source": "src/Text-XML-HaXml-ParseLazy.html#document",
          "type": "function"
        },
        "index": {
          "description": "Return an entire XML document including prolog and trailing junk",
          "hierarchy": "Text XML HaXml ParseLazy",
          "module": "Text.XML.HaXml.ParseLazy",
          "name": "document",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-ParseLazy.html#v:document"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eTo parse just a DTD, \u003ccode\u003edtdParse file content\u003c/code\u003e takes a filename\n   (for generating error reports) and the string content of that\n   file.  If no DTD was found, you get \u003ccode\u003eNothing\u003c/code\u003e rather than an error.\n   However, if a DTD is found but contains errors, the program crashes.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.ParseLazy",
          "name": "dtdParse",
          "package": "HaXml",
          "signature": "String -\u003e String -\u003e Maybe DocTypeDecl",
          "source": "src/Text-XML-HaXml-ParseLazy.html#dtdParse",
          "type": "function"
        },
        "index": {
          "description": "To parse just DTD dtdParse file content takes filename for generating error reports and the string content of that file If no DTD was found you get Nothing rather than an error However if DTD is found but contains errors the program crashes",
          "hierarchy": "Text XML HaXml ParseLazy",
          "module": "Text.XML.HaXml.ParseLazy",
          "name": "dtdParse",
          "normalized": "String-\u003eString-\u003eMaybe DocTypeDecl",
          "package": "HaXml",
          "partial": "Parse",
          "signature": "String-\u003eString-\u003eMaybe DocTypeDecl",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-ParseLazy.html#v:dtdParse"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eFor use with stream parsers - accepts a closing tag, provided it\n   matches the given element name.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.ParseLazy",
          "name": "elemCloseTag",
          "package": "HaXml",
          "signature": "QName -\u003e XParser ()",
          "source": "src/Text-XML-HaXml-ParseLazy.html#elemCloseTag",
          "type": "function"
        },
        "index": {
          "description": "For use with stream parsers accepts closing tag provided it matches the given element name",
          "hierarchy": "Text XML HaXml ParseLazy",
          "module": "Text.XML.HaXml.ParseLazy",
          "name": "elemCloseTag",
          "normalized": "QName-\u003eXParser()",
          "package": "HaXml",
          "partial": "Close Tag",
          "signature": "QName-\u003eXParser()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-ParseLazy.html#v:elemCloseTag"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eFor use with stream parsers - returns the complete opening element tag.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.ParseLazy",
          "name": "elemOpenTag",
          "package": "HaXml",
          "signature": "XParser ElemTag",
          "source": "src/Text-XML-HaXml-ParseLazy.html#elemOpenTag",
          "type": "function"
        },
        "index": {
          "description": "For use with stream parsers returns the complete opening element tag",
          "hierarchy": "Text XML HaXml ParseLazy",
          "module": "Text.XML.HaXml.ParseLazy",
          "name": "elemOpenTag",
          "package": "HaXml",
          "partial": "Open Tag",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-ParseLazy.html#v:elemOpenTag"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eReturn a complete element including all its inner content.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.ParseLazy",
          "name": "element",
          "package": "HaXml",
          "signature": "XParser (Element Posn)",
          "source": "src/Text-XML-HaXml-ParseLazy.html#element",
          "type": "function"
        },
        "index": {
          "description": "Return complete element including all its inner content",
          "hierarchy": "Text XML HaXml ParseLazy",
          "module": "Text.XML.HaXml.ParseLazy",
          "name": "element",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-ParseLazy.html#v:element"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParse only the parts between angle brackets in an element tag.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.ParseLazy",
          "name": "elemtag",
          "package": "HaXml",
          "signature": "XParser ElemTag",
          "source": "src/Text-XML-HaXml-ParseLazy.html#elemtag",
          "type": "function"
        },
        "index": {
          "description": "Parse only the parts between angle brackets in an element tag",
          "hierarchy": "Text XML HaXml ParseLazy",
          "module": "Text.XML.HaXml.ParseLazy",
          "name": "elemtag",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-ParseLazy.html#v:elemtag"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eSome empty symbol tables for GE and PE references.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.ParseLazy",
          "name": "emptySTs",
          "package": "HaXml",
          "signature": "SymTabs",
          "source": "src/Text-XML-HaXml-ParseLazy.html#emptySTs",
          "type": "function"
        },
        "index": {
          "description": "Some empty symbol tables for GE and PE references",
          "hierarchy": "Text XML HaXml ParseLazy",
          "module": "Text.XML.HaXml.ParseLazy",
          "name": "emptySTs",
          "package": "HaXml",
          "partial": "STs",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-ParseLazy.html#v:emptySTs"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.ParseLazy",
          "name": "fst3",
          "package": "HaXml",
          "signature": "(a, b, c) -\u003e a",
          "source": "src/Text-XML-HaXml-ParseLazy.html#fst3",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml ParseLazy",
          "module": "Text.XML.HaXml.ParseLazy",
          "name": "fst3",
          "normalized": "(a,b,c)-\u003ea",
          "package": "HaXml",
          "signature": "(a,b,c)-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-ParseLazy.html#v:fst3"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eReturn just a name, e.g. element name, attribute name.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.ParseLazy",
          "name": "name",
          "package": "HaXml",
          "signature": "XParser Name",
          "source": "src/Text-XML-HaXml-ParseLazy.html#name",
          "type": "function"
        },
        "index": {
          "description": "Return just name e.g element name attribute name",
          "hierarchy": "Text XML HaXml ParseLazy",
          "module": "Text.XML.HaXml.ParseLazy",
          "name": "name",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-ParseLazy.html#v:name"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParse a processing instruction.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.ParseLazy",
          "name": "processinginstruction",
          "package": "HaXml",
          "signature": "XParser ProcessingInstruction",
          "source": "src/Text-XML-HaXml-ParseLazy.html#processinginstruction",
          "type": "function"
        },
        "index": {
          "description": "Parse processing instruction",
          "hierarchy": "Text XML HaXml ParseLazy",
          "module": "Text.XML.HaXml.ParseLazy",
          "name": "processinginstruction",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-ParseLazy.html#v:processinginstruction"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eReturn a qualified name (although the namespace qualification is not\n   processed here; this is merely to get the correct type).\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.ParseLazy",
          "name": "qname",
          "package": "HaXml",
          "signature": "XParser QName",
          "source": "src/Text-XML-HaXml-ParseLazy.html#qname",
          "type": "function"
        },
        "index": {
          "description": "Return qualified name although the namespace qualification is not processed here this is merely to get the correct type",
          "hierarchy": "Text XML HaXml ParseLazy",
          "module": "Text.XML.HaXml.ParseLazy",
          "name": "qname",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-ParseLazy.html#v:qname"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eReturn either a general entity reference, or a character reference.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.ParseLazy",
          "name": "reference",
          "package": "HaXml",
          "signature": "XParser Reference",
          "source": "src/Text-XML-HaXml-ParseLazy.html#reference",
          "type": "function"
        },
        "index": {
          "description": "Return either general entity reference or character reference",
          "hierarchy": "Text XML HaXml ParseLazy",
          "module": "Text.XML.HaXml.ParseLazy",
          "name": "reference",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-ParseLazy.html#v:reference"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.ParseLazy",
          "name": "snd3",
          "package": "HaXml",
          "signature": "(a, b, c) -\u003e b",
          "source": "src/Text-XML-HaXml-ParseLazy.html#snd3",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml ParseLazy",
          "module": "Text.XML.HaXml.ParseLazy",
          "name": "snd3",
          "normalized": "(a,b,c)-\u003eb",
          "package": "HaXml",
          "signature": "(a,b,c)-\u003eb",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-ParseLazy.html#v:snd3"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.ParseLazy",
          "name": "thd3",
          "package": "HaXml",
          "signature": "(a, b, c) -\u003e c",
          "source": "src/Text-XML-HaXml-ParseLazy.html#thd3",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml ParseLazy",
          "module": "Text.XML.HaXml.ParseLazy",
          "name": "thd3",
          "normalized": "(a,b,c)-\u003ec",
          "package": "HaXml",
          "signature": "(a,b,c)-\u003ec",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-ParseLazy.html#v:thd3"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eReturn the next token from the input only if it matches the given token.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.ParseLazy",
          "name": "tok",
          "package": "HaXml",
          "signature": "TokenT -\u003e XParser TokenT",
          "source": "src/Text-XML-HaXml-ParseLazy.html#tok",
          "type": "function"
        },
        "index": {
          "description": "Return the next token from the input only if it matches the given token",
          "hierarchy": "Text XML HaXml ParseLazy",
          "module": "Text.XML.HaXml.ParseLazy",
          "name": "tok",
          "normalized": "TokenT-\u003eXParser TokenT",
          "package": "HaXml",
          "signature": "TokenT-\u003eXParser TokenT",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-ParseLazy.html#v:tok"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eTo parse a whole document, \u003ccode\u003exmlParse file content\u003c/code\u003e takes a filename\n   (for generating error reports) and the string content of that file.\n   A parse error causes program failure, with message to stderr.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.ParseLazy",
          "name": "xmlParse",
          "package": "HaXml",
          "signature": "String -\u003e String -\u003e Document Posn",
          "source": "src/Text-XML-HaXml-ParseLazy.html#xmlParse",
          "type": "function"
        },
        "index": {
          "description": "To parse whole document xmlParse file content takes filename for generating error reports and the string content of that file parse error causes program failure with message to stderr",
          "hierarchy": "Text XML HaXml ParseLazy",
          "module": "Text.XML.HaXml.ParseLazy",
          "name": "xmlParse",
          "normalized": "String-\u003eString-\u003eDocument Posn",
          "package": "HaXml",
          "partial": "Parse",
          "signature": "String-\u003eString-\u003eDocument Posn",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-ParseLazy.html#v:xmlParse"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eTo parse a partial document, e.g. from an XML-based stream protocol,\n   where you may later want to get more document elements from the same\n   stream.  Arguments are: a parser for the item you want, and the\n   already-lexed input to parse from.  Returns the item you wanted\n   (or an error message), plus the remainder of the input.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.ParseLazy",
          "name": "xmlParseWith",
          "package": "HaXml",
          "signature": "XParser a -\u003e [(Posn, TokenT)] -\u003e (Either String a, [(Posn, TokenT)])",
          "source": "src/Text-XML-HaXml-ParseLazy.html#xmlParseWith",
          "type": "function"
        },
        "index": {
          "description": "To parse partial document e.g from an XML-based stream protocol where you may later want to get more document elements from the same stream Arguments are parser for the item you want and the already-lexed input to parse from Returns the item you wanted or an error message plus the remainder of the input",
          "hierarchy": "Text XML HaXml ParseLazy",
          "module": "Text.XML.HaXml.ParseLazy",
          "name": "xmlParseWith",
          "normalized": "XParser a-\u003e[(Posn,TokenT)]-\u003e(Either String a,[(Posn,TokenT)])",
          "package": "HaXml",
          "partial": "Parse With",
          "signature": "XParser a-\u003e[(Posn,TokenT)]-\u003e(Either String a,[(Posn,TokenT)])",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-ParseLazy.html#v:xmlParseWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eDefine a position datatype for giving locations in error messages.\n\u003c/p\u003e\u003c/div\u003e",
          "module": "Text.XML.HaXml.Posn",
          "name": "Posn",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Posn.html",
          "type": "module"
        },
        "index": {
          "description": "Define position datatype for giving locations in error messages",
          "hierarchy": "Text XML HaXml Posn",
          "module": "Text.XML.HaXml.Posn",
          "name": "Posn",
          "package": "HaXml",
          "partial": "Posn",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Posn.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eSource positions contain a filename, line, column, and an\n   inclusion point, which is itself another source position,\n   recursively.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Posn",
          "name": "Posn",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Posn.html#Posn",
          "type": "data"
        },
        "index": {
          "description": "Source positions contain filename line column and an inclusion point which is itself another source position recursively",
          "hierarchy": "Text XML HaXml Posn",
          "module": "Text.XML.HaXml.Posn",
          "name": "Posn",
          "package": "HaXml",
          "partial": "Posn",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Posn.html#t:Posn"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eAdd n character positions to the given position.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Posn",
          "name": "addcol",
          "package": "HaXml",
          "signature": "Int -\u003e Posn -\u003e Posn",
          "source": "src/Text-XML-HaXml-Posn.html#addcol",
          "type": "function"
        },
        "index": {
          "description": "Add character positions to the given position",
          "hierarchy": "Text XML HaXml Posn",
          "module": "Text.XML.HaXml.Posn",
          "name": "addcol",
          "normalized": "Int-\u003ePosn-\u003ePosn",
          "package": "HaXml",
          "signature": "Int-\u003ePosn-\u003ePosn",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Posn.html#v:addcol"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eJust used to strictify the internal values of a position, to avoid\n   space leaks.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Posn",
          "name": "forcep",
          "package": "HaXml",
          "signature": "Posn -\u003e Int",
          "source": "src/Text-XML-HaXml-Posn.html#forcep",
          "type": "function"
        },
        "index": {
          "description": "Just used to strictify the internal values of position to avoid space leaks",
          "hierarchy": "Text XML HaXml Posn",
          "module": "Text.XML.HaXml.Posn",
          "name": "forcep",
          "normalized": "Posn-\u003eInt",
          "package": "HaXml",
          "signature": "Posn-\u003eInt",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Posn.html#v:forcep"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eAdd a newline or tab to the given position.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Posn",
          "name": "newline",
          "package": "HaXml",
          "signature": "Posn -\u003e Posn",
          "source": "src/Text-XML-HaXml-Posn.html#newline",
          "type": "function"
        },
        "index": {
          "description": "Add newline or tab to the given position",
          "hierarchy": "Text XML HaXml Posn",
          "module": "Text.XML.HaXml.Posn",
          "name": "newline",
          "normalized": "Posn-\u003ePosn",
          "package": "HaXml",
          "signature": "Posn-\u003ePosn",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Posn.html#v:newline"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eDummy value for generated data, where a true source position does\n   not exist.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Posn",
          "name": "noPos",
          "package": "HaXml",
          "signature": "Posn",
          "source": "src/Text-XML-HaXml-Posn.html#noPos",
          "type": "function"
        },
        "index": {
          "description": "Dummy value for generated data where true source position does not exist",
          "hierarchy": "Text XML HaXml Posn",
          "module": "Text.XML.HaXml.Posn",
          "name": "noPos",
          "package": "HaXml",
          "partial": "Pos",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Posn.html#v:noPos"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e\u003ccode\u003eposInNewCxt name pos\u003c/code\u003e creates a new source position from an old one.\n   It is used when opening a new file (e.g. a DTD inclusion), to denote\n   the start of the file \u003ccode\u003ename\u003c/code\u003e, but retain the stacked information that\n   it was included from the old \u003ccode\u003epos\u003c/code\u003e.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Posn",
          "name": "posInNewCxt",
          "package": "HaXml",
          "signature": "String -\u003e Maybe Posn -\u003e Posn",
          "source": "src/Text-XML-HaXml-Posn.html#posInNewCxt",
          "type": "function"
        },
        "index": {
          "description": "posInNewCxt name pos creates new source position from an old one It is used when opening new file e.g DTD inclusion to denote the start of the file name but retain the stacked information that it was included from the old pos",
          "hierarchy": "Text XML HaXml Posn",
          "module": "Text.XML.HaXml.Posn",
          "name": "posInNewCxt",
          "normalized": "String-\u003eMaybe Posn-\u003ePosn",
          "package": "HaXml",
          "partial": "In New Cxt",
          "signature": "String-\u003eMaybe Posn-\u003ePosn",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Posn.html#v:posInNewCxt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Posn",
          "name": "posnColumn",
          "package": "HaXml",
          "signature": "Posn -\u003e Int",
          "source": "src/Text-XML-HaXml-Posn.html#posnColumn",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Posn",
          "module": "Text.XML.HaXml.Posn",
          "name": "posnColumn",
          "normalized": "Posn-\u003eInt",
          "package": "HaXml",
          "partial": "Column",
          "signature": "Posn-\u003eInt",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Posn.html#v:posnColumn"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Posn",
          "name": "posnFilename",
          "package": "HaXml",
          "signature": "Posn -\u003e FilePath",
          "source": "src/Text-XML-HaXml-Posn.html#posnFilename",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Posn",
          "module": "Text.XML.HaXml.Posn",
          "name": "posnFilename",
          "normalized": "Posn-\u003eFilePath",
          "package": "HaXml",
          "partial": "Filename",
          "signature": "Posn-\u003eFilePath",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Posn.html#v:posnFilename"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Posn",
          "name": "posnLine",
          "package": "HaXml",
          "signature": "Posn -\u003e Int",
          "source": "src/Text-XML-HaXml-Posn.html#posnLine",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Posn",
          "module": "Text.XML.HaXml.Posn",
          "name": "posnLine",
          "normalized": "Posn-\u003eInt",
          "package": "HaXml",
          "partial": "Line",
          "signature": "Posn-\u003eInt",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Posn.html#v:posnLine"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eAdd a newline or tab to the given position.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Posn",
          "name": "tab",
          "package": "HaXml",
          "signature": "Posn -\u003e Posn",
          "source": "src/Text-XML-HaXml-Posn.html#tab",
          "type": "function"
        },
        "index": {
          "description": "Add newline or tab to the given position",
          "hierarchy": "Text XML HaXml Posn",
          "module": "Text.XML.HaXml.Posn",
          "name": "tab",
          "normalized": "Posn-\u003ePosn",
          "package": "HaXml",
          "signature": "Posn-\u003ePosn",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Posn.html#v:tab"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eAdd the given whitespace char to the given position.\n   Precondition: \u003ccode\u003ewhite c | isSpace c = True\u003c/code\u003e\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Posn",
          "name": "white",
          "package": "HaXml",
          "signature": "Char -\u003e Posn -\u003e Posn",
          "source": "src/Text-XML-HaXml-Posn.html#white",
          "type": "function"
        },
        "index": {
          "description": "Add the given whitespace char to the given position Precondition white isSpace True",
          "hierarchy": "Text XML HaXml Posn",
          "module": "Text.XML.HaXml.Posn",
          "name": "white",
          "normalized": "Char-\u003ePosn-\u003ePosn",
          "package": "HaXml",
          "signature": "Char-\u003ePosn-\u003ePosn",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Posn.html#v:white"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThis is a pretty-printer for turning the internal representation\n   of generic structured XML documents into the Doc type (which can\n   later be rendered using Text.PrettyPrint.HughesPJ.render).\n   Essentially there is one pp function for each type in\n   Text.Xml.HaXml.Types, so you can pretty-print as much or as little\n   of the document as you wish.\n\u003c/p\u003e\u003c/div\u003e",
          "module": "Text.XML.HaXml.Pretty",
          "name": "Pretty",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Pretty.html",
          "type": "module"
        },
        "index": {
          "description": "This is pretty-printer for turning the internal representation of generic structured XML documents into the Doc type which can later be rendered using Text.PrettyPrint.HughesPJ.render Essentially there is one pp function for each type in Text.Xml.HaXml.Types so you can pretty-print as much or as little of the document as you wish",
          "hierarchy": "Text XML HaXml Pretty",
          "module": "Text.XML.HaXml.Pretty",
          "name": "Pretty",
          "package": "HaXml",
          "partial": "Pretty",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Pretty.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Pretty",
          "name": "content",
          "package": "HaXml",
          "signature": "Content i -\u003e Doc",
          "source": "src/Text-XML-HaXml-Pretty.html#content",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Pretty",
          "module": "Text.XML.HaXml.Pretty",
          "name": "content",
          "normalized": "Content a-\u003eDoc",
          "package": "HaXml",
          "signature": "Content i-\u003eDoc",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Pretty.html#v:content"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Pretty",
          "name": "cp",
          "package": "HaXml",
          "signature": "CP -\u003e Doc",
          "source": "src/Text-XML-HaXml-Pretty.html#cp",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Pretty",
          "module": "Text.XML.HaXml.Pretty",
          "name": "cp",
          "normalized": "CP-\u003eDoc",
          "package": "HaXml",
          "signature": "CP-\u003eDoc",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Pretty.html#v:cp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Pretty",
          "name": "doctypedecl",
          "package": "HaXml",
          "signature": "DocTypeDecl -\u003e Doc",
          "source": "src/Text-XML-HaXml-Pretty.html#doctypedecl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Pretty",
          "module": "Text.XML.HaXml.Pretty",
          "name": "doctypedecl",
          "normalized": "DocTypeDecl-\u003eDoc",
          "package": "HaXml",
          "signature": "DocTypeDecl-\u003eDoc",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Pretty.html#v:doctypedecl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Pretty",
          "name": "document",
          "package": "HaXml",
          "signature": "Document i -\u003e Doc",
          "source": "src/Text-XML-HaXml-Pretty.html#document",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Pretty",
          "module": "Text.XML.HaXml.Pretty",
          "name": "document",
          "normalized": "Document a-\u003eDoc",
          "package": "HaXml",
          "signature": "Document i-\u003eDoc",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Pretty.html#v:document"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Pretty",
          "name": "element",
          "package": "HaXml",
          "signature": "Element i -\u003e Doc",
          "source": "src/Text-XML-HaXml-Pretty.html#element",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Pretty",
          "module": "Text.XML.HaXml.Pretty",
          "name": "element",
          "normalized": "Element a-\u003eDoc",
          "package": "HaXml",
          "signature": "Element i-\u003eDoc",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Pretty.html#v:element"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Pretty",
          "name": "prolog",
          "package": "HaXml",
          "signature": "Prolog -\u003e Doc",
          "source": "src/Text-XML-HaXml-Pretty.html#prolog",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Pretty",
          "module": "Text.XML.HaXml.Pretty",
          "name": "prolog",
          "normalized": "Prolog-\u003eDoc",
          "package": "HaXml",
          "signature": "Prolog-\u003eDoc",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Pretty.html#v:prolog"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA streaming XML parser, using a method known as SAX. SAX isn't really a\n   standard, but an implementation, so it's just an \"SAX-like\" parser.\n   This module allows you parse an XML document without having to evaluate\n   it as a whole. This is needed for protocols like jabber, which use xml\n   streams for communication.\n\u003c/p\u003e\u003c/div\u003e",
          "module": "Text.XML.HaXml.SAX",
          "name": "SAX",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-SAX.html",
          "type": "module"
        },
        "index": {
          "description": "streaming XML parser using method known as SAX SAX isn really standard but an implementation so it just an SAX-like parser This module allows you parse an XML document without having to evaluate it as whole This is needed for protocols like jabber which use xml streams for communication",
          "hierarchy": "Text XML HaXml SAX",
          "module": "Text.XML.HaXml.SAX",
          "name": "SAX",
          "package": "HaXml",
          "partial": "SAX",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-SAX.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.SAX",
          "name": "SaxElement",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-SAX.html#SaxElement",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml SAX",
          "module": "Text.XML.HaXml.SAX",
          "name": "SaxElement",
          "package": "HaXml",
          "partial": "Sax Element",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-SAX.html#t:SaxElement"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eSome string data occured\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.SAX",
          "name": "SaxCharData",
          "package": "HaXml",
          "signature": "SaxCharData CharData",
          "source": "src/Text-XML-HaXml-SAX.html#SaxElement",
          "type": "function"
        },
        "index": {
          "description": "Some string data occured",
          "hierarchy": "Text XML HaXml SAX",
          "module": "Text.XML.HaXml.SAX",
          "name": "SaxCharData",
          "package": "HaXml",
          "partial": "Sax Char Data",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-SAX.html#v:SaxCharData"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eA comment occured (\u003c!-- --\u003e)\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.SAX",
          "name": "SaxComment",
          "package": "HaXml",
          "signature": "SaxComment String",
          "source": "src/Text-XML-HaXml-SAX.html#SaxElement",
          "type": "function"
        },
        "index": {
          "description": "comment occured",
          "hierarchy": "Text XML HaXml SAX",
          "module": "Text.XML.HaXml.SAX",
          "name": "SaxComment",
          "package": "HaXml",
          "partial": "Sax Comment",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-SAX.html#v:SaxComment"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eA doctype declaration occured(\u003c!DOCTYPE\u003e)\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.SAX",
          "name": "SaxDocTypeDecl",
          "package": "HaXml",
          "signature": "SaxDocTypeDecl DocTypeDecl",
          "source": "src/Text-XML-HaXml-SAX.html#SaxElement",
          "type": "function"
        },
        "index": {
          "description": "doctype declaration occured DOCTYPE",
          "hierarchy": "Text XML HaXml SAX",
          "module": "Text.XML.HaXml.SAX",
          "name": "SaxDocTypeDecl",
          "package": "HaXml",
          "partial": "Sax Doc Type Decl",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-SAX.html#v:SaxDocTypeDecl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eAn element was closed (\u003c/\u003e)\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.SAX",
          "name": "SaxElementClose",
          "package": "HaXml",
          "signature": "SaxElementClose Name",
          "source": "src/Text-XML-HaXml-SAX.html#SaxElement",
          "type": "function"
        },
        "index": {
          "description": "An element was closed",
          "hierarchy": "Text XML HaXml SAX",
          "module": "Text.XML.HaXml.SAX",
          "name": "SaxElementClose",
          "package": "HaXml",
          "partial": "Sax Element Close",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-SAX.html#v:SaxElementClose"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eAn element was opened (\u003c\u003e)\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.SAX",
          "name": "SaxElementOpen",
          "package": "HaXml",
          "signature": "SaxElementOpen Name [Attribute]",
          "source": "src/Text-XML-HaXml-SAX.html#SaxElement",
          "type": "function"
        },
        "index": {
          "description": "An element was opened",
          "hierarchy": "Text XML HaXml SAX",
          "module": "Text.XML.HaXml.SAX",
          "name": "SaxElementOpen",
          "normalized": "SaxElementOpen Name[Attribute]",
          "package": "HaXml",
          "partial": "Sax Element Open",
          "signature": "SaxElementOpen Name[Attribute]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-SAX.html#v:SaxElementOpen"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eAn element without content occured (\u003c/\u003e)\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.SAX",
          "name": "SaxElementTag",
          "package": "HaXml",
          "signature": "SaxElementTag Name [Attribute]",
          "source": "src/Text-XML-HaXml-SAX.html#SaxElement",
          "type": "function"
        },
        "index": {
          "description": "An element without content occured",
          "hierarchy": "Text XML HaXml SAX",
          "module": "Text.XML.HaXml.SAX",
          "name": "SaxElementTag",
          "normalized": "SaxElementTag Name[Attribute]",
          "package": "HaXml",
          "partial": "Sax Element Tag",
          "signature": "SaxElementTag Name[Attribute]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-SAX.html#v:SaxElementTag"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eA processing instruction occured (\u003c??\u003e)\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.SAX",
          "name": "SaxProcessingInstruction",
          "package": "HaXml",
          "signature": "SaxProcessingInstruction ProcessingInstruction",
          "source": "src/Text-XML-HaXml-SAX.html#SaxElement",
          "type": "function"
        },
        "index": {
          "description": "processing instruction occured",
          "hierarchy": "Text XML HaXml SAX",
          "module": "Text.XML.HaXml.SAX",
          "name": "SaxProcessingInstruction",
          "package": "HaXml",
          "partial": "Sax Processing Instruction",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-SAX.html#v:SaxProcessingInstruction"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eA reference occured\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.SAX",
          "name": "SaxReference",
          "package": "HaXml",
          "signature": "SaxReference Reference",
          "source": "src/Text-XML-HaXml-SAX.html#SaxElement",
          "type": "function"
        },
        "index": {
          "description": "reference occured",
          "hierarchy": "Text XML HaXml SAX",
          "module": "Text.XML.HaXml.SAX",
          "name": "SaxReference",
          "package": "HaXml",
          "partial": "Sax Reference",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-SAX.html#v:SaxReference"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e\u003ccode\u003esaxParse file content\u003c/code\u003e takes a filename and the string content of that\n   file and generates a stream of \u003ccode\u003eSaxElement\u003c/code\u003es. If an error occurs, the\n   parsing stops and a string is returned using the \u003ccode\u003eMaybe\u003c/code\u003e type.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.SAX",
          "name": "saxParse",
          "package": "HaXml",
          "signature": "String-\u003e String-\u003e ([SaxElement], Maybe String)",
          "type": "function"
        },
        "index": {
          "description": "saxParse file content takes filename and the string content of that file and generates stream of SaxElement If an error occurs the parsing stops and string is returned using the Maybe type",
          "hierarchy": "Text XML HaXml SAX",
          "module": "Text.XML.HaXml.SAX",
          "name": "saxParse",
          "normalized": "String-\u003eString-\u003e([SaxElement],Maybe String)",
          "package": "HaXml",
          "partial": "Parse",
          "signature": "String-\u003eString-\u003e([SaxElement],Maybe String)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-SAX.html#v:saxParse"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.Environment",
          "name": "Environment",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-Environment.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema Environment",
          "module": "Text.XML.HaXml.Schema.Environment",
          "name": "Environment",
          "package": "HaXml",
          "partial": "Environment",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Environment.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.Environment",
          "name": "Environment",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-Environment.html#Environment",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema Environment",
          "module": "Text.XML.HaXml.Schema.Environment",
          "name": "Environment",
          "package": "HaXml",
          "partial": "Environment",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Environment.html#t:Environment"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.Environment",
          "name": "Environment",
          "package": "HaXml",
          "signature": "Environment",
          "source": "src/Text-XML-HaXml-Schema-Environment.html#Environment",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema Environment",
          "module": "Text.XML.HaXml.Schema.Environment",
          "name": "Environment",
          "package": "HaXml",
          "partial": "Environment",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Environment.html#v:Environment"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eCombine two environments (e.g. read from different interface files)\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Environment",
          "name": "combineEnv",
          "package": "HaXml",
          "signature": "Environment -\u003e Environment -\u003e Environment",
          "source": "src/Text-XML-HaXml-Schema-Environment.html#combineEnv",
          "type": "function"
        },
        "index": {
          "description": "Combine two environments e.g read from different interface files",
          "hierarchy": "Text XML HaXml Schema Environment",
          "module": "Text.XML.HaXml.Schema.Environment",
          "name": "combineEnv",
          "normalized": "Environment-\u003eEnvironment-\u003eEnvironment",
          "package": "HaXml",
          "partial": "Env",
          "signature": "Environment-\u003eEnvironment-\u003eEnvironment",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Environment.html#v:combineEnv"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eAn empty environment of XSD type mappings.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Environment",
          "name": "emptyEnv",
          "package": "HaXml",
          "signature": "Environment",
          "source": "src/Text-XML-HaXml-Schema-Environment.html#emptyEnv",
          "type": "function"
        },
        "index": {
          "description": "An empty environment of XSD type mappings",
          "hierarchy": "Text XML HaXml Schema Environment",
          "module": "Text.XML.HaXml.Schema.Environment",
          "name": "emptyEnv",
          "package": "HaXml",
          "partial": "Env",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Environment.html#v:emptyEnv"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eall type definitions, regardless of scope\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Environment",
          "name": "env_allTypes",
          "package": "HaXml",
          "signature": "Map QName (Either SimpleType ComplexType)",
          "source": "src/Text-XML-HaXml-Schema-Environment.html#Environment",
          "type": "function"
        },
        "index": {
          "description": "all type definitions regardless of scope",
          "hierarchy": "Text XML HaXml Schema Environment",
          "module": "Text.XML.HaXml.Schema.Environment",
          "name": "env_allTypes",
          "package": "HaXml",
          "partial": "Types",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Environment.html#v:env_allTypes"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.Environment",
          "name": "env_attrgroup",
          "package": "HaXml",
          "signature": "Map QName AttrGroup",
          "source": "src/Text-XML-HaXml-Schema-Environment.html#Environment",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema Environment",
          "module": "Text.XML.HaXml.Schema.Environment",
          "name": "env_attrgroup",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Environment.html#v:env_attrgroup"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.Environment",
          "name": "env_attribute",
          "package": "HaXml",
          "signature": "Map QName AttributeDecl",
          "source": "src/Text-XML-HaXml-Schema-Environment.html#Environment",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema Environment",
          "module": "Text.XML.HaXml.Schema.Environment",
          "name": "env_attribute",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Environment.html#v:env_attribute"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.Environment",
          "name": "env_element",
          "package": "HaXml",
          "signature": "Map QName ElementDecl",
          "source": "src/Text-XML-HaXml-Schema-Environment.html#Environment",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema Environment",
          "module": "Text.XML.HaXml.Schema.Environment",
          "name": "env_element",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Environment.html#v:env_element"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003esupertype -\u003e subtypes\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Environment",
          "name": "env_extendty",
          "package": "HaXml",
          "signature": "Map QName [(QName, FilePath)]",
          "source": "src/Text-XML-HaXml-Schema-Environment.html#Environment",
          "type": "function"
        },
        "index": {
          "description": "supertype subtypes",
          "hierarchy": "Text XML HaXml Schema Environment",
          "module": "Text.XML.HaXml.Schema.Environment",
          "name": "env_extendty",
          "normalized": "Map QName[(QName,FilePath)]",
          "package": "HaXml",
          "signature": "Map QName[(QName,FilePath)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Environment.html#v:env_extendty"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.Environment",
          "name": "env_group",
          "package": "HaXml",
          "signature": "Map QName Group",
          "source": "src/Text-XML-HaXml-Schema-Environment.html#Environment",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema Environment",
          "module": "Text.XML.HaXml.Schema.Environment",
          "name": "env_group",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Environment.html#v:env_group"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.Environment",
          "name": "env_namespace",
          "package": "HaXml",
          "signature": "Map String String",
          "source": "src/Text-XML-HaXml-Schema-Environment.html#Environment",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema Environment",
          "module": "Text.XML.HaXml.Schema.Environment",
          "name": "env_namespace",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Environment.html#v:env_namespace"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003esubstitution groups\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Environment",
          "name": "env_substGrp",
          "package": "HaXml",
          "signature": "Map QName [(QName, FilePath)]",
          "source": "src/Text-XML-HaXml-Schema-Environment.html#Environment",
          "type": "function"
        },
        "index": {
          "description": "substitution groups",
          "hierarchy": "Text XML HaXml Schema Environment",
          "module": "Text.XML.HaXml.Schema.Environment",
          "name": "env_substGrp",
          "normalized": "Map QName[(QName,FilePath)]",
          "package": "HaXml",
          "partial": "Grp",
          "signature": "Map QName[(QName,FilePath)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Environment.html#v:env_substGrp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003etype definitions in scope\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Environment",
          "name": "env_type",
          "package": "HaXml",
          "signature": "Map QName (Either SimpleType ComplexType)",
          "source": "src/Text-XML-HaXml-Schema-Environment.html#Environment",
          "type": "function"
        },
        "index": {
          "description": "type definitions in scope",
          "hierarchy": "Text XML HaXml Schema Environment",
          "module": "Text.XML.HaXml.Schema.Environment",
          "name": "env_type",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Environment.html#v:env_type"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003ewhere type is defined\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Environment",
          "name": "env_typeloc",
          "package": "HaXml",
          "signature": "Map QName FilePath",
          "source": "src/Text-XML-HaXml-Schema-Environment.html#Environment",
          "type": "function"
        },
        "index": {
          "description": "where type is defined",
          "hierarchy": "Text XML HaXml Schema Environment",
          "module": "Text.XML.HaXml.Schema.Environment",
          "name": "env_typeloc",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Environment.html#v:env_typeloc"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eFind all direct module dependencies.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Environment",
          "name": "gatherImports",
          "package": "HaXml",
          "signature": "Schema -\u003e [(FilePath, Maybe String)]",
          "source": "src/Text-XML-HaXml-Schema-Environment.html#gatherImports",
          "type": "function"
        },
        "index": {
          "description": "Find all direct module dependencies",
          "hierarchy": "Text XML HaXml Schema Environment",
          "module": "Text.XML.HaXml.Schema.Environment",
          "name": "gatherImports",
          "normalized": "Schema-\u003e[(FilePath,Maybe String)]",
          "package": "HaXml",
          "partial": "Imports",
          "signature": "Schema-\u003e[(FilePath,Maybe String)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Environment.html#v:gatherImports"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eBuild an environment of XSD type mappings from a schema module.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Environment",
          "name": "mkEnvironment",
          "package": "HaXml",
          "signature": "FilePath -\u003e Schema -\u003e Environment -\u003e Environment",
          "source": "src/Text-XML-HaXml-Schema-Environment.html#mkEnvironment",
          "type": "function"
        },
        "index": {
          "description": "Build an environment of XSD type mappings from schema module",
          "hierarchy": "Text XML HaXml Schema Environment",
          "module": "Text.XML.HaXml.Schema.Environment",
          "name": "mkEnvironment",
          "normalized": "FilePath-\u003eSchema-\u003eEnvironment-\u003eEnvironment",
          "package": "HaXml",
          "partial": "Environment",
          "signature": "FilePath-\u003eSchema-\u003eEnvironment-\u003eEnvironment",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Environment.html#v:mkEnvironment"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA type model for Haskell datatypes that bears a reasonable correspondence\n   to the XSD type model.\n\u003c/p\u003e\u003c/div\u003e",
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "HaskellTypeModel",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-HaskellTypeModel.html",
          "type": "module"
        },
        "index": {
          "description": "type model for Haskell datatypes that bears reasonable correspondence to the XSD type model",
          "hierarchy": "Text XML HaXml Schema HaskellTypeModel",
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "HaskellTypeModel",
          "package": "HaXml",
          "partial": "Haskell Type Model",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-HaskellTypeModel.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "Attribute",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-HaskellTypeModel.html#Attribute",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema HaskellTypeModel",
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "Attribute",
          "package": "HaXml",
          "partial": "Attribute",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-HaskellTypeModel.html#t:Attribute"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eComments can be attached to most things, but not all of them will exist.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "Comment",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-HaskellTypeModel.html#Comment",
          "type": "type"
        },
        "index": {
          "description": "Comments can be attached to most things but not all of them will exist",
          "hierarchy": "Text XML HaXml Schema HaskellTypeModel",
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "Comment",
          "package": "HaXml",
          "partial": "Comment",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-HaskellTypeModel.html#t:Comment"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eThere are essentially simple types, and complex types, each of which\n   can be either restricted or extended.  There are four kinds of complex\n   type: choices, sequences, named groups, or a simple element with content.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "Decl",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-HaskellTypeModel.html#Decl",
          "type": "data"
        },
        "index": {
          "description": "There are essentially simple types and complex types each of which can be either restricted or extended There are four kinds of complex type choices sequences named groups or simple element with content",
          "hierarchy": "Text XML HaXml Schema HaskellTypeModel",
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "Decl",
          "package": "HaXml",
          "partial": "Decl",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-HaskellTypeModel.html#t:Decl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "Element",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-HaskellTypeModel.html#Element",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema HaskellTypeModel",
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "Element",
          "package": "HaXml",
          "partial": "Element",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-HaskellTypeModel.html#t:Element"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "Modifier",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-HaskellTypeModel.html#Modifier",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema HaskellTypeModel",
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "Modifier",
          "package": "HaXml",
          "partial": "Modifier",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-HaskellTypeModel.html#t:Modifier"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eThe whole Haskell module.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "Module",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-HaskellTypeModel.html#Module",
          "type": "data"
        },
        "index": {
          "description": "The whole Haskell module",
          "hierarchy": "Text XML HaXml Schema HaskellTypeModel",
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "Module",
          "package": "HaXml",
          "partial": "Module",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-HaskellTypeModel.html#t:Module"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eRestrictions on simpleType\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "Restrict",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-HaskellTypeModel.html#Restrict",
          "type": "data"
        },
        "index": {
          "description": "Restrictions on simpleType",
          "hierarchy": "Text XML HaXml Schema HaskellTypeModel",
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "Restrict",
          "package": "HaXml",
          "partial": "Restrict",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-HaskellTypeModel.html#t:Restrict"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "AnyElem",
          "package": "HaXml",
          "signature": "AnyElem",
          "source": "src/Text-XML-HaXml-Schema-HaskellTypeModel.html#Element",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema HaskellTypeModel",
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "AnyElem",
          "package": "HaXml",
          "partial": "Any Elem",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-HaskellTypeModel.html#v:AnyElem"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "Attribute",
          "package": "HaXml",
          "signature": "Attribute",
          "source": "src/Text-XML-HaXml-Schema-HaskellTypeModel.html#Attribute",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema HaskellTypeModel",
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "Attribute",
          "package": "HaXml",
          "partial": "Attribute",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-HaskellTypeModel.html#v:Attribute"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "Choice",
          "package": "HaXml",
          "signature": "Choice XName [Element] Comment",
          "source": "src/Text-XML-HaXml-Schema-HaskellTypeModel.html#Decl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema HaskellTypeModel",
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "Choice",
          "normalized": "Choice XName[Element]Comment",
          "package": "HaXml",
          "partial": "Choice",
          "signature": "Choice XName[Element]Comment",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-HaskellTypeModel.html#v:Choice"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "Element",
          "package": "HaXml",
          "signature": "Element",
          "source": "src/Text-XML-HaXml-Schema-HaskellTypeModel.html#Element",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema HaskellTypeModel",
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "Element",
          "package": "HaXml",
          "partial": "Element",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-HaskellTypeModel.html#v:Element"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "ElementAbstractOfType",
          "package": "HaXml",
          "signature": "ElementAbstractOfType XName XName [(XName, Maybe XName)] Comment",
          "source": "src/Text-XML-HaXml-Schema-HaskellTypeModel.html#Decl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema HaskellTypeModel",
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "ElementAbstractOfType",
          "normalized": "ElementAbstractOfType XName XName[(XName,Maybe XName)]Comment",
          "package": "HaXml",
          "partial": "Element Abstract Of Type",
          "signature": "ElementAbstractOfType XName XName[(XName,Maybe XName)]Comment",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-HaskellTypeModel.html#v:ElementAbstractOfType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "ElementOfType",
          "package": "HaXml",
          "signature": "ElementOfType Element",
          "source": "src/Text-XML-HaXml-Schema-HaskellTypeModel.html#Decl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema HaskellTypeModel",
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "ElementOfType",
          "package": "HaXml",
          "partial": "Element Of Type",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-HaskellTypeModel.html#v:ElementOfType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "ElementsAttrs",
          "package": "HaXml",
          "signature": "ElementsAttrs XName [Element] [Attribute] Comment",
          "source": "src/Text-XML-HaXml-Schema-HaskellTypeModel.html#Decl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema HaskellTypeModel",
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "ElementsAttrs",
          "normalized": "ElementsAttrs XName[Element][Attribute]Comment",
          "package": "HaXml",
          "partial": "Elements Attrs",
          "signature": "ElementsAttrs XName[Element][Attribute]Comment",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-HaskellTypeModel.html#v:ElementsAttrs"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "ElementsAttrsAbstract",
          "package": "HaXml",
          "signature": "ElementsAttrsAbstract XName [(XName, Maybe XName)] Comment",
          "source": "src/Text-XML-HaXml-Schema-HaskellTypeModel.html#Decl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema HaskellTypeModel",
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "ElementsAttrsAbstract",
          "normalized": "ElementsAttrsAbstract XName[(XName,Maybe XName)]Comment",
          "package": "HaXml",
          "partial": "Elements Attrs Abstract",
          "signature": "ElementsAttrsAbstract XName[(XName,Maybe XName)]Comment",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-HaskellTypeModel.html#v:ElementsAttrsAbstract"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "EnumSimpleType",
          "package": "HaXml",
          "signature": "EnumSimpleType XName [(XName, Comment)] Comment",
          "source": "src/Text-XML-HaXml-Schema-HaskellTypeModel.html#Decl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema HaskellTypeModel",
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "EnumSimpleType",
          "normalized": "EnumSimpleType XName[(XName,Comment)]Comment",
          "package": "HaXml",
          "partial": "Enum Simple Type",
          "signature": "EnumSimpleType XName[(XName,Comment)]Comment",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-HaskellTypeModel.html#v:EnumSimpleType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "Enumeration",
          "package": "HaXml",
          "signature": "Enumeration [(String, Comment)]",
          "source": "src/Text-XML-HaXml-Schema-HaskellTypeModel.html#Restrict",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema HaskellTypeModel",
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "Enumeration",
          "normalized": "Enumeration[(String,Comment)]",
          "package": "HaXml",
          "partial": "Enumeration",
          "signature": "Enumeration[(String,Comment)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-HaskellTypeModel.html#v:Enumeration"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "ExtendComplexType",
          "package": "HaXml",
          "signature": "ExtendComplexType XName XName [Element] [Attribute] [Element] [Attribute] (Maybe XName) Bool [XName] Comment",
          "source": "src/Text-XML-HaXml-Schema-HaskellTypeModel.html#Decl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema HaskellTypeModel",
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "ExtendComplexType",
          "normalized": "ExtendComplexType XName XName[Element][Attribute][Element][Attribute](Maybe XName)Bool[XName]Comment",
          "package": "HaXml",
          "partial": "Extend Complex Type",
          "signature": "ExtendComplexType XName XName[Element][Attribute][Element][Attribute](Maybe XName)Bool[XName]Comment",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-HaskellTypeModel.html#v:ExtendComplexType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "ExtendComplexTypeAbstract",
          "package": "HaXml",
          "signature": "ExtendComplexTypeAbstract XName XName [(XName, Maybe XName)] (Maybe XName) [XName] Comment",
          "source": "src/Text-XML-HaXml-Schema-HaskellTypeModel.html#Decl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema HaskellTypeModel",
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "ExtendComplexTypeAbstract",
          "normalized": "ExtendComplexTypeAbstract XName XName[(XName,Maybe XName)](Maybe XName)[XName]Comment",
          "package": "HaXml",
          "partial": "Extend Complex Type Abstract",
          "signature": "ExtendComplexTypeAbstract XName XName[(XName,Maybe XName)](Maybe XName)[XName]Comment",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-HaskellTypeModel.html#v:ExtendComplexTypeAbstract"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "ExtendSimpleType",
          "package": "HaXml",
          "signature": "ExtendSimpleType XName XName [Attribute] Comment",
          "source": "src/Text-XML-HaXml-Schema-HaskellTypeModel.html#Decl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema HaskellTypeModel",
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "ExtendSimpleType",
          "normalized": "ExtendSimpleType XName XName[Attribute]Comment",
          "package": "HaXml",
          "partial": "Extend Simple Type",
          "signature": "ExtendSimpleType XName XName[Attribute]Comment",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-HaskellTypeModel.html#v:ExtendSimpleType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "Group",
          "package": "HaXml",
          "signature": "Group XName [Element] Comment",
          "source": "src/Text-XML-HaXml-Schema-HaskellTypeModel.html#Decl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema HaskellTypeModel",
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "Group",
          "normalized": "Group XName[Element]Comment",
          "package": "HaXml",
          "partial": "Group",
          "signature": "Group XName[Element]Comment",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-HaskellTypeModel.html#v:Group"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "Module",
          "package": "HaXml",
          "signature": "Module",
          "source": "src/Text-XML-HaXml-Schema-HaskellTypeModel.html#Module",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema HaskellTypeModel",
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "Module",
          "package": "HaXml",
          "partial": "Module",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-HaskellTypeModel.html#v:Module"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "NamedSimpleType",
          "package": "HaXml",
          "signature": "NamedSimpleType XName XName Comment",
          "source": "src/Text-XML-HaXml-Schema-HaskellTypeModel.html#Decl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema HaskellTypeModel",
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "NamedSimpleType",
          "package": "HaXml",
          "partial": "Named Simple Type",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-HaskellTypeModel.html#v:NamedSimpleType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "OneOf",
          "package": "HaXml",
          "signature": "OneOf",
          "source": "src/Text-XML-HaXml-Schema-HaskellTypeModel.html#Element",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema HaskellTypeModel",
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "OneOf",
          "package": "HaXml",
          "partial": "One Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-HaskellTypeModel.html#v:OneOf"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "Optional",
          "package": "HaXml",
          "signature": "Optional",
          "source": "src/Text-XML-HaXml-Schema-HaskellTypeModel.html#Modifier",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema HaskellTypeModel",
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "Optional",
          "package": "HaXml",
          "partial": "Optional",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-HaskellTypeModel.html#v:Optional"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "Pattern",
          "package": "HaXml",
          "signature": "Pattern String Comment",
          "source": "src/Text-XML-HaXml-Schema-HaskellTypeModel.html#Restrict",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema HaskellTypeModel",
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "Pattern",
          "package": "HaXml",
          "partial": "Pattern",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-HaskellTypeModel.html#v:Pattern"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "Range",
          "package": "HaXml",
          "signature": "Range Occurs",
          "source": "src/Text-XML-HaXml-Schema-HaskellTypeModel.html#Modifier",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema HaskellTypeModel",
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "Range",
          "package": "HaXml",
          "partial": "Range",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-HaskellTypeModel.html#v:Range"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "RangeR",
          "package": "HaXml",
          "signature": "RangeR Occurs Comment",
          "source": "src/Text-XML-HaXml-Schema-HaskellTypeModel.html#Restrict",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema HaskellTypeModel",
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "RangeR",
          "package": "HaXml",
          "partial": "Range",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-HaskellTypeModel.html#v:RangeR"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "RestrictComplexType",
          "package": "HaXml",
          "signature": "RestrictComplexType XName XName Comment",
          "source": "src/Text-XML-HaXml-Schema-HaskellTypeModel.html#Decl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema HaskellTypeModel",
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "RestrictComplexType",
          "package": "HaXml",
          "partial": "Restrict Complex Type",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-HaskellTypeModel.html#v:RestrictComplexType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "RestrictSimpleType",
          "package": "HaXml",
          "signature": "RestrictSimpleType XName XName [Restrict] Comment",
          "source": "src/Text-XML-HaXml-Schema-HaskellTypeModel.html#Decl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema HaskellTypeModel",
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "RestrictSimpleType",
          "normalized": "RestrictSimpleType XName XName[Restrict]Comment",
          "package": "HaXml",
          "partial": "Restrict Simple Type",
          "signature": "RestrictSimpleType XName XName[Restrict]Comment",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-HaskellTypeModel.html#v:RestrictSimpleType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "Single",
          "package": "HaXml",
          "signature": "Single",
          "source": "src/Text-XML-HaXml-Schema-HaskellTypeModel.html#Modifier",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema HaskellTypeModel",
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "Single",
          "package": "HaXml",
          "partial": "Single",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-HaskellTypeModel.html#v:Single"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "StrLength",
          "package": "HaXml",
          "signature": "StrLength Occurs Comment",
          "source": "src/Text-XML-HaXml-Schema-HaskellTypeModel.html#Restrict",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema HaskellTypeModel",
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "StrLength",
          "package": "HaXml",
          "partial": "Str Length",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-HaskellTypeModel.html#v:StrLength"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "Text",
          "package": "HaXml",
          "signature": "Text",
          "source": "src/Text-XML-HaXml-Schema-HaskellTypeModel.html#Element",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema HaskellTypeModel",
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "Text",
          "package": "HaXml",
          "partial": "Text",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-HaskellTypeModel.html#v:Text"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "UnionSimpleTypes",
          "package": "HaXml",
          "signature": "UnionSimpleTypes XName [XName] Comment",
          "source": "src/Text-XML-HaXml-Schema-HaskellTypeModel.html#Decl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema HaskellTypeModel",
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "UnionSimpleTypes",
          "normalized": "UnionSimpleTypes XName[XName]Comment",
          "package": "HaXml",
          "partial": "Union Simple Types",
          "signature": "UnionSimpleTypes XName[XName]Comment",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-HaskellTypeModel.html#v:UnionSimpleTypes"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "XSDComment",
          "package": "HaXml",
          "signature": "XSDComment Comment",
          "source": "src/Text-XML-HaXml-Schema-HaskellTypeModel.html#Decl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema HaskellTypeModel",
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "XSDComment",
          "package": "HaXml",
          "partial": "XSDComment",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-HaskellTypeModel.html#v:XSDComment"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "XSDImport",
          "package": "HaXml",
          "signature": "XSDImport XName (Maybe XName) Comment",
          "source": "src/Text-XML-HaXml-Schema-HaskellTypeModel.html#Decl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema HaskellTypeModel",
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "XSDImport",
          "package": "HaXml",
          "partial": "XSDImport",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-HaskellTypeModel.html#v:XSDImport"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "XSDInclude",
          "package": "HaXml",
          "signature": "XSDInclude XName Comment",
          "source": "src/Text-XML-HaXml-Schema-HaskellTypeModel.html#Decl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema HaskellTypeModel",
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "XSDInclude",
          "package": "HaXml",
          "partial": "XSDInclude",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-HaskellTypeModel.html#v:XSDInclude"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "attr_comment",
          "package": "HaXml",
          "signature": "Comment",
          "source": "src/Text-XML-HaXml-Schema-HaskellTypeModel.html#Attribute",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema HaskellTypeModel",
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "attr_comment",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-HaskellTypeModel.html#v:attr_comment"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "attr_name",
          "package": "HaXml",
          "signature": "XName",
          "source": "src/Text-XML-HaXml-Schema-HaskellTypeModel.html#Attribute",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema HaskellTypeModel",
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "attr_name",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-HaskellTypeModel.html#v:attr_name"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "attr_required",
          "package": "HaXml",
          "signature": "Bool",
          "source": "src/Text-XML-HaXml-Schema-HaskellTypeModel.html#Attribute",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema HaskellTypeModel",
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "attr_required",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-HaskellTypeModel.html#v:attr_required"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "attr_type",
          "package": "HaXml",
          "signature": "XName",
          "source": "src/Text-XML-HaXml-Schema-HaskellTypeModel.html#Attribute",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema HaskellTypeModel",
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "attr_type",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-HaskellTypeModel.html#v:attr_type"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "elem_byRef",
          "package": "HaXml",
          "signature": "Bool",
          "source": "src/Text-XML-HaXml-Schema-HaskellTypeModel.html#Element",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema HaskellTypeModel",
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "elem_byRef",
          "package": "HaXml",
          "partial": "Ref",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-HaskellTypeModel.html#v:elem_byRef"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "elem_comment",
          "package": "HaXml",
          "signature": "Comment",
          "source": "src/Text-XML-HaXml-Schema-HaskellTypeModel.html#Element",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema HaskellTypeModel",
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "elem_comment",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-HaskellTypeModel.html#v:elem_comment"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "elem_locals",
          "package": "HaXml",
          "signature": "[Decl]",
          "source": "src/Text-XML-HaXml-Schema-HaskellTypeModel.html#Element",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema HaskellTypeModel",
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "elem_locals",
          "normalized": "[Decl]",
          "package": "HaXml",
          "signature": "[Decl]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-HaskellTypeModel.html#v:elem_locals"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "elem_modifier",
          "package": "HaXml",
          "signature": "Modifier",
          "source": "src/Text-XML-HaXml-Schema-HaskellTypeModel.html#Element",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema HaskellTypeModel",
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "elem_modifier",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-HaskellTypeModel.html#v:elem_modifier"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "elem_name",
          "package": "HaXml",
          "signature": "XName",
          "source": "src/Text-XML-HaXml-Schema-HaskellTypeModel.html#Element",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema HaskellTypeModel",
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "elem_name",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-HaskellTypeModel.html#v:elem_name"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "elem_oneOf",
          "package": "HaXml",
          "signature": "[[Element]]",
          "source": "src/Text-XML-HaXml-Schema-HaskellTypeModel.html#Element",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema HaskellTypeModel",
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "elem_oneOf",
          "normalized": "[[Element]]",
          "package": "HaXml",
          "partial": "Of",
          "signature": "[[Element]]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-HaskellTypeModel.html#v:elem_oneOf"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "elem_substs",
          "package": "HaXml",
          "signature": "Maybe [XName]",
          "source": "src/Text-XML-HaXml-Schema-HaskellTypeModel.html#Element",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema HaskellTypeModel",
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "elem_substs",
          "normalized": "Maybe[XName]",
          "package": "HaXml",
          "signature": "Maybe[XName]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-HaskellTypeModel.html#v:elem_substs"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "elem_type",
          "package": "HaXml",
          "signature": "XName",
          "source": "src/Text-XML-HaXml-Schema-HaskellTypeModel.html#Element",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema HaskellTypeModel",
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "elem_type",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-HaskellTypeModel.html#v:elem_type"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eA helper for building the formal Module structure.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "mkModule",
          "package": "HaXml",
          "signature": "String -\u003e Schema -\u003e [Decl] -\u003e Module",
          "source": "src/Text-XML-HaXml-Schema-HaskellTypeModel.html#mkModule",
          "type": "function"
        },
        "index": {
          "description": "helper for building the formal Module structure",
          "hierarchy": "Text XML HaXml Schema HaskellTypeModel",
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "mkModule",
          "normalized": "String-\u003eSchema-\u003e[Decl]-\u003eModule",
          "package": "HaXml",
          "partial": "Module",
          "signature": "String-\u003eSchema-\u003e[Decl]-\u003eModule",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-HaskellTypeModel.html#v:mkModule"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "module_decls",
          "package": "HaXml",
          "signature": "[Decl]",
          "source": "src/Text-XML-HaXml-Schema-HaskellTypeModel.html#Module",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema HaskellTypeModel",
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "module_decls",
          "normalized": "[Decl]",
          "package": "HaXml",
          "signature": "[Decl]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-HaskellTypeModel.html#v:module_decls"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "module_import_only",
          "package": "HaXml",
          "signature": "[Decl]",
          "source": "src/Text-XML-HaXml-Schema-HaskellTypeModel.html#Module",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema HaskellTypeModel",
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "module_import_only",
          "normalized": "[Decl]",
          "package": "HaXml",
          "signature": "[Decl]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-HaskellTypeModel.html#v:module_import_only"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "module_name",
          "package": "HaXml",
          "signature": "XName",
          "source": "src/Text-XML-HaXml-Schema-HaskellTypeModel.html#Module",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema HaskellTypeModel",
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "module_name",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-HaskellTypeModel.html#v:module_name"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "module_re_exports",
          "package": "HaXml",
          "signature": "[Decl]",
          "source": "src/Text-XML-HaXml-Schema-HaskellTypeModel.html#Module",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema HaskellTypeModel",
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "module_re_exports",
          "normalized": "[Decl]",
          "package": "HaXml",
          "signature": "[Decl]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-HaskellTypeModel.html#v:module_re_exports"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "module_xsd_ns",
          "package": "HaXml",
          "signature": "Maybe XName",
          "source": "src/Text-XML-HaXml-Schema-HaskellTypeModel.html#Module",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema HaskellTypeModel",
          "module": "Text.XML.HaXml.Schema.HaskellTypeModel",
          "name": "module_xsd_ns",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-HaskellTypeModel.html#v:module_xsd_ns"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA type model for Haskell datatypes that bears a reasonable correspondence\n   to the XSD type model.\n\u003c/p\u003e\u003c/div\u003e",
          "module": "Text.XML.HaXml.Schema.NameConversion",
          "name": "NameConversion",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-NameConversion.html",
          "type": "module"
        },
        "index": {
          "description": "type model for Haskell datatypes that bears reasonable correspondence to the XSD type model",
          "hierarchy": "Text XML HaXml Schema NameConversion",
          "module": "Text.XML.HaXml.Schema.NameConversion",
          "name": "NameConversion",
          "package": "HaXml",
          "partial": "Name Conversion",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-NameConversion.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eAn HName is a resolved version of an XName.  It should conform to\n   the various namespace rules, and may already include a module\n   qualifier if appropriate.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.NameConversion",
          "name": "HName",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-NameConversion.html#HName",
          "type": "newtype"
        },
        "index": {
          "description": "An HName is resolved version of an XName It should conform to the various namespace rules and may already include module qualifier if appropriate",
          "hierarchy": "Text XML HaXml Schema NameConversion",
          "module": "Text.XML.HaXml.Schema.NameConversion",
          "name": "HName",
          "package": "HaXml",
          "partial": "HName",
          "type": "newtype"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-NameConversion.html#t:HName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eA NameConverter is a collection of functions that convert an XName\n   into an HName, for various Haskell namespaces.  You can define your\n   own arbitrary resolver, but should ensure that you abide by the\n   Haskell rules for conid, varid, etc.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.NameConversion",
          "name": "NameConverter",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-NameConversion.html#NameConverter",
          "type": "data"
        },
        "index": {
          "description": "NameConverter is collection of functions that convert an XName into an HName for various Haskell namespaces You can define your own arbitrary resolver but should ensure that you abide by the Haskell rules for conid varid etc",
          "hierarchy": "Text XML HaXml Schema NameConversion",
          "module": "Text.XML.HaXml.Schema.NameConversion",
          "name": "NameConverter",
          "package": "HaXml",
          "partial": "Name Converter",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-NameConversion.html#t:NameConverter"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eAn XName just holds the original XSD qualified name.  It does not\n   ensure that the string conforms to any rules of the various Haskell\n   namespaces.  Use a NameConverter to define how you would like names\n   to be mangled.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.NameConversion",
          "name": "XName",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-NameConversion.html#XName",
          "type": "newtype"
        },
        "index": {
          "description": "An XName just holds the original XSD qualified name It does not ensure that the string conforms to any rules of the various Haskell namespaces Use NameConverter to define how you would like names to be mangled",
          "hierarchy": "Text XML HaXml Schema NameConversion",
          "module": "Text.XML.HaXml.Schema.NameConversion",
          "name": "XName",
          "package": "HaXml",
          "partial": "XName",
          "type": "newtype"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-NameConversion.html#t:XName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.NameConversion",
          "name": "HName",
          "package": "HaXml",
          "signature": "HName String",
          "source": "src/Text-XML-HaXml-Schema-NameConversion.html#HName",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema NameConversion",
          "module": "Text.XML.HaXml.Schema.NameConversion",
          "name": "HName",
          "package": "HaXml",
          "partial": "HName",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-NameConversion.html#v:HName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.NameConversion",
          "name": "NameConverter",
          "package": "HaXml",
          "signature": "NameConverter",
          "source": "src/Text-XML-HaXml-Schema-NameConversion.html#NameConverter",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema NameConversion",
          "module": "Text.XML.HaXml.Schema.NameConversion",
          "name": "NameConverter",
          "package": "HaXml",
          "partial": "Name Converter",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-NameConversion.html#v:NameConverter"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.NameConversion",
          "name": "XName",
          "package": "HaXml",
          "signature": "XName QName",
          "source": "src/Text-XML-HaXml-Schema-NameConversion.html#XName",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema NameConversion",
          "module": "Text.XML.HaXml.Schema.NameConversion",
          "name": "XName",
          "package": "HaXml",
          "partial": "XName",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-NameConversion.html#v:XName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eEnsure that a string does not match a Haskell keyword.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.NameConversion",
          "name": "avoidKeywords",
          "package": "HaXml",
          "signature": "String -\u003e String",
          "source": "src/Text-XML-HaXml-Schema-NameConversion.html#avoidKeywords",
          "type": "function"
        },
        "index": {
          "description": "Ensure that string does not match Haskell keyword",
          "hierarchy": "Text XML HaXml Schema NameConversion",
          "module": "Text.XML.HaXml.Schema.NameConversion",
          "name": "avoidKeywords",
          "normalized": "String-\u003eString",
          "package": "HaXml",
          "partial": "Keywords",
          "signature": "String-\u003eString",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-NameConversion.html#v:avoidKeywords"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eRemove any prefix directory names, and given suffix extension.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.NameConversion",
          "name": "basename",
          "package": "HaXml",
          "signature": "String -\u003e String -\u003e String",
          "source": "src/Text-XML-HaXml-Schema-NameConversion.html#basename",
          "type": "function"
        },
        "index": {
          "description": "Remove any prefix directory names and given suffix extension",
          "hierarchy": "Text XML HaXml Schema NameConversion",
          "module": "Text.XML.HaXml.Schema.NameConversion",
          "name": "basename",
          "normalized": "String-\u003eString-\u003eString",
          "package": "HaXml",
          "signature": "String-\u003eString-\u003eString",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-NameConversion.html#v:basename"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.NameConversion",
          "name": "conid",
          "package": "HaXml",
          "signature": "XName -\u003e HName",
          "source": "src/Text-XML-HaXml-Schema-NameConversion.html#NameConverter",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema NameConversion",
          "module": "Text.XML.HaXml.Schema.NameConversion",
          "name": "conid",
          "normalized": "XName-\u003eHName",
          "package": "HaXml",
          "signature": "XName-\u003eHName",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-NameConversion.html#v:conid"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.NameConversion",
          "name": "fieldid",
          "package": "HaXml",
          "signature": "XName -\u003e XName -\u003e HName",
          "source": "src/Text-XML-HaXml-Schema-NameConversion.html#NameConverter",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema NameConversion",
          "module": "Text.XML.HaXml.Schema.NameConversion",
          "name": "fieldid",
          "normalized": "XName-\u003eXName-\u003eHName",
          "package": "HaXml",
          "signature": "XName-\u003eXName-\u003eHName",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-NameConversion.html#v:fieldid"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eA specialised module-name converter for FpML module names with\n   multiple dashes, including version numbers,\n   e.g. fpml-dividend-swaps-4-7.xsd      becomes FpML.V47.Swaps.Dividend\n   but  fpml-posttrade-execution-4-7.xsd becomes FpML.V47.PostTrade.Execution\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.NameConversion",
          "name": "fpml",
          "package": "HaXml",
          "signature": "String -\u003e String",
          "source": "src/Text-XML-HaXml-Schema-NameConversion.html#fpml",
          "type": "function"
        },
        "index": {
          "description": "specialised module-name converter for FpML module names with multiple dashes including version numbers e.g fpml-dividend-swaps-4-7.xsd becomes FpML.V47.Swaps.Dividend but fpml-posttrade-execution-4-7.xsd becomes FpML.V47.PostTrade.Execution",
          "hierarchy": "Text XML HaXml Schema NameConversion",
          "module": "Text.XML.HaXml.Schema.NameConversion",
          "name": "fpml",
          "normalized": "String-\u003eString",
          "package": "HaXml",
          "signature": "String-\u003eString",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-NameConversion.html#v:fpml"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.NameConversion",
          "name": "fpmlNameConverter",
          "package": "HaXml",
          "signature": "NameConverter",
          "source": "src/Text-XML-HaXml-Schema-NameConversion.html#fpmlNameConverter",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema NameConversion",
          "module": "Text.XML.HaXml.Schema.NameConversion",
          "name": "fpmlNameConverter",
          "package": "HaXml",
          "partial": "Name Converter",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-NameConversion.html#v:fpmlNameConverter"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003efor forward type decls\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.NameConversion",
          "name": "fwdconid",
          "package": "HaXml",
          "signature": "XName -\u003e HName",
          "source": "src/Text-XML-HaXml-Schema-NameConversion.html#NameConverter",
          "type": "function"
        },
        "index": {
          "description": "for forward type decls",
          "hierarchy": "Text XML HaXml Schema NameConversion",
          "module": "Text.XML.HaXml.Schema.NameConversion",
          "name": "fwdconid",
          "normalized": "XName-\u003eHName",
          "package": "HaXml",
          "signature": "XName-\u003eHName",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-NameConversion.html#v:fwdconid"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.NameConversion",
          "name": "modid",
          "package": "HaXml",
          "signature": "XName -\u003e HName",
          "source": "src/Text-XML-HaXml-Schema-NameConversion.html#NameConverter",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema NameConversion",
          "module": "Text.XML.HaXml.Schema.NameConversion",
          "name": "modid",
          "normalized": "XName-\u003eHName",
          "package": "HaXml",
          "signature": "XName-\u003eHName",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-NameConversion.html#v:modid"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eA simple default set of rules for resolving XNames into HNames.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.NameConversion",
          "name": "simpleNameConverter",
          "package": "HaXml",
          "signature": "NameConverter",
          "source": "src/Text-XML-HaXml-Schema-NameConversion.html#simpleNameConverter",
          "type": "function"
        },
        "index": {
          "description": "simple default set of rules for resolving XNames into HNames",
          "hierarchy": "Text XML HaXml Schema NameConversion",
          "module": "Text.XML.HaXml.Schema.NameConversion",
          "name": "simpleNameConverter",
          "package": "HaXml",
          "partial": "Name Converter",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-NameConversion.html#v:simpleNameConverter"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.NameConversion",
          "name": "unqconid",
          "package": "HaXml",
          "signature": "XName -\u003e HName",
          "source": "src/Text-XML-HaXml-Schema-NameConversion.html#NameConverter",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema NameConversion",
          "module": "Text.XML.HaXml.Schema.NameConversion",
          "name": "unqconid",
          "normalized": "XName-\u003eHName",
          "package": "HaXml",
          "signature": "XName-\u003eHName",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-NameConversion.html#v:unqconid"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.NameConversion",
          "name": "unqvarid",
          "package": "HaXml",
          "signature": "XName -\u003e HName",
          "source": "src/Text-XML-HaXml-Schema-NameConversion.html#NameConverter",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema NameConversion",
          "module": "Text.XML.HaXml.Schema.NameConversion",
          "name": "unqvarid",
          "normalized": "XName-\u003eHName",
          "package": "HaXml",
          "signature": "XName-\u003eHName",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-NameConversion.html#v:unqvarid"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.NameConversion",
          "name": "varid",
          "package": "HaXml",
          "signature": "XName -\u003e HName",
          "source": "src/Text-XML-HaXml-Schema-NameConversion.html#NameConverter",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema NameConversion",
          "module": "Text.XML.HaXml.Schema.NameConversion",
          "name": "varid",
          "normalized": "XName-\u003eHName",
          "package": "HaXml",
          "signature": "XName-\u003eHName",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-NameConversion.html#v:varid"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eChop a list into segments, at separators identified by the predicate.\n   The separator items are discarded.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.NameConversion",
          "name": "wordsBy",
          "package": "HaXml",
          "signature": "(a -\u003e Bool) -\u003e [a] -\u003e [[a]]",
          "source": "src/Text-XML-HaXml-Schema-NameConversion.html#wordsBy",
          "type": "function"
        },
        "index": {
          "description": "Chop list into segments at separators identified by the predicate The separator items are discarded",
          "hierarchy": "Text XML HaXml Schema NameConversion",
          "module": "Text.XML.HaXml.Schema.NameConversion",
          "name": "wordsBy",
          "normalized": "(a-\u003eBool)-\u003e[a]-\u003e[[a]]",
          "package": "HaXml",
          "partial": "By",
          "signature": "(a-\u003eBool)-\u003e[a]-\u003e[[a]]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-NameConversion.html#v:wordsBy"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "Parse",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-Parse.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema Parse",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "Parse",
          "package": "HaXml",
          "partial": "Parse",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Parse.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eWe need a Parser monad for reading from a sequence of generic XML\n   Contents into specific datatypes that model the structure of XSD\n   descriptions.  This is a specialisation of the polyparse combinators,\n   fixing the input token type.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "XsdParser",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-Parse.html#XsdParser",
          "type": "type"
        },
        "index": {
          "description": "We need Parser monad for reading from sequence of generic XML Contents into specific datatypes that model the structure of XSD descriptions This is specialisation of the polyparse combinators fixing the input token type",
          "hierarchy": "Text XML HaXml Schema Parse",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "XsdParser",
          "package": "HaXml",
          "partial": "Xsd Parser",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Parse.html#t:XsdParser"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eLift boolean \u003ccode\u003e\u003ca\u003eor\u003c/a\u003e\u003c/code\u003e over predicates.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "(|||)",
          "package": "HaXml",
          "signature": "(a -\u003e Bool) -\u003e (a -\u003e Bool) -\u003e a -\u003e Bool",
          "source": "src/Text-XML-HaXml-Schema-Parse.html#%7C%7C%7C",
          "type": "function"
        },
        "index": {
          "description": "Lift boolean or over predicates",
          "hierarchy": "Text XML HaXml Schema Parse",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "(|||) |||",
          "normalized": "(a-\u003eBool)-\u003e(a-\u003eBool)-\u003ea-\u003eBool",
          "package": "HaXml",
          "signature": "(a-\u003eBool)-\u003e(a-\u003eBool)-\u003ea-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Parse.html#v:-124--124--124-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "aFacet",
          "package": "HaXml",
          "signature": "XsdParser Facet",
          "source": "src/Text-XML-HaXml-Schema-Parse.html#aFacet",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema Parse",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "aFacet",
          "package": "HaXml",
          "partial": "Facet",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Parse.html#v:aFacet"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eGrab and parse any and all children of the next element.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "allChildren",
          "package": "HaXml",
          "signature": "XsdParser a -\u003e XsdParser a",
          "source": "src/Text-XML-HaXml-Schema-Parse.html#allChildren",
          "type": "function"
        },
        "index": {
          "description": "Grab and parse any and all children of the next element",
          "hierarchy": "Text XML HaXml Schema Parse",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "allChildren",
          "normalized": "XsdParser a-\u003eXsdParser a",
          "package": "HaXml",
          "partial": "Children",
          "signature": "XsdParser a-\u003eXsdParser a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Parse.html#v:allChildren"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParse a (possibly missing) \u003ca\u003exsd:annotation\u003c/a\u003e element.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "annotation",
          "package": "HaXml",
          "signature": "XsdParser Annotation",
          "source": "src/Text-XML-HaXml-Schema-Parse.html#annotation",
          "type": "function"
        },
        "index": {
          "description": "Parse possibly missing xsd annotation element",
          "hierarchy": "Text XML HaXml Schema Parse",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "annotation",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Parse.html#v:annotation"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParse an \u003ca\u003exsd:anyAttribute\u003c/a\u003e.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "anyAttr",
          "package": "HaXml",
          "signature": "XsdParser AnyAttr",
          "source": "src/Text-XML-HaXml-Schema-Parse.html#anyAttr",
          "type": "function"
        },
        "index": {
          "description": "Parse an xsd anyAttribute",
          "hierarchy": "Text XML HaXml Schema Parse",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "anyAttr",
          "package": "HaXml",
          "partial": "Attr",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Parse.html#v:anyAttr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eGet the next content element, whatever it is.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "anyElement",
          "package": "HaXml",
          "signature": "XsdParser (Element Posn)",
          "source": "src/Text-XML-HaXml-Schema-Parse.html#anyElement",
          "type": "function"
        },
        "index": {
          "description": "Get the next content element whatever it is",
          "hierarchy": "Text XML HaXml Schema Parse",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "anyElement",
          "package": "HaXml",
          "partial": "Element",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Parse.html#v:anyElement"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParse an \u003ca\u003exsd:any\u003c/a\u003e.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "any_",
          "package": "HaXml",
          "signature": "XsdParser Any",
          "source": "src/Text-XML-HaXml-Schema-Parse.html#any_",
          "type": "function"
        },
        "index": {
          "description": "Parse an xsd any",
          "hierarchy": "Text XML HaXml Schema Parse",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "any_",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Parse.html#v:any_"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eCheck for the presence (and value) of an attribute in the given element.\n   Absence results in failure.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "attribute",
          "package": "HaXml",
          "signature": "QName -\u003e TextParser a -\u003e Element Posn -\u003e XsdParser a",
          "source": "src/Text-XML-HaXml-Schema-Parse.html#attribute",
          "type": "function"
        },
        "index": {
          "description": "Check for the presence and value of an attribute in the given element Absence results in failure",
          "hierarchy": "Text XML HaXml Schema Parse",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "attribute",
          "normalized": "QName-\u003eTextParser a-\u003eElement Posn-\u003eXsdParser a",
          "package": "HaXml",
          "signature": "QName-\u003eTextParser a-\u003eElement Posn-\u003eXsdParser a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Parse.html#v:attribute"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParse an \u003ca\u003exsd:attribute\u003c/a\u003e decl.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "attributeDecl",
          "package": "HaXml",
          "signature": "(String -\u003e String -\u003e QName) -\u003e XsdParser AttributeDecl",
          "source": "src/Text-XML-HaXml-Schema-Parse.html#attributeDecl",
          "type": "function"
        },
        "index": {
          "description": "Parse an xsd attribute decl",
          "hierarchy": "Text XML HaXml Schema Parse",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "attributeDecl",
          "normalized": "(String-\u003eString-\u003eQName)-\u003eXsdParser AttributeDecl",
          "package": "HaXml",
          "partial": "Decl",
          "signature": "(String-\u003eString-\u003eQName)-\u003eXsdParser AttributeDecl",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Parse.html#v:attributeDecl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParse an \u003ca\u003exsd:attributegroup\u003c/a\u003e.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "attributeGroup",
          "package": "HaXml",
          "signature": "(String -\u003e String -\u003e QName) -\u003e XsdParser AttrGroup",
          "source": "src/Text-XML-HaXml-Schema-Parse.html#attributeGroup",
          "type": "function"
        },
        "index": {
          "description": "Parse an xsd attributegroup",
          "hierarchy": "Text XML HaXml Schema Parse",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "attributeGroup",
          "normalized": "(String-\u003eString-\u003eQName)-\u003eXsdParser AttrGroup",
          "package": "HaXml",
          "partial": "Group",
          "signature": "(String-\u003eString-\u003eQName)-\u003eXsdParser AttrGroup",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Parse.html#v:attributeGroup"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "block",
          "package": "HaXml",
          "signature": "TextParser Block",
          "source": "src/Text-XML-HaXml-Schema-Parse.html#block",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema Parse",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "block",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Parse.html#v:block"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParse a textual boolean, i.e. \u003ca\u003etrue\u003c/a\u003e, \u003ca\u003efalse\u003c/a\u003e, \u003ca\u003e0\u003c/a\u003e, or \u003ca\u003e1\u003c/a\u003e\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "bool",
          "package": "HaXml",
          "signature": "TextParser Bool",
          "source": "src/Text-XML-HaXml-Schema-Parse.html#bool",
          "type": "function"
        },
        "index": {
          "description": "Parse textual boolean i.e true false or",
          "hierarchy": "Text XML HaXml Schema Parse",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "bool",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Parse.html#v:bool"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParse an \u003ca\u003exsd:all\u003c/a\u003e, \u003ca\u003exsd:choice\u003c/a\u003e, or \u003ca\u003exsd:sequence\u003c/a\u003e decl.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "choiceOrSeq",
          "package": "HaXml",
          "signature": "(String -\u003e String -\u003e QName) -\u003e XsdParser ChoiceOrSeq",
          "source": "src/Text-XML-HaXml-Schema-Parse.html#choiceOrSeq",
          "type": "function"
        },
        "index": {
          "description": "Parse an xsd all xsd choice or xsd sequence decl",
          "hierarchy": "Text XML HaXml Schema Parse",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "choiceOrSeq",
          "normalized": "(String-\u003eString-\u003eQName)-\u003eXsdParser ChoiceOrSeq",
          "package": "HaXml",
          "partial": "Or Seq",
          "signature": "(String-\u003eString-\u003eQName)-\u003eXsdParser ChoiceOrSeq",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Parse.html#v:choiceOrSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParse the alternative contents of a \u003ca\u003exsd:complexType\u003c/a\u003e decl.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "complexItem",
          "package": "HaXml",
          "signature": "(String -\u003e String -\u003e QName) -\u003e XsdParser ComplexItem",
          "source": "src/Text-XML-HaXml-Schema-Parse.html#complexItem",
          "type": "function"
        },
        "index": {
          "description": "Parse the alternative contents of xsd complexType decl",
          "hierarchy": "Text XML HaXml Schema Parse",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "complexItem",
          "normalized": "(String-\u003eString-\u003eQName)-\u003eXsdParser ComplexItem",
          "package": "HaXml",
          "partial": "Item",
          "signature": "(String-\u003eString-\u003eQName)-\u003eXsdParser ComplexItem",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Parse.html#v:complexItem"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParse a \u003ca\u003exsd:complexType\u003c/a\u003e decl.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "complexType",
          "package": "HaXml",
          "signature": "(String -\u003e String -\u003e QName) -\u003e XsdParser ComplexType",
          "source": "src/Text-XML-HaXml-Schema-Parse.html#complexType",
          "type": "function"
        },
        "index": {
          "description": "Parse xsd complexType decl",
          "hierarchy": "Text XML HaXml Schema Parse",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "complexType",
          "normalized": "(String-\u003eString-\u003eQName)-\u003eXsdParser ComplexType",
          "package": "HaXml",
          "partial": "Type",
          "signature": "(String-\u003eString-\u003eQName)-\u003eXsdParser ComplexType",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Parse.html#v:complexType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParse a definitely-occurring \u003ca\u003exsd:annotation\u003c/a\u003e element.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "definiteAnnotation",
          "package": "HaXml",
          "signature": "XsdParser Annotation",
          "source": "src/Text-XML-HaXml-Schema-Parse.html#definiteAnnotation",
          "type": "function"
        },
        "index": {
          "description": "Parse definitely-occurring xsd annotation element",
          "hierarchy": "Text XML HaXml Schema Parse",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "definiteAnnotation",
          "package": "HaXml",
          "partial": "Annotation",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Parse.html#v:definiteAnnotation"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParse an \u003ca\u003exsd:element\u003c/a\u003e decl.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "elementDecl",
          "package": "HaXml",
          "signature": "(String -\u003e String -\u003e QName) -\u003e XsdParser ElementDecl",
          "source": "src/Text-XML-HaXml-Schema-Parse.html#elementDecl",
          "type": "function"
        },
        "index": {
          "description": "Parse an xsd element decl",
          "hierarchy": "Text XML HaXml Schema Parse",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "elementDecl",
          "normalized": "(String-\u003eString-\u003eQName)-\u003eXsdParser ElementDecl",
          "package": "HaXml",
          "partial": "Decl",
          "signature": "(String-\u003eString-\u003eQName)-\u003eXsdParser ElementDecl",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Parse.html#v:elementDecl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParse an \u003ca\u003exsd:element\u003c/a\u003e, \u003ca\u003exsd:group\u003c/a\u003e, \u003ca\u003exsd:all\u003c/a\u003e, \u003ca\u003exsd:choice\u003c/a\u003e,\n   \u003ca\u003exsd:sequence\u003c/a\u003e or \u003ca\u003exsd:any\u003c/a\u003e.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "elementEtc",
          "package": "HaXml",
          "signature": "(String -\u003e String -\u003e QName) -\u003e XsdParser ElementEtc",
          "source": "src/Text-XML-HaXml-Schema-Parse.html#elementEtc",
          "type": "function"
        },
        "index": {
          "description": "Parse an xsd element xsd group xsd all xsd choice xsd sequence or xsd any",
          "hierarchy": "Text XML HaXml Schema Parse",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "elementEtc",
          "normalized": "(String-\u003eString-\u003eQName)-\u003eXsdParser ElementEtc",
          "package": "HaXml",
          "partial": "Etc",
          "signature": "(String-\u003eString-\u003eQName)-\u003eXsdParser ElementEtc",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Parse.html#v:elementEtc"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "facet",
          "package": "HaXml",
          "signature": "String -\u003e FacetType -\u003e XsdParser Facet",
          "source": "src/Text-XML-HaXml-Schema-Parse.html#facet",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema Parse",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "facet",
          "normalized": "String-\u003eFacetType-\u003eXsdParser Facet",
          "package": "HaXml",
          "signature": "String-\u003eFacetType-\u003eXsdParser Facet",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Parse.html#v:facet"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParse a \u003ca\u003exsd:field\u003c/a\u003e.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "field_",
          "package": "HaXml",
          "signature": "XsdParser Field",
          "source": "src/Text-XML-HaXml-Schema-Parse.html#field_",
          "type": "function"
        },
        "index": {
          "description": "Parse xsd field",
          "hierarchy": "Text XML HaXml Schema Parse",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "field_",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Parse.html#v:field_"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParse a Final or Block attribute.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "final",
          "package": "HaXml",
          "signature": "TextParser Final",
          "source": "src/Text-XML-HaXml-Schema-Parse.html#final",
          "type": "function"
        },
        "index": {
          "description": "Parse Final or Block attribute",
          "hierarchy": "Text XML HaXml Schema Parse",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "final",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Parse.html#v:final"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParse a \u003ca\u003exsd:group\u003c/a\u003e decl.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "group_",
          "package": "HaXml",
          "signature": "(String -\u003e String -\u003e QName) -\u003e XsdParser Group",
          "source": "src/Text-XML-HaXml-Schema-Parse.html#group_",
          "type": "function"
        },
        "index": {
          "description": "Parse xsd group decl",
          "hierarchy": "Text XML HaXml Schema Parse",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "group_",
          "normalized": "(String-\u003eString-\u003eQName)-\u003eXsdParser Group",
          "package": "HaXml",
          "signature": "(String-\u003eString-\u003eQName)-\u003eXsdParser Group",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Parse.html#v:group_"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParse an \u003ca\u003exsd:import\u003c/a\u003e.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "import_",
          "package": "HaXml",
          "signature": "XsdParser SchemaItem",
          "source": "src/Text-XML-HaXml-Schema-Parse.html#import_",
          "type": "function"
        },
        "index": {
          "description": "Parse an xsd import",
          "hierarchy": "Text XML HaXml Schema Parse",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "import_",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Parse.html#v:import_"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParse an \u003ca\u003exsd:include\u003c/a\u003e.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "include",
          "package": "HaXml",
          "signature": "XsdParser SchemaItem",
          "source": "src/Text-XML-HaXml-Schema-Parse.html#include",
          "type": "function"
        },
        "index": {
          "description": "Parse an xsd include",
          "hierarchy": "Text XML HaXml Schema Parse",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "include",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Parse.html#v:include"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eRun an XsdParser on the child contents of the given element (i.e. not\n   in the current monadic content sequence), filtering the children\n   before parsing, and checking that the contents are exhausted, before\n   returning the calculated value within the current parser context.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "interiorWith",
          "package": "HaXml",
          "signature": "(Content Posn -\u003e Bool) -\u003e XsdParser a -\u003e Element Posn -\u003e XsdParser a",
          "source": "src/Text-XML-HaXml-Schema-Parse.html#interiorWith",
          "type": "function"
        },
        "index": {
          "description": "Run an XsdParser on the child contents of the given element i.e not in the current monadic content sequence filtering the children before parsing and checking that the contents are exhausted before returning the calculated value within the current parser context",
          "hierarchy": "Text XML HaXml Schema Parse",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "interiorWith",
          "normalized": "(Content Posn-\u003eBool)-\u003eXsdParser a-\u003eElement Posn-\u003eXsdParser a",
          "package": "HaXml",
          "partial": "With",
          "signature": "(Content Posn-\u003eBool)-\u003eXsdParser a-\u003eElement Posn-\u003eXsdParser a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Parse.html#v:interiorWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParse a \u003ca\u003exsd:key\u003c/a\u003e.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "key",
          "package": "HaXml",
          "signature": "XsdParser Key",
          "source": "src/Text-XML-HaXml-Schema-Parse.html#key",
          "type": "function"
        },
        "index": {
          "description": "Parse xsd key",
          "hierarchy": "Text XML HaXml Schema Parse",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "key",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Parse.html#v:key"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParse a \u003ca\u003exsd:keyref\u003c/a\u003e.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "keyRef",
          "package": "HaXml",
          "signature": "(String -\u003e String -\u003e QName) -\u003e XsdParser KeyRef",
          "source": "src/Text-XML-HaXml-Schema-Parse.html#keyRef",
          "type": "function"
        },
        "index": {
          "description": "Parse xsd keyref",
          "hierarchy": "Text XML HaXml Schema Parse",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "keyRef",
          "normalized": "(String-\u003eString-\u003eQName)-\u003eXsdParser KeyRef",
          "package": "HaXml",
          "partial": "Ref",
          "signature": "(String-\u003eString-\u003eQName)-\u003eXsdParser KeyRef",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Parse.html#v:keyRef"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eAn auxiliary you might expect to find in Data.List\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "lookupBy",
          "package": "HaXml",
          "signature": "(a -\u003e Bool) -\u003e [a] -\u003e Maybe a",
          "source": "src/Text-XML-HaXml-Schema-Parse.html#lookupBy",
          "type": "function"
        },
        "index": {
          "description": "An auxiliary you might expect to find in Data.List",
          "hierarchy": "Text XML HaXml Schema Parse",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "lookupBy",
          "normalized": "(a-\u003eBool)-\u003e[a]-\u003eMaybe a",
          "package": "HaXml",
          "partial": "By",
          "signature": "(a-\u003eBool)-\u003e[a]-\u003eMaybe a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Parse.html#v:lookupBy"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003ePredicate for whether an attribute belongs to a given namespace.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "matchNamespace",
          "package": "HaXml",
          "signature": "String -\u003e Attribute -\u003e Bool",
          "source": "src/Text-XML-HaXml-Schema-Parse.html#matchNamespace",
          "type": "function"
        },
        "index": {
          "description": "Predicate for whether an attribute belongs to given namespace",
          "hierarchy": "Text XML HaXml Schema Parse",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "matchNamespace",
          "normalized": "String-\u003eAttribute-\u003eBool",
          "package": "HaXml",
          "partial": "Namespace",
          "signature": "String-\u003eAttribute-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Parse.html#v:matchNamespace"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParse an attribute value that should be a simple Name.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "name",
          "package": "HaXml",
          "signature": "TextParser Name",
          "source": "src/Text-XML-HaXml-Schema-Parse.html#name",
          "type": "function"
        },
        "index": {
          "description": "Parse an attribute value that should be simple Name",
          "hierarchy": "Text XML HaXml Schema Parse",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "name",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Parse.html#v:name"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParse name and type attributes.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "nameAndType",
          "package": "HaXml",
          "signature": "(String -\u003e String -\u003e QName) -\u003e Element Posn -\u003e XsdParser NameAndType",
          "source": "src/Text-XML-HaXml-Schema-Parse.html#nameAndType",
          "type": "function"
        },
        "index": {
          "description": "Parse name and type attributes",
          "hierarchy": "Text XML HaXml Schema Parse",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "nameAndType",
          "normalized": "(String-\u003eString-\u003eQName)-\u003eElement Posn-\u003eXsdParser NameAndType",
          "package": "HaXml",
          "partial": "And Type",
          "signature": "(String-\u003eString-\u003eQName)-\u003eElement Posn-\u003eXsdParser NameAndType",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Parse.html#v:nameAndType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eGrab any attributes that declare a locally-used prefix for a\n   specific namespace.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "namespaceAttrs",
          "package": "HaXml",
          "signature": "Element Posn -\u003e XsdParser [Namespace]",
          "source": "src/Text-XML-HaXml-Schema-Parse.html#namespaceAttrs",
          "type": "function"
        },
        "index": {
          "description": "Grab any attributes that declare locally-used prefix for specific namespace",
          "hierarchy": "Text XML HaXml Schema Parse",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "namespaceAttrs",
          "normalized": "Element Posn-\u003eXsdParser[Namespace]",
          "package": "HaXml",
          "partial": "Attrs",
          "signature": "Element Posn-\u003eXsdParser[Namespace]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Parse.html#v:namespaceAttrs"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParse an occurrence range from attributes of given element.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "occurs",
          "package": "HaXml",
          "signature": "Element Posn -\u003e XsdParser Occurs",
          "source": "src/Text-XML-HaXml-Schema-Parse.html#occurs",
          "type": "function"
        },
        "index": {
          "description": "Parse an occurrence range from attributes of given element",
          "hierarchy": "Text XML HaXml Schema Parse",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "occurs",
          "normalized": "Element Posn-\u003eXsdParser Occurs",
          "package": "HaXml",
          "signature": "Element Posn-\u003eXsdParser Occurs",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Parse.html#v:occurs"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParse a particle decl.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "particle",
          "package": "HaXml",
          "signature": "(String -\u003e String -\u003e QName) -\u003e XsdParser Particle",
          "source": "src/Text-XML-HaXml-Schema-Parse.html#particle",
          "type": "function"
        },
        "index": {
          "description": "Parse particle decl",
          "hierarchy": "Text XML HaXml Schema Parse",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "particle",
          "normalized": "(String-\u003eString-\u003eQName)-\u003eXsdParser Particle",
          "package": "HaXml",
          "signature": "(String-\u003eString-\u003eQName)-\u003eXsdParser Particle",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Parse.html#v:particle"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParse a particle decl with optional attributes.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "particleAttrs",
          "package": "HaXml",
          "signature": "(String -\u003e String -\u003e QName) -\u003e XsdParser ParticleAttrs",
          "source": "src/Text-XML-HaXml-Schema-Parse.html#particleAttrs",
          "type": "function"
        },
        "index": {
          "description": "Parse particle decl with optional attributes",
          "hierarchy": "Text XML HaXml Schema Parse",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "particleAttrs",
          "normalized": "(String-\u003eString-\u003eQName)-\u003eXsdParser ParticleAttrs",
          "package": "HaXml",
          "partial": "Attrs",
          "signature": "(String-\u003eString-\u003eQName)-\u003eXsdParser ParticleAttrs",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Parse.html#v:particleAttrs"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eGet the next content element, checking that it matches some criterion\n   given by the predicate.\n   (Skips over comments and whitespace, rejects text and refs.\n    Also returns position of element.)\n   The list of strings argument is for error reporting - it usually\n   represents a list of expected tags.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "posnElementWith",
          "package": "HaXml",
          "signature": "(Content Posn -\u003e Bool) -\u003e [String] -\u003e XsdParser (Posn, Element Posn)",
          "source": "src/Text-XML-HaXml-Schema-Parse.html#posnElementWith",
          "type": "function"
        },
        "index": {
          "description": "Get the next content element checking that it matches some criterion given by the predicate Skips over comments and whitespace rejects text and refs Also returns position of element The list of strings argument is for error reporting it usually represents list of expected tags",
          "hierarchy": "Text XML HaXml Schema Parse",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "posnElementWith",
          "normalized": "(Content Posn-\u003eBool)-\u003e[String]-\u003eXsdParser(Posn,Element Posn)",
          "package": "HaXml",
          "partial": "Element With",
          "signature": "(Content Posn-\u003eBool)-\u003e[String]-\u003eXsdParser(Posn,Element Posn)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Parse.html#v:posnElementWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParse a \u003ca\u003eprocessContents\u003c/a\u003e attribute, i.e. \u003ca\u003eskip\u003c/a\u003e, \u003ca\u003elax\u003c/a\u003e, or \u003ca\u003estrict\u003c/a\u003e.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "processContents",
          "package": "HaXml",
          "signature": "TextParser ProcessContents",
          "source": "src/Text-XML-HaXml-Schema-Parse.html#processContents",
          "type": "function"
        },
        "index": {
          "description": "Parse processContents attribute i.e skip lax or strict",
          "hierarchy": "Text XML HaXml Schema Parse",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "processContents",
          "package": "HaXml",
          "partial": "Contents",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Parse.html#v:processContents"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParse a FormDefault attribute.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "qform",
          "package": "HaXml",
          "signature": "TextParser QForm",
          "source": "src/Text-XML-HaXml-Schema-Parse.html#qform",
          "type": "function"
        },
        "index": {
          "description": "Parse FormDefault attribute",
          "hierarchy": "Text XML HaXml Schema Parse",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "qform",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Parse.html#v:qform"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParse an attribute value that should be a QName.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "qname",
          "package": "HaXml",
          "signature": "(String -\u003e String -\u003e QName) -\u003e TextParser QName",
          "source": "src/Text-XML-HaXml-Schema-Parse.html#qname",
          "type": "function"
        },
        "index": {
          "description": "Parse an attribute value that should be QName",
          "hierarchy": "Text XML HaXml Schema Parse",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "qname",
          "normalized": "(String-\u003eString-\u003eQName)-\u003eTextParser QName",
          "package": "HaXml",
          "signature": "(String-\u003eString-\u003eQName)-\u003eTextParser QName",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Parse.html#v:qname"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eTurn a qualified attribute value (two strings) into a qualified name\n   (QName), but excluding the case where the namespace prefix corresponds\n   to the targetNamespace of the current schema document.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "qual",
          "package": "HaXml",
          "signature": "Maybe TargetNamespace -\u003e [Namespace] -\u003e String -\u003e String -\u003e QName",
          "source": "src/Text-XML-HaXml-Schema-Parse.html#qual",
          "type": "function"
        },
        "index": {
          "description": "Turn qualified attribute value two strings into qualified name QName but excluding the case where the namespace prefix corresponds to the targetNamespace of the current schema document",
          "hierarchy": "Text XML HaXml Schema Parse",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "qual",
          "normalized": "Maybe TargetNamespace-\u003e[Namespace]-\u003eString-\u003eString-\u003eQName",
          "package": "HaXml",
          "signature": "Maybe TargetNamespace-\u003e[Namespace]-\u003eString-\u003eString-\u003eQName",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Parse.html#v:qual"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParse a \u003ca\u003exsd:redefine\u003c/a\u003e.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "redefine",
          "package": "HaXml",
          "signature": "(String -\u003e String -\u003e QName) -\u003e XsdParser SchemaItem",
          "source": "src/Text-XML-HaXml-Schema-Parse.html#redefine",
          "type": "function"
        },
        "index": {
          "description": "Parse xsd redefine",
          "hierarchy": "Text XML HaXml Schema Parse",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "redefine",
          "normalized": "(String-\u003eString-\u003eQName)-\u003eXsdParser SchemaItem",
          "package": "HaXml",
          "signature": "(String-\u003eString-\u003eQName)-\u003eXsdParser SchemaItem",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Parse.html#v:redefine"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParse a Schema declaration\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "schema",
          "package": "HaXml",
          "signature": "Parser (Content Posn) Schema",
          "source": "src/Text-XML-HaXml-Schema-Parse.html#schema",
          "type": "function"
        },
        "index": {
          "description": "Parse Schema declaration",
          "hierarchy": "Text XML HaXml Schema Parse",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "schema",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Parse.html#v:schema"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParse a schema item (just under the toplevel \u003ca\u003exsd:schema\u003c/a\u003e)\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "schemaItem",
          "package": "HaXml",
          "signature": "(String -\u003e String -\u003e QName) -\u003e XsdParser SchemaItem",
          "source": "src/Text-XML-HaXml-Schema-Parse.html#schemaItem",
          "type": "function"
        },
        "index": {
          "description": "Parse schema item just under the toplevel xsd schema",
          "hierarchy": "Text XML HaXml Schema Parse",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "schemaItem",
          "normalized": "(String-\u003eString-\u003eQName)-\u003eXsdParser SchemaItem",
          "package": "HaXml",
          "partial": "Item",
          "signature": "(String-\u003eString-\u003eQName)-\u003eXsdParser SchemaItem",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Parse.html#v:schemaItem"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParse a \u003ca\u003exsd:selector\u003c/a\u003e.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "selector",
          "package": "HaXml",
          "signature": "XsdParser Selector",
          "source": "src/Text-XML-HaXml-Schema-Parse.html#selector",
          "type": "function"
        },
        "index": {
          "description": "Parse xsd selector",
          "hierarchy": "Text XML HaXml Schema Parse",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "selector",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Parse.html#v:selector"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParse a \u003ca\u003exsd:simpleType\u003c/a\u003e decl.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "simpleType",
          "package": "HaXml",
          "signature": "(String -\u003e String -\u003e QName) -\u003e XsdParser SimpleType",
          "source": "src/Text-XML-HaXml-Schema-Parse.html#simpleType",
          "type": "function"
        },
        "index": {
          "description": "Parse xsd simpleType decl",
          "hierarchy": "Text XML HaXml Schema Parse",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "simpleType",
          "normalized": "(String-\u003eString-\u003eQName)-\u003eXsdParser SimpleType",
          "package": "HaXml",
          "partial": "Type",
          "signature": "(String-\u003eString-\u003eQName)-\u003eXsdParser SimpleType",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Parse.html#v:simpleType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eText parser for an arbitrary string consisting of possibly multiple tokens.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "string",
          "package": "HaXml",
          "signature": "TextParser String",
          "source": "src/Text-XML-HaXml-Schema-Parse.html#string",
          "type": "function"
        },
        "index": {
          "description": "Text parser for an arbitrary string consisting of possibly multiple tokens",
          "hierarchy": "Text XML HaXml Schema Parse",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "string",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Parse.html#v:string"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eGiven a URI for a targetNamespace, and a list of Namespaces, tell\n   me the prefix corresponding to the targetNamespace.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "targetPrefix",
          "package": "HaXml",
          "signature": "Maybe TargetNamespace -\u003e [Namespace] -\u003e Maybe String",
          "source": "src/Text-XML-HaXml-Schema-Parse.html#targetPrefix",
          "type": "function"
        },
        "index": {
          "description": "Given URI for targetNamespace and list of Namespaces tell me the prefix corresponding to the targetNamespace",
          "hierarchy": "Text XML HaXml Schema Parse",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "targetPrefix",
          "normalized": "Maybe TargetNamespace-\u003e[Namespace]-\u003eMaybe String",
          "package": "HaXml",
          "partial": "Prefix",
          "signature": "Maybe TargetNamespace-\u003e[Namespace]-\u003eMaybe String",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Parse.html#v:targetPrefix"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eTidy up the parsing context.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "tidy",
          "package": "HaXml",
          "signature": "t -\u003e Result x a -\u003e Result t a",
          "source": "src/Text-XML-HaXml-Schema-Parse.html#tidy",
          "type": "function"
        },
        "index": {
          "description": "Tidy up the parsing context",
          "hierarchy": "Text XML HaXml Schema Parse",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "tidy",
          "normalized": "a-\u003eResult b c-\u003eResult a c",
          "package": "HaXml",
          "signature": "t-\u003eResult x a-\u003eResult t a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Parse.html#v:tidy"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParse a \u003ca\u003exsd:unique\u003c/a\u003e.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "unique",
          "package": "HaXml",
          "signature": "XsdParser Unique",
          "source": "src/Text-XML-HaXml-Schema-Parse.html#unique",
          "type": "function"
        },
        "index": {
          "description": "Parse xsd unique",
          "hierarchy": "Text XML HaXml Schema Parse",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "unique",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Parse.html#v:unique"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParse a \u003ca\u003exsd:unique\u003c/a\u003e, \u003ca\u003exsd:key\u003c/a\u003e, or \u003ca\u003exsd:keyref\u003c/a\u003e.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "uniqueKeyOrKeyRef",
          "package": "HaXml",
          "signature": "(String -\u003e String -\u003e QName) -\u003e XsdParser UniqueKeyOrKeyRef",
          "source": "src/Text-XML-HaXml-Schema-Parse.html#uniqueKeyOrKeyRef",
          "type": "function"
        },
        "index": {
          "description": "Parse xsd unique xsd key or xsd keyref",
          "hierarchy": "Text XML HaXml Schema Parse",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "uniqueKeyOrKeyRef",
          "normalized": "(String-\u003eString-\u003eQName)-\u003eXsdParser UniqueKeyOrKeyRef",
          "package": "HaXml",
          "partial": "Key Or Key Ref",
          "signature": "(String-\u003eString-\u003eQName)-\u003eXsdParser UniqueKeyOrKeyRef",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Parse.html#v:uniqueKeyOrKeyRef"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eText parser for a URI (very simple, non-validating, probably incorrect).\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "uri",
          "package": "HaXml",
          "signature": "TextParser String",
          "source": "src/Text-XML-HaXml-Schema-Parse.html#uri",
          "type": "function"
        },
        "index": {
          "description": "Text parser for URI very simple non-validating probably incorrect",
          "hierarchy": "Text XML HaXml Schema Parse",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "uri",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Parse.html#v:uri"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParse a \u003ca\u003euse\u003c/a\u003e attribute value, i.e. \u003ca\u003erequired\u003c/a\u003e, \u003ca\u003eoptional\u003c/a\u003e, or \u003ca\u003eprohibited\u003c/a\u003e\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "use",
          "package": "HaXml",
          "signature": "TextParser Use",
          "source": "src/Text-XML-HaXml-Schema-Parse.html#use",
          "type": "function"
        },
        "index": {
          "description": "Parse use attribute value i.e required optional or prohibited",
          "hierarchy": "Text XML HaXml Schema Parse",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "use",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Parse.html#v:use"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eQualify an ordinary name with the XSD namespace.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "xsd",
          "package": "HaXml",
          "signature": "Name -\u003e QName",
          "source": "src/Text-XML-HaXml-Schema-Parse.html#xsd",
          "type": "function"
        },
        "index": {
          "description": "Qualify an ordinary name with the XSD namespace",
          "hierarchy": "Text XML HaXml Schema Parse",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "xsd",
          "normalized": "Name-\u003eQName",
          "package": "HaXml",
          "signature": "Name-\u003eQName",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Parse.html#v:xsd"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eGet the next content element, checking that it has the required tag\n   belonging to the XSD namespace.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "xsdElement",
          "package": "HaXml",
          "signature": "Name -\u003e XsdParser (Element Posn)",
          "source": "src/Text-XML-HaXml-Schema-Parse.html#xsdElement",
          "type": "function"
        },
        "index": {
          "description": "Get the next content element checking that it has the required tag belonging to the XSD namespace",
          "hierarchy": "Text XML HaXml Schema Parse",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "xsdElement",
          "normalized": "Name-\u003eXsdParser(Element Posn)",
          "package": "HaXml",
          "partial": "Element",
          "signature": "Name-\u003eXsdParser(Element Posn)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Parse.html#v:xsdElement"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003ePredicate for comparing against an XSD-qualified name.  (Also accepts\n   unqualified names, but this is probably a bit too lax.  Doing it right\n   would require checking to see whether the current schema module's default\n   namespace is XSD or not.)\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "xsdTag",
          "package": "HaXml",
          "signature": "String -\u003e Content Posn -\u003e Bool",
          "source": "src/Text-XML-HaXml-Schema-Parse.html#xsdTag",
          "type": "function"
        },
        "index": {
          "description": "Predicate for comparing against an XSD-qualified name Also accepts unqualified names but this is probably bit too lax Doing it right would require checking to see whether the current schema module default namespace is XSD or not",
          "hierarchy": "Text XML HaXml Schema Parse",
          "module": "Text.XML.HaXml.Schema.Parse",
          "name": "xsdTag",
          "normalized": "String-\u003eContent Posn-\u003eBool",
          "package": "HaXml",
          "partial": "Tag",
          "signature": "String-\u003eContent Posn-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Parse.html#v:xsdTag"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cdiv class=\"doc\"\u003e\u003cp\u003ePretty-print the internal Haskell model of XSD datatypes to a real\n   Haskell module containing type declarations, and instances for parsing\n   (and printing - though not yet implemented) values of those datatypes\n   from(/to) XML.\n\u003c/p\u003e\u003c/div\u003e",
          "module": "Text.XML.HaXml.Schema.PrettyHaskell",
          "name": "PrettyHaskell",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-PrettyHaskell.html",
          "type": "module"
        },
        "index": {
          "description": "Pretty-print the internal Haskell model of XSD datatypes to real Haskell module containing type declarations and instances for parsing and printing though not yet implemented values of those datatypes from to XML",
          "hierarchy": "Text XML HaXml Schema PrettyHaskell",
          "module": "Text.XML.HaXml.Schema.PrettyHaskell",
          "name": "PrettyHaskell",
          "package": "HaXml",
          "partial": "Pretty Haskell",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrettyHaskell.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eGenerate aligned haddock-style documentation.\n   (but without escapes in comment text yet)\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.PrettyHaskell",
          "name": "ppComment",
          "package": "HaXml",
          "signature": "CommentPosition -\u003e Comment -\u003e Doc",
          "source": "src/Text-XML-HaXml-Schema-PrettyHaskell.html#ppComment",
          "type": "function"
        },
        "index": {
          "description": "Generate aligned haddock-style documentation but without escapes in comment text yet",
          "hierarchy": "Text XML HaXml Schema PrettyHaskell",
          "module": "Text.XML.HaXml.Schema.PrettyHaskell",
          "name": "ppComment",
          "normalized": "CommentPosition-\u003eComment-\u003eDoc",
          "package": "HaXml",
          "partial": "Comment",
          "signature": "CommentPosition-\u003eComment-\u003eDoc",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrettyHaskell.html#v:ppComment"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eConvert a single Haskell Decl into Haskell source text.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.PrettyHaskell",
          "name": "ppHighLevelDecl",
          "package": "HaXml",
          "signature": "NameConverter -\u003e Decl -\u003e Doc",
          "source": "src/Text-XML-HaXml-Schema-PrettyHaskell.html#ppHighLevelDecl",
          "type": "function"
        },
        "index": {
          "description": "Convert single Haskell Decl into Haskell source text",
          "hierarchy": "Text XML HaXml Schema PrettyHaskell",
          "module": "Text.XML.HaXml.Schema.PrettyHaskell",
          "name": "ppHighLevelDecl",
          "normalized": "NameConverter-\u003eDecl-\u003eDoc",
          "package": "HaXml",
          "partial": "High Level Decl",
          "signature": "NameConverter-\u003eDecl-\u003eDoc",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrettyHaskell.html#v:ppHighLevelDecl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eConvert multiple HaskellTypeModel Decls to Haskell source text.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.PrettyHaskell",
          "name": "ppHighLevelDecls",
          "package": "HaXml",
          "signature": "NameConverter -\u003e [Decl] -\u003e Doc",
          "source": "src/Text-XML-HaXml-Schema-PrettyHaskell.html#ppHighLevelDecls",
          "type": "function"
        },
        "index": {
          "description": "Convert multiple HaskellTypeModel Decls to Haskell source text",
          "hierarchy": "Text XML HaXml Schema PrettyHaskell",
          "module": "Text.XML.HaXml.Schema.PrettyHaskell",
          "name": "ppHighLevelDecls",
          "normalized": "NameConverter-\u003e[Decl]-\u003eDoc",
          "package": "HaXml",
          "partial": "High Level Decls",
          "signature": "NameConverter-\u003e[Decl]-\u003eDoc",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrettyHaskell.html#v:ppHighLevelDecls"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eConvert a whole document from HaskellTypeModel to Haskell source text.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.PrettyHaskell",
          "name": "ppModule",
          "package": "HaXml",
          "signature": "NameConverter -\u003e Module -\u003e Doc",
          "source": "src/Text-XML-HaXml-Schema-PrettyHaskell.html#ppModule",
          "type": "function"
        },
        "index": {
          "description": "Convert whole document from HaskellTypeModel to Haskell source text",
          "hierarchy": "Text XML HaXml Schema PrettyHaskell",
          "module": "Text.XML.HaXml.Schema.PrettyHaskell",
          "name": "ppModule",
          "normalized": "NameConverter-\u003eModule-\u003eDoc",
          "package": "HaXml",
          "partial": "Module",
          "signature": "NameConverter-\u003eModule-\u003eDoc",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrettyHaskell.html#v:ppModule"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eVertically pretty-print a list of things, with open and close brackets,\n   and separators.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.PrettyHaskell",
          "name": "ppvList",
          "package": "HaXml",
          "signature": "String -\u003e String -\u003e String -\u003e (a -\u003e Doc) -\u003e [a] -\u003e Doc",
          "source": "src/Text-XML-HaXml-Schema-PrettyHaskell.html#ppvList",
          "type": "function"
        },
        "index": {
          "description": "Vertically pretty-print list of things with open and close brackets and separators",
          "hierarchy": "Text XML HaXml Schema PrettyHaskell",
          "module": "Text.XML.HaXml.Schema.PrettyHaskell",
          "name": "ppvList",
          "normalized": "String-\u003eString-\u003eString-\u003e(a-\u003eDoc)-\u003e[a]-\u003eDoc",
          "package": "HaXml",
          "partial": "List",
          "signature": "String-\u003eString-\u003eString-\u003e(a-\u003eDoc)-\u003e[a]-\u003eDoc",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrettyHaskell.html#v:ppvList"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cdiv class=\"doc\"\u003e\u003cp\u003ePretty-print the internal Haskell model of XSD datatypes to a\n   Haskell hs-boot module containing only stub type declarations.\n   This approach is intended to work around issues of mutually recursive\n   datatype definitions.\n\u003c/p\u003e\u003c/div\u003e",
          "module": "Text.XML.HaXml.Schema.PrettyHsBoot",
          "name": "PrettyHsBoot",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-PrettyHsBoot.html",
          "type": "module"
        },
        "index": {
          "description": "Pretty-print the internal Haskell model of XSD datatypes to Haskell hs-boot module containing only stub type declarations This approach is intended to work around issues of mutually recursive datatype definitions",
          "hierarchy": "Text XML HaXml Schema PrettyHsBoot",
          "module": "Text.XML.HaXml.Schema.PrettyHsBoot",
          "name": "PrettyHsBoot",
          "package": "HaXml",
          "partial": "Pretty Hs Boot",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrettyHsBoot.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eGenerate aligned haddock-style documentation.\n   (but without escapes in comment text yet)\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.PrettyHsBoot",
          "name": "ppComment",
          "package": "HaXml",
          "signature": "CommentPosition -\u003e Comment -\u003e Doc",
          "source": "src/Text-XML-HaXml-Schema-PrettyHsBoot.html#ppComment",
          "type": "function"
        },
        "index": {
          "description": "Generate aligned haddock-style documentation but without escapes in comment text yet",
          "hierarchy": "Text XML HaXml Schema PrettyHsBoot",
          "module": "Text.XML.HaXml.Schema.PrettyHsBoot",
          "name": "ppComment",
          "normalized": "CommentPosition-\u003eComment-\u003eDoc",
          "package": "HaXml",
          "partial": "Comment",
          "signature": "CommentPosition-\u003eComment-\u003eDoc",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrettyHsBoot.html#v:ppComment"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eConvert a single Haskell Decl into Haskell source text.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.PrettyHsBoot",
          "name": "ppHighLevelDecl",
          "package": "HaXml",
          "signature": "NameConverter -\u003e Decl -\u003e Doc",
          "source": "src/Text-XML-HaXml-Schema-PrettyHsBoot.html#ppHighLevelDecl",
          "type": "function"
        },
        "index": {
          "description": "Convert single Haskell Decl into Haskell source text",
          "hierarchy": "Text XML HaXml Schema PrettyHsBoot",
          "module": "Text.XML.HaXml.Schema.PrettyHsBoot",
          "name": "ppHighLevelDecl",
          "normalized": "NameConverter-\u003eDecl-\u003eDoc",
          "package": "HaXml",
          "partial": "High Level Decl",
          "signature": "NameConverter-\u003eDecl-\u003eDoc",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrettyHsBoot.html#v:ppHighLevelDecl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eConvert multiple HaskellTypeModel Decls to Haskell source text.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.PrettyHsBoot",
          "name": "ppHighLevelDecls",
          "package": "HaXml",
          "signature": "NameConverter -\u003e [Decl] -\u003e Doc",
          "source": "src/Text-XML-HaXml-Schema-PrettyHsBoot.html#ppHighLevelDecls",
          "type": "function"
        },
        "index": {
          "description": "Convert multiple HaskellTypeModel Decls to Haskell source text",
          "hierarchy": "Text XML HaXml Schema PrettyHsBoot",
          "module": "Text.XML.HaXml.Schema.PrettyHsBoot",
          "name": "ppHighLevelDecls",
          "normalized": "NameConverter-\u003e[Decl]-\u003eDoc",
          "package": "HaXml",
          "partial": "High Level Decls",
          "signature": "NameConverter-\u003e[Decl]-\u003eDoc",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrettyHsBoot.html#v:ppHighLevelDecls"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eConvert a whole document from HaskellTypeModel to Haskell source text.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.PrettyHsBoot",
          "name": "ppModule",
          "package": "HaXml",
          "signature": "NameConverter -\u003e Module -\u003e Doc",
          "source": "src/Text-XML-HaXml-Schema-PrettyHsBoot.html#ppModule",
          "type": "function"
        },
        "index": {
          "description": "Convert whole document from HaskellTypeModel to Haskell source text",
          "hierarchy": "Text XML HaXml Schema PrettyHsBoot",
          "module": "Text.XML.HaXml.Schema.PrettyHsBoot",
          "name": "ppModule",
          "normalized": "NameConverter-\u003eModule-\u003eDoc",
          "package": "HaXml",
          "partial": "Module",
          "signature": "NameConverter-\u003eModule-\u003eDoc",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrettyHsBoot.html#v:ppModule"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eVertically pretty-print a list of things, with open and close brackets,\n   and separators.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.PrettyHsBoot",
          "name": "ppvList",
          "package": "HaXml",
          "signature": "String -\u003e String -\u003e String -\u003e (a -\u003e Doc) -\u003e [a] -\u003e Doc",
          "source": "src/Text-XML-HaXml-Schema-PrettyHsBoot.html#ppvList",
          "type": "function"
        },
        "index": {
          "description": "Vertically pretty-print list of things with open and close brackets and separators",
          "hierarchy": "Text XML HaXml Schema PrettyHsBoot",
          "module": "Text.XML.HaXml.Schema.PrettyHsBoot",
          "name": "ppvList",
          "normalized": "String-\u003eString-\u003eString-\u003e(a-\u003eDoc)-\u003e[a]-\u003eDoc",
          "package": "HaXml",
          "partial": "List",
          "signature": "String-\u003eString-\u003eString-\u003e(a-\u003eDoc)-\u003e[a]-\u003eDoc",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrettyHsBoot.html#v:ppvList"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "PrimitiveTypes",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "PrimitiveTypes",
          "package": "HaXml",
          "partial": "Primitive Types",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "AnyURI",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#AnyURI",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "AnyURI",
          "package": "HaXml",
          "partial": "Any URI",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#t:AnyURI"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "Base64Binary",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#Base64Binary",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "Base64Binary",
          "package": "HaXml",
          "partial": "Base Binary",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#t:Base64Binary"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "Boolean",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#Boolean",
          "type": "type"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "Boolean",
          "package": "HaXml",
          "partial": "Boolean",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#t:Boolean"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "Byte",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#Byte",
          "type": "newtype"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "Byte",
          "package": "HaXml",
          "partial": "Byte",
          "type": "newtype"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#t:Byte"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "Date",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#Date",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "Date",
          "package": "HaXml",
          "partial": "Date",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#t:Date"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "DateTime",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#DateTime",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "DateTime",
          "package": "HaXml",
          "partial": "Date Time",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#t:DateTime"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "Decimal",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#Decimal",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "Decimal",
          "package": "HaXml",
          "partial": "Decimal",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#t:Decimal"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eDouble-precision floating point numbers.\n It is desirable that this type be at least equal in range and precision\n to the IEEE double-precision type.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "Double",
          "package": "HaXml",
          "type": "data"
        },
        "index": {
          "description": "Double-precision floating point numbers It is desirable that this type be at least equal in range and precision to the IEEE double-precision type",
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "Double",
          "package": "HaXml",
          "partial": "Double",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#t:Double"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "Duration",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#Duration",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "Duration",
          "package": "HaXml",
          "partial": "Duration",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#t:Duration"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "ENTITIES",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#ENTITIES",
          "type": "newtype"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "ENTITIES",
          "package": "HaXml",
          "partial": "ENTITIES",
          "type": "newtype"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#t:ENTITIES"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "ENTITY",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#ENTITY",
          "type": "newtype"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "ENTITY",
          "package": "HaXml",
          "partial": "ENTITY",
          "type": "newtype"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#t:ENTITY"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eSingle-precision floating point numbers.\n It is desirable that this type be at least equal in range and precision\n to the IEEE single-precision type.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "Float",
          "package": "HaXml",
          "type": "data"
        },
        "index": {
          "description": "Single-precision floating point numbers It is desirable that this type be at least equal in range and precision to the IEEE single-precision type",
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "Float",
          "package": "HaXml",
          "partial": "Float",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#t:Float"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "GDay",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#GDay",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "GDay",
          "package": "HaXml",
          "partial": "GDay",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#t:GDay"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "GMonth",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#GMonth",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "GMonth",
          "package": "HaXml",
          "partial": "GMonth",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#t:GMonth"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "GMonthDay",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#GMonthDay",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "GMonthDay",
          "package": "HaXml",
          "partial": "GMonth Day",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#t:GMonthDay"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "GYear",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#GYear",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "GYear",
          "package": "HaXml",
          "partial": "GYear",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#t:GYear"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "GYearMonth",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#GYearMonth",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "GYearMonth",
          "package": "HaXml",
          "partial": "GYear Month",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#t:GYearMonth"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "HexBinary",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#HexBinary",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "HexBinary",
          "package": "HaXml",
          "partial": "Hex Binary",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#t:HexBinary"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "ID",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#ID",
          "type": "newtype"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "ID",
          "package": "HaXml",
          "partial": "ID",
          "type": "newtype"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#t:ID"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "IDREF",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#IDREF",
          "type": "newtype"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "IDREF",
          "package": "HaXml",
          "partial": "IDREF",
          "type": "newtype"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#t:IDREF"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "IDREFS",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#IDREFS",
          "type": "newtype"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "IDREFS",
          "package": "HaXml",
          "partial": "IDREFS",
          "type": "newtype"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#t:IDREFS"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eA fixed-precision integer type with at least the range \u003ccode\u003e[-2^29 .. 2^29-1]\u003c/code\u003e.\n The exact range for a given implementation can be determined by using\n \u003ccode\u003e\u003ca\u003eminBound\u003c/a\u003e\u003c/code\u003e and \u003ccode\u003e\u003ca\u003emaxBound\u003c/a\u003e\u003c/code\u003e from the \u003ccode\u003e\u003ca\u003eBounded\u003c/a\u003e\u003c/code\u003e class.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "Int",
          "package": "HaXml",
          "type": "data"
        },
        "index": {
          "description": "fixed-precision integer type with at least the range The exact range for given implementation can be determined by using minBound and maxBound from the Bounded class",
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "Int",
          "package": "HaXml",
          "partial": "Int",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#t:Int"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eArbitrary-precision integers.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "Integer",
          "package": "HaXml",
          "type": "data"
        },
        "index": {
          "description": "Arbitrary-precision integers",
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "Integer",
          "package": "HaXml",
          "partial": "Integer",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#t:Integer"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "Language",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#Language",
          "type": "newtype"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "Language",
          "package": "HaXml",
          "partial": "Language",
          "type": "newtype"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#t:Language"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "Long",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#Long",
          "type": "newtype"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "Long",
          "package": "HaXml",
          "partial": "Long",
          "type": "newtype"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#t:Long"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "NCName",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#NCName",
          "type": "newtype"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "NCName",
          "package": "HaXml",
          "partial": "NCName",
          "type": "newtype"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#t:NCName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "NMTOKEN",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#NMTOKEN",
          "type": "newtype"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "NMTOKEN",
          "package": "HaXml",
          "partial": "NMTOKEN",
          "type": "newtype"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#t:NMTOKEN"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "NMTOKENS",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#NMTOKENS",
          "type": "newtype"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "NMTOKENS",
          "package": "HaXml",
          "partial": "NMTOKENS",
          "type": "newtype"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#t:NMTOKENS"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "NOTATION",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#NOTATION",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "NOTATION",
          "package": "HaXml",
          "partial": "NOTATION",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#t:NOTATION"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "Name",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#Name",
          "type": "newtype"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "Name",
          "package": "HaXml",
          "partial": "Name",
          "type": "newtype"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#t:Name"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "NegativeInteger",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#NegativeInteger",
          "type": "newtype"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "NegativeInteger",
          "package": "HaXml",
          "partial": "Negative Integer",
          "type": "newtype"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#t:NegativeInteger"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "NonNegativeInteger",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#NonNegativeInteger",
          "type": "newtype"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "NonNegativeInteger",
          "package": "HaXml",
          "partial": "Non Negative Integer",
          "type": "newtype"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#t:NonNegativeInteger"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "NonPositiveInteger",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#NonPositiveInteger",
          "type": "newtype"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "NonPositiveInteger",
          "package": "HaXml",
          "partial": "Non Positive Integer",
          "type": "newtype"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#t:NonPositiveInteger"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "NormalizedString",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#NormalizedString",
          "type": "newtype"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "NormalizedString",
          "package": "HaXml",
          "partial": "Normalized String",
          "type": "newtype"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#t:NormalizedString"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "PositiveInteger",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#PositiveInteger",
          "type": "newtype"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "PositiveInteger",
          "package": "HaXml",
          "partial": "Positive Integer",
          "type": "newtype"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#t:PositiveInteger"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eA QName is a (possibly) qualified name, in the sense of XML namespaces.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "QName",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#QName",
          "type": "data"
        },
        "index": {
          "description": "QName is possibly qualified name in the sense of XML namespaces",
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "QName",
          "package": "HaXml",
          "partial": "QName",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#t:QName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "Short",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#Short",
          "type": "newtype"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "Short",
          "package": "HaXml",
          "partial": "Short",
          "type": "newtype"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#t:Short"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eUltimately, an XML parser will find some plain text as the content\n   of a simpleType, which will need to be parsed.  We use a TextParser,\n   because values of simpleTypes can also be given elsewhere, e.g. as\n   attribute values in an XSD definition, e.g. to restrict the permissible\n   values of the simpleType.  Such restrictions are therefore implemented\n   as layered parsers.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "SimpleType",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#SimpleType",
          "type": "class"
        },
        "index": {
          "description": "Ultimately an XML parser will find some plain text as the content of simpleType which will need to be parsed We use TextParser because values of simpleTypes can also be given elsewhere e.g as attribute values in an XSD definition e.g to restrict the permissible values of the simpleType Such restrictions are therefore implemented as layered parsers",
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "SimpleType",
          "package": "HaXml",
          "partial": "Simple Type",
          "type": "class"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#t:SimpleType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "Time",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#Time",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "Time",
          "package": "HaXml",
          "partial": "Time",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#t:Time"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "Token",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#Token",
          "type": "newtype"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "Token",
          "package": "HaXml",
          "partial": "Token",
          "type": "newtype"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#t:Token"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "UnsignedByte",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#UnsignedByte",
          "type": "newtype"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "UnsignedByte",
          "package": "HaXml",
          "partial": "Unsigned Byte",
          "type": "newtype"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#t:UnsignedByte"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "UnsignedInt",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#UnsignedInt",
          "type": "newtype"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "UnsignedInt",
          "package": "HaXml",
          "partial": "Unsigned Int",
          "type": "newtype"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#t:UnsignedInt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "UnsignedLong",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#UnsignedLong",
          "type": "newtype"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "UnsignedLong",
          "package": "HaXml",
          "partial": "Unsigned Long",
          "type": "newtype"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#t:UnsignedLong"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "UnsignedShort",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#UnsignedShort",
          "type": "newtype"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "UnsignedShort",
          "package": "HaXml",
          "partial": "Unsigned Short",
          "type": "newtype"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#t:UnsignedShort"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "XsdString",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#XsdString",
          "type": "newtype"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "XsdString",
          "package": "HaXml",
          "partial": "Xsd String",
          "type": "newtype"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#t:XsdString"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "AnyURI",
          "package": "HaXml",
          "signature": "AnyURI String",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#AnyURI",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "AnyURI",
          "package": "HaXml",
          "partial": "Any URI",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#v:AnyURI"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "Base64Binary",
          "package": "HaXml",
          "signature": "Base64Binary String",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#Base64Binary",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "Base64Binary",
          "package": "HaXml",
          "partial": "Base Binary",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#v:Base64Binary"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "Byte",
          "package": "HaXml",
          "signature": "Byte Int8",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#Byte",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "Byte",
          "package": "HaXml",
          "partial": "Byte",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#v:Byte"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "Date",
          "package": "HaXml",
          "signature": "Date String",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#Date",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "Date",
          "package": "HaXml",
          "partial": "Date",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#v:Date"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "DateTime",
          "package": "HaXml",
          "signature": "DateTime String",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#DateTime",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "DateTime",
          "package": "HaXml",
          "partial": "Date Time",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#v:DateTime"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "Decimal",
          "package": "HaXml",
          "signature": "Decimal Double",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#Decimal",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "Decimal",
          "package": "HaXml",
          "partial": "Decimal",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#v:Decimal"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "Duration",
          "package": "HaXml",
          "signature": "Duration Bool Int Int Int Int Int Float",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#Duration",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "Duration",
          "package": "HaXml",
          "partial": "Duration",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#v:Duration"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "ENTITIES",
          "package": "HaXml",
          "signature": "ENTITIES String",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#ENTITIES",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "ENTITIES",
          "package": "HaXml",
          "partial": "ENTITIES",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#v:ENTITIES"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "ENTITY",
          "package": "HaXml",
          "signature": "ENTITY String",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#ENTITY",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "ENTITY",
          "package": "HaXml",
          "partial": "ENTITY",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#v:ENTITY"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "GDay",
          "package": "HaXml",
          "signature": "GDay String",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#GDay",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "GDay",
          "package": "HaXml",
          "partial": "GDay",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#v:GDay"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "GMonth",
          "package": "HaXml",
          "signature": "GMonth String",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#GMonth",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "GMonth",
          "package": "HaXml",
          "partial": "GMonth",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#v:GMonth"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "GMonthDay",
          "package": "HaXml",
          "signature": "GMonthDay String",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#GMonthDay",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "GMonthDay",
          "package": "HaXml",
          "partial": "GMonth Day",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#v:GMonthDay"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "GYear",
          "package": "HaXml",
          "signature": "GYear String",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#GYear",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "GYear",
          "package": "HaXml",
          "partial": "GYear",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#v:GYear"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "GYearMonth",
          "package": "HaXml",
          "signature": "GYearMonth String",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#GYearMonth",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "GYearMonth",
          "package": "HaXml",
          "partial": "GYear Month",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#v:GYearMonth"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "HexBinary",
          "package": "HaXml",
          "signature": "HexBinary String",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#HexBinary",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "HexBinary",
          "package": "HaXml",
          "partial": "Hex Binary",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#v:HexBinary"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "ID",
          "package": "HaXml",
          "signature": "ID String",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#ID",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "ID",
          "package": "HaXml",
          "partial": "ID",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#v:ID"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "IDREF",
          "package": "HaXml",
          "signature": "IDREF String",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#IDREF",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "IDREF",
          "package": "HaXml",
          "partial": "IDREF",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#v:IDREF"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "IDREFS",
          "package": "HaXml",
          "signature": "IDREFS String",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#IDREFS",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "IDREFS",
          "package": "HaXml",
          "partial": "IDREFS",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#v:IDREFS"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "Language",
          "package": "HaXml",
          "signature": "Language String",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#Language",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "Language",
          "package": "HaXml",
          "partial": "Language",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#v:Language"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "Long",
          "package": "HaXml",
          "signature": "Long Int64",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#Long",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "Long",
          "package": "HaXml",
          "partial": "Long",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#v:Long"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "[\"Text.XML.HaXml.Schema.PrimitiveTypes\",\"Text.XML.HaXml.Types\"]",
          "name": "N",
          "package": "HaXml",
          "signature": "N Name",
          "source": "src/Text-XML-HaXml-Types.html#QName",
          "type": "function",
          "uris": "[\"http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#v:N\",\"http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:N\"]"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "N",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#v:N"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "NCName",
          "package": "HaXml",
          "signature": "NCName String",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#NCName",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "NCName",
          "package": "HaXml",
          "partial": "NCName",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#v:NCName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "NMTOKEN",
          "package": "HaXml",
          "signature": "NMTOKEN String",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#NMTOKEN",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "NMTOKEN",
          "package": "HaXml",
          "partial": "NMTOKEN",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#v:NMTOKEN"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "NMTOKENS",
          "package": "HaXml",
          "signature": "NMTOKENS String",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#NMTOKENS",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "NMTOKENS",
          "package": "HaXml",
          "partial": "NMTOKENS",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#v:NMTOKENS"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "NOTATION",
          "package": "HaXml",
          "signature": "NOTATION String",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#NOTATION",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "NOTATION",
          "package": "HaXml",
          "partial": "NOTATION",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#v:NOTATION"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "Name",
          "package": "HaXml",
          "signature": "Name String",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#Name",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "Name",
          "package": "HaXml",
          "partial": "Name",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#v:Name"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "Negative",
          "package": "HaXml",
          "signature": "Negative Integer",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#NegativeInteger",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "Negative",
          "package": "HaXml",
          "partial": "Negative",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#v:Negative"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "NonNeg",
          "package": "HaXml",
          "signature": "NonNeg Integer",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#NonNegativeInteger",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "NonNeg",
          "package": "HaXml",
          "partial": "Non Neg",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#v:NonNeg"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "NonPos",
          "package": "HaXml",
          "signature": "NonPos Integer",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#NonPositiveInteger",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "NonPos",
          "package": "HaXml",
          "partial": "Non Pos",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#v:NonPos"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "Normalized",
          "package": "HaXml",
          "signature": "Normalized String",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#NormalizedString",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "Normalized",
          "package": "HaXml",
          "partial": "Normalized",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#v:Normalized"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "Positive",
          "package": "HaXml",
          "signature": "Positive Integer",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#PositiveInteger",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "Positive",
          "package": "HaXml",
          "partial": "Positive",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#v:Positive"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "[\"Text.XML.HaXml.Schema.PrimitiveTypes\",\"Text.XML.HaXml.Types\"]",
          "name": "QN",
          "package": "HaXml",
          "signature": "QN Namespace Name",
          "source": "src/Text-XML-HaXml-Types.html#QName",
          "type": "function",
          "uris": "[\"http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#v:QN\",\"http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:QN\"]"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "QN",
          "package": "HaXml",
          "partial": "QN",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#v:QN"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "Short",
          "package": "HaXml",
          "signature": "Short Int16",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#Short",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "Short",
          "package": "HaXml",
          "partial": "Short",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#v:Short"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "Time",
          "package": "HaXml",
          "signature": "Time String",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#Time",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "Time",
          "package": "HaXml",
          "partial": "Time",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#v:Time"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "Token",
          "package": "HaXml",
          "signature": "Token String",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#Token",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "Token",
          "package": "HaXml",
          "partial": "Token",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#v:Token"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "UByte",
          "package": "HaXml",
          "signature": "UByte Word8",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#UnsignedByte",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "UByte",
          "package": "HaXml",
          "partial": "UByte",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#v:UByte"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "UInt",
          "package": "HaXml",
          "signature": "UInt Word32",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#UnsignedInt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "UInt",
          "package": "HaXml",
          "partial": "UInt",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#v:UInt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "ULong",
          "package": "HaXml",
          "signature": "ULong Word64",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#UnsignedLong",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "ULong",
          "package": "HaXml",
          "partial": "ULong",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#v:ULong"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "UShort",
          "package": "HaXml",
          "signature": "UShort Word16",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#UnsignedShort",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "UShort",
          "package": "HaXml",
          "partial": "UShort",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#v:UShort"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "XsdString",
          "package": "HaXml",
          "signature": "XsdString String",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#XsdString",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "XsdString",
          "package": "HaXml",
          "partial": "Xsd String",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#v:XsdString"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "acceptingParser",
          "package": "HaXml",
          "signature": "TextParser a",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#acceptingParser",
          "type": "method"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "acceptingParser",
          "package": "HaXml",
          "partial": "Parser",
          "type": "method"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#v:acceptingParser"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "simpleTypeText",
          "package": "HaXml",
          "signature": "a -\u003e String",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#simpleTypeText",
          "type": "method"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema PrimitiveTypes",
          "module": "Text.XML.HaXml.Schema.PrimitiveTypes",
          "name": "simpleTypeText",
          "normalized": "a-\u003eString",
          "package": "HaXml",
          "partial": "Type Text",
          "signature": "a-\u003eString",
          "type": "method"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-PrimitiveTypes.html#v:simpleTypeText"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.Schema",
          "name": "Schema",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-Schema.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema Schema",
          "module": "Text.XML.HaXml.Schema.Schema",
          "name": "Schema",
          "package": "HaXml",
          "partial": "Schema",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Schema.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eThe \u003ca\u003exsd:any\u003c/a\u003e type.  Parsing will always produce an \u003ca\u003eUnconvertedANY\u003c/a\u003e.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Schema",
          "name": "AnyElement",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-Schema.html#AnyElement",
          "type": "data"
        },
        "index": {
          "description": "The xsd any type Parsing will always produce an UnconvertedANY",
          "hierarchy": "Text XML HaXml Schema Schema",
          "module": "Text.XML.HaXml.Schema.Schema",
          "name": "AnyElement",
          "package": "HaXml",
          "partial": "Any Element",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Schema.html#t:AnyElement"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.Schema",
          "name": "Content",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#Content",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema Schema",
          "module": "Text.XML.HaXml.Schema.Schema",
          "name": "Content",
          "package": "HaXml",
          "partial": "Content",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Schema.html#t:Content"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eA type t can extend another type s by the addition of extra elements\n   and/or attributes.  s is therefore the supertype of t.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Schema",
          "name": "Extension",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-Schema.html#Extension",
          "type": "class"
        },
        "index": {
          "description": "type can extend another type by the addition of extra elements and or attributes is therefore the supertype of",
          "hierarchy": "Text XML HaXml Schema Schema",
          "module": "Text.XML.HaXml.Schema.Schema",
          "name": "Extension",
          "package": "HaXml",
          "partial": "Extension",
          "type": "class"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Schema.html#t:Extension"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eA trick to enable forward-declaration of a type that will be defined\n   properly in another module, higher in the dependency graph. \u003ccode\u003efd\u003c/code\u003e is\n   a dummy type e.g. the empty \u003ccode\u003edata FwdA\u003c/code\u003e, where \u003ccode\u003ea\u003c/code\u003e is the proper\n   \u003ccode\u003edata A\u003c/code\u003e, not yet available.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Schema",
          "name": "FwdDecl",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-Schema.html#FwdDecl",
          "type": "class"
        },
        "index": {
          "description": "trick to enable forward-declaration of type that will be defined properly in another module higher in the dependency graph fd is dummy type e.g the empty data FwdA where is the proper data not yet available",
          "hierarchy": "Text XML HaXml Schema Schema",
          "module": "Text.XML.HaXml.Schema.Schema",
          "name": "FwdDecl",
          "package": "HaXml",
          "partial": "Fwd Decl",
          "type": "class"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Schema.html#t:FwdDecl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.Schema",
          "name": "Occurs",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Occurs",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema Schema",
          "module": "Text.XML.HaXml.Schema.Schema",
          "name": "Occurs",
          "package": "HaXml",
          "partial": "Occurs",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Schema.html#t:Occurs"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eA type t can restrict another type s, that is, t admits fewer values\n   than s, but all the values t does admit also belong to the type s.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Schema",
          "name": "Restricts",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-Schema.html#Restricts",
          "type": "class"
        },
        "index": {
          "description": "type can restrict another type that is admits fewer values than but all the values does admit also belong to the type",
          "hierarchy": "Text XML HaXml Schema Schema",
          "module": "Text.XML.HaXml.Schema.Schema",
          "name": "Restricts",
          "package": "HaXml",
          "partial": "Restricts",
          "type": "class"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Schema.html#t:Restricts"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eA SchemaType promises to interconvert between a generic XML\n   content tree and a Haskell value, according to the rules of XSD.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Schema",
          "name": "SchemaType",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-Schema.html#SchemaType",
          "type": "class"
        },
        "index": {
          "description": "SchemaType promises to interconvert between generic XML content tree and Haskell value according to the rules of XSD",
          "hierarchy": "Text XML HaXml Schema Schema",
          "module": "Text.XML.HaXml.Schema.Schema",
          "name": "SchemaType",
          "package": "HaXml",
          "partial": "Schema Type",
          "type": "class"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Schema.html#t:SchemaType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eUltimately, an XML parser will find some plain text as the content\n   of a simpleType, which will need to be parsed.  We use a TextParser,\n   because values of simpleTypes can also be given elsewhere, e.g. as\n   attribute values in an XSD definition, e.g. to restrict the permissible\n   values of the simpleType.  Such restrictions are therefore implemented\n   as layered parsers.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Schema",
          "name": "SimpleType",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#SimpleType",
          "type": "class"
        },
        "index": {
          "description": "Ultimately an XML parser will find some plain text as the content of simpleType which will need to be parsed We use TextParser because values of simpleTypes can also be given elsewhere e.g as attribute values in an XSD definition e.g to restrict the permissible values of the simpleType Such restrictions are therefore implemented as layered parsers",
          "hierarchy": "Text XML HaXml Schema Schema",
          "module": "Text.XML.HaXml.Schema.Schema",
          "name": "SimpleType",
          "package": "HaXml",
          "partial": "Simple Type",
          "type": "class"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Schema.html#t:SimpleType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eWe need a parsing monad for reading generic XML Content into specific\n   datatypes.  This is a specialisation of the Text.ParserCombinators.Poly\n   ones, where the input token type is fixed as XML Content.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Schema",
          "name": "XMLParser",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-XmlContent-Parser.html#XMLParser",
          "type": "type"
        },
        "index": {
          "description": "We need parsing monad for reading generic XML Content into specific datatypes This is specialisation of the Text.ParserCombinators.Poly ones where the input token type is fixed as XML Content",
          "hierarchy": "Text XML HaXml Schema Schema",
          "module": "Text.XML.HaXml.Schema.Schema",
          "name": "XMLParser",
          "package": "HaXml",
          "partial": "XMLParser",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Schema.html#t:XMLParser"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.Schema",
          "name": "ANYSchemaType",
          "package": "HaXml",
          "signature": "ANYSchemaType a",
          "source": "src/Text-XML-HaXml-Schema-Schema.html#AnyElement",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema Schema",
          "module": "Text.XML.HaXml.Schema.Schema",
          "name": "ANYSchemaType",
          "package": "HaXml",
          "partial": "ANYSchema Type",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Schema.html#v:ANYSchemaType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "[\"Text.XML.HaXml.Schema.Schema\",\"Text.XML.HaXml.Types\",\"Text.XML.HaXml.XmlContent.Parser\"]",
          "name": "CElem",
          "package": "HaXml",
          "signature": "CElem (Element i) i",
          "source": "src/Text-XML-HaXml-Types.html#Content",
          "type": "function",
          "uris": "[\"http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Schema.html#v:CElem\",\"http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:CElem\",\"http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Parser.html#v:CElem\"]"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema Schema",
          "module": "Text.XML.HaXml.Schema.Schema",
          "name": "CElem",
          "package": "HaXml",
          "partial": "CElem",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Schema.html#v:CElem"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "[\"Text.XML.HaXml.Schema.Schema\",\"Text.XML.HaXml.Types\",\"Text.XML.HaXml.XmlContent.Parser\"]",
          "name": "CMisc",
          "package": "HaXml",
          "signature": "CMisc Misc i",
          "source": "src/Text-XML-HaXml-Types.html#Content",
          "type": "function",
          "uris": "[\"http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Schema.html#v:CMisc\",\"http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:CMisc\",\"http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Parser.html#v:CMisc\"]"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema Schema",
          "module": "Text.XML.HaXml.Schema.Schema",
          "name": "CMisc",
          "package": "HaXml",
          "partial": "CMisc",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Schema.html#v:CMisc"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "[\"Text.XML.HaXml.Schema.Schema\",\"Text.XML.HaXml.Types\",\"Text.XML.HaXml.XmlContent.Parser\"]",
          "name": "CRef",
          "package": "HaXml",
          "signature": "CRef Reference i",
          "source": "src/Text-XML-HaXml-Types.html#Content",
          "type": "function",
          "uris": "[\"http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Schema.html#v:CRef\",\"http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:CRef\",\"http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Parser.html#v:CRef\"]"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema Schema",
          "module": "Text.XML.HaXml.Schema.Schema",
          "name": "CRef",
          "package": "HaXml",
          "partial": "CRef",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Schema.html#v:CRef"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003ebool is whether whitespace is significant\n\u003c/p\u003e",
          "module": "[\"Text.XML.HaXml.Schema.Schema\",\"Text.XML.HaXml.Types\",\"Text.XML.HaXml.XmlContent.Parser\"]",
          "name": "CString",
          "package": "HaXml",
          "signature": "CString Bool CharData i",
          "source": "src/Text-XML-HaXml-Types.html#Content",
          "type": "function",
          "uris": "[\"http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Schema.html#v:CString\",\"http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:CString\",\"http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Parser.html#v:CString\"]"
        },
        "index": {
          "description": "bool is whether whitespace is significant",
          "hierarchy": "Text XML HaXml Schema Schema",
          "module": "Text.XML.HaXml.Schema.Schema",
          "name": "CString",
          "package": "HaXml",
          "partial": "CString",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Schema.html#v:CString"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "[\"Text.XML.HaXml.Schema.Schema\",\"Text.XML.HaXml.Schema.XSDTypeModel\"]",
          "name": "Occurs",
          "package": "HaXml",
          "signature": "Occurs (Maybe Int) (Maybe Int)",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Occurs",
          "type": "function",
          "uris": "[\"http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Schema.html#v:Occurs\",\"http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:Occurs\"]"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema Schema",
          "module": "Text.XML.HaXml.Schema.Schema",
          "name": "Occurs",
          "package": "HaXml",
          "partial": "Occurs",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Schema.html#v:Occurs"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.Schema",
          "name": "UnconvertedANY",
          "package": "HaXml",
          "signature": "UnconvertedANY (Content Posn)",
          "source": "src/Text-XML-HaXml-Schema-Schema.html#AnyElement",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema Schema",
          "module": "Text.XML.HaXml.Schema.Schema",
          "name": "UnconvertedANY",
          "package": "HaXml",
          "partial": "Unconverted ANY",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Schema.html#v:UnconvertedANY"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.Schema",
          "name": "acceptingParser",
          "package": "HaXml",
          "signature": "TextParser a",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#acceptingParser",
          "type": "method"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema Schema",
          "module": "Text.XML.HaXml.Schema.Schema",
          "name": "acceptingParser",
          "package": "HaXml",
          "partial": "Parser",
          "type": "method"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Schema.html#v:acceptingParser"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eFor a ComplexType that is an extension of a SimpleType, it is necessary to\n   convert the value to XML first, then add in the extra attributes that\n   constitute the extension.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Schema",
          "name": "addXMLAttributes",
          "package": "HaXml",
          "signature": "[[Attribute]] -\u003e [Content ()] -\u003e [Content ()]",
          "source": "src/Text-XML-HaXml-Schema-Schema.html#addXMLAttributes",
          "type": "function"
        },
        "index": {
          "description": "For ComplexType that is an extension of SimpleType it is necessary to convert the value to XML first then add in the extra attributes that constitute the extension",
          "hierarchy": "Text XML HaXml Schema Schema",
          "module": "Text.XML.HaXml.Schema.Schema",
          "name": "addXMLAttributes",
          "normalized": "[[Attribute]]-\u003e[Content()]-\u003e[Content()]",
          "package": "HaXml",
          "partial": "XMLAttributes",
          "signature": "[[Attribute]]-\u003e[Content()]-\u003e[Content()]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Schema.html#v:addXMLAttributes"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eBetween is a list parser that tries to ensure that any range\n   specification (min and max elements) is obeyed when parsing.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Schema",
          "name": "between",
          "package": "HaXml",
          "signature": "Occurs -\u003e p a -\u003e p [a]",
          "source": "src/Text-XML-HaXml-Schema-Schema.html#between",
          "type": "function"
        },
        "index": {
          "description": "Between is list parser that tries to ensure that any range specification min and max elements is obeyed when parsing",
          "hierarchy": "Text XML HaXml Schema Schema",
          "module": "Text.XML.HaXml.Schema.Schema",
          "name": "between",
          "normalized": "Occurs-\u003ea b-\u003ea[b]",
          "package": "HaXml",
          "signature": "Occurs-\u003ep a-\u003ep[a]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Schema.html#v:between"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eGet the next content element, checking that it has one of the required\n   tags.  (Skips over comments and whitespace, rejects text and refs.)\n\u003c/p\u003e",
          "module": "[\"Text.XML.HaXml.Schema.Schema\",\"Text.XML.HaXml.XmlContent.Parser\"]",
          "name": "element",
          "package": "HaXml",
          "signature": "[String] -\u003e XMLParser (Element Posn)",
          "source": "src/Text-XML-HaXml-XmlContent-Parser.html#element",
          "type": "function",
          "uris": "[\"http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Schema.html#v:element\",\"http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Parser.html#v:element\"]"
        },
        "index": {
          "description": "Get the next content element checking that it has one of the required tags Skips over comments and whitespace rejects text and refs",
          "hierarchy": "Text XML HaXml Schema Schema",
          "module": "Text.XML.HaXml.Schema.Schema",
          "name": "element",
          "normalized": "[String]-\u003eXMLParser(Element Posn)",
          "package": "HaXml",
          "signature": "[String]-\u003eXMLParser(Element Posn)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Schema.html#v:element"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eGenerated parsers will use \u003ccode\u003e\u003ca\u003egetAttribute\u003c/a\u003e\u003c/code\u003e as a convenient wrapper\n   to lift a SchemaAttribute parser into an XMLParser.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Schema",
          "name": "getAttribute",
          "package": "HaXml",
          "signature": "String -\u003e Element Posn -\u003e Posn -\u003e XMLParser a",
          "source": "src/Text-XML-HaXml-Schema-Schema.html#getAttribute",
          "type": "function"
        },
        "index": {
          "description": "Generated parsers will use getAttribute as convenient wrapper to lift SchemaAttribute parser into an XMLParser",
          "hierarchy": "Text XML HaXml Schema Schema",
          "module": "Text.XML.HaXml.Schema.Schema",
          "name": "getAttribute",
          "normalized": "String-\u003eElement Posn-\u003ePosn-\u003eXMLParser a",
          "package": "HaXml",
          "partial": "Attribute",
          "signature": "String-\u003eElement Posn-\u003ePosn-\u003eXMLParser a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Schema.html#v:getAttribute"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eRun an XMLParser on the contents of the given element (i.e. not on the\n   current monadic content sequence), checking that the contents are\n   exhausted, before returning the calculated value within the current\n   parser context.\n\u003c/p\u003e",
          "module": "[\"Text.XML.HaXml.Schema.Schema\",\"Text.XML.HaXml.XmlContent.Parser\"]",
          "name": "interior",
          "package": "HaXml",
          "signature": "Element Posn -\u003e XMLParser a -\u003e XMLParser a",
          "source": "src/Text-XML-HaXml-XmlContent-Parser.html#interior",
          "type": "function",
          "uris": "[\"http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Schema.html#v:interior\",\"http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Parser.html#v:interior\"]"
        },
        "index": {
          "description": "Run an XMLParser on the contents of the given element i.e not on the current monadic content sequence checking that the contents are exhausted before returning the calculated value within the current parser context",
          "hierarchy": "Text XML HaXml Schema Schema",
          "module": "Text.XML.HaXml.Schema.Schema",
          "name": "interior",
          "normalized": "Element Posn-\u003eXMLParser a-\u003eXMLParser a",
          "package": "HaXml",
          "signature": "Element Posn-\u003eXMLParser a-\u003eXMLParser a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Schema.html#v:interior"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.Schema",
          "name": "parseAnyElement",
          "package": "HaXml",
          "signature": "XMLParser AnyElement",
          "source": "src/Text-XML-HaXml-Schema-Schema.html#parseAnyElement",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema Schema",
          "module": "Text.XML.HaXml.Schema.Schema",
          "name": "parseAnyElement",
          "package": "HaXml",
          "partial": "Any Element",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Schema.html#v:parseAnyElement"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.Schema",
          "name": "parseSchemaType",
          "package": "HaXml",
          "signature": "String -\u003e XMLParser a",
          "source": "src/Text-XML-HaXml-Schema-Schema.html#parseSchemaType",
          "type": "method"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema Schema",
          "module": "Text.XML.HaXml.Schema.Schema",
          "name": "parseSchemaType",
          "normalized": "String-\u003eXMLParser a",
          "package": "HaXml",
          "partial": "Schema Type",
          "signature": "String-\u003eXMLParser a",
          "type": "method"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Schema.html#v:parseSchemaType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eGiven a TextParser for a SimpleType, make it into an XMLParser, i.e.\n   consuming textual XML content as input rather than a String.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Schema",
          "name": "parseSimpleType",
          "package": "HaXml",
          "signature": "XMLParser t",
          "source": "src/Text-XML-HaXml-Schema-Schema.html#parseSimpleType",
          "type": "function"
        },
        "index": {
          "description": "Given TextParser for SimpleType make it into an XMLParser i.e consuming textual XML content as input rather than String",
          "hierarchy": "Text XML HaXml Schema Schema",
          "module": "Text.XML.HaXml.Schema.Schema",
          "name": "parseSimpleType",
          "package": "HaXml",
          "partial": "Simple Type",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Schema.html#v:parseSimpleType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParse the textual part of mixed content\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.Schema",
          "name": "parseText",
          "package": "HaXml",
          "signature": "XMLParser String",
          "source": "src/Text-XML-HaXml-Schema-Schema.html#parseText",
          "type": "function"
        },
        "index": {
          "description": "Parse the textual part of mixed content",
          "hierarchy": "Text XML HaXml Schema Schema",
          "module": "Text.XML.HaXml.Schema.Schema",
          "name": "parseText",
          "package": "HaXml",
          "partial": "Text",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Schema.html#v:parseText"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eA specialisation of \u003ccode\u003eposnElementWith (==)\u003c/code\u003e.\n\u003c/p\u003e",
          "module": "[\"Text.XML.HaXml.Schema.Schema\",\"Text.XML.HaXml.XmlContent.Parser\"]",
          "name": "posnElement",
          "package": "HaXml",
          "signature": "[String] -\u003e XMLParser (Posn, Element Posn)",
          "source": "src/Text-XML-HaXml-XmlContent-Parser.html#posnElement",
          "type": "function",
          "uris": "[\"http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Schema.html#v:posnElement\",\"http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Parser.html#v:posnElement\"]"
        },
        "index": {
          "description": "specialisation of posnElementWith",
          "hierarchy": "Text XML HaXml Schema Schema",
          "module": "Text.XML.HaXml.Schema.Schema",
          "name": "posnElement",
          "normalized": "[String]-\u003eXMLParser(Posn,Element Posn)",
          "package": "HaXml",
          "partial": "Element",
          "signature": "[String]-\u003eXMLParser(Posn,Element Posn)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Schema.html#v:posnElement"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eGet the next content element, checking that it has one of the required\n   tags, using the given matching function.\n   (Skips over comments and whitespace, rejects text and refs.\n    Also returns position of element.)\n\u003c/p\u003e",
          "module": "[\"Text.XML.HaXml.Schema.Schema\",\"Text.XML.HaXml.XmlContent.Parser\"]",
          "name": "posnElementWith",
          "package": "HaXml",
          "signature": "(String -\u003e String -\u003e Bool) -\u003e [String] -\u003e XMLParser (Posn, Element Posn)",
          "source": "src/Text-XML-HaXml-XmlContent-Parser.html#posnElementWith",
          "type": "function",
          "uris": "[\"http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Schema.html#v:posnElementWith\",\"http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Parser.html#v:posnElementWith\"]"
        },
        "index": {
          "description": "Get the next content element checking that it has one of the required tags using the given matching function Skips over comments and whitespace rejects text and refs Also returns position of element",
          "hierarchy": "Text XML HaXml Schema Schema",
          "module": "Text.XML.HaXml.Schema.Schema",
          "name": "posnElementWith",
          "normalized": "(String-\u003eString-\u003eBool)-\u003e[String]-\u003eXMLParser(Posn,Element Posn)",
          "package": "HaXml",
          "partial": "Element With",
          "signature": "(String-\u003eString-\u003eBool)-\u003e[String]-\u003eXMLParser(Posn,Element Posn)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Schema.html#v:posnElementWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.Schema",
          "name": "restricts",
          "package": "HaXml",
          "signature": "t -\u003e s",
          "source": "src/Text-XML-HaXml-Schema-Schema.html#restricts",
          "type": "method"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema Schema",
          "module": "Text.XML.HaXml.Schema.Schema",
          "name": "restricts",
          "normalized": "a-\u003eb",
          "package": "HaXml",
          "signature": "t-\u003es",
          "type": "method"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Schema.html#v:restricts"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.Schema",
          "name": "schemaTypeToXML",
          "package": "HaXml",
          "signature": "String -\u003e a -\u003e [Content ()]",
          "source": "src/Text-XML-HaXml-Schema-Schema.html#schemaTypeToXML",
          "type": "method"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema Schema",
          "module": "Text.XML.HaXml.Schema.Schema",
          "name": "schemaTypeToXML",
          "normalized": "String-\u003ea-\u003e[Content()]",
          "package": "HaXml",
          "partial": "Type To XML",
          "signature": "String-\u003ea-\u003e[Content()]",
          "type": "method"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Schema.html#v:schemaTypeToXML"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.Schema",
          "name": "simpleTypeText",
          "package": "HaXml",
          "signature": "a -\u003e String",
          "source": "src/Text-XML-HaXml-Schema-PrimitiveTypes.html#simpleTypeText",
          "type": "method"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema Schema",
          "module": "Text.XML.HaXml.Schema.Schema",
          "name": "simpleTypeText",
          "normalized": "a-\u003eString",
          "package": "HaXml",
          "partial": "Type Text",
          "signature": "a-\u003eString",
          "type": "method"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Schema.html#v:simpleTypeText"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.Schema",
          "name": "supertype",
          "package": "HaXml",
          "signature": "t -\u003e s",
          "source": "src/Text-XML-HaXml-Schema-Schema.html#supertype",
          "type": "method"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema Schema",
          "module": "Text.XML.HaXml.Schema.Schema",
          "name": "supertype",
          "normalized": "a-\u003eb",
          "package": "HaXml",
          "signature": "t-\u003es",
          "type": "method"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Schema.html#v:supertype"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e\u003ccode\u003e\u003ca\u003etext\u003c/a\u003e\u003c/code\u003e is a counterpart to \u003ccode\u003e\u003ca\u003eelement\u003c/a\u003e\u003c/code\u003e, parsing text content if it\n   exists.  Adjacent text and references are coalesced.\n\u003c/p\u003e",
          "module": "[\"Text.XML.HaXml.Schema.Schema\",\"Text.XML.HaXml.XmlContent.Parser\"]",
          "name": "text",
          "package": "HaXml",
          "signature": "XMLParser String",
          "source": "src/Text-XML-HaXml-XmlContent-Parser.html#text",
          "type": "function",
          "uris": "[\"http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Schema.html#v:text\",\"http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Parser.html#v:text\"]"
        },
        "index": {
          "description": "text is counterpart to element parsing text content if it exists Adjacent text and references are coalesced",
          "hierarchy": "Text XML HaXml Schema Schema",
          "module": "Text.XML.HaXml.Schema.Schema",
          "name": "text",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Schema.html#v:text"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.Schema",
          "name": "toXMLAnyElement",
          "package": "HaXml",
          "signature": "AnyElement -\u003e [Content ()]",
          "source": "src/Text-XML-HaXml-Schema-Schema.html#toXMLAnyElement",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema Schema",
          "module": "Text.XML.HaXml.Schema.Schema",
          "name": "toXMLAnyElement",
          "normalized": "AnyElement-\u003e[Content()]",
          "package": "HaXml",
          "partial": "XMLAny Element",
          "signature": "AnyElement-\u003e[Content()]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Schema.html#v:toXMLAnyElement"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.Schema",
          "name": "toXMLAttribute",
          "package": "HaXml",
          "signature": "String -\u003e a -\u003e [Attribute]",
          "source": "src/Text-XML-HaXml-Schema-Schema.html#toXMLAttribute",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema Schema",
          "module": "Text.XML.HaXml.Schema.Schema",
          "name": "toXMLAttribute",
          "normalized": "String-\u003ea-\u003e[Attribute]",
          "package": "HaXml",
          "partial": "XMLAttribute",
          "signature": "String-\u003ea-\u003e[Attribute]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Schema.html#v:toXMLAttribute"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.Schema",
          "name": "toXMLElement",
          "package": "HaXml",
          "signature": "String -\u003e [[Attribute]] -\u003e [[Content ()]] -\u003e [Content ()]",
          "source": "src/Text-XML-HaXml-Schema-Schema.html#toXMLElement",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema Schema",
          "module": "Text.XML.HaXml.Schema.Schema",
          "name": "toXMLElement",
          "normalized": "String-\u003e[[Attribute]]-\u003e[[Content()]]-\u003e[Content()]",
          "package": "HaXml",
          "partial": "XMLElement",
          "signature": "String-\u003e[[Attribute]]-\u003e[[Content()]]-\u003e[Content()]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Schema.html#v:toXMLElement"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.Schema",
          "name": "toXMLText",
          "package": "HaXml",
          "signature": "String -\u003e [Content ()]",
          "source": "src/Text-XML-HaXml-Schema-Schema.html#toXMLText",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema Schema",
          "module": "Text.XML.HaXml.Schema.Schema",
          "name": "toXMLText",
          "normalized": "String-\u003e[Content()]",
          "package": "HaXml",
          "partial": "XMLText",
          "signature": "String-\u003e[Content()]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-Schema.html#v:toXMLText"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.TypeConversion",
          "name": "TypeConversion",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-TypeConversion.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema TypeConversion",
          "module": "Text.XML.HaXml.Schema.TypeConversion",
          "name": "TypeConversion",
          "package": "HaXml",
          "partial": "Type Conversion",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-TypeConversion.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.TypeConversion",
          "name": "checkXName",
          "package": "HaXml",
          "signature": "Schema -\u003e QName -\u003e XName",
          "source": "src/Text-XML-HaXml-Schema-TypeConversion.html#checkXName",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema TypeConversion",
          "module": "Text.XML.HaXml.Schema.TypeConversion",
          "name": "checkXName",
          "normalized": "Schema-\u003eQName-\u003eXName",
          "package": "HaXml",
          "partial": "XName",
          "signature": "Schema-\u003eQName-\u003eXName",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-TypeConversion.html#v:checkXName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.TypeConversion",
          "name": "comment",
          "package": "HaXml",
          "signature": "Annotation -\u003e Comment",
          "source": "src/Text-XML-HaXml-Schema-TypeConversion.html#comment",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema TypeConversion",
          "module": "Text.XML.HaXml.Schema.TypeConversion",
          "name": "comment",
          "normalized": "Annotation-\u003eComment",
          "package": "HaXml",
          "signature": "Annotation-\u003eComment",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-TypeConversion.html#v:comment"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eConsolidate a Facet occurrence into a single Occurs value.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.TypeConversion",
          "name": "consolidate",
          "package": "HaXml",
          "signature": "Occurs -\u003e (FacetType, Annotation, String) -\u003e Occurs",
          "source": "src/Text-XML-HaXml-Schema-TypeConversion.html#consolidate",
          "type": "function"
        },
        "index": {
          "description": "Consolidate Facet occurrence into single Occurs value",
          "hierarchy": "Text XML HaXml Schema TypeConversion",
          "module": "Text.XML.HaXml.Schema.TypeConversion",
          "name": "consolidate",
          "normalized": "Occurs-\u003e(FacetType,Annotation,String)-\u003eOccurs",
          "package": "HaXml",
          "signature": "Occurs-\u003e(FacetType,Annotation,String)-\u003eOccurs",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-TypeConversion.html#v:consolidate"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eGiven an environment of schema type mappings, and a schema module,\n   create a bunch of Decls that describe the types in a more\n   Haskell-friendly way.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.TypeConversion",
          "name": "convert",
          "package": "HaXml",
          "signature": "Environment -\u003e Schema -\u003e [Decl]",
          "source": "src/Text-XML-HaXml-Schema-TypeConversion.html#convert",
          "type": "function"
        },
        "index": {
          "description": "Given an environment of schema type mappings and schema module create bunch of Decls that describe the types in more Haskell-friendly way",
          "hierarchy": "Text XML HaXml Schema TypeConversion",
          "module": "Text.XML.HaXml.Schema.TypeConversion",
          "name": "convert",
          "normalized": "Environment-\u003eSchema-\u003e[Decl]",
          "package": "HaXml",
          "signature": "Environment-\u003eSchema-\u003e[Decl]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-TypeConversion.html#v:convert"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.TypeConversion",
          "name": "mkRestrict",
          "package": "HaXml",
          "signature": "Restriction -\u003e [Restrict]",
          "source": "src/Text-XML-HaXml-Schema-TypeConversion.html#mkRestrict",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema TypeConversion",
          "module": "Text.XML.HaXml.Schema.TypeConversion",
          "name": "mkRestrict",
          "normalized": "Restriction-\u003e[Restrict]",
          "package": "HaXml",
          "partial": "Restrict",
          "signature": "Restriction-\u003e[Restrict]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-TypeConversion.html#v:mkRestrict"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.TypeConversion",
          "name": "nameOfSimple",
          "package": "HaXml",
          "signature": "SimpleType -\u003e XName",
          "source": "src/Text-XML-HaXml-Schema-TypeConversion.html#nameOfSimple",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema TypeConversion",
          "module": "Text.XML.HaXml.Schema.TypeConversion",
          "name": "nameOfSimple",
          "normalized": "SimpleType-\u003eXName",
          "package": "HaXml",
          "partial": "Of Simple",
          "signature": "SimpleType-\u003eXName",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-TypeConversion.html#v:nameOfSimple"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eKeep applying the function to transform the value, until it yields\n   Nothing.  Returns the sequence of transformed values.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.TypeConversion",
          "name": "repeatedly",
          "package": "HaXml",
          "signature": "(a -\u003e Maybe a) -\u003e a -\u003e [a]",
          "source": "src/Text-XML-HaXml-Schema-TypeConversion.html#repeatedly",
          "type": "function"
        },
        "index": {
          "description": "Keep applying the function to transform the value until it yields Nothing Returns the sequence of transformed values",
          "hierarchy": "Text XML HaXml Schema TypeConversion",
          "module": "Text.XML.HaXml.Schema.TypeConversion",
          "name": "repeatedly",
          "normalized": "(a-\u003eMaybe a)-\u003ea-\u003e[a]",
          "package": "HaXml",
          "signature": "(a-\u003eMaybe a)-\u003ea-\u003e[a]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-TypeConversion.html#v:repeatedly"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.TypeConversion",
          "name": "singleton",
          "package": "HaXml",
          "signature": "a -\u003e [a]",
          "source": "src/Text-XML-HaXml-Schema-TypeConversion.html#singleton",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema TypeConversion",
          "module": "Text.XML.HaXml.Schema.TypeConversion",
          "name": "singleton",
          "normalized": "a-\u003e[a]",
          "package": "HaXml",
          "signature": "a-\u003e[a]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-TypeConversion.html#v:singleton"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eFind the supertype (if it exists) of a given type name.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Schema.TypeConversion",
          "name": "supertypeOf",
          "package": "HaXml",
          "signature": "Environment -\u003e QName -\u003e Maybe QName",
          "source": "src/Text-XML-HaXml-Schema-TypeConversion.html#supertypeOf",
          "type": "function"
        },
        "index": {
          "description": "Find the supertype if it exists of given type name",
          "hierarchy": "Text XML HaXml Schema TypeConversion",
          "module": "Text.XML.HaXml.Schema.TypeConversion",
          "name": "supertypeOf",
          "normalized": "Environment-\u003eQName-\u003eMaybe QName",
          "package": "HaXml",
          "partial": "Of",
          "signature": "Environment-\u003eQName-\u003eMaybe QName",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-TypeConversion.html#v:supertypeOf"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.TypeConversion",
          "name": "xname",
          "package": "HaXml",
          "signature": "String -\u003e XName",
          "source": "src/Text-XML-HaXml-Schema-TypeConversion.html#xname",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema TypeConversion",
          "module": "Text.XML.HaXml.Schema.TypeConversion",
          "name": "xname",
          "normalized": "String-\u003eXName",
          "package": "HaXml",
          "signature": "String-\u003eXName",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-TypeConversion.html#v:xname"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "XSDTypeModel",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "XSDTypeModel",
          "package": "HaXml",
          "partial": "XSDType Model",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Annotation",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Annotation",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Annotation",
          "package": "HaXml",
          "partial": "Annotation",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#t:Annotation"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Any",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Any",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Any",
          "package": "HaXml",
          "partial": "Any",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#t:Any"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "AnyAttr",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#AnyAttr",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "AnyAttr",
          "package": "HaXml",
          "partial": "Any Attr",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#t:AnyAttr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "AttrGroup",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#AttrGroup",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "AttrGroup",
          "package": "HaXml",
          "partial": "Attr Group",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#t:AttrGroup"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "AttributeDecl",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#AttributeDecl",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "AttributeDecl",
          "package": "HaXml",
          "partial": "Attribute Decl",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#t:AttributeDecl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Block",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Block",
          "type": "type"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Block",
          "package": "HaXml",
          "partial": "Block",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#t:Block"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "ChoiceOrSeq",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#ChoiceOrSeq",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "ChoiceOrSeq",
          "package": "HaXml",
          "partial": "Choice Or Seq",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#t:ChoiceOrSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "ComplexItem",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#ComplexItem",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "ComplexItem",
          "package": "HaXml",
          "partial": "Complex Item",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#t:ComplexItem"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "ComplexType",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#ComplexType",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "ComplexType",
          "package": "HaXml",
          "partial": "Complex Type",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#t:ComplexType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "DefaultValue",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#DefaultValue",
          "type": "type"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "DefaultValue",
          "package": "HaXml",
          "partial": "Default Value",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#t:DefaultValue"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "ElementDecl",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#ElementDecl",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "ElementDecl",
          "package": "HaXml",
          "partial": "Element Decl",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#t:ElementDecl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "ElementEtc",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#ElementEtc",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "ElementEtc",
          "package": "HaXml",
          "partial": "Element Etc",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#t:ElementEtc"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Extension",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Extension",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Extension",
          "package": "HaXml",
          "partial": "Extension",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#t:Extension"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Facet",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Facet",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Facet",
          "package": "HaXml",
          "partial": "Facet",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#t:Facet"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "FacetType",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#FacetType",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "FacetType",
          "package": "HaXml",
          "partial": "Facet Type",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#t:FacetType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Field",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Field",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Field",
          "package": "HaXml",
          "partial": "Field",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#t:Field"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Final",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Final",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Final",
          "package": "HaXml",
          "partial": "Final",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#t:Final"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Fixed",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Fixed",
          "type": "type"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Fixed",
          "package": "HaXml",
          "partial": "Fixed",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#t:Fixed"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "FixedValue",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#FixedValue",
          "type": "type"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "FixedValue",
          "package": "HaXml",
          "partial": "Fixed Value",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#t:FixedValue"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Group",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Group",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Group",
          "package": "HaXml",
          "partial": "Group",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#t:Group"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Key",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Key",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Key",
          "package": "HaXml",
          "partial": "Key",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#t:Key"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "KeyRef",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#KeyRef",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "KeyRef",
          "package": "HaXml",
          "partial": "Key Ref",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#t:KeyRef"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Mixed",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Mixed",
          "type": "type"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Mixed",
          "package": "HaXml",
          "partial": "Mixed",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#t:Mixed"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "MyRestriction",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#MyRestriction",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "MyRestriction",
          "package": "HaXml",
          "partial": "My Restriction",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#t:MyRestriction"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "NameAndType",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#NameAndType",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "NameAndType",
          "package": "HaXml",
          "partial": "Name And Type",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#t:NameAndType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Nillable",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Nillable",
          "type": "type"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Nillable",
          "package": "HaXml",
          "partial": "Nillable",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#t:Nillable"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Occurs",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Occurs",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Occurs",
          "package": "HaXml",
          "partial": "Occurs",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#t:Occurs"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Particle",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Particle",
          "type": "type"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Particle",
          "package": "HaXml",
          "partial": "Particle",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#t:Particle"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "ParticleAttrs",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#ParticleAttrs",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "ParticleAttrs",
          "package": "HaXml",
          "partial": "Particle Attrs",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#t:ParticleAttrs"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "PrimitiveType",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#PrimitiveType",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "PrimitiveType",
          "package": "HaXml",
          "partial": "Primitive Type",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#t:PrimitiveType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "ProcessContents",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#ProcessContents",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "ProcessContents",
          "package": "HaXml",
          "partial": "Process Contents",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#t:ProcessContents"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "QForm",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#QForm",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "QForm",
          "package": "HaXml",
          "partial": "QForm",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#t:QForm"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Regexp",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Regexp",
          "type": "type"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Regexp",
          "package": "HaXml",
          "partial": "Regexp",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#t:Regexp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Restriction",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Restriction",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Restriction",
          "package": "HaXml",
          "partial": "Restriction",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#t:Restriction"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Restriction1",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Restriction1",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Restriction1",
          "package": "HaXml",
          "partial": "Restriction",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#t:Restriction1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Schema",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Schema",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Schema",
          "package": "HaXml",
          "partial": "Schema",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#t:Schema"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "SchemaItem",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#SchemaItem",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "SchemaItem",
          "package": "HaXml",
          "partial": "Schema Item",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#t:SchemaItem"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "SchemaLocation",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#SchemaLocation",
          "type": "type"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "SchemaLocation",
          "package": "HaXml",
          "partial": "Schema Location",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#t:SchemaLocation"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Selector",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Selector",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Selector",
          "package": "HaXml",
          "partial": "Selector",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#t:Selector"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "SimpleType",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#SimpleType",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "SimpleType",
          "package": "HaXml",
          "partial": "Simple Type",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#t:SimpleType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "TargetNamespace",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#TargetNamespace",
          "type": "type"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "TargetNamespace",
          "package": "HaXml",
          "partial": "Target Namespace",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#t:TargetNamespace"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "TypeName",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#TypeName",
          "type": "type"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "TypeName",
          "package": "HaXml",
          "partial": "Type Name",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#t:TypeName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "URI",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#URI",
          "type": "type"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "URI",
          "package": "HaXml",
          "partial": "URI",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#t:URI"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Unique",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Unique",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Unique",
          "package": "HaXml",
          "partial": "Unique",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#t:Unique"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "UniqueKeyOrKeyRef",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#UniqueKeyOrKeyRef",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "UniqueKeyOrKeyRef",
          "package": "HaXml",
          "partial": "Unique Key Or Key Ref",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#t:UniqueKeyOrKeyRef"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Use",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Use",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Use",
          "package": "HaXml",
          "partial": "Use",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#t:Use"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "All",
          "package": "HaXml",
          "signature": "All Annotation [ElementDecl]",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#ChoiceOrSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "All",
          "normalized": "All Annotation[ElementDecl]",
          "package": "HaXml",
          "partial": "All",
          "signature": "All Annotation[ElementDecl]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:All"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "AllFinal",
          "package": "HaXml",
          "signature": "AllFinal",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Final",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "AllFinal",
          "package": "HaXml",
          "partial": "All Final",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:AllFinal"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Annotation",
          "package": "HaXml",
          "signature": "Annotation Annotation",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#SchemaItem",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Annotation",
          "package": "HaXml",
          "partial": "Annotation",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:Annotation"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Any",
          "package": "HaXml",
          "signature": "Any",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Any",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Any",
          "package": "HaXml",
          "partial": "Any",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:Any"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "AnyAttr",
          "package": "HaXml",
          "signature": "AnyAttr",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#AnyAttr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "AnyAttr",
          "package": "HaXml",
          "partial": "Any Attr",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:AnyAttr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "AnyURI",
          "package": "HaXml",
          "signature": "AnyURI",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#PrimitiveType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "AnyURI",
          "package": "HaXml",
          "partial": "Any URI",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:AnyURI"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "AppInfo",
          "package": "HaXml",
          "signature": "AppInfo String",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Annotation",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "AppInfo",
          "package": "HaXml",
          "partial": "App Info",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:AppInfo"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "AttrGroup",
          "package": "HaXml",
          "signature": "AttrGroup",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#AttrGroup",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "AttrGroup",
          "package": "HaXml",
          "partial": "Attr Group",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:AttrGroup"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "AttributeDecl",
          "package": "HaXml",
          "signature": "AttributeDecl",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#AttributeDecl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "AttributeDecl",
          "package": "HaXml",
          "partial": "Attribute Decl",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:AttributeDecl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "AttributeGroup",
          "package": "HaXml",
          "signature": "AttributeGroup AttrGroup",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#SchemaItem",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "AttributeGroup",
          "package": "HaXml",
          "partial": "Attribute Group",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:AttributeGroup"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Base64Binary",
          "package": "HaXml",
          "signature": "Base64Binary",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#PrimitiveType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Base64Binary",
          "package": "HaXml",
          "partial": "Base Binary",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:Base64Binary"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Boolean",
          "package": "HaXml",
          "signature": "Boolean",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#PrimitiveType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Boolean",
          "package": "HaXml",
          "partial": "Boolean",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:Boolean"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Choice",
          "package": "HaXml",
          "signature": "Choice Annotation Occurs [ElementEtc]",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#ChoiceOrSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Choice",
          "normalized": "Choice Annotation Occurs[ElementEtc]",
          "package": "HaXml",
          "partial": "Choice",
          "signature": "Choice Annotation Occurs[ElementEtc]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:Choice"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Complex",
          "package": "HaXml",
          "signature": "Complex ComplexType",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#SchemaItem",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Complex",
          "package": "HaXml",
          "partial": "Complex",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:Complex"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "ComplexContent",
          "package": "HaXml",
          "signature": "ComplexContent",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#ComplexItem",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "ComplexContent",
          "package": "HaXml",
          "partial": "Complex Content",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:ComplexContent"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "ComplexType",
          "package": "HaXml",
          "signature": "ComplexType",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#ComplexType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "ComplexType",
          "package": "HaXml",
          "partial": "Complex Type",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:ComplexType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Date",
          "package": "HaXml",
          "signature": "Date",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#PrimitiveType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Date",
          "package": "HaXml",
          "partial": "Date",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:Date"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "DateTime",
          "package": "HaXml",
          "signature": "DateTime",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#PrimitiveType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "DateTime",
          "package": "HaXml",
          "partial": "Date Time",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:DateTime"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Decimal",
          "package": "HaXml",
          "signature": "Decimal",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#PrimitiveType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Decimal",
          "package": "HaXml",
          "partial": "Decimal",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:Decimal"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Documentation",
          "package": "HaXml",
          "signature": "Documentation String",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Annotation",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Documentation",
          "package": "HaXml",
          "partial": "Documentation",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:Documentation"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Double",
          "package": "HaXml",
          "signature": "Double",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#PrimitiveType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Double",
          "package": "HaXml",
          "partial": "Double",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:Double"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Duration",
          "package": "HaXml",
          "signature": "Duration",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#PrimitiveType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Duration",
          "package": "HaXml",
          "partial": "Duration",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:Duration"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "ElementDecl",
          "package": "HaXml",
          "signature": "ElementDecl",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#ElementDecl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "ElementDecl",
          "package": "HaXml",
          "partial": "Element Decl",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:ElementDecl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Enumeration",
          "package": "HaXml",
          "signature": "Enumeration [String]",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#MyRestriction",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Enumeration",
          "normalized": "Enumeration[String]",
          "package": "HaXml",
          "partial": "Enumeration",
          "signature": "Enumeration[String]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:Enumeration"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Extension",
          "package": "HaXml",
          "signature": "Extension",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Extension",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Extension",
          "package": "HaXml",
          "partial": "Extension",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:Extension"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Facet",
          "package": "HaXml",
          "signature": "Facet",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Facet",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Facet",
          "package": "HaXml",
          "partial": "Facet",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:Facet"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Field",
          "package": "HaXml",
          "signature": "Field",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Field",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Field",
          "package": "HaXml",
          "partial": "Field",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:Field"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Float",
          "package": "HaXml",
          "signature": "Float",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#PrimitiveType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Float",
          "package": "HaXml",
          "partial": "Float",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:Float"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "GDay",
          "package": "HaXml",
          "signature": "GDay",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#PrimitiveType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "GDay",
          "package": "HaXml",
          "partial": "GDay",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:GDay"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "GMonth",
          "package": "HaXml",
          "signature": "GMonth",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#PrimitiveType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "GMonth",
          "package": "HaXml",
          "partial": "GMonth",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:GMonth"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "GMonthDay",
          "package": "HaXml",
          "signature": "GMonthDay",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#PrimitiveType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "GMonthDay",
          "package": "HaXml",
          "partial": "GMonth Day",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:GMonthDay"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "GYear",
          "package": "HaXml",
          "signature": "GYear",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#PrimitiveType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "GYear",
          "package": "HaXml",
          "partial": "GYear",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:GYear"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "GYearMonth",
          "package": "HaXml",
          "signature": "GYearMonth",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#PrimitiveType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "GYearMonth",
          "package": "HaXml",
          "partial": "GYear Month",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:GYearMonth"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Group",
          "package": "HaXml",
          "signature": "Group",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Group",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Group",
          "package": "HaXml",
          "partial": "Group",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:Group"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "HasAny",
          "package": "HaXml",
          "signature": "HasAny Any",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#ElementEtc",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "HasAny",
          "package": "HaXml",
          "partial": "Has Any",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:HasAny"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "HasCS",
          "package": "HaXml",
          "signature": "HasCS ChoiceOrSeq",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#ElementEtc",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "HasCS",
          "package": "HaXml",
          "partial": "Has CS",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:HasCS"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "HasElement",
          "package": "HaXml",
          "signature": "HasElement ElementDecl",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#ElementEtc",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "HasElement",
          "package": "HaXml",
          "partial": "Has Element",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:HasElement"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "HasGroup",
          "package": "HaXml",
          "signature": "HasGroup Group",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#ElementEtc",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "HasGroup",
          "package": "HaXml",
          "partial": "Has Group",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:HasGroup"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "HexBinary",
          "package": "HaXml",
          "signature": "HexBinary",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#PrimitiveType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "HexBinary",
          "package": "HaXml",
          "partial": "Hex Binary",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:HexBinary"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Import",
          "package": "HaXml",
          "signature": "Import URI SchemaLocation Annotation",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#SchemaItem",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Import",
          "package": "HaXml",
          "partial": "Import",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:Import"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Include",
          "package": "HaXml",
          "signature": "Include SchemaLocation Annotation",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#SchemaItem",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Include",
          "package": "HaXml",
          "partial": "Include",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:Include"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "K",
          "package": "HaXml",
          "signature": "K Key",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#UniqueKeyOrKeyRef",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "K",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:K"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "KR",
          "package": "HaXml",
          "signature": "KR KeyRef",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#UniqueKeyOrKeyRef",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "KR",
          "package": "HaXml",
          "partial": "KR",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:KR"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Key",
          "package": "HaXml",
          "signature": "Key",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Key",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Key",
          "package": "HaXml",
          "partial": "Key",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:Key"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "KeyRef",
          "package": "HaXml",
          "signature": "KeyRef",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#KeyRef",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "KeyRef",
          "package": "HaXml",
          "partial": "Key Ref",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:KeyRef"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Lax",
          "package": "HaXml",
          "signature": "Lax",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#ProcessContents",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Lax",
          "package": "HaXml",
          "partial": "Lax",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:Lax"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "ListOf",
          "package": "HaXml",
          "signature": "ListOf",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#SimpleType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "ListOf",
          "package": "HaXml",
          "partial": "List Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:ListOf"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "NT",
          "package": "HaXml",
          "signature": "NT",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#NameAndType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "NT",
          "package": "HaXml",
          "partial": "NT",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:NT"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "NoAnnotation",
          "package": "HaXml",
          "signature": "NoAnnotation String",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Annotation",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "NoAnnotation",
          "package": "HaXml",
          "partial": "No Annotation",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:NoAnnotation"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "NoExtension",
          "package": "HaXml",
          "signature": "NoExtension",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Final",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "NoExtension",
          "package": "HaXml",
          "partial": "No Extension",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:NoExtension"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "NoRestriction",
          "package": "HaXml",
          "signature": "NoRestriction",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Final",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "NoRestriction",
          "package": "HaXml",
          "partial": "No Restriction",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:NoRestriction"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Notation",
          "package": "HaXml",
          "signature": "Notation",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#PrimitiveType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Notation",
          "package": "HaXml",
          "partial": "Notation",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:Notation"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Optional",
          "package": "HaXml",
          "signature": "Optional",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Use",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Optional",
          "package": "HaXml",
          "partial": "Optional",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:Optional"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "OrderedBoundsMaxExcl",
          "package": "HaXml",
          "signature": "OrderedBoundsMaxExcl",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#FacetType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "OrderedBoundsMaxExcl",
          "package": "HaXml",
          "partial": "Ordered Bounds Max Excl",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:OrderedBoundsMaxExcl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "OrderedBoundsMaxIncl",
          "package": "HaXml",
          "signature": "OrderedBoundsMaxIncl",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#FacetType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "OrderedBoundsMaxIncl",
          "package": "HaXml",
          "partial": "Ordered Bounds Max Incl",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:OrderedBoundsMaxIncl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "OrderedBoundsMinExcl",
          "package": "HaXml",
          "signature": "OrderedBoundsMinExcl",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#FacetType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "OrderedBoundsMinExcl",
          "package": "HaXml",
          "partial": "Ordered Bounds Min Excl",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:OrderedBoundsMinExcl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "OrderedBoundsMinIncl",
          "package": "HaXml",
          "signature": "OrderedBoundsMinIncl",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#FacetType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "OrderedBoundsMinIncl",
          "package": "HaXml",
          "partial": "Ordered Bounds Min Incl",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:OrderedBoundsMinIncl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "OrderedNumericFractionDigits",
          "package": "HaXml",
          "signature": "OrderedNumericFractionDigits",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#FacetType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "OrderedNumericFractionDigits",
          "package": "HaXml",
          "partial": "Ordered Numeric Fraction Digits",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:OrderedNumericFractionDigits"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "OrderedNumericTotalDigits",
          "package": "HaXml",
          "signature": "OrderedNumericTotalDigits",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#FacetType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "OrderedNumericTotalDigits",
          "package": "HaXml",
          "partial": "Ordered Numeric Total Digits",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:OrderedNumericTotalDigits"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "PA",
          "package": "HaXml",
          "signature": "PA Particle [Either AttributeDecl AttrGroup] (Maybe AnyAttr)",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#ParticleAttrs",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "PA",
          "normalized": "PA Particle[Either AttributeDecl AttrGroup](Maybe AnyAttr)",
          "package": "HaXml",
          "partial": "PA",
          "signature": "PA Particle[Either AttributeDecl AttrGroup](Maybe AnyAttr)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:PA"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Pattern",
          "package": "HaXml",
          "signature": "Pattern Regexp",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#MyRestriction",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Pattern",
          "package": "HaXml",
          "partial": "Pattern",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:Pattern"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Primitive",
          "package": "HaXml",
          "signature": "Primitive",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#SimpleType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Primitive",
          "package": "HaXml",
          "partial": "Primitive",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:Primitive"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Prohibited",
          "package": "HaXml",
          "signature": "Prohibited",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Use",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Prohibited",
          "package": "HaXml",
          "partial": "Prohibited",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:Prohibited"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "QName",
          "package": "HaXml",
          "signature": "QName",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#PrimitiveType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "QName",
          "package": "HaXml",
          "partial": "QName",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:QName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Qualified",
          "package": "HaXml",
          "signature": "Qualified",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#QForm",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Qualified",
          "package": "HaXml",
          "partial": "Qualified",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:Qualified"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Range",
          "package": "HaXml",
          "signature": "Range Occurs",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#MyRestriction",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Range",
          "package": "HaXml",
          "partial": "Range",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:Range"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Redefine",
          "package": "HaXml",
          "signature": "Redefine SchemaLocation [SchemaItem]",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#SchemaItem",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Redefine",
          "normalized": "Redefine SchemaLocation[SchemaItem]",
          "package": "HaXml",
          "partial": "Redefine",
          "signature": "Redefine SchemaLocation[SchemaItem]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:Redefine"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Required",
          "package": "HaXml",
          "signature": "Required",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Use",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Required",
          "package": "HaXml",
          "partial": "Required",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:Required"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "RestrictSim1",
          "package": "HaXml",
          "signature": "RestrictSim1",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Restriction",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "RestrictSim1",
          "package": "HaXml",
          "partial": "Restrict Sim",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:RestrictSim1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "RestrictType",
          "package": "HaXml",
          "signature": "RestrictType",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Restriction",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "RestrictType",
          "package": "HaXml",
          "partial": "Restrict Type",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:RestrictType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Restricted",
          "package": "HaXml",
          "signature": "Restricted",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#SimpleType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Restricted",
          "package": "HaXml",
          "partial": "Restricted",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:Restricted"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Restriction1",
          "package": "HaXml",
          "signature": "Restriction1 Particle",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Restriction1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Restriction1",
          "package": "HaXml",
          "partial": "Restriction",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:Restriction1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Schema",
          "package": "HaXml",
          "signature": "Schema",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Schema",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Schema",
          "package": "HaXml",
          "partial": "Schema",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:Schema"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "SchemaAttribute",
          "package": "HaXml",
          "signature": "SchemaAttribute AttributeDecl",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#SchemaItem",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "SchemaAttribute",
          "package": "HaXml",
          "partial": "Schema Attribute",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:SchemaAttribute"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "SchemaElement",
          "package": "HaXml",
          "signature": "SchemaElement ElementDecl",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#SchemaItem",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "SchemaElement",
          "package": "HaXml",
          "partial": "Schema Element",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:SchemaElement"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "SchemaGroup",
          "package": "HaXml",
          "signature": "SchemaGroup Group",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#SchemaItem",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "SchemaGroup",
          "package": "HaXml",
          "partial": "Schema Group",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:SchemaGroup"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Selector",
          "package": "HaXml",
          "signature": "Selector",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Selector",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Selector",
          "package": "HaXml",
          "partial": "Selector",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:Selector"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Sequence",
          "package": "HaXml",
          "signature": "Sequence Annotation Occurs [ElementEtc]",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#ChoiceOrSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Sequence",
          "normalized": "Sequence Annotation Occurs[ElementEtc]",
          "package": "HaXml",
          "partial": "Sequence",
          "signature": "Sequence Annotation Occurs[ElementEtc]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:Sequence"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Simple",
          "package": "HaXml",
          "signature": "Simple SimpleType",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#SchemaItem",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Simple",
          "package": "HaXml",
          "partial": "Simple",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:Simple"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "SimpleContent",
          "package": "HaXml",
          "signature": "SimpleContent",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#ComplexItem",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "SimpleContent",
          "package": "HaXml",
          "partial": "Simple Content",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:SimpleContent"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Skip",
          "package": "HaXml",
          "signature": "Skip",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#ProcessContents",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Skip",
          "package": "HaXml",
          "partial": "Skip",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:Skip"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Strict",
          "package": "HaXml",
          "signature": "Strict",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#ProcessContents",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Strict",
          "package": "HaXml",
          "partial": "Strict",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:Strict"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "String",
          "package": "HaXml",
          "signature": "String",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#PrimitiveType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "String",
          "package": "HaXml",
          "partial": "String",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:String"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "ThisType",
          "package": "HaXml",
          "signature": "ThisType",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#ComplexItem",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "ThisType",
          "package": "HaXml",
          "partial": "This Type",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:ThisType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Time",
          "package": "HaXml",
          "signature": "Time",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#PrimitiveType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Time",
          "package": "HaXml",
          "partial": "Time",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:Time"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "U",
          "package": "HaXml",
          "signature": "U Unique",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#UniqueKeyOrKeyRef",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "U",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:U"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "UnionOf",
          "package": "HaXml",
          "signature": "UnionOf",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#SimpleType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "UnionOf",
          "package": "HaXml",
          "partial": "Union Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:UnionOf"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Unique",
          "package": "HaXml",
          "signature": "Unique",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Unique",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Unique",
          "package": "HaXml",
          "partial": "Unique",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:Unique"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "UnorderedEnumeration",
          "package": "HaXml",
          "signature": "UnorderedEnumeration",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#FacetType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "UnorderedEnumeration",
          "package": "HaXml",
          "partial": "Unordered Enumeration",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:UnorderedEnumeration"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "UnorderedLength",
          "package": "HaXml",
          "signature": "UnorderedLength",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#FacetType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "UnorderedLength",
          "package": "HaXml",
          "partial": "Unordered Length",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:UnorderedLength"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "UnorderedMaxLength",
          "package": "HaXml",
          "signature": "UnorderedMaxLength",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#FacetType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "UnorderedMaxLength",
          "package": "HaXml",
          "partial": "Unordered Max Length",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:UnorderedMaxLength"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "UnorderedMinLength",
          "package": "HaXml",
          "signature": "UnorderedMinLength",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#FacetType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "UnorderedMinLength",
          "package": "HaXml",
          "partial": "Unordered Min Length",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:UnorderedMinLength"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "UnorderedPattern",
          "package": "HaXml",
          "signature": "UnorderedPattern",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#FacetType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "UnorderedPattern",
          "package": "HaXml",
          "partial": "Unordered Pattern",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:UnorderedPattern"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "UnorderedWhitespace",
          "package": "HaXml",
          "signature": "UnorderedWhitespace",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#FacetType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "UnorderedWhitespace",
          "package": "HaXml",
          "partial": "Unordered Whitespace",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:UnorderedWhitespace"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Unqualified",
          "package": "HaXml",
          "signature": "Unqualified",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#QForm",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "Unqualified",
          "package": "HaXml",
          "partial": "Unqualified",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:Unqualified"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "any_annotation",
          "package": "HaXml",
          "signature": "Annotation",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Any",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "any_annotation",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:any_annotation"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "any_namespace",
          "package": "HaXml",
          "signature": "URI",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Any",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "any_namespace",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:any_namespace"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "any_occurs",
          "package": "HaXml",
          "signature": "Occurs",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Any",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "any_occurs",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:any_occurs"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "any_processContents",
          "package": "HaXml",
          "signature": "ProcessContents",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Any",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "any_processContents",
          "package": "HaXml",
          "partial": "Contents",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:any_processContents"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "anyattr_annotation",
          "package": "HaXml",
          "signature": "Annotation",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#AnyAttr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "anyattr_annotation",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:anyattr_annotation"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "anyattr_namespace",
          "package": "HaXml",
          "signature": "URI",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#AnyAttr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "anyattr_namespace",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:anyattr_namespace"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "anyattr_processContents",
          "package": "HaXml",
          "signature": "ProcessContents",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#AnyAttr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "anyattr_processContents",
          "package": "HaXml",
          "partial": "Contents",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:anyattr_processContents"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "attr_annotation",
          "package": "HaXml",
          "signature": "Annotation",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#AttributeDecl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "attr_annotation",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:attr_annotation"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "attr_defFixed",
          "package": "HaXml",
          "signature": "Maybe (Either DefaultValue FixedValue)",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#AttributeDecl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "attr_defFixed",
          "package": "HaXml",
          "partial": "Fixed",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:attr_defFixed"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "attr_form",
          "package": "HaXml",
          "signature": "QForm",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#AttributeDecl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "attr_form",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:attr_form"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "attr_nameOrRef",
          "package": "HaXml",
          "signature": "Either NameAndType QName",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#AttributeDecl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "attr_nameOrRef",
          "package": "HaXml",
          "partial": "Or Ref",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:attr_nameOrRef"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "attr_simpleType",
          "package": "HaXml",
          "signature": "Maybe SimpleType",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#AttributeDecl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "attr_simpleType",
          "package": "HaXml",
          "partial": "Type",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:attr_simpleType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "attr_use",
          "package": "HaXml",
          "signature": "Use",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#AttributeDecl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "attr_use",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:attr_use"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "attrgroup_annotation",
          "package": "HaXml",
          "signature": "Annotation",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#AttrGroup",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "attrgroup_annotation",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:attrgroup_annotation"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "attrgroup_nameOrRef",
          "package": "HaXml",
          "signature": "Either Name QName",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#AttrGroup",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "attrgroup_nameOrRef",
          "package": "HaXml",
          "partial": "Or Ref",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:attrgroup_nameOrRef"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "attrgroup_stuff",
          "package": "HaXml",
          "signature": "[Either AttributeDecl AttrGroup]",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#AttrGroup",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "attrgroup_stuff",
          "normalized": "[Either AttributeDecl AttrGroup]",
          "package": "HaXml",
          "signature": "[Either AttributeDecl AttrGroup]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:attrgroup_stuff"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "ci_annotation",
          "package": "HaXml",
          "signature": "Annotation",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#ComplexItem",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "ci_annotation",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:ci_annotation"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "ci_mixed",
          "package": "HaXml",
          "signature": "Bool",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#ComplexItem",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "ci_mixed",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:ci_mixed"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "ci_stuff",
          "package": "HaXml",
          "signature": "Either Restriction1 Extension",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#ComplexItem",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "ci_stuff",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:ci_stuff"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "ci_thistype",
          "package": "HaXml",
          "signature": "ParticleAttrs",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#ComplexItem",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "ci_thistype",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:ci_thistype"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "complex_abstract",
          "package": "HaXml",
          "signature": "Bool",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#ComplexType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "complex_abstract",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:complex_abstract"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "complex_annotation",
          "package": "HaXml",
          "signature": "Annotation",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#ComplexType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "complex_annotation",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:complex_annotation"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "complex_block",
          "package": "HaXml",
          "signature": "Maybe Block",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#ComplexType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "complex_block",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:complex_block"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "complex_content",
          "package": "HaXml",
          "signature": "ComplexItem",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#ComplexType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "complex_content",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:complex_content"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "complex_final",
          "package": "HaXml",
          "signature": "Maybe Final",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#ComplexType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "complex_final",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:complex_final"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "complex_mixed",
          "package": "HaXml",
          "signature": "Bool",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#ComplexType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "complex_mixed",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:complex_mixed"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "complex_name",
          "package": "HaXml",
          "signature": "Maybe Name",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#ComplexType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "complex_name",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:complex_name"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "elem_abstract",
          "package": "HaXml",
          "signature": "Bool",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#ElementDecl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "elem_abstract",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:elem_abstract"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "elem_annotation",
          "package": "HaXml",
          "signature": "Annotation",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#ElementDecl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "elem_annotation",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:elem_annotation"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "elem_block",
          "package": "HaXml",
          "signature": "Maybe Block",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#ElementDecl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "elem_block",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:elem_block"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "elem_content",
          "package": "HaXml",
          "signature": "Maybe (Either SimpleType ComplexType)",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#ElementDecl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "elem_content",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:elem_content"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "elem_final",
          "package": "HaXml",
          "signature": "Maybe Final",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#ElementDecl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "elem_final",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:elem_final"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "elem_form",
          "package": "HaXml",
          "signature": "QForm",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#ElementDecl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "elem_form",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:elem_form"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "elem_nameOrRef",
          "package": "HaXml",
          "signature": "Either NameAndType QName",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#ElementDecl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "elem_nameOrRef",
          "package": "HaXml",
          "partial": "Or Ref",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:elem_nameOrRef"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "elem_nillable",
          "package": "HaXml",
          "signature": "Nillable",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#ElementDecl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "elem_nillable",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:elem_nillable"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "elem_occurs",
          "package": "HaXml",
          "signature": "Occurs",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#ElementDecl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "elem_occurs",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:elem_occurs"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "elem_stuff",
          "package": "HaXml",
          "signature": "[UniqueKeyOrKeyRef]",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#ElementDecl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "elem_stuff",
          "normalized": "[UniqueKeyOrKeyRef]",
          "package": "HaXml",
          "signature": "[UniqueKeyOrKeyRef]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:elem_stuff"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "elem_substGroup",
          "package": "HaXml",
          "signature": "Maybe QName",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#ElementDecl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "elem_substGroup",
          "package": "HaXml",
          "partial": "Group",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:elem_substGroup"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "extension_annotation",
          "package": "HaXml",
          "signature": "Annotation",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Extension",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "extension_annotation",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:extension_annotation"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "extension_base",
          "package": "HaXml",
          "signature": "QName",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Extension",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "extension_base",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:extension_base"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "extension_newstuff",
          "package": "HaXml",
          "signature": "ParticleAttrs",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Extension",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "extension_newstuff",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:extension_newstuff"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "facet_annotation",
          "package": "HaXml",
          "signature": "Annotation",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Facet",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "facet_annotation",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:facet_annotation"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "facet_facetType",
          "package": "HaXml",
          "signature": "FacetType",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Facet",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "facet_facetType",
          "package": "HaXml",
          "partial": "Type",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:facet_facetType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "facet_facetValue",
          "package": "HaXml",
          "signature": "String",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Facet",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "facet_facetValue",
          "package": "HaXml",
          "partial": "Value",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:facet_facetValue"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "facet_fixed",
          "package": "HaXml",
          "signature": "Bool",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Facet",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "facet_fixed",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:facet_fixed"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "field_annotation",
          "package": "HaXml",
          "signature": "Annotation",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Field",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "field_annotation",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:field_annotation"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "field_xpath",
          "package": "HaXml",
          "signature": "String",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Field",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "field_xpath",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:field_xpath"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "group_annotation",
          "package": "HaXml",
          "signature": "Annotation",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Group",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "group_annotation",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:group_annotation"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "group_nameOrRef",
          "package": "HaXml",
          "signature": "Either Name QName",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Group",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "group_nameOrRef",
          "package": "HaXml",
          "partial": "Or Ref",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:group_nameOrRef"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "group_occurs",
          "package": "HaXml",
          "signature": "Occurs",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Group",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "group_occurs",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:group_occurs"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "group_stuff",
          "package": "HaXml",
          "signature": "Maybe ChoiceOrSeq",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Group",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "group_stuff",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:group_stuff"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "key_annotation",
          "package": "HaXml",
          "signature": "Annotation",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Key",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "key_annotation",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:key_annotation"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "key_fields",
          "package": "HaXml",
          "signature": "[Field]",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Key",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "key_fields",
          "normalized": "[Field]",
          "package": "HaXml",
          "signature": "[Field]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:key_fields"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "key_name",
          "package": "HaXml",
          "signature": "Name",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Key",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "key_name",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:key_name"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "key_selector",
          "package": "HaXml",
          "signature": "Selector",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Key",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "key_selector",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:key_selector"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "keyref_annotation",
          "package": "HaXml",
          "signature": "Annotation",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#KeyRef",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "keyref_annotation",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:keyref_annotation"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "keyref_fields",
          "package": "HaXml",
          "signature": "[Field]",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#KeyRef",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "keyref_fields",
          "normalized": "[Field]",
          "package": "HaXml",
          "signature": "[Field]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:keyref_fields"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "keyref_name",
          "package": "HaXml",
          "signature": "Name",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#KeyRef",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "keyref_name",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:keyref_name"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "keyref_refer",
          "package": "HaXml",
          "signature": "QName",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#KeyRef",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "keyref_refer",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:keyref_refer"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "keyref_selector",
          "package": "HaXml",
          "signature": "Selector",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#KeyRef",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "keyref_selector",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:keyref_selector"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "restrict_annotation",
          "package": "HaXml",
          "signature": "Annotation",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Restriction",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "restrict_annotation",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:restrict_annotation"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "restrict_base",
          "package": "HaXml",
          "signature": "Maybe QName",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Restriction",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "restrict_base",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:restrict_base"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "restrict_facets",
          "package": "HaXml",
          "signature": "[Facet]",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Restriction",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "restrict_facets",
          "normalized": "[Facet]",
          "package": "HaXml",
          "signature": "[Facet]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:restrict_facets"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "restrict_r1",
          "package": "HaXml",
          "signature": "Restriction1",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Restriction",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "restrict_r1",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:restrict_r1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "restrict_type",
          "package": "HaXml",
          "signature": "Maybe SimpleType",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Restriction",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "restrict_type",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:restrict_type"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "schema_attributeFormDefault",
          "package": "HaXml",
          "signature": "QForm",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Schema",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "schema_attributeFormDefault",
          "package": "HaXml",
          "partial": "Form Default",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:schema_attributeFormDefault"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "schema_blockDefault",
          "package": "HaXml",
          "signature": "Maybe Block",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Schema",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "schema_blockDefault",
          "package": "HaXml",
          "partial": "Default",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:schema_blockDefault"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "schema_elementFormDefault",
          "package": "HaXml",
          "signature": "QForm",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Schema",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "schema_elementFormDefault",
          "package": "HaXml",
          "partial": "Form Default",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:schema_elementFormDefault"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "schema_finalDefault",
          "package": "HaXml",
          "signature": "Maybe Final",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Schema",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "schema_finalDefault",
          "package": "HaXml",
          "partial": "Default",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:schema_finalDefault"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "schema_items",
          "package": "HaXml",
          "signature": "[SchemaItem]",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Schema",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "schema_items",
          "normalized": "[SchemaItem]",
          "package": "HaXml",
          "signature": "[SchemaItem]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:schema_items"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "schema_namespaces",
          "package": "HaXml",
          "signature": "[Namespace]",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Schema",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "schema_namespaces",
          "normalized": "[Namespace]",
          "package": "HaXml",
          "signature": "[Namespace]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:schema_namespaces"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "schema_targetNamespace",
          "package": "HaXml",
          "signature": "Maybe TargetNamespace",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Schema",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "schema_targetNamespace",
          "package": "HaXml",
          "partial": "Namespace",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:schema_targetNamespace"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "schema_version",
          "package": "HaXml",
          "signature": "Maybe String",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Schema",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "schema_version",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:schema_version"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "selector_annotation",
          "package": "HaXml",
          "signature": "Annotation",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Selector",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "selector_annotation",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:selector_annotation"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "selector_xpath",
          "package": "HaXml",
          "signature": "String",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Selector",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "selector_xpath",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:selector_xpath"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "simple_annotation",
          "package": "HaXml",
          "signature": "Annotation",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#SimpleType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "simple_annotation",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:simple_annotation"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "simple_final",
          "package": "HaXml",
          "signature": "Maybe Final",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#SimpleType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "simple_final",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:simple_final"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "simple_members",
          "package": "HaXml",
          "signature": "[QName]",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#SimpleType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "simple_members",
          "normalized": "[QName]",
          "package": "HaXml",
          "signature": "[QName]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:simple_members"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "simple_name",
          "package": "HaXml",
          "signature": "Maybe Name",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#SimpleType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "simple_name",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:simple_name"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "simple_primitive",
          "package": "HaXml",
          "signature": "PrimitiveType",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#SimpleType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "simple_primitive",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:simple_primitive"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "simple_restriction",
          "package": "HaXml",
          "signature": "Restriction",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#SimpleType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "simple_restriction",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:simple_restriction"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "simple_type",
          "package": "HaXml",
          "signature": "Either SimpleType QName",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#SimpleType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "simple_type",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:simple_type"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "simple_union",
          "package": "HaXml",
          "signature": "[SimpleType]",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#SimpleType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "simple_union",
          "normalized": "[SimpleType]",
          "package": "HaXml",
          "signature": "[SimpleType]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:simple_union"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "theName",
          "package": "HaXml",
          "signature": "Name",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#NameAndType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "theName",
          "package": "HaXml",
          "partial": "Name",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:theName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "theType",
          "package": "HaXml",
          "signature": "Maybe QName",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#NameAndType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "theType",
          "package": "HaXml",
          "partial": "Type",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:theType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "unique_annotation",
          "package": "HaXml",
          "signature": "Annotation",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Unique",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "unique_annotation",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:unique_annotation"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "unique_fields",
          "package": "HaXml",
          "signature": "[Field]",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Unique",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "unique_fields",
          "normalized": "[Field]",
          "package": "HaXml",
          "signature": "[Field]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:unique_fields"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "unique_name",
          "package": "HaXml",
          "signature": "Name",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Unique",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "unique_name",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:unique_name"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "unique_selector",
          "package": "HaXml",
          "signature": "Selector",
          "source": "src/Text-XML-HaXml-Schema-XSDTypeModel.html#Unique",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Schema XSDTypeModel",
          "module": "Text.XML.HaXml.Schema.XSDTypeModel",
          "name": "unique_selector",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Schema-XSDTypeModel.html#v:unique_selector"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.ShowXmlLazy",
          "name": "ShowXmlLazy",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-ShowXmlLazy.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "Text XML HaXml ShowXmlLazy",
          "module": "Text.XML.HaXml.ShowXmlLazy",
          "name": "ShowXmlLazy",
          "package": "HaXml",
          "partial": "Show Xml Lazy",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-ShowXmlLazy.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eConvert a fully-typed XML document to a string (without DTD).\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.ShowXmlLazy",
          "name": "showXmlLazy",
          "package": "HaXml",
          "signature": "Bool -\u003e a -\u003e String",
          "source": "src/Text-XML-HaXml-ShowXmlLazy.html#showXmlLazy",
          "type": "function"
        },
        "index": {
          "description": "Convert fully-typed XML document to string without DTD",
          "hierarchy": "Text XML HaXml ShowXmlLazy",
          "module": "Text.XML.HaXml.ShowXmlLazy",
          "name": "showXmlLazy",
          "normalized": "Bool-\u003ea-\u003eString",
          "package": "HaXml",
          "partial": "Xml Lazy",
          "signature": "Bool-\u003ea-\u003eString",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-ShowXmlLazy.html#v:showXmlLazy"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.TypeMapping",
          "name": "TypeMapping",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-TypeMapping.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "Text XML HaXml TypeMapping",
          "module": "Text.XML.HaXml.TypeMapping",
          "name": "TypeMapping",
          "package": "HaXml",
          "partial": "Type Mapping",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-TypeMapping.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eA concrete representation of any user-defined Haskell constructor.\n   The constructor has a name, and a sequence of component types.  The\n   first sequence of types represents the minimum set of free type\n   variables occurring in the (second) list of real component types.\n   If there are fieldnames, they are contained in the final list, and\n   correspond one-to-one with the component types.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.TypeMapping",
          "name": "Constr",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-TypeMapping.html#Constr",
          "type": "data"
        },
        "index": {
          "description": "concrete representation of any user-defined Haskell constructor The constructor has name and sequence of component types The first sequence of types represents the minimum set of free type variables occurring in the second list of real component types If there are fieldnames they are contained in the final list and correspond one-to-one with the component types",
          "hierarchy": "Text XML HaXml TypeMapping",
          "module": "Text.XML.HaXml.TypeMapping",
          "name": "Constr",
          "package": "HaXml",
          "partial": "Constr",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-TypeMapping.html#t:Constr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eA concrete representation of any Haskell type.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.TypeMapping",
          "name": "HType",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-TypeMapping.html#HType",
          "type": "data"
        },
        "index": {
          "description": "concrete representation of any Haskell type",
          "hierarchy": "Text XML HaXml TypeMapping",
          "module": "Text.XML.HaXml.TypeMapping",
          "name": "HType",
          "package": "HaXml",
          "partial": "HType",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-TypeMapping.html#t:HType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e\u003ccode\u003eHTypeable\u003c/code\u003e promises that we can create an explicit representation of\n   of the type of any value.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.TypeMapping",
          "name": "HTypeable",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-TypeMapping.html#HTypeable",
          "type": "class"
        },
        "index": {
          "description": "HTypeable promises that we can create an explicit representation of of the type of any value",
          "hierarchy": "Text XML HaXml TypeMapping",
          "module": "Text.XML.HaXml.TypeMapping",
          "name": "HTypeable",
          "package": "HaXml",
          "partial": "HTypeable",
          "type": "class"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-TypeMapping.html#t:HTypeable"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.TypeMapping",
          "name": "Constr",
          "package": "HaXml",
          "signature": "Constr String [HType] [HType]",
          "source": "src/Text-XML-HaXml-TypeMapping.html#Constr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml TypeMapping",
          "module": "Text.XML.HaXml.TypeMapping",
          "name": "Constr",
          "normalized": "Constr String[HType][HType]",
          "package": "HaXml",
          "partial": "Constr",
          "signature": "Constr String[HType][HType]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-TypeMapping.html#v:Constr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eA user-defined type has a name, a sequence of type variables,\n   and a set of constructors.  (The variables might already be\n   instantiated to actual types.)\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.TypeMapping",
          "name": "Defined",
          "package": "HaXml",
          "signature": "Defined String [HType] [Constr]",
          "source": "src/Text-XML-HaXml-TypeMapping.html#HType",
          "type": "function"
        },
        "index": {
          "description": "user-defined type has name sequence of type variables and set of constructors The variables might already be instantiated to actual types",
          "hierarchy": "Text XML HaXml TypeMapping",
          "module": "Text.XML.HaXml.TypeMapping",
          "name": "Defined",
          "normalized": "Defined String[HType][Constr]",
          "package": "HaXml",
          "partial": "Defined",
          "signature": "Defined String[HType][Constr]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-TypeMapping.html#v:Defined"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.TypeMapping",
          "name": "List",
          "package": "HaXml",
          "signature": "List HType",
          "source": "src/Text-XML-HaXml-TypeMapping.html#HType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml TypeMapping",
          "module": "Text.XML.HaXml.TypeMapping",
          "name": "List",
          "package": "HaXml",
          "partial": "List",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-TypeMapping.html#v:List"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.TypeMapping",
          "name": "Maybe",
          "package": "HaXml",
          "signature": "Maybe HType",
          "source": "src/Text-XML-HaXml-TypeMapping.html#HType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml TypeMapping",
          "module": "Text.XML.HaXml.TypeMapping",
          "name": "Maybe",
          "package": "HaXml",
          "partial": "Maybe",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-TypeMapping.html#v:Maybe"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eseparate Haskell name and XML name\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.TypeMapping",
          "name": "Prim",
          "package": "HaXml",
          "signature": "Prim String String",
          "source": "src/Text-XML-HaXml-TypeMapping.html#HType",
          "type": "function"
        },
        "index": {
          "description": "separate Haskell name and XML name",
          "hierarchy": "Text XML HaXml TypeMapping",
          "module": "Text.XML.HaXml.TypeMapping",
          "name": "Prim",
          "package": "HaXml",
          "partial": "Prim",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-TypeMapping.html#v:Prim"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.TypeMapping",
          "name": "String",
          "package": "HaXml",
          "signature": "String",
          "source": "src/Text-XML-HaXml-TypeMapping.html#HType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml TypeMapping",
          "module": "Text.XML.HaXml.TypeMapping",
          "name": "String",
          "package": "HaXml",
          "partial": "String",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-TypeMapping.html#v:String"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.TypeMapping",
          "name": "Tuple",
          "package": "HaXml",
          "signature": "Tuple [HType]",
          "source": "src/Text-XML-HaXml-TypeMapping.html#HType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml TypeMapping",
          "module": "Text.XML.HaXml.TypeMapping",
          "name": "Tuple",
          "normalized": "Tuple[HType]",
          "package": "HaXml",
          "partial": "Tuple",
          "signature": "Tuple[HType]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-TypeMapping.html#v:Tuple"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eProject the n'th constructor from an HType and convert it to a string\n   suitable for an XML tagname.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.TypeMapping",
          "name": "showConstr",
          "package": "HaXml",
          "signature": "Int -\u003e HType -\u003e String",
          "source": "src/Text-XML-HaXml-TypeMapping.html#showConstr",
          "type": "function"
        },
        "index": {
          "description": "Project the th constructor from an HType and convert it to string suitable for an XML tagname",
          "hierarchy": "Text XML HaXml TypeMapping",
          "module": "Text.XML.HaXml.TypeMapping",
          "name": "showConstr",
          "normalized": "Int-\u003eHType-\u003eString",
          "package": "HaXml",
          "partial": "Constr",
          "signature": "Int-\u003eHType-\u003eString",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-TypeMapping.html#v:showConstr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.TypeMapping",
          "name": "showHType",
          "package": "HaXml",
          "signature": "HType -\u003e ShowS",
          "source": "src/Text-XML-HaXml-TypeMapping.html#showHType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml TypeMapping",
          "module": "Text.XML.HaXml.TypeMapping",
          "name": "showHType",
          "normalized": "HType-\u003eShowS",
          "package": "HaXml",
          "partial": "HType",
          "signature": "HType-\u003eShowS",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-TypeMapping.html#v:showHType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e\u003ccode\u003e\u003ca\u003etoDTD\u003c/a\u003e\u003c/code\u003e converts a concrete representation of the Haskell type of\n   a value (obtained by the method \u003ccode\u003e\u003ca\u003etoHType\u003c/a\u003e\u003c/code\u003e) into a real DocTypeDecl.\n   It ensures that PERefs are defined before they are used, and that no\n   element or attribute-list is declared more than once.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.TypeMapping",
          "name": "toDTD",
          "package": "HaXml",
          "signature": "HType -\u003e DocTypeDecl",
          "source": "src/Text-XML-HaXml-TypeMapping.html#toDTD",
          "type": "function"
        },
        "index": {
          "description": "toDTD converts concrete representation of the Haskell type of value obtained by the method toHType into real DocTypeDecl It ensures that PERefs are defined before they are used and that no element or attribute-list is declared more than once",
          "hierarchy": "Text XML HaXml TypeMapping",
          "module": "Text.XML.HaXml.TypeMapping",
          "name": "toDTD",
          "normalized": "HType-\u003eDocTypeDecl",
          "package": "HaXml",
          "partial": "DTD",
          "signature": "HType-\u003eDocTypeDecl",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-TypeMapping.html#v:toDTD"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.TypeMapping",
          "name": "toHType",
          "package": "HaXml",
          "signature": "a -\u003e HType",
          "source": "src/Text-XML-HaXml-TypeMapping.html#toHType",
          "type": "method"
        },
        "index": {
          "hierarchy": "Text XML HaXml TypeMapping",
          "module": "Text.XML.HaXml.TypeMapping",
          "name": "toHType",
          "normalized": "a-\u003eHType",
          "package": "HaXml",
          "partial": "HType",
          "signature": "a-\u003eHType",
          "type": "method"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-TypeMapping.html#v:toHType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThis module defines an internal (generic) representation for XML\n   documents including their DTDs.\n\u003c/p\u003e\u003cp\u003eHistory:\n   The original module was derived by hand from the XML specification,\n   following the grammar precisely.  Then we simplified the types,\n   removing layers of indirection and redundancy, and generally making\n   things easier to work with.  Then we allowed PEReferences to be\n   ubiquitous, by removing them from the types and resolving all\n   PE references at parse-time.  Finally, we added a per-document\n   symbol table for GEReferences, and a whitespace-significance flag\n   for plaintext.\n\u003c/p\u003e\u003c/div\u003e",
          "module": "Text.XML.HaXml.Types",
          "name": "Types",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html",
          "type": "module"
        },
        "index": {
          "description": "This module defines an internal generic representation for XML documents including their DTDs History The original module was derived by hand from the XML specification following the grammar precisely Then we simplified the types removing layers of indirection and redundancy and generally making things easier to work with Then we allowed PEReferences to be ubiquitous by removing them from the types and resolving all PE references at parse-time Finally we added per-document symbol table for GEReferences and whitespace-significance flag for plaintext",
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "Types",
          "package": "HaXml",
          "partial": "Types",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "AttDef",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#AttDef",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "AttDef",
          "package": "HaXml",
          "partial": "Att Def",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#t:AttDef"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "AttListDecl",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#AttListDecl",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "AttListDecl",
          "package": "HaXml",
          "partial": "Att List Decl",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#t:AttListDecl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "AttType",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#AttType",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "AttType",
          "package": "HaXml",
          "partial": "Att Type",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#t:AttType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "AttValue",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#AttValue",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "AttValue",
          "package": "HaXml",
          "partial": "Att Value",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#t:AttValue"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "Attribute",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#Attribute",
          "type": "type"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "Attribute",
          "package": "HaXml",
          "partial": "Attribute",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#t:Attribute"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "CDSect",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#CDSect",
          "type": "type"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "CDSect",
          "package": "HaXml",
          "partial": "CDSect",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#t:CDSect"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "CP",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#CP",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "CP",
          "package": "HaXml",
          "partial": "CP",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#t:CP"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "CharData",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#CharData",
          "type": "type"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "CharData",
          "package": "HaXml",
          "partial": "Char Data",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#t:CharData"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "CharRef",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#CharRef",
          "type": "type"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "CharRef",
          "package": "HaXml",
          "partial": "Char Ref",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#t:CharRef"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "Comment",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#Comment",
          "type": "type"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "Comment",
          "package": "HaXml",
          "partial": "Comment",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#t:Comment"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "ConditionalSect",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#ConditionalSect",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "ConditionalSect",
          "package": "HaXml",
          "partial": "Conditional Sect",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#t:ConditionalSect"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "Content",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#Content",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "Content",
          "package": "HaXml",
          "partial": "Content",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#t:Content"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "ContentSpec",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#ContentSpec",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "ContentSpec",
          "package": "HaXml",
          "partial": "Content Spec",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#t:ContentSpec"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "DefaultDecl",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#DefaultDecl",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "DefaultDecl",
          "package": "HaXml",
          "partial": "Default Decl",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#t:DefaultDecl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "DocTypeDecl",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#DocTypeDecl",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "DocTypeDecl",
          "package": "HaXml",
          "partial": "Doc Type Decl",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#t:DocTypeDecl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eThe symbol table stored in a document holds all its general entity\n   reference definitions.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Types",
          "name": "Document",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#Document",
          "type": "data"
        },
        "index": {
          "description": "The symbol table stored in document holds all its general entity reference definitions",
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "Document",
          "package": "HaXml",
          "partial": "Document",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#t:Document"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "EV",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#EV",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "EV",
          "package": "HaXml",
          "partial": "EV",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#t:EV"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "ElemTag",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#ElemTag",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "ElemTag",
          "package": "HaXml",
          "partial": "Elem Tag",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#t:ElemTag"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "Element",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#Element",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "Element",
          "package": "HaXml",
          "partial": "Element",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#t:Element"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "ElementDecl",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#ElementDecl",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "ElementDecl",
          "package": "HaXml",
          "partial": "Element Decl",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#t:ElementDecl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "EncodingDecl",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#EncodingDecl",
          "type": "newtype"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "EncodingDecl",
          "package": "HaXml",
          "partial": "Encoding Decl",
          "type": "newtype"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#t:EncodingDecl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "EntityDecl",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#EntityDecl",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "EntityDecl",
          "package": "HaXml",
          "partial": "Entity Decl",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#t:EntityDecl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "EntityDef",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#EntityDef",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "EntityDef",
          "package": "HaXml",
          "partial": "Entity Def",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#t:EntityDef"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "EntityRef",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#EntityRef",
          "type": "type"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "EntityRef",
          "package": "HaXml",
          "partial": "Entity Ref",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#t:EntityRef"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "EntityValue",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#EntityValue",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "EntityValue",
          "package": "HaXml",
          "partial": "Entity Value",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#t:EntityValue"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "EnumeratedType",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#EnumeratedType",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "EnumeratedType",
          "package": "HaXml",
          "partial": "Enumerated Type",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#t:EnumeratedType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "Enumeration",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#Enumeration",
          "type": "type"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "Enumeration",
          "package": "HaXml",
          "partial": "Enumeration",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#t:Enumeration"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "ExtPE",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#ExtPE",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "ExtPE",
          "package": "HaXml",
          "partial": "Ext PE",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#t:ExtPE"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "ExtParsedEnt",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#ExtParsedEnt",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "ExtParsedEnt",
          "package": "HaXml",
          "partial": "Ext Parsed Ent",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#t:ExtParsedEnt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "ExtSubset",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#ExtSubset",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "ExtSubset",
          "package": "HaXml",
          "partial": "Ext Subset",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#t:ExtSubset"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "ExtSubsetDecl",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#ExtSubsetDecl",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "ExtSubsetDecl",
          "package": "HaXml",
          "partial": "Ext Subset Decl",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#t:ExtSubsetDecl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "ExternalID",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#ExternalID",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "ExternalID",
          "package": "HaXml",
          "partial": "External ID",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#t:ExternalID"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "FIXED",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#FIXED",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "FIXED",
          "package": "HaXml",
          "partial": "FIXED",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#t:FIXED"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "GEDecl",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#GEDecl",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "GEDecl",
          "package": "HaXml",
          "partial": "GEDecl",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#t:GEDecl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "Ignore",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#Ignore",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "Ignore",
          "package": "HaXml",
          "partial": "Ignore",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#t:Ignore"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "IgnoreSect",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#IgnoreSect",
          "type": "type"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "IgnoreSect",
          "package": "HaXml",
          "partial": "Ignore Sect",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#t:IgnoreSect"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "IgnoreSectContents",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#IgnoreSectContents",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "IgnoreSectContents",
          "package": "HaXml",
          "partial": "Ignore Sect Contents",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#t:IgnoreSectContents"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "IncludeSect",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#IncludeSect",
          "type": "type"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "IncludeSect",
          "package": "HaXml",
          "partial": "Include Sect",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#t:IncludeSect"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "MarkupDecl",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#MarkupDecl",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "MarkupDecl",
          "package": "HaXml",
          "partial": "Markup Decl",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#t:MarkupDecl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "Misc",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#Misc",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "Misc",
          "package": "HaXml",
          "partial": "Misc",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#t:Misc"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "Mixed",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#Mixed",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "Mixed",
          "package": "HaXml",
          "partial": "Mixed",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#t:Mixed"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "Modifier",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#Modifier",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "Modifier",
          "package": "HaXml",
          "partial": "Modifier",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#t:Modifier"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "NDataDecl",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#NDataDecl",
          "type": "newtype"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "NDataDecl",
          "package": "HaXml",
          "partial": "NData Decl",
          "type": "newtype"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#t:NDataDecl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "Name",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#Name",
          "type": "type"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "Name",
          "package": "HaXml",
          "partial": "Name",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#t:Name"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "Names",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#Names",
          "type": "type"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "Names",
          "package": "HaXml",
          "partial": "Names",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#t:Names"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eNamespaces are not defined in the XML spec itself, but at\n       http:\u003cem/\u003ewww.w3.org\u003cem\u003eTR\u003c/em\u003exml-names\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Types",
          "name": "Namespace",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#Namespace",
          "type": "data"
        },
        "index": {
          "description": "Namespaces are not defined in the XML spec itself but at http www.w3.org TR xml-names",
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "Namespace",
          "package": "HaXml",
          "partial": "Namespace",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#t:Namespace"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "NmToken",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#NmToken",
          "type": "type"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "NmToken",
          "package": "HaXml",
          "partial": "Nm Token",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#t:NmToken"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "NmTokens",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#NmTokens",
          "type": "type"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "NmTokens",
          "package": "HaXml",
          "partial": "Nm Tokens",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#t:NmTokens"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "NotationDecl",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#NotationDecl",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "NotationDecl",
          "package": "HaXml",
          "partial": "Notation Decl",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#t:NotationDecl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "NotationType",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#NotationType",
          "type": "type"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "NotationType",
          "package": "HaXml",
          "partial": "Notation Type",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#t:NotationType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "PEDecl",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#PEDecl",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "PEDecl",
          "package": "HaXml",
          "partial": "PEDecl",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#t:PEDecl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "PEDef",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#PEDef",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "PEDef",
          "package": "HaXml",
          "partial": "PEDef",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#t:PEDef"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "PEReference",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#PEReference",
          "type": "type"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "PEReference",
          "package": "HaXml",
          "partial": "PEReference",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#t:PEReference"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "PITarget",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#PITarget",
          "type": "type"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "PITarget",
          "package": "HaXml",
          "partial": "PITarget",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#t:PITarget"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "ProcessingInstruction",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#ProcessingInstruction",
          "type": "type"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "ProcessingInstruction",
          "package": "HaXml",
          "partial": "Processing Instruction",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#t:ProcessingInstruction"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "Prolog",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#Prolog",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "Prolog",
          "package": "HaXml",
          "partial": "Prolog",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#t:Prolog"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "PubidLiteral",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#PubidLiteral",
          "type": "newtype"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "PubidLiteral",
          "package": "HaXml",
          "partial": "Pubid Literal",
          "type": "newtype"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#t:PubidLiteral"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "PublicID",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#PublicID",
          "type": "newtype"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "PublicID",
          "package": "HaXml",
          "partial": "Public ID",
          "type": "newtype"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#t:PublicID"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eA QName is a (possibly) qualified name, in the sense of XML namespaces.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Types",
          "name": "QName",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#QName",
          "type": "data"
        },
        "index": {
          "description": "QName is possibly qualified name in the sense of XML namespaces",
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "QName",
          "package": "HaXml",
          "partial": "QName",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#t:QName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "Reference",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#Reference",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "Reference",
          "package": "HaXml",
          "partial": "Reference",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#t:Reference"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "SDDecl",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#SDDecl",
          "type": "type"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "SDDecl",
          "package": "HaXml",
          "partial": "SDDecl",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#t:SDDecl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "SymTab",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#SymTab",
          "type": "type"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "SymTab",
          "package": "HaXml",
          "partial": "Sym Tab",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#t:SymTab"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "SystemLiteral",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#SystemLiteral",
          "type": "newtype"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "SystemLiteral",
          "package": "HaXml",
          "partial": "System Literal",
          "type": "newtype"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#t:SystemLiteral"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "TextDecl",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#TextDecl",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "TextDecl",
          "package": "HaXml",
          "partial": "Text Decl",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#t:TextDecl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "TokenizedType",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#TokenizedType",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "TokenizedType",
          "package": "HaXml",
          "partial": "Tokenized Type",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#t:TokenizedType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "VersionInfo",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#VersionInfo",
          "type": "type"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "VersionInfo",
          "package": "HaXml",
          "partial": "Version Info",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#t:VersionInfo"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "XMLDecl",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#XMLDecl",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "XMLDecl",
          "package": "HaXml",
          "partial": "XMLDecl",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#t:XMLDecl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "ANY",
          "package": "HaXml",
          "signature": "ANY",
          "source": "src/Text-XML-HaXml-Types.html#ContentSpec",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "ANY",
          "package": "HaXml",
          "partial": "ANY",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:ANY"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "AttDef",
          "package": "HaXml",
          "signature": "AttDef QName AttType DefaultDecl",
          "source": "src/Text-XML-HaXml-Types.html#AttDef",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "AttDef",
          "package": "HaXml",
          "partial": "Att Def",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:AttDef"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "AttList",
          "package": "HaXml",
          "signature": "AttList AttListDecl",
          "source": "src/Text-XML-HaXml-Types.html#MarkupDecl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "AttList",
          "package": "HaXml",
          "partial": "Att List",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:AttList"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "AttListDecl",
          "package": "HaXml",
          "signature": "AttListDecl QName [AttDef]",
          "source": "src/Text-XML-HaXml-Types.html#AttListDecl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "AttListDecl",
          "normalized": "AttListDecl QName[AttDef]",
          "package": "HaXml",
          "partial": "Att List Decl",
          "signature": "AttListDecl QName[AttDef]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:AttListDecl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "[\"Text.XML.HaXml.Types\",\"Text.XML.HaXml.XmlContent.Parser\"]",
          "name": "AttValue",
          "package": "HaXml",
          "signature": "AttValue [Either String Reference]",
          "source": "src/Text-XML-HaXml-Types.html#AttValue",
          "type": "function",
          "uris": "[\"http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:AttValue\",\"http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Parser.html#v:AttValue\"]"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "AttValue",
          "normalized": "AttValue[Either String Reference]",
          "package": "HaXml",
          "partial": "Att Value",
          "signature": "AttValue[Either String Reference]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:AttValue"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "Choice",
          "package": "HaXml",
          "signature": "Choice [CP] Modifier",
          "source": "src/Text-XML-HaXml-Types.html#CP",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "Choice",
          "normalized": "Choice[CP]Modifier",
          "package": "HaXml",
          "partial": "Choice",
          "signature": "Choice[CP]Modifier",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:Choice"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "Comment",
          "package": "HaXml",
          "signature": "Comment Comment",
          "source": "src/Text-XML-HaXml-Types.html#Misc",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "Comment",
          "package": "HaXml",
          "partial": "Comment",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:Comment"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "ContentSpec",
          "package": "HaXml",
          "signature": "ContentSpec CP",
          "source": "src/Text-XML-HaXml-Types.html#ContentSpec",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "ContentSpec",
          "package": "HaXml",
          "partial": "Content Spec",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:ContentSpec"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "DTD",
          "package": "HaXml",
          "signature": "DTD QName (Maybe ExternalID) [MarkupDecl]",
          "source": "src/Text-XML-HaXml-Types.html#DocTypeDecl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "DTD",
          "normalized": "DTD QName(Maybe ExternalID)[MarkupDecl]",
          "package": "HaXml",
          "partial": "DTD",
          "signature": "DTD QName(Maybe ExternalID)[MarkupDecl]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:DTD"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "DefEntityValue",
          "package": "HaXml",
          "signature": "DefEntityValue EntityValue",
          "source": "src/Text-XML-HaXml-Types.html#EntityDef",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "DefEntityValue",
          "package": "HaXml",
          "partial": "Def Entity Value",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:DefEntityValue"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "DefExternalID",
          "package": "HaXml",
          "signature": "DefExternalID ExternalID (Maybe NDataDecl)",
          "source": "src/Text-XML-HaXml-Types.html#EntityDef",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "DefExternalID",
          "package": "HaXml",
          "partial": "Def External ID",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:DefExternalID"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "DefaultTo",
          "package": "HaXml",
          "signature": "DefaultTo AttValue (Maybe FIXED)",
          "source": "src/Text-XML-HaXml-Types.html#DefaultDecl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "DefaultTo",
          "package": "HaXml",
          "partial": "Default To",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:DefaultTo"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "[\"Text.XML.HaXml.Types\",\"Text.XML.HaXml.XmlContent.Parser\"]",
          "name": "Document",
          "package": "HaXml",
          "signature": "Document Prolog (SymTab EntityDef) (Element i) [Misc]",
          "source": "src/Text-XML-HaXml-Types.html#Document",
          "type": "function",
          "uris": "[\"http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:Document\",\"http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Parser.html#v:Document\"]"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "Document",
          "normalized": "Document Prolog(SymTab EntityDef)(Element a)[Misc]",
          "package": "HaXml",
          "partial": "Document",
          "signature": "Document Prolog(SymTab EntityDef)(Element i)[Misc]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:Document"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "EMPTY",
          "package": "HaXml",
          "signature": "EMPTY",
          "source": "src/Text-XML-HaXml-Types.html#ContentSpec",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "EMPTY",
          "package": "HaXml",
          "partial": "EMPTY",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:EMPTY"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "ENTITIES",
          "package": "HaXml",
          "signature": "ENTITIES",
          "source": "src/Text-XML-HaXml-Types.html#TokenizedType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "ENTITIES",
          "package": "HaXml",
          "partial": "ENTITIES",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:ENTITIES"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "ENTITY",
          "package": "HaXml",
          "signature": "ENTITY",
          "source": "src/Text-XML-HaXml-Types.html#TokenizedType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "ENTITY",
          "package": "HaXml",
          "partial": "ENTITY",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:ENTITY"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "EVRef",
          "package": "HaXml",
          "signature": "EVRef Reference",
          "source": "src/Text-XML-HaXml-Types.html#EV",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "EVRef",
          "package": "HaXml",
          "partial": "EVRef",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:EVRef"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "EVString",
          "package": "HaXml",
          "signature": "EVString String",
          "source": "src/Text-XML-HaXml-Types.html#EV",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "EVString",
          "package": "HaXml",
          "partial": "EVString",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:EVString"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "[\"Text.XML.HaXml.Types\",\"Text.XML.HaXml.XmlContent.Parser\"]",
          "name": "Elem",
          "package": "HaXml",
          "signature": "Elem QName [Attribute] [Content i]",
          "source": "src/Text-XML-HaXml-Types.html#Element",
          "type": "function",
          "uris": "[\"http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:Elem\",\"http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Parser.html#v:Elem\"]"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "Elem",
          "normalized": "Elem QName[Attribute][Content a]",
          "package": "HaXml",
          "partial": "Elem",
          "signature": "Elem QName[Attribute][Content i]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:Elem"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "[\"Text.XML.HaXml.Types\",\"Text.XML.HaXml.XmlContent.Parser\"]",
          "name": "ElemTag",
          "package": "HaXml",
          "signature": "ElemTag QName [Attribute]",
          "source": "src/Text-XML-HaXml-Types.html#ElemTag",
          "type": "function",
          "uris": "[\"http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:ElemTag\",\"http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Parser.html#v:ElemTag\"]"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "ElemTag",
          "normalized": "ElemTag QName[Attribute]",
          "package": "HaXml",
          "partial": "Elem Tag",
          "signature": "ElemTag QName[Attribute]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:ElemTag"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "Element",
          "package": "HaXml",
          "signature": "Element ElementDecl",
          "source": "src/Text-XML-HaXml-Types.html#MarkupDecl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "Element",
          "package": "HaXml",
          "partial": "Element",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:Element"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "ElementDecl",
          "package": "HaXml",
          "signature": "ElementDecl QName ContentSpec",
          "source": "src/Text-XML-HaXml-Types.html#ElementDecl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "ElementDecl",
          "package": "HaXml",
          "partial": "Element Decl",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:ElementDecl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "EncodingDecl",
          "package": "HaXml",
          "signature": "EncodingDecl String",
          "source": "src/Text-XML-HaXml-Types.html#EncodingDecl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "EncodingDecl",
          "package": "HaXml",
          "partial": "Encoding Decl",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:EncodingDecl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "Entity",
          "package": "HaXml",
          "signature": "Entity EntityDecl",
          "source": "src/Text-XML-HaXml-Types.html#MarkupDecl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "Entity",
          "package": "HaXml",
          "partial": "Entity",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:Entity"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "EntityGEDecl",
          "package": "HaXml",
          "signature": "EntityGEDecl GEDecl",
          "source": "src/Text-XML-HaXml-Types.html#EntityDecl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "EntityGEDecl",
          "package": "HaXml",
          "partial": "Entity GEDecl",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:EntityGEDecl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "EntityPEDecl",
          "package": "HaXml",
          "signature": "EntityPEDecl PEDecl",
          "source": "src/Text-XML-HaXml-Types.html#EntityDecl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "EntityPEDecl",
          "package": "HaXml",
          "partial": "Entity PEDecl",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:EntityPEDecl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "EntityValue",
          "package": "HaXml",
          "signature": "EntityValue [EV]",
          "source": "src/Text-XML-HaXml-Types.html#EntityValue",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "EntityValue",
          "normalized": "EntityValue[EV]",
          "package": "HaXml",
          "partial": "Entity Value",
          "signature": "EntityValue[EV]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:EntityValue"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "EnumeratedType",
          "package": "HaXml",
          "signature": "EnumeratedType EnumeratedType",
          "source": "src/Text-XML-HaXml-Types.html#AttType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "EnumeratedType",
          "package": "HaXml",
          "partial": "Enumerated Type",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:EnumeratedType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "Enumeration",
          "package": "HaXml",
          "signature": "Enumeration Enumeration",
          "source": "src/Text-XML-HaXml-Types.html#EnumeratedType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "Enumeration",
          "package": "HaXml",
          "partial": "Enumeration",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:Enumeration"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "ExtConditionalSect",
          "package": "HaXml",
          "signature": "ExtConditionalSect ConditionalSect",
          "source": "src/Text-XML-HaXml-Types.html#ExtSubsetDecl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "ExtConditionalSect",
          "package": "HaXml",
          "partial": "Ext Conditional Sect",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:ExtConditionalSect"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "ExtMarkupDecl",
          "package": "HaXml",
          "signature": "ExtMarkupDecl MarkupDecl",
          "source": "src/Text-XML-HaXml-Types.html#ExtSubsetDecl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "ExtMarkupDecl",
          "package": "HaXml",
          "partial": "Ext Markup Decl",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:ExtMarkupDecl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "ExtPE",
          "package": "HaXml",
          "signature": "ExtPE (Maybe TextDecl) [ExtSubsetDecl]",
          "source": "src/Text-XML-HaXml-Types.html#ExtPE",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "ExtPE",
          "normalized": "ExtPE(Maybe TextDecl)[ExtSubsetDecl]",
          "package": "HaXml",
          "partial": "Ext PE",
          "signature": "ExtPE(Maybe TextDecl)[ExtSubsetDecl]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:ExtPE"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "ExtParsedEnt",
          "package": "HaXml",
          "signature": "ExtParsedEnt (Maybe TextDecl) (Content i)",
          "source": "src/Text-XML-HaXml-Types.html#ExtParsedEnt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "ExtParsedEnt",
          "package": "HaXml",
          "partial": "Ext Parsed Ent",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:ExtParsedEnt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "ExtSubset",
          "package": "HaXml",
          "signature": "ExtSubset (Maybe TextDecl) [ExtSubsetDecl]",
          "source": "src/Text-XML-HaXml-Types.html#ExtSubset",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "ExtSubset",
          "normalized": "ExtSubset(Maybe TextDecl)[ExtSubsetDecl]",
          "package": "HaXml",
          "partial": "Ext Subset",
          "signature": "ExtSubset(Maybe TextDecl)[ExtSubsetDecl]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:ExtSubset"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "FIXED",
          "package": "HaXml",
          "signature": "FIXED",
          "source": "src/Text-XML-HaXml-Types.html#FIXED",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "FIXED",
          "package": "HaXml",
          "partial": "FIXED",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:FIXED"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "GEDecl",
          "package": "HaXml",
          "signature": "GEDecl Name EntityDef",
          "source": "src/Text-XML-HaXml-Types.html#GEDecl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "GEDecl",
          "package": "HaXml",
          "partial": "GEDecl",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:GEDecl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "ID",
          "package": "HaXml",
          "signature": "ID",
          "source": "src/Text-XML-HaXml-Types.html#TokenizedType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "ID",
          "package": "HaXml",
          "partial": "ID",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:ID"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "IDREF",
          "package": "HaXml",
          "signature": "IDREF",
          "source": "src/Text-XML-HaXml-Types.html#TokenizedType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "IDREF",
          "package": "HaXml",
          "partial": "IDREF",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:IDREF"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "IDREFS",
          "package": "HaXml",
          "signature": "IDREFS",
          "source": "src/Text-XML-HaXml-Types.html#TokenizedType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "IDREFS",
          "package": "HaXml",
          "partial": "IDREFS",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:IDREFS"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "IMPLIED",
          "package": "HaXml",
          "signature": "IMPLIED",
          "source": "src/Text-XML-HaXml-Types.html#DefaultDecl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "IMPLIED",
          "package": "HaXml",
          "partial": "IMPLIED",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:IMPLIED"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "Ignore",
          "package": "HaXml",
          "signature": "Ignore",
          "source": "src/Text-XML-HaXml-Types.html#Ignore",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "Ignore",
          "package": "HaXml",
          "partial": "Ignore",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:Ignore"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "IgnoreSect",
          "package": "HaXml",
          "signature": "IgnoreSect IgnoreSect",
          "source": "src/Text-XML-HaXml-Types.html#ConditionalSect",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "IgnoreSect",
          "package": "HaXml",
          "partial": "Ignore Sect",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:IgnoreSect"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "IgnoreSectContents",
          "package": "HaXml",
          "signature": "IgnoreSectContents Ignore [(IgnoreSectContents, Ignore)]",
          "source": "src/Text-XML-HaXml-Types.html#IgnoreSectContents",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "IgnoreSectContents",
          "normalized": "IgnoreSectContents Ignore[(IgnoreSectContents,Ignore)]",
          "package": "HaXml",
          "partial": "Ignore Sect Contents",
          "signature": "IgnoreSectContents Ignore[(IgnoreSectContents,Ignore)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:IgnoreSectContents"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "IncludeSect",
          "package": "HaXml",
          "signature": "IncludeSect IncludeSect",
          "source": "src/Text-XML-HaXml-Types.html#ConditionalSect",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "IncludeSect",
          "package": "HaXml",
          "partial": "Include Sect",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:IncludeSect"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "MarkupMisc",
          "package": "HaXml",
          "signature": "MarkupMisc Misc",
          "source": "src/Text-XML-HaXml-Types.html#MarkupDecl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "MarkupMisc",
          "package": "HaXml",
          "partial": "Markup Misc",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:MarkupMisc"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "Mixed",
          "package": "HaXml",
          "signature": "Mixed Mixed",
          "source": "src/Text-XML-HaXml-Types.html#ContentSpec",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "Mixed",
          "package": "HaXml",
          "partial": "Mixed",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:Mixed"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "NDATA",
          "package": "HaXml",
          "signature": "NDATA Name",
          "source": "src/Text-XML-HaXml-Types.html#NDataDecl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "NDATA",
          "package": "HaXml",
          "partial": "NDATA",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:NDATA"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "NMTOKEN",
          "package": "HaXml",
          "signature": "NMTOKEN",
          "source": "src/Text-XML-HaXml-Types.html#TokenizedType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "NMTOKEN",
          "package": "HaXml",
          "partial": "NMTOKEN",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:NMTOKEN"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "NMTOKENS",
          "package": "HaXml",
          "signature": "NMTOKENS",
          "source": "src/Text-XML-HaXml-Types.html#TokenizedType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "NMTOKENS",
          "package": "HaXml",
          "partial": "NMTOKENS",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:NMTOKENS"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "NOTATION",
          "package": "HaXml",
          "signature": "NOTATION Name (Either ExternalID PublicID)",
          "source": "src/Text-XML-HaXml-Types.html#NotationDecl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "NOTATION",
          "package": "HaXml",
          "partial": "NOTATION",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:NOTATION"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "Namespace",
          "package": "HaXml",
          "signature": "Namespace",
          "source": "src/Text-XML-HaXml-Types.html#Namespace",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "Namespace",
          "package": "HaXml",
          "partial": "Namespace",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:Namespace"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eJust One\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Types",
          "name": "None",
          "package": "HaXml",
          "signature": "None",
          "source": "src/Text-XML-HaXml-Types.html#Modifier",
          "type": "function"
        },
        "index": {
          "description": "Just One",
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "None",
          "package": "HaXml",
          "partial": "None",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:None"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "Notation",
          "package": "HaXml",
          "signature": "Notation NotationDecl",
          "source": "src/Text-XML-HaXml-Types.html#MarkupDecl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "Notation",
          "package": "HaXml",
          "partial": "Notation",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:Notation"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "NotationType",
          "package": "HaXml",
          "signature": "NotationType NotationType",
          "source": "src/Text-XML-HaXml-Types.html#EnumeratedType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "NotationType",
          "package": "HaXml",
          "partial": "Notation Type",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:NotationType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "PCDATA",
          "package": "HaXml",
          "signature": "PCDATA",
          "source": "src/Text-XML-HaXml-Types.html#Mixed",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "PCDATA",
          "package": "HaXml",
          "partial": "PCDATA",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:PCDATA"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "PCDATAplus",
          "package": "HaXml",
          "signature": "PCDATAplus [QName]",
          "source": "src/Text-XML-HaXml-Types.html#Mixed",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "PCDATAplus",
          "normalized": "PCDATAplus[QName]",
          "package": "HaXml",
          "partial": "PCDATAplus",
          "signature": "PCDATAplus[QName]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:PCDATAplus"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "PEDecl",
          "package": "HaXml",
          "signature": "PEDecl Name PEDef",
          "source": "src/Text-XML-HaXml-Types.html#PEDecl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "PEDecl",
          "package": "HaXml",
          "partial": "PEDecl",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:PEDecl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "PEDefEntityValue",
          "package": "HaXml",
          "signature": "PEDefEntityValue EntityValue",
          "source": "src/Text-XML-HaXml-Types.html#PEDef",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "PEDefEntityValue",
          "package": "HaXml",
          "partial": "PEDef Entity Value",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:PEDefEntityValue"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "PEDefExternalID",
          "package": "HaXml",
          "signature": "PEDefExternalID ExternalID",
          "source": "src/Text-XML-HaXml-Types.html#PEDef",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "PEDefExternalID",
          "package": "HaXml",
          "partial": "PEDef External ID",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:PEDefExternalID"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "PI",
          "package": "HaXml",
          "signature": "PI ProcessingInstruction",
          "source": "src/Text-XML-HaXml-Types.html#Misc",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "PI",
          "package": "HaXml",
          "partial": "PI",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:PI"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "PUBLIC",
          "package": "HaXml",
          "signature": "PUBLIC PubidLiteral SystemLiteral",
          "source": "src/Text-XML-HaXml-Types.html#ExternalID",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "PUBLIC",
          "package": "HaXml",
          "partial": "PUBLIC",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:PUBLIC"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "PUBLICID",
          "package": "HaXml",
          "signature": "PUBLICID PubidLiteral",
          "source": "src/Text-XML-HaXml-Types.html#PublicID",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "PUBLICID",
          "package": "HaXml",
          "partial": "PUBLICID",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:PUBLICID"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eOne Or More\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Types",
          "name": "Plus",
          "package": "HaXml",
          "signature": "Plus",
          "source": "src/Text-XML-HaXml-Types.html#Modifier",
          "type": "function"
        },
        "index": {
          "description": "One Or More",
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "Plus",
          "package": "HaXml",
          "partial": "Plus",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:Plus"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "[\"Text.XML.HaXml.Types\",\"Text.XML.HaXml.XmlContent.Parser\"]",
          "name": "Prolog",
          "package": "HaXml",
          "signature": "Prolog (Maybe XMLDecl) [Misc] (Maybe DocTypeDecl) [Misc]",
          "source": "src/Text-XML-HaXml-Types.html#Prolog",
          "type": "function",
          "uris": "[\"http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:Prolog\",\"http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Parser.html#v:Prolog\"]"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "Prolog",
          "normalized": "Prolog(Maybe XMLDecl)[Misc](Maybe DocTypeDecl)[Misc]",
          "package": "HaXml",
          "partial": "Prolog",
          "signature": "Prolog(Maybe XMLDecl)[Misc](Maybe DocTypeDecl)[Misc]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:Prolog"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "PubidLiteral",
          "package": "HaXml",
          "signature": "PubidLiteral String",
          "source": "src/Text-XML-HaXml-Types.html#PubidLiteral",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "PubidLiteral",
          "package": "HaXml",
          "partial": "Pubid Literal",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:PubidLiteral"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eZero Or One\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Types",
          "name": "Query",
          "package": "HaXml",
          "signature": "Query",
          "source": "src/Text-XML-HaXml-Types.html#Modifier",
          "type": "function"
        },
        "index": {
          "description": "Zero Or One",
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "Query",
          "package": "HaXml",
          "partial": "Query",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:Query"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "REQUIRED",
          "package": "HaXml",
          "signature": "REQUIRED",
          "source": "src/Text-XML-HaXml-Types.html#DefaultDecl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "REQUIRED",
          "package": "HaXml",
          "partial": "REQUIRED",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:REQUIRED"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "[\"Text.XML.HaXml.Types\",\"Text.XML.HaXml.XmlContent.Parser\"]",
          "name": "RefChar",
          "package": "HaXml",
          "signature": "RefChar CharRef",
          "source": "src/Text-XML-HaXml-Types.html#Reference",
          "type": "function",
          "uris": "[\"http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:RefChar\",\"http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Parser.html#v:RefChar\"]"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "RefChar",
          "package": "HaXml",
          "partial": "Ref Char",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:RefChar"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "[\"Text.XML.HaXml.Types\",\"Text.XML.HaXml.XmlContent.Parser\"]",
          "name": "RefEntity",
          "package": "HaXml",
          "signature": "RefEntity EntityRef",
          "source": "src/Text-XML-HaXml-Types.html#Reference",
          "type": "function",
          "uris": "[\"http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:RefEntity\",\"http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Parser.html#v:RefEntity\"]"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "RefEntity",
          "package": "HaXml",
          "partial": "Ref Entity",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:RefEntity"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "SYSTEM",
          "package": "HaXml",
          "signature": "SYSTEM SystemLiteral",
          "source": "src/Text-XML-HaXml-Types.html#ExternalID",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "SYSTEM",
          "package": "HaXml",
          "partial": "SYSTEM",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:SYSTEM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "Seq",
          "package": "HaXml",
          "signature": "Seq [CP] Modifier",
          "source": "src/Text-XML-HaXml-Types.html#CP",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "Seq",
          "normalized": "Seq[CP]Modifier",
          "package": "HaXml",
          "partial": "Seq",
          "signature": "Seq[CP]Modifier",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:Seq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eZero Or More\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Types",
          "name": "Star",
          "package": "HaXml",
          "signature": "Star",
          "source": "src/Text-XML-HaXml-Types.html#Modifier",
          "type": "function"
        },
        "index": {
          "description": "Zero Or More",
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "Star",
          "package": "HaXml",
          "partial": "Star",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:Star"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "StringType",
          "package": "HaXml",
          "signature": "StringType",
          "source": "src/Text-XML-HaXml-Types.html#AttType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "StringType",
          "package": "HaXml",
          "partial": "String Type",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:StringType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "SystemLiteral",
          "package": "HaXml",
          "signature": "SystemLiteral String",
          "source": "src/Text-XML-HaXml-Types.html#SystemLiteral",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "SystemLiteral",
          "package": "HaXml",
          "partial": "System Literal",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:SystemLiteral"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "TagName",
          "package": "HaXml",
          "signature": "TagName QName Modifier",
          "source": "src/Text-XML-HaXml-Types.html#CP",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "TagName",
          "package": "HaXml",
          "partial": "Tag Name",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:TagName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "TextDecl",
          "package": "HaXml",
          "signature": "TextDecl (Maybe VersionInfo) EncodingDecl",
          "source": "src/Text-XML-HaXml-Types.html#TextDecl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "TextDecl",
          "package": "HaXml",
          "partial": "Text Decl",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:TextDecl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "TokenizedType",
          "package": "HaXml",
          "signature": "TokenizedType TokenizedType",
          "source": "src/Text-XML-HaXml-Types.html#AttType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "TokenizedType",
          "package": "HaXml",
          "partial": "Tokenized Type",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:TokenizedType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "XMLDecl",
          "package": "HaXml",
          "signature": "XMLDecl VersionInfo (Maybe EncodingDecl) (Maybe SDDecl)",
          "source": "src/Text-XML-HaXml-Types.html#XMLDecl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "XMLDecl",
          "package": "HaXml",
          "partial": "XMLDecl",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:XMLDecl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "addST",
          "package": "HaXml",
          "signature": "String -\u003e a -\u003e SymTab a -\u003e SymTab a",
          "source": "src/Text-XML-HaXml-Types.html#addST",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "addST",
          "normalized": "String-\u003ea-\u003eSymTab a-\u003eSymTab a",
          "package": "HaXml",
          "partial": "ST",
          "signature": "String-\u003ea-\u003eSymTab a-\u003eSymTab a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:addST"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "emptyST",
          "package": "HaXml",
          "signature": "SymTab a",
          "source": "src/Text-XML-HaXml-Types.html#emptyST",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "emptyST",
          "package": "HaXml",
          "partial": "ST",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:emptyST"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "info",
          "package": "HaXml",
          "signature": "Content t -\u003e t",
          "source": "src/Text-XML-HaXml-Types.html#info",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "info",
          "normalized": "Content a-\u003ea",
          "package": "HaXml",
          "signature": "Content t-\u003et",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:info"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "lookupST",
          "package": "HaXml",
          "signature": "String -\u003e SymTab a -\u003e Maybe a",
          "source": "src/Text-XML-HaXml-Types.html#lookupST",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "lookupST",
          "normalized": "String-\u003eSymTab a-\u003eMaybe a",
          "package": "HaXml",
          "partial": "ST",
          "signature": "String-\u003eSymTab a-\u003eMaybe a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:lookupST"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "nsPrefix",
          "package": "HaXml",
          "signature": "String",
          "source": "src/Text-XML-HaXml-Types.html#Namespace",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "nsPrefix",
          "package": "HaXml",
          "partial": "Prefix",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:nsPrefix"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Types",
          "name": "nsURI",
          "package": "HaXml",
          "signature": "String",
          "source": "src/Text-XML-HaXml-Types.html#Namespace",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Types",
          "module": "Text.XML.HaXml.Types",
          "name": "nsURI",
          "package": "HaXml",
          "partial": "URI",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Types.html#v:nsURI"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cdiv class=\"doc\"\u003e\u003cul\u003e\u003cli\u003e Only a small module containing some helper functions to extract xml content\n - I would have added this to Types but I've put it into an additional module\n - to avoid circular references (Verbatim \u003ca\u003e-\u003c/a\u003e Types)\n\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e",
          "module": "Text.XML.HaXml.Util",
          "name": "Util",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Util.html",
          "type": "module"
        },
        "index": {
          "description": "Only small module containing some helper functions to extract xml content would have added this to Types but ve put it into an additional module to avoid circular references Verbatim Types",
          "hierarchy": "Text XML HaXml Util",
          "module": "Text.XML.HaXml.Util",
          "name": "Util",
          "package": "HaXml",
          "partial": "Util",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Util.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Util",
          "name": "attrs",
          "package": "HaXml",
          "signature": "Element i -\u003e [Attribute]",
          "source": "src/Text-XML-HaXml-Util.html#attrs",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Util",
          "module": "Text.XML.HaXml.Util",
          "name": "attrs",
          "normalized": "Element a-\u003e[Attribute]",
          "package": "HaXml",
          "signature": "Element i-\u003e[Attribute]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Util.html#v:attrs"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eIf you know that your CFilter returns a tag, you can use this\n   function to get the tagged Element.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Util",
          "name": "contentElem",
          "package": "HaXml",
          "signature": "Content i -\u003e Element i",
          "source": "src/Text-XML-HaXml-Util.html#contentElem",
          "type": "function"
        },
        "index": {
          "description": "If you know that your CFilter returns tag you can use this function to get the tagged Element",
          "hierarchy": "Text XML HaXml Util",
          "module": "Text.XML.HaXml.Util",
          "name": "contentElem",
          "normalized": "Content a-\u003eElement a",
          "package": "HaXml",
          "partial": "Elem",
          "signature": "Content i-\u003eElement i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Util.html#v:contentElem"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eGet the main element of the document so that you can apply\n   CFilters directly.  \u003ccode\u003ei\u003c/code\u003e is typically (posInNewCxt \u003ca\u003efilename\u003c/a\u003e Nothing) \n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Util",
          "name": "docContent",
          "package": "HaXml",
          "signature": "i -\u003e Document i -\u003e Content i",
          "source": "src/Text-XML-HaXml-Util.html#docContent",
          "type": "function"
        },
        "index": {
          "description": "Get the main element of the document so that you can apply CFilters directly is typically posInNewCxt filename Nothing",
          "hierarchy": "Text XML HaXml Util",
          "module": "Text.XML.HaXml.Util",
          "name": "docContent",
          "normalized": "a-\u003eDocument a-\u003eContent a",
          "package": "HaXml",
          "partial": "Content",
          "signature": "i-\u003eDocument i-\u003eContent i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Util.html#v:docContent"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Util",
          "name": "tagTextContent",
          "package": "HaXml",
          "signature": "Content i -\u003e [Char]",
          "source": "src/Text-XML-HaXml-Util.html#tagTextContent",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Util",
          "module": "Text.XML.HaXml.Util",
          "name": "tagTextContent",
          "normalized": "Content a-\u003e[Char]",
          "package": "HaXml",
          "partial": "Text Content",
          "signature": "Content i-\u003e[Char]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Util.html#v:tagTextContent"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eValidate a document against a dtd.\n\u003c/p\u003e\u003c/div\u003e",
          "module": "Text.XML.HaXml.Validate",
          "name": "Validate",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Validate.html",
          "type": "module"
        },
        "index": {
          "description": "Validate document against dtd",
          "hierarchy": "Text XML HaXml Validate",
          "module": "Text.XML.HaXml.Validate",
          "name": "Validate",
          "package": "HaXml",
          "partial": "Validate",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Validate.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e\u003ccode\u003e\u003ca\u003epartialValidate\u003c/a\u003e\u003c/code\u003e is like validate, except that it does not check that\n   the element type matches that of the DTD's root element.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Validate",
          "name": "partialValidate",
          "package": "HaXml",
          "signature": "DocTypeDecl -\u003e Element i -\u003e [String]",
          "source": "src/Text-XML-HaXml-Validate.html#partialValidate",
          "type": "function"
        },
        "index": {
          "description": "partialValidate is like validate except that it does not check that the element type matches that of the DTD root element",
          "hierarchy": "Text XML HaXml Validate",
          "module": "Text.XML.HaXml.Validate",
          "name": "partialValidate",
          "normalized": "DocTypeDecl-\u003eElement a-\u003e[String]",
          "package": "HaXml",
          "partial": "Validate",
          "signature": "DocTypeDecl-\u003eElement i-\u003e[String]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Validate.html#v:partialValidate"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e\u003ccode\u003e\u003ca\u003evalidate\u003c/a\u003e\u003c/code\u003e takes a DTD and a tagged element, and returns a list of\n   errors in the document with respect to its DTD.\n\u003c/p\u003e\u003cp\u003eIf you have several documents to validate against a single DTD,\n   then you will gain efficiency by freezing-in the DTD through partial\n   application, e.g. \u003ccode\u003echeckMyDTD = validate myDTD\u003c/code\u003e.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Validate",
          "name": "validate",
          "package": "HaXml",
          "signature": "DocTypeDecl -\u003e Element i -\u003e [String]",
          "source": "src/Text-XML-HaXml-Validate.html#validate",
          "type": "function"
        },
        "index": {
          "description": "validate takes DTD and tagged element and returns list of errors in the document with respect to its DTD If you have several documents to validate against single DTD then you will gain efficiency by freezing-in the DTD through partial application e.g checkMyDTD validate myDTD",
          "hierarchy": "Text XML HaXml Validate",
          "module": "Text.XML.HaXml.Validate",
          "name": "validate",
          "normalized": "DocTypeDecl-\u003eElement a-\u003e[String]",
          "package": "HaXml",
          "signature": "DocTypeDecl-\u003eElement i-\u003e[String]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Validate.html#v:validate"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThe preferred method for rendering a \u003ccode\u003e\u003ca\u003eDocument\u003c/a\u003e\u003c/code\u003e or single \u003ccode\u003e\u003ca\u003eContent\u003c/a\u003e\u003c/code\u003e\n   is by using the pretty printing facility defined in \u003ca\u003ePretty\u003c/a\u003e.\n   Pretty-printing does not work well for cases, however, where the\n   formatting in the XML document is significant. Examples of this\n   case are XHTML's \u003ccode\u003e\u003cpre\u003e\u003c/code\u003e tag, Docbook's \u003ccode\u003e\u003cliterallayout\u003e\u003c/code\u003e tag,\n   and many more.\n\u003c/p\u003e\u003cp\u003eTheoretically, the document author could avoid this problem by\n   wrapping the contents of these tags in a \u003c![CDATA[...]]\u003e section,\n   but often this is not practical, for instance when the\n   literal-layout section contains other elements. Finally, program\n   writers could manually format these elements by transforming them\n   into a \u003ccode\u003eliteral\u003c/code\u003e string in their \u003ccode\u003eCFliter\u003c/code\u003e, etc., but this is\n   annoying to do and prone to omissions and formatting errors.\n\u003c/p\u003e\u003cp\u003eAs an alternative, this module provides the function \u003ccode\u003e\u003ca\u003everbatim\u003c/a\u003e\u003c/code\u003e,\n   which will format XML \u003ccode\u003e\u003ca\u003eContent\u003c/a\u003e\u003c/code\u003e as a \u003ccode\u003e\u003ca\u003eString\u003c/a\u003e\u003c/code\u003e while retaining the\n   formatting of the input document unchanged.\n\u003c/p\u003e\u003cp\u003e\u003cem\u003eKnown problems\u003c/em\u003e:\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e HaXml's parser eats line feeds between two tags.\n\u003c/li\u003e\u003cli\u003e \u003ccode\u003e\u003ca\u003eAttribute\u003c/a\u003e\u003c/code\u003es should be formatted by making them an instance of\n      \u003ccode\u003e\u003ca\u003eVerbatim\u003c/a\u003e\u003c/code\u003e as well, but since an \u003ccode\u003e\u003ca\u003eAttribute\u003c/a\u003e\u003c/code\u003e is just a tuple,\n      not a full data type, the helper function \u003ccode\u003e\u003ca\u003everbAttr\u003c/a\u003e\u003c/code\u003e must be\n      used instead.\n\u003c/li\u003e\u003cli\u003e \u003ccode\u003e\u003ca\u003eCMisc\u003c/a\u003e\u003c/code\u003e is not yet supported.\n\u003c/li\u003e\u003cli\u003e \u003ccode\u003e\u003ca\u003eElement\u003c/a\u003e\u003c/code\u003es, which contain no content, are formatted as\n       \u003ccode\u003e\u003celement-name/\u003e\u003c/code\u003e, even if they were not defined as being of\n       type \u003ccode\u003eEMPTY\u003c/code\u003e. In XML this perfectly alright, but in SGML it is\n       not. Those, who wish to use \u003ccode\u003e\u003ca\u003everbatim\u003c/a\u003e\u003c/code\u003e to format parts of say\n       an HTML page will have to (a) replace problematic elements by\n       \u003ccode\u003eliteral\u003c/code\u003es \u003cem\u003ebefore\u003c/em\u003e running \u003ccode\u003e\u003ca\u003everbatim\u003c/a\u003e\u003c/code\u003e or (b) use a second\n       search-and-replace stage to fix this.\n\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e",
          "module": "Text.XML.HaXml.Verbatim",
          "name": "Verbatim",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Verbatim.html",
          "type": "module"
        },
        "index": {
          "description": "The preferred method for rendering Document or single Content is by using the pretty printing facility defined in Pretty Pretty-printing does not work well for cases however where the formatting in the XML document is significant Examples of this case are XHTML pre tag Docbook literallayout tag and many more Theoretically the document author could avoid this problem by wrapping the contents of these tags in CDATA section but often this is not practical for instance when the literal-layout section contains other elements Finally program writers could manually format these elements by transforming them into literal string in their CFliter etc but this is annoying to do and prone to omissions and formatting errors As an alternative this module provides the function verbatim which will format XML Content as String while retaining the formatting of the input document unchanged Known problems HaXml parser eats line feeds between two tags Attribute should be formatted by making them an instance of Verbatim as well but since an Attribute is just tuple not full data type the helper function verbAttr must be used instead CMisc is not yet supported Element which contain no content are formatted as element-name even if they were not defined as being of type EMPTY In XML this perfectly alright but in SGML it is not Those who wish to use verbatim to format parts of say an HTML page will have to replace problematic elements by literal before running verbatim or use second search-and-replace stage to fix this",
          "hierarchy": "Text XML HaXml Verbatim",
          "module": "Text.XML.HaXml.Verbatim",
          "name": "Verbatim",
          "package": "HaXml",
          "partial": "Verbatim",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Verbatim.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eThis class promises that the function \u003ccode\u003e\u003ca\u003everbatim\u003c/a\u003e\u003c/code\u003e knows how to\n format this data type into a string without changing the\n formatting.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Verbatim",
          "name": "Verbatim",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Verbatim.html#Verbatim",
          "type": "class"
        },
        "index": {
          "description": "This class promises that the function verbatim knows how to format this data type into string without changing the formatting",
          "hierarchy": "Text XML HaXml Verbatim",
          "module": "Text.XML.HaXml.Verbatim",
          "name": "Verbatim",
          "package": "HaXml",
          "partial": "Verbatim",
          "type": "class"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Verbatim.html#t:Verbatim"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Verbatim",
          "name": "qname",
          "package": "HaXml",
          "signature": "QName -\u003e String",
          "source": "src/Text-XML-HaXml-Verbatim.html#qname",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Verbatim",
          "module": "Text.XML.HaXml.Verbatim",
          "name": "qname",
          "normalized": "QName-\u003eString",
          "package": "HaXml",
          "signature": "QName-\u003eString",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Verbatim.html#v:qname"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eThis is a helper function is required because Haskell does not\n allow to make an ordinary tuple (like \u003ccode\u003e\u003ca\u003eAttribute\u003c/a\u003e\u003c/code\u003e) an instance of a\n class. The resulting output will preface the actual attribute with\n a single blank so that lists of \u003ccode\u003e\u003ca\u003eAttribute\u003c/a\u003e\u003c/code\u003es can be handled\n implicitly by the definition for lists of \u003ccode\u003e\u003ca\u003eVerbatim\u003c/a\u003e\u003c/code\u003e data types.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Verbatim",
          "name": "verbAttr",
          "package": "HaXml",
          "signature": "Attribute -\u003e String",
          "source": "src/Text-XML-HaXml-Verbatim.html#verbAttr",
          "type": "function"
        },
        "index": {
          "description": "This is helper function is required because Haskell does not allow to make an ordinary tuple like Attribute an instance of class The resulting output will preface the actual attribute with single blank so that lists of Attribute can be handled implicitly by the definition for lists of Verbatim data types",
          "hierarchy": "Text XML HaXml Verbatim",
          "module": "Text.XML.HaXml.Verbatim",
          "name": "verbAttr",
          "normalized": "Attribute-\u003eString",
          "package": "HaXml",
          "partial": "Attr",
          "signature": "Attribute-\u003eString",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Verbatim.html#v:verbAttr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Verbatim",
          "name": "verbatim",
          "package": "HaXml",
          "signature": "a -\u003e String",
          "source": "src/Text-XML-HaXml-Verbatim.html#verbatim",
          "type": "method"
        },
        "index": {
          "hierarchy": "Text XML HaXml Verbatim",
          "module": "Text.XML.HaXml.Verbatim",
          "name": "verbatim",
          "normalized": "a-\u003eString",
          "package": "HaXml",
          "signature": "a-\u003eString",
          "type": "method"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Verbatim.html#v:verbatim"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Wrappers",
          "name": "Wrappers",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Wrappers.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "Text XML HaXml Wrappers",
          "module": "Text.XML.HaXml.Wrappers",
          "name": "Wrappers",
          "package": "HaXml",
          "partial": "Wrappers",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Wrappers.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eThis useful auxiliary checks the commandline arguments for two\n   filenames, the input and output file respectively.  If either\n   is missing, it is replaced by \u003ccode\u003e\u003ca\u003e-\u003c/a\u003e\u003c/code\u003e, which can be interpreted by the\n   caller as stdin and/or stdout.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Wrappers",
          "name": "fix2Args",
          "package": "HaXml",
          "signature": "IO (String, String)",
          "source": "src/Text-XML-HaXml-Wrappers.html#fix2Args",
          "type": "function"
        },
        "index": {
          "description": "This useful auxiliary checks the commandline arguments for two filenames the input and output file respectively If either is missing it is replaced by which can be interpreted by the caller as stdin and or stdout",
          "hierarchy": "Text XML HaXml Wrappers",
          "module": "Text.XML.HaXml.Wrappers",
          "name": "fix2Args",
          "normalized": "IO(String,String)",
          "package": "HaXml",
          "partial": "Args",
          "signature": "IO(String,String)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Wrappers.html#v:fix2Args"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eThe wrapper \u003ccode\u003eonContent\u003c/code\u003e simply applies a given content filter to a\n   document.  Ambiguous or empty results raise an error exception.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Wrappers",
          "name": "onContent",
          "package": "HaXml",
          "signature": "CFilter i -\u003e Document i -\u003e Document i",
          "source": "src/Text-XML-HaXml-Wrappers.html#onContent",
          "type": "function"
        },
        "index": {
          "description": "The wrapper onContent simply applies given content filter to document Ambiguous or empty results raise an error exception",
          "hierarchy": "Text XML HaXml Wrappers",
          "module": "Text.XML.HaXml.Wrappers",
          "name": "onContent",
          "normalized": "CFilter a-\u003eDocument a-\u003eDocument a",
          "package": "HaXml",
          "partial": "Content",
          "signature": "CFilter i-\u003eDocument i-\u003eDocument i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Wrappers.html#v:onContent"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eThe wrapper \u003ccode\u003eprocessXmlWith\u003c/code\u003e returns an IO () computation\n   that collects the filenames (or stdin/stdout) to use when\n   reading/writing XML documents.  Its CFilter argument\n   is applied to transform the XML document from the input and\n   write it to the output.  No DTD is attached to the output.\n\u003c/p\u003e\u003cp\u003eIf the input filename ends with .html or .htm, it is parsed using\n   the error-correcting HTML parser rather than the strict XML parser.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Wrappers",
          "name": "processXmlWith",
          "package": "HaXml",
          "signature": "CFilter Posn -\u003e IO ()",
          "source": "src/Text-XML-HaXml-Wrappers.html#processXmlWith",
          "type": "function"
        },
        "index": {
          "description": "The wrapper processXmlWith returns an IO computation that collects the filenames or stdin stdout to use when reading writing XML documents Its CFilter argument is applied to transform the XML document from the input and write it to the output No DTD is attached to the output If the input filename ends with html or htm it is parsed using the error-correcting HTML parser rather than the strict XML parser",
          "hierarchy": "Text XML HaXml Wrappers",
          "module": "Text.XML.HaXml.Wrappers",
          "name": "processXmlWith",
          "normalized": "CFilter Posn-\u003eIO()",
          "package": "HaXml",
          "partial": "Xml With",
          "signature": "CFilter Posn-\u003eIO()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Wrappers.html#v:processXmlWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThe class \u003ccode\u003e\u003ca\u003eXmlContent\u003c/a\u003e\u003c/code\u003e is a kind of replacement for Read and Show:\n   it provides conversions between a generic XML tree representation\n   and your own more specialised typeful Haskell data trees.\n\u003c/p\u003e\u003cp\u003eIf you are starting with a set of Haskell datatypes, use DrIFT to\n   derive instances of this class for you:\n       http://repetae.net/john/computer/haskell/DrIFT\n   and use the current module for instances of the standard Haskell\n   datatypes list, Maybe, and so on.\n\u003c/p\u003e\u003cp\u003eIf you are starting with an XML DTD, use HaXml's tool DtdToHaskell\n   to generate both the Haskell types and the corresponding instances,\n   but _do_not_ use the current module for instances: use\n   Text.XML.HaXml.XmlContent instead.\n\u003c/p\u003e\u003c/div\u003e",
          "module": "Text.XML.HaXml.XmlContent.Haskell",
          "name": "Haskell",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-XmlContent-Haskell.html",
          "type": "module"
        },
        "index": {
          "description": "The class XmlContent is kind of replacement for Read and Show it provides conversions between generic XML tree representation and your own more specialised typeful Haskell data trees If you are starting with set of Haskell datatypes use DrIFT to derive instances of this class for you http repetae.net john computer haskell DrIFT and use the current module for instances of the standard Haskell datatypes list Maybe and so on If you are starting with an XML DTD use HaXml tool DtdToHaskell to generate both the Haskell types and the corresponding instances but do not use the current module for instances use Text.XML.HaXml.XmlContent instead",
          "hierarchy": "Text XML HaXml XmlContent Haskell",
          "module": "Text.XML.HaXml.XmlContent.Haskell",
          "name": "Haskell",
          "package": "HaXml",
          "partial": "Haskell",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Haskell.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eRead an XML document from a file and convert it to a fully-typed\n   Haskell value.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.XmlContent.Haskell",
          "name": "fReadXml",
          "package": "HaXml",
          "signature": "FilePath -\u003e IO a",
          "source": "src/Text-XML-HaXml-XmlContent-Haskell.html#fReadXml",
          "type": "function"
        },
        "index": {
          "description": "Read an XML document from file and convert it to fully-typed Haskell value",
          "hierarchy": "Text XML HaXml XmlContent Haskell",
          "module": "Text.XML.HaXml.XmlContent.Haskell",
          "name": "fReadXml",
          "normalized": "FilePath-\u003eIO a",
          "package": "HaXml",
          "partial": "Read Xml",
          "signature": "FilePath-\u003eIO a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Haskell.html#v:fReadXml"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eWrite a fully-typed Haskell value to the given file as an XML\n   document.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.XmlContent.Haskell",
          "name": "fWriteXml",
          "package": "HaXml",
          "signature": "FilePath -\u003e a -\u003e IO ()",
          "source": "src/Text-XML-HaXml-XmlContent-Haskell.html#fWriteXml",
          "type": "function"
        },
        "index": {
          "description": "Write fully-typed Haskell value to the given file as an XML document",
          "hierarchy": "Text XML HaXml XmlContent Haskell",
          "module": "Text.XML.HaXml.XmlContent.Haskell",
          "name": "fWriteXml",
          "normalized": "FilePath-\u003ea-\u003eIO()",
          "package": "HaXml",
          "partial": "Write Xml",
          "signature": "FilePath-\u003ea-\u003eIO()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Haskell.html#v:fWriteXml"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eWrite a fully-typed XML document to a file handle, using the\n   FastPackedString interface (output will not be prettified).\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.XmlContent.Haskell",
          "name": "fpsHPutXml",
          "package": "HaXml",
          "signature": "Handle -\u003e Bool -\u003e a -\u003e IO ()",
          "source": "src/Text-XML-HaXml-XmlContent-Haskell.html#fpsHPutXml",
          "type": "function"
        },
        "index": {
          "description": "Write fully-typed XML document to file handle using the FastPackedString interface output will not be prettified",
          "hierarchy": "Text XML HaXml XmlContent Haskell",
          "module": "Text.XML.HaXml.XmlContent.Haskell",
          "name": "fpsHPutXml",
          "normalized": "Handle-\u003eBool-\u003ea-\u003eIO()",
          "package": "HaXml",
          "partial": "HPut Xml",
          "signature": "Handle-\u003eBool-\u003ea-\u003eIO()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Haskell.html#v:fpsHPutXml"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eConvert a fully-typed XML document to a ByteString (without DTD).\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.XmlContent.Haskell",
          "name": "fpsShowXml",
          "package": "HaXml",
          "signature": "Bool -\u003e a -\u003e ByteString",
          "source": "src/Text-XML-HaXml-XmlContent-Haskell.html#fpsShowXml",
          "type": "function"
        },
        "index": {
          "description": "Convert fully-typed XML document to ByteString without DTD",
          "hierarchy": "Text XML HaXml XmlContent Haskell",
          "module": "Text.XML.HaXml.XmlContent.Haskell",
          "name": "fpsShowXml",
          "normalized": "Bool-\u003ea-\u003eByteString",
          "package": "HaXml",
          "partial": "Show Xml",
          "signature": "Bool-\u003ea-\u003eByteString",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Haskell.html#v:fpsShowXml"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eWrite any Haskell value to the given file as an XML document,\n   using the FastPackedString interface (output will not be prettified).\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.XmlContent.Haskell",
          "name": "fpsWriteXml",
          "package": "HaXml",
          "signature": "FilePath -\u003e a -\u003e IO ()",
          "source": "src/Text-XML-HaXml-XmlContent-Haskell.html#fpsWriteXml",
          "type": "function"
        },
        "index": {
          "description": "Write any Haskell value to the given file as an XML document using the FastPackedString interface output will not be prettified",
          "hierarchy": "Text XML HaXml XmlContent Haskell",
          "module": "Text.XML.HaXml.XmlContent.Haskell",
          "name": "fpsWriteXml",
          "normalized": "FilePath-\u003ea-\u003eIO()",
          "package": "HaXml",
          "partial": "Write Xml",
          "signature": "FilePath-\u003ea-\u003eIO()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Haskell.html#v:fpsWriteXml"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eRead a Haskell value from an XML document, ignoring the DTD and\n   using the Haskell result type to determine how to parse it.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.XmlContent.Haskell",
          "name": "fromXml",
          "package": "HaXml",
          "signature": "Document Posn -\u003e Either String a",
          "source": "src/Text-XML-HaXml-XmlContent-Haskell.html#fromXml",
          "type": "function"
        },
        "index": {
          "description": "Read Haskell value from an XML document ignoring the DTD and using the Haskell result type to determine how to parse it",
          "hierarchy": "Text XML HaXml XmlContent Haskell",
          "module": "Text.XML.HaXml.XmlContent.Haskell",
          "name": "fromXml",
          "normalized": "Document Posn-\u003eEither String a",
          "package": "HaXml",
          "partial": "Xml",
          "signature": "Document Posn-\u003eEither String a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Haskell.html#v:fromXml"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eRead a fully-typed XML document from a file handle.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.XmlContent.Haskell",
          "name": "hGetXml",
          "package": "HaXml",
          "signature": "Handle -\u003e IO a",
          "source": "src/Text-XML-HaXml-XmlContent-Haskell.html#hGetXml",
          "type": "function"
        },
        "index": {
          "description": "Read fully-typed XML document from file handle",
          "hierarchy": "Text XML HaXml XmlContent Haskell",
          "module": "Text.XML.HaXml.XmlContent.Haskell",
          "name": "hGetXml",
          "normalized": "Handle-\u003eIO a",
          "package": "HaXml",
          "partial": "Get Xml",
          "signature": "Handle-\u003eIO a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Haskell.html#v:hGetXml"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eWrite a fully-typed XML document to a file handle.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.XmlContent.Haskell",
          "name": "hPutXml",
          "package": "HaXml",
          "signature": "Handle -\u003e Bool -\u003e a -\u003e IO ()",
          "source": "src/Text-XML-HaXml-XmlContent-Haskell.html#hPutXml",
          "type": "function"
        },
        "index": {
          "description": "Write fully-typed XML document to file handle",
          "hierarchy": "Text XML HaXml XmlContent Haskell",
          "module": "Text.XML.HaXml.XmlContent.Haskell",
          "name": "hPutXml",
          "normalized": "Handle-\u003eBool-\u003ea-\u003eIO()",
          "package": "HaXml",
          "partial": "Put Xml",
          "signature": "Handle-\u003eBool-\u003ea-\u003eIO()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Haskell.html#v:hPutXml"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eRead a fully-typed XML document from a string.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.XmlContent.Haskell",
          "name": "readXml",
          "package": "HaXml",
          "signature": "String -\u003e Either String a",
          "source": "src/Text-XML-HaXml-XmlContent-Haskell.html#readXml",
          "type": "function"
        },
        "index": {
          "description": "Read fully-typed XML document from string",
          "hierarchy": "Text XML HaXml XmlContent Haskell",
          "module": "Text.XML.HaXml.XmlContent.Haskell",
          "name": "readXml",
          "normalized": "String-\u003eEither String a",
          "package": "HaXml",
          "partial": "Xml",
          "signature": "String-\u003eEither String a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Haskell.html#v:readXml"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eConvert a fully-typed XML document to a string (without DTD).\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.XmlContent.Haskell",
          "name": "showXml",
          "package": "HaXml",
          "signature": "Bool -\u003e a -\u003e String",
          "source": "src/Text-XML-HaXml-XmlContent-Haskell.html#showXml",
          "type": "function"
        },
        "index": {
          "description": "Convert fully-typed XML document to string without DTD",
          "hierarchy": "Text XML HaXml XmlContent Haskell",
          "module": "Text.XML.HaXml.XmlContent.Haskell",
          "name": "showXml",
          "normalized": "Bool-\u003ea-\u003eString",
          "package": "HaXml",
          "partial": "Xml",
          "signature": "Bool-\u003ea-\u003eString",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Haskell.html#v:showXml"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eConvert a fully-typed XML document to a string (with or without DTD).\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.XmlContent.Haskell",
          "name": "toXml",
          "package": "HaXml",
          "signature": "Bool -\u003e a -\u003e Document ()",
          "source": "src/Text-XML-HaXml-XmlContent-Haskell.html#toXml",
          "type": "function"
        },
        "index": {
          "description": "Convert fully-typed XML document to string with or without DTD",
          "hierarchy": "Text XML HaXml XmlContent Haskell",
          "module": "Text.XML.HaXml.XmlContent.Haskell",
          "name": "toXml",
          "normalized": "Bool-\u003ea-\u003eDocument()",
          "package": "HaXml",
          "partial": "Xml",
          "signature": "Bool-\u003ea-\u003eDocument()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Haskell.html#v:toXml"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThe class \u003ccode\u003e\u003ca\u003eXmlContent\u003c/a\u003e\u003c/code\u003e is a kind of replacement for Read and Show:\n   it provides conversions between a generic XML tree representation\n   and your own more specialised typeful Haskell data trees.\n\u003c/p\u003e\u003cp\u003eIf you are starting with a set of Haskell datatypes, use DrIFT to\n   derive instances of this class for you:\n       http://repetae.net/john/computer/haskell/DrIFT\n   If you are starting with an XML DTD, use HaXml's tool DtdToHaskell\n   to generate both the Haskell types and the corresponding instances.\n\u003c/p\u003e\u003cp\u003eThis unified class interface replaces two previous (somewhat similar)\n   classes: Haskell2Xml and Xml2Haskell.  There was no real reason to have\n   separate classes depending on how you originally defined your datatypes.\n   However, some instances for basic types like lists will depend on which \n   direction you are using.  See Text.XML.HaXml.XmlContent and\n   Text.XML.HaXml.XmlContent.Haskell.\n\u003c/p\u003e\u003c/div\u003e",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "Parser",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-XmlContent-Parser.html",
          "type": "module"
        },
        "index": {
          "description": "The class XmlContent is kind of replacement for Read and Show it provides conversions between generic XML tree representation and your own more specialised typeful Haskell data trees If you are starting with set of Haskell datatypes use DrIFT to derive instances of this class for you http repetae.net john computer haskell DrIFT If you are starting with an XML DTD use HaXml tool DtdToHaskell to generate both the Haskell types and the corresponding instances This unified class interface replaces two previous somewhat similar classes Haskell2Xml and Xml2Haskell There was no real reason to have separate classes depending on how you originally defined your datatypes However some instances for basic types like lists will depend on which direction you are using See Text.XML.HaXml.XmlContent and Text.XML.HaXml.XmlContent.Haskell",
          "hierarchy": "Text XML HaXml XmlContent Parser",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "Parser",
          "package": "HaXml",
          "partial": "Parser",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Parser.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eA type corresponding to XML's ANY contentspec.\n   It is either a list of unconverted xml \u003ccode\u003e\u003ca\u003eContent\u003c/a\u003e\u003c/code\u003e\n   or some \u003ccode\u003e\u003ca\u003eXmlContent\u003c/a\u003e\u003c/code\u003e-able value.\n\u003c/p\u003e\u003cp\u003eParsing functions (e.g. \u003ccode\u003e\u003ca\u003eparseContents\u003c/a\u003e\u003c/code\u003e) will always produce \u003ccode\u003e\u003ca\u003eUnConverted\u003c/a\u003e\u003c/code\u003e.\n Note: The Show instance for \u003ccode\u003e\u003ca\u003eUnConverted\u003c/a\u003e\u003c/code\u003e uses \u003ccode\u003e\u003ca\u003everbatim\u003c/a\u003e\u003c/code\u003e.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "ANYContent",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-XmlContent-Parser.html#ANYContent",
          "type": "data"
        },
        "index": {
          "description": "type corresponding to XML ANY contentspec It is either list of unconverted xml Content or some XmlContent able value Parsing functions e.g parseContents will always produce UnConverted Note The Show instance for UnConverted uses verbatim",
          "hierarchy": "Text XML HaXml XmlContent Parser",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "ANYContent",
          "package": "HaXml",
          "partial": "ANYContent",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Parser.html#t:ANYContent"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "AttValue",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#AttValue",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml XmlContent Parser",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "AttValue",
          "package": "HaXml",
          "partial": "Att Value",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Parser.html#t:AttValue"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "Attribute",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#Attribute",
          "type": "type"
        },
        "index": {
          "hierarchy": "Text XML HaXml XmlContent Parser",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "Attribute",
          "package": "HaXml",
          "partial": "Attribute",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Parser.html#t:Attribute"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "Content",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#Content",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml XmlContent Parser",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "Content",
          "package": "HaXml",
          "partial": "Content",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Parser.html#t:Content"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eIf an attribute is defaultable, then it either takes the default\n   value (which is omitted from the output), or a non-default value\n   (which obviously must be printed).\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "Defaultable",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-XmlContent-Parser.html#Defaultable",
          "type": "data"
        },
        "index": {
          "description": "If an attribute is defaultable then it either takes the default value which is omitted from the output or non-default value which obviously must be printed",
          "hierarchy": "Text XML HaXml XmlContent Parser",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "Defaultable",
          "package": "HaXml",
          "partial": "Defaultable",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Parser.html#t:Defaultable"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eThe symbol table stored in a document holds all its general entity\n   reference definitions.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "Document",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#Document",
          "type": "data"
        },
        "index": {
          "description": "The symbol table stored in document holds all its general entity reference definitions",
          "hierarchy": "Text XML HaXml XmlContent Parser",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "Document",
          "package": "HaXml",
          "partial": "Document",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Parser.html#t:Document"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "ElemTag",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#ElemTag",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml XmlContent Parser",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "ElemTag",
          "package": "HaXml",
          "partial": "Elem Tag",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Parser.html#t:ElemTag"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "Element",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#Element",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml XmlContent Parser",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "Element",
          "package": "HaXml",
          "partial": "Element",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Parser.html#t:Element"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eThe List1 type represents lists with at least one element.\n   It is required for DTD content models that use + as a modifier.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "List1",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-XmlContent-Parser.html#List1",
          "type": "data"
        },
        "index": {
          "description": "The List1 type represents lists with at least one element It is required for DTD content models that use as modifier",
          "hierarchy": "Text XML HaXml XmlContent Parser",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "List1",
          "package": "HaXml",
          "partial": "List",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Parser.html#t:List1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "Prolog",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#Prolog",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml XmlContent Parser",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "Prolog",
          "package": "HaXml",
          "partial": "Prolog",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Parser.html#t:Prolog"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "Reference",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Types.html#Reference",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml XmlContent Parser",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "Reference",
          "package": "HaXml",
          "partial": "Reference",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Parser.html#t:Reference"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eWe need a parsing monad for reading generic XML Content into specific\n   datatypes.  This is a specialisation of the Text.ParserCombinators.Poly\n   ones, where the input token type is fixed as XML Content.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "XMLParser",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-XmlContent-Parser.html#XMLParser",
          "type": "type"
        },
        "index": {
          "description": "We need parsing monad for reading generic XML Content into specific datatypes This is specialisation of the Text.ParserCombinators.Poly ones where the input token type is fixed as XML Content",
          "hierarchy": "Text XML HaXml XmlContent Parser",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "XMLParser",
          "package": "HaXml",
          "partial": "XMLParser",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Parser.html#t:XMLParser"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eThe \u003ccode\u003eXmlAttrType\u003c/code\u003e class promises that an attribute taking an XML\n   enumerated type can be converted to and from a Haskell value.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "XmlAttrType",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-XmlContent-Parser.html#XmlAttrType",
          "type": "class"
        },
        "index": {
          "description": "The XmlAttrType class promises that an attribute taking an XML enumerated type can be converted to and from Haskell value",
          "hierarchy": "Text XML HaXml XmlContent Parser",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "XmlAttrType",
          "package": "HaXml",
          "partial": "Xml Attr Type",
          "type": "class"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Parser.html#t:XmlAttrType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eThe \u003ccode\u003eXmlAttributes\u003c/code\u003e class promises that a list of XML tag attributes\n   can be converted to and from a Haskell value.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "XmlAttributes",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-XmlContent-Parser.html#XmlAttributes",
          "type": "class"
        },
        "index": {
          "description": "The XmlAttributes class promises that list of XML tag attributes can be converted to and from Haskell value",
          "hierarchy": "Text XML HaXml XmlContent Parser",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "XmlAttributes",
          "package": "HaXml",
          "partial": "Xml Attributes",
          "type": "class"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Parser.html#t:XmlAttributes"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eThe \u003ccode\u003eXmlContent\u003c/code\u003e class promises that an XML Content element can be\n   converted to and from a Haskell value.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "XmlContent",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-XmlContent-Parser.html#XmlContent",
          "type": "class"
        },
        "index": {
          "description": "The XmlContent class promises that an XML Content element can be converted to and from Haskell value",
          "hierarchy": "Text XML HaXml XmlContent Parser",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "XmlContent",
          "package": "HaXml",
          "partial": "Xml Content",
          "type": "class"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Parser.html#t:XmlContent"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "ANYContent",
          "package": "HaXml",
          "signature": "ANYContent a",
          "source": "src/Text-XML-HaXml-XmlContent-Parser.html#ANYContent",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml XmlContent Parser",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "ANYContent",
          "package": "HaXml",
          "partial": "ANYContent",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Parser.html#v:ANYContent"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "Default",
          "package": "HaXml",
          "signature": "Default a",
          "source": "src/Text-XML-HaXml-XmlContent-Parser.html#Defaultable",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml XmlContent Parser",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "Default",
          "package": "HaXml",
          "partial": "Default",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Parser.html#v:Default"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "NonDefault",
          "package": "HaXml",
          "signature": "NonDefault a",
          "source": "src/Text-XML-HaXml-XmlContent-Parser.html#Defaultable",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml XmlContent Parser",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "NonDefault",
          "package": "HaXml",
          "partial": "Non Default",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Parser.html#v:NonDefault"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "NonEmpty",
          "package": "HaXml",
          "signature": "NonEmpty [a]",
          "source": "src/Text-XML-HaXml-XmlContent-Parser.html#List1",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml XmlContent Parser",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "NonEmpty",
          "normalized": "NonEmpty[a]",
          "package": "HaXml",
          "partial": "Non Empty",
          "signature": "NonEmpty[a]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Parser.html#v:NonEmpty"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "UnConverted",
          "package": "HaXml",
          "signature": "UnConverted [Content Posn]",
          "source": "src/Text-XML-HaXml-XmlContent-Parser.html#ANYContent",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml XmlContent Parser",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "UnConverted",
          "normalized": "UnConverted[Content Posn]",
          "package": "HaXml",
          "partial": "Un Converted",
          "signature": "UnConverted[Content Posn]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Parser.html#v:UnConverted"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "attr2str",
          "package": "HaXml",
          "signature": "AttValue -\u003e String",
          "source": "src/Text-XML-HaXml-XmlContent-Parser.html#attr2str",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml XmlContent Parser",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "attr2str",
          "normalized": "AttValue-\u003eString",
          "package": "HaXml",
          "signature": "AttValue-\u003eString",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Parser.html#v:attr2str"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eDo some parsing of the attributes of the given element\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "attributes",
          "package": "HaXml",
          "signature": "Element Posn -\u003e XMLParser a",
          "source": "src/Text-XML-HaXml-XmlContent-Parser.html#attributes",
          "type": "function"
        },
        "index": {
          "description": "Do some parsing of the attributes of the given element",
          "hierarchy": "Text XML HaXml XmlContent Parser",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "attributes",
          "normalized": "Element Posn-\u003eXMLParser a",
          "package": "HaXml",
          "signature": "Element Posn-\u003eXMLParser a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Parser.html#v:attributes"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eRead a single attribute called \u003ca\u003evalue\u003c/a\u003e.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "attval",
          "package": "HaXml",
          "signature": "Element i -\u003e a",
          "source": "src/Text-XML-HaXml-XmlContent-Parser.html#attval",
          "type": "function"
        },
        "index": {
          "description": "Read single attribute called value",
          "hierarchy": "Text XML HaXml XmlContent Parser",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "attval",
          "normalized": "Element a-\u003eb",
          "package": "HaXml",
          "signature": "Element i-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Parser.html#v:attval"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eThe \u003ccode\u003e\u003ca\u003ecatMaybes\u003c/a\u003e\u003c/code\u003e function takes a list of \u003ccode\u003e\u003ca\u003eMaybe\u003c/a\u003e\u003c/code\u003es and returns\n a list of all the \u003ccode\u003e\u003ca\u003eJust\u003c/a\u003e\u003c/code\u003e values. \n\u003c/p\u003e",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "catMaybes",
          "package": "HaXml",
          "signature": "[Maybe a] -\u003e [a]",
          "type": "function"
        },
        "index": {
          "description": "The catMaybes function takes list of Maybe and returns list of all the Just values",
          "hierarchy": "Text XML HaXml XmlContent Parser",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "catMaybes",
          "normalized": "[Maybe a]-\u003e[a]",
          "package": "HaXml",
          "partial": "Maybes",
          "signature": "[Maybe a]-\u003e[a]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Parser.html#v:catMaybes"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e'choice f p' means if parseContents succeeds, apply f to the result,\n   otherwise use the continuation parser.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "choice",
          "package": "HaXml",
          "signature": "(a -\u003e b) -\u003e XMLParser b -\u003e XMLParser b",
          "source": "src/Text-XML-HaXml-XmlContent-Parser.html#choice",
          "type": "function"
        },
        "index": {
          "description": "choice means if parseContents succeeds apply to the result otherwise use the continuation parser",
          "hierarchy": "Text XML HaXml XmlContent Parser",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "choice",
          "normalized": "(a-\u003eb)-\u003eXMLParser b-\u003eXMLParser b",
          "package": "HaXml",
          "signature": "(a-\u003eb)-\u003eXMLParser b-\u003eXMLParser b",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Parser.html#v:choice"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eThe most primitive combinator for XMLParser - get one content item.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "content",
          "package": "HaXml",
          "signature": "String -\u003e XMLParser (Content Posn)",
          "source": "src/Text-XML-HaXml-XmlContent-Parser.html#content",
          "type": "function"
        },
        "index": {
          "description": "The most primitive combinator for XMLParser get one content item",
          "hierarchy": "Text XML HaXml XmlContent Parser",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "content",
          "normalized": "String-\u003eXMLParser(Content Posn)",
          "package": "HaXml",
          "signature": "String-\u003eXMLParser(Content Posn)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Parser.html#v:content"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "defaultA",
          "package": "HaXml",
          "signature": "(String -\u003e Attribute -\u003e Maybe a) -\u003e a -\u003e String -\u003e [Attribute] -\u003e Defaultable a",
          "source": "src/Text-XML-HaXml-XmlContent-Parser.html#defaultA",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml XmlContent Parser",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "defaultA",
          "normalized": "(String-\u003eAttribute-\u003eMaybe a)-\u003ea-\u003eString-\u003e[Attribute]-\u003eDefaultable a",
          "package": "HaXml",
          "signature": "(String-\u003eAttribute-\u003eMaybe a)-\u003ea-\u003eString-\u003e[Attribute]-\u003eDefaultable a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Parser.html#v:defaultA"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "defaultToAttr",
          "package": "HaXml",
          "signature": "(String -\u003e a -\u003e Maybe Attribute) -\u003e String -\u003e Defaultable a -\u003e Maybe Attribute",
          "source": "src/Text-XML-HaXml-XmlContent-Parser.html#defaultToAttr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml XmlContent Parser",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "defaultToAttr",
          "normalized": "(String-\u003ea-\u003eMaybe Attribute)-\u003eString-\u003eDefaultable a-\u003eMaybe Attribute",
          "package": "HaXml",
          "partial": "To Attr",
          "signature": "(String-\u003ea-\u003eMaybe Attribute)-\u003eString-\u003eDefaultable a-\u003eMaybe Attribute",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Parser.html#v:defaultToAttr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003enot sure this is needed now.   'definite p' previously ensured that\n   an element was definitely present.  Now I think the monad might take\n   care of that for us.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "definite",
          "package": "HaXml",
          "signature": "XMLParser a -\u003e String -\u003e String -\u003e XMLParser a",
          "source": "src/Text-XML-HaXml-XmlContent-Parser.html#definite",
          "type": "function"
        },
        "index": {
          "description": "not sure this is needed now definite previously ensured that an element was definitely present Now think the monad might take care of that for us",
          "hierarchy": "Text XML HaXml XmlContent Parser",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "definite",
          "normalized": "XMLParser a-\u003eString-\u003eString-\u003eXMLParser a",
          "package": "HaXml",
          "signature": "XMLParser a-\u003eString-\u003eString-\u003eXMLParser a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Parser.html#v:definite"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "definiteA",
          "package": "HaXml",
          "signature": "(String -\u003e Attribute -\u003e Maybe a) -\u003e String -\u003e String -\u003e [Attribute] -\u003e a",
          "source": "src/Text-XML-HaXml-XmlContent-Parser.html#definiteA",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml XmlContent Parser",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "definiteA",
          "normalized": "(String-\u003eAttribute-\u003eMaybe a)-\u003eString-\u003eString-\u003e[Attribute]-\u003ea",
          "package": "HaXml",
          "signature": "(String-\u003eAttribute-\u003eMaybe a)-\u003eString-\u003eString-\u003e[Attribute]-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Parser.html#v:definiteA"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eLike element, only permits a more flexible match against the tagname.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "elementWith",
          "package": "HaXml",
          "signature": "(String -\u003e String -\u003e Bool) -\u003e [String] -\u003e XMLParser (Element Posn)",
          "source": "src/Text-XML-HaXml-XmlContent-Parser.html#elementWith",
          "type": "function"
        },
        "index": {
          "description": "Like element only permits more flexible match against the tagname",
          "hierarchy": "Text XML HaXml XmlContent Parser",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "elementWith",
          "normalized": "(String-\u003eString-\u003eBool)-\u003e[String]-\u003eXMLParser(Element Posn)",
          "package": "HaXml",
          "partial": "With",
          "signature": "(String-\u003eString-\u003eBool)-\u003e[String]-\u003eXMLParser(Element Posn)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Parser.html#v:elementWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "fromAttrToStr",
          "package": "HaXml",
          "signature": "String -\u003e Attribute -\u003e Maybe String",
          "source": "src/Text-XML-HaXml-XmlContent-Parser.html#fromAttrToStr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml XmlContent Parser",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "fromAttrToStr",
          "normalized": "String-\u003eAttribute-\u003eMaybe String",
          "package": "HaXml",
          "partial": "Attr To Str",
          "signature": "String-\u003eAttribute-\u003eMaybe String",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Parser.html#v:fromAttrToStr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "fromAttrToTyp",
          "package": "HaXml",
          "signature": "String -\u003e Attribute -\u003e Maybe a",
          "source": "src/Text-XML-HaXml-XmlContent-Parser.html#fromAttrToTyp",
          "type": "method"
        },
        "index": {
          "hierarchy": "Text XML HaXml XmlContent Parser",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "fromAttrToTyp",
          "normalized": "String-\u003eAttribute-\u003eMaybe a",
          "package": "HaXml",
          "partial": "Attr To Typ",
          "signature": "String-\u003eAttribute-\u003eMaybe a",
          "type": "method"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Parser.html#v:fromAttrToTyp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "fromAttrs",
          "package": "HaXml",
          "signature": "[Attribute] -\u003e a",
          "source": "src/Text-XML-HaXml-XmlContent-Parser.html#fromAttrs",
          "type": "method"
        },
        "index": {
          "hierarchy": "Text XML HaXml XmlContent Parser",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "fromAttrs",
          "normalized": "[Attribute]-\u003ea",
          "package": "HaXml",
          "partial": "Attrs",
          "signature": "[Attribute]-\u003ea",
          "type": "method"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Parser.html#v:fromAttrs"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eA combination of element + interior.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "inElement",
          "package": "HaXml",
          "signature": "String -\u003e XMLParser a -\u003e XMLParser a",
          "source": "src/Text-XML-HaXml-XmlContent-Parser.html#inElement",
          "type": "function"
        },
        "index": {
          "description": "combination of element interior",
          "hierarchy": "Text XML HaXml XmlContent Parser",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "inElement",
          "normalized": "String-\u003eXMLParser a-\u003eXMLParser a",
          "package": "HaXml",
          "partial": "Element",
          "signature": "String-\u003eXMLParser a-\u003eXMLParser a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Parser.html#v:inElement"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eA combination of elementWith + interior.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "inElementWith",
          "package": "HaXml",
          "signature": "(String -\u003e String -\u003e Bool) -\u003e String -\u003e XMLParser a -\u003e XMLParser a",
          "source": "src/Text-XML-HaXml-XmlContent-Parser.html#inElementWith",
          "type": "function"
        },
        "index": {
          "description": "combination of elementWith interior",
          "hierarchy": "Text XML HaXml XmlContent Parser",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "inElementWith",
          "normalized": "(String-\u003eString-\u003eBool)-\u003eString-\u003eXMLParser a-\u003eXMLParser a",
          "package": "HaXml",
          "partial": "Element With",
          "signature": "(String-\u003eString-\u003eBool)-\u003eString-\u003eXMLParser a-\u003eXMLParser a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Parser.html#v:inElementWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "maybeToAttr",
          "package": "HaXml",
          "signature": "(String -\u003e a -\u003e Maybe Attribute) -\u003e String -\u003e Maybe a -\u003e Maybe Attribute",
          "source": "src/Text-XML-HaXml-XmlContent-Parser.html#maybeToAttr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml XmlContent Parser",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "maybeToAttr",
          "normalized": "(String-\u003ea-\u003eMaybe Attribute)-\u003eString-\u003eMaybe a-\u003eMaybe Attribute",
          "package": "HaXml",
          "partial": "To Attr",
          "signature": "(String-\u003ea-\u003eMaybe Attribute)-\u003eString-\u003eMaybe a-\u003eMaybe Attribute",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Parser.html#v:maybeToAttr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eGenerate a single attribute.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "mkAttr",
          "package": "HaXml",
          "signature": "String -\u003e String -\u003e Attribute",
          "source": "src/Text-XML-HaXml-XmlContent-Parser.html#mkAttr",
          "type": "function"
        },
        "index": {
          "description": "Generate single attribute",
          "hierarchy": "Text XML HaXml XmlContent Parser",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "mkAttr",
          "normalized": "String-\u003eString-\u003eAttribute",
          "package": "HaXml",
          "partial": "Attr",
          "signature": "String-\u003eString-\u003eAttribute",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Parser.html#v:mkAttr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eGenerate an element with no attributes, named for its HType.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "mkElem",
          "package": "HaXml",
          "signature": "a -\u003e [Content ()] -\u003e Content ()",
          "source": "src/Text-XML-HaXml-XmlContent-Parser.html#mkElem",
          "type": "function"
        },
        "index": {
          "description": "Generate an element with no attributes named for its HType",
          "hierarchy": "Text XML HaXml XmlContent Parser",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "mkElem",
          "normalized": "a-\u003e[Content()]-\u003eContent()",
          "package": "HaXml",
          "partial": "Elem",
          "signature": "a-\u003e[Content()]-\u003eContent()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Parser.html#v:mkElem"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eGenerate an element with no attributes, named directly.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "mkElemC",
          "package": "HaXml",
          "signature": "String -\u003e [Content ()] -\u003e Content ()",
          "source": "src/Text-XML-HaXml-XmlContent-Parser.html#mkElemC",
          "type": "function"
        },
        "index": {
          "description": "Generate an element with no attributes named directly",
          "hierarchy": "Text XML HaXml XmlContent Parser",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "mkElemC",
          "normalized": "String-\u003e[Content()]-\u003eContent()",
          "package": "HaXml",
          "partial": "Elem",
          "signature": "String-\u003e[Content()]-\u003eContent()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Parser.html#v:mkElemC"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eConvert from XML to Haskell\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "parseContents",
          "package": "HaXml",
          "signature": "XMLParser a",
          "source": "src/Text-XML-HaXml-XmlContent-Parser.html#parseContents",
          "type": "method"
        },
        "index": {
          "description": "Convert from XML to Haskell",
          "hierarchy": "Text XML HaXml XmlContent Parser",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "parseContents",
          "package": "HaXml",
          "partial": "Contents",
          "type": "method"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Parser.html#v:parseContents"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "possibleA",
          "package": "HaXml",
          "signature": "(String -\u003e Attribute -\u003e Maybe a) -\u003e String -\u003e [Attribute] -\u003e Maybe a",
          "source": "src/Text-XML-HaXml-XmlContent-Parser.html#possibleA",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml XmlContent Parser",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "possibleA",
          "normalized": "(String-\u003eAttribute-\u003eMaybe a)-\u003eString-\u003e[Attribute]-\u003eMaybe a",
          "package": "HaXml",
          "signature": "(String-\u003eAttribute-\u003eMaybe a)-\u003eString-\u003e[Attribute]-\u003eMaybe a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Parser.html#v:possibleA"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "str2attr",
          "package": "HaXml",
          "signature": "String -\u003e AttValue",
          "source": "src/Text-XML-HaXml-XmlContent-Parser.html#str2attr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml XmlContent Parser",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "str2attr",
          "normalized": "String-\u003eAttValue",
          "package": "HaXml",
          "signature": "String-\u003eAttValue",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Parser.html#v:str2attr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "toAttrFrStr",
          "package": "HaXml",
          "signature": "String -\u003e String -\u003e Maybe Attribute",
          "source": "src/Text-XML-HaXml-XmlContent-Parser.html#toAttrFrStr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml XmlContent Parser",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "toAttrFrStr",
          "normalized": "String-\u003eString-\u003eMaybe Attribute",
          "package": "HaXml",
          "partial": "Attr Fr Str",
          "signature": "String-\u003eString-\u003eMaybe Attribute",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Parser.html#v:toAttrFrStr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "toAttrFrTyp",
          "package": "HaXml",
          "signature": "String -\u003e a -\u003e Maybe Attribute",
          "source": "src/Text-XML-HaXml-XmlContent-Parser.html#toAttrFrTyp",
          "type": "method"
        },
        "index": {
          "hierarchy": "Text XML HaXml XmlContent Parser",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "toAttrFrTyp",
          "normalized": "String-\u003ea-\u003eMaybe Attribute",
          "package": "HaXml",
          "partial": "Attr Fr Typ",
          "signature": "String-\u003ea-\u003eMaybe Attribute",
          "type": "method"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Parser.html#v:toAttrFrTyp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "toAttrs",
          "package": "HaXml",
          "signature": "a -\u003e [Attribute]",
          "source": "src/Text-XML-HaXml-XmlContent-Parser.html#toAttrs",
          "type": "method"
        },
        "index": {
          "hierarchy": "Text XML HaXml XmlContent Parser",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "toAttrs",
          "normalized": "a-\u003e[Attribute]",
          "package": "HaXml",
          "partial": "Attrs",
          "signature": "a-\u003e[Attribute]",
          "type": "method"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Parser.html#v:toAttrs"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eTurn a string into an XML CDATA section.\n   (i.e. special characters like \u003ccode\u003e&\u003c/code\u003e are preserved without interpretation.)\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "toCData",
          "package": "HaXml",
          "signature": "String -\u003e [Content ()]",
          "source": "src/Text-XML-HaXml-XmlContent-Parser.html#toCData",
          "type": "function"
        },
        "index": {
          "description": "Turn string into an XML CDATA section i.e special characters like are preserved without interpretation",
          "hierarchy": "Text XML HaXml XmlContent Parser",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "toCData",
          "normalized": "String-\u003e[Content()]",
          "package": "HaXml",
          "partial": "CData",
          "signature": "String-\u003e[Content()]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Parser.html#v:toCData"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eConvert from Haskell to XML\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "toContents",
          "package": "HaXml",
          "signature": "a -\u003e [Content ()]",
          "source": "src/Text-XML-HaXml-XmlContent-Parser.html#toContents",
          "type": "method"
        },
        "index": {
          "description": "Convert from Haskell to XML",
          "hierarchy": "Text XML HaXml XmlContent Parser",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "toContents",
          "normalized": "a-\u003e[Content()]",
          "package": "HaXml",
          "partial": "Contents",
          "signature": "a-\u003e[Content()]",
          "type": "method"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Parser.html#v:toContents"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eTurn a simple string into XML text.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "toText",
          "package": "HaXml",
          "signature": "String -\u003e [Content ()]",
          "source": "src/Text-XML-HaXml-XmlContent-Parser.html#toText",
          "type": "function"
        },
        "index": {
          "description": "Turn simple string into XML text",
          "hierarchy": "Text XML HaXml XmlContent Parser",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "toText",
          "normalized": "String-\u003e[Content()]",
          "package": "HaXml",
          "partial": "Text",
          "signature": "String-\u003e[Content()]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Parser.html#v:toText"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "xFromChar",
          "package": "HaXml",
          "signature": "Char -\u003e a",
          "source": "src/Text-XML-HaXml-XmlContent-Parser.html#xFromChar",
          "type": "method"
        },
        "index": {
          "hierarchy": "Text XML HaXml XmlContent Parser",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "xFromChar",
          "normalized": "Char-\u003ea",
          "package": "HaXml",
          "partial": "From Char",
          "signature": "Char-\u003ea",
          "type": "method"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Parser.html#v:xFromChar"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eDummy functions (for most types): used \u003cem\u003eonly\u003c/em\u003e in the Char instance\n   for coercing lists of Char into String.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "xToChar",
          "package": "HaXml",
          "signature": "a -\u003e Char",
          "source": "src/Text-XML-HaXml-XmlContent-Parser.html#xToChar",
          "type": "method"
        },
        "index": {
          "description": "Dummy functions for most types used only in the Char instance for coercing lists of Char into String",
          "hierarchy": "Text XML HaXml XmlContent Parser",
          "module": "Text.XML.HaXml.XmlContent.Parser",
          "name": "xToChar",
          "normalized": "a-\u003eChar",
          "package": "HaXml",
          "partial": "To Char",
          "signature": "a-\u003eChar",
          "type": "method"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent-Parser.html#v:xToChar"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThe class \u003ccode\u003e\u003ca\u003eXmlContent\u003c/a\u003e\u003c/code\u003e is a kind of replacement for Read and Show:\n   it provides conversions between a generic XML tree representation\n   and your own more specialised typeful Haskell data trees.\n\u003c/p\u003e\u003cp\u003eIf you are starting with an XML DTD, use HaXml's tool DtdToHaskell\n   to generate both the Haskell types and the corresponding instances.\n\u003c/p\u003e\u003cp\u003eIf you are starting with a set of Haskell datatypes, use DrIFT to\n   derive instances of this class for you:\n       http://repetae.net/john/computer/haskell/DrIFT\n   and _do_not_ use the current module, but rather\n   Text.XML.HaXml.XmlContent.Haskell, for the correct matching\n   instances for standard Haskell datatypes.\n\u003c/p\u003e\u003c/div\u003e",
          "module": "Text.XML.HaXml.XmlContent",
          "name": "XmlContent",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-XmlContent.html",
          "type": "module"
        },
        "index": {
          "description": "The class XmlContent is kind of replacement for Read and Show it provides conversions between generic XML tree representation and your own more specialised typeful Haskell data trees If you are starting with an XML DTD use HaXml tool DtdToHaskell to generate both the Haskell types and the corresponding instances If you are starting with set of Haskell datatypes use DrIFT to derive instances of this class for you http repetae.net john computer haskell DrIFT and do not use the current module but rather Text.XML.HaXml.XmlContent.Haskell for the correct matching instances for standard Haskell datatypes",
          "hierarchy": "Text XML HaXml XmlContent",
          "module": "Text.XML.HaXml.XmlContent",
          "name": "XmlContent",
          "package": "HaXml",
          "partial": "Xml Content",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eRead an XML document from a file and convert it to a fully-typed\n   Haskell value.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.XmlContent",
          "name": "fReadXml",
          "package": "HaXml",
          "signature": "FilePath -\u003e IO a",
          "source": "src/Text-XML-HaXml-XmlContent.html#fReadXml",
          "type": "function"
        },
        "index": {
          "description": "Read an XML document from file and convert it to fully-typed Haskell value",
          "hierarchy": "Text XML HaXml XmlContent",
          "module": "Text.XML.HaXml.XmlContent",
          "name": "fReadXml",
          "normalized": "FilePath-\u003eIO a",
          "package": "HaXml",
          "partial": "Read Xml",
          "signature": "FilePath-\u003eIO a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent.html#v:fReadXml"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eWrite a fully-typed Haskell value to the given file as an XML\n   document.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.XmlContent",
          "name": "fWriteXml",
          "package": "HaXml",
          "signature": "FilePath -\u003e a -\u003e IO ()",
          "source": "src/Text-XML-HaXml-XmlContent.html#fWriteXml",
          "type": "function"
        },
        "index": {
          "description": "Write fully-typed Haskell value to the given file as an XML document",
          "hierarchy": "Text XML HaXml XmlContent",
          "module": "Text.XML.HaXml.XmlContent",
          "name": "fWriteXml",
          "normalized": "FilePath-\u003ea-\u003eIO()",
          "package": "HaXml",
          "partial": "Write Xml",
          "signature": "FilePath-\u003ea-\u003eIO()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent.html#v:fWriteXml"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eWrite a fully-typed XML document to a file handle, using the\n   FastPackedString interface (output will not be prettified).\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.XmlContent",
          "name": "fpsHPutXml",
          "package": "HaXml",
          "signature": "Handle -\u003e Bool -\u003e a -\u003e IO ()",
          "source": "src/Text-XML-HaXml-XmlContent.html#fpsHPutXml",
          "type": "function"
        },
        "index": {
          "description": "Write fully-typed XML document to file handle using the FastPackedString interface output will not be prettified",
          "hierarchy": "Text XML HaXml XmlContent",
          "module": "Text.XML.HaXml.XmlContent",
          "name": "fpsHPutXml",
          "normalized": "Handle-\u003eBool-\u003ea-\u003eIO()",
          "package": "HaXml",
          "partial": "HPut Xml",
          "signature": "Handle-\u003eBool-\u003ea-\u003eIO()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent.html#v:fpsHPutXml"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eConvert a fully-typed XML document to a ByteString (without DTD).\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.XmlContent",
          "name": "fpsShowXml",
          "package": "HaXml",
          "signature": "Bool -\u003e a -\u003e ByteString",
          "source": "src/Text-XML-HaXml-XmlContent.html#fpsShowXml",
          "type": "function"
        },
        "index": {
          "description": "Convert fully-typed XML document to ByteString without DTD",
          "hierarchy": "Text XML HaXml XmlContent",
          "module": "Text.XML.HaXml.XmlContent",
          "name": "fpsShowXml",
          "normalized": "Bool-\u003ea-\u003eByteString",
          "package": "HaXml",
          "partial": "Show Xml",
          "signature": "Bool-\u003ea-\u003eByteString",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent.html#v:fpsShowXml"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eWrite any Haskell value to the given file as an XML document,\n   using the FastPackedString interface (output will not be prettified).\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.XmlContent",
          "name": "fpsWriteXml",
          "package": "HaXml",
          "signature": "FilePath -\u003e a -\u003e IO ()",
          "source": "src/Text-XML-HaXml-XmlContent.html#fpsWriteXml",
          "type": "function"
        },
        "index": {
          "description": "Write any Haskell value to the given file as an XML document using the FastPackedString interface output will not be prettified",
          "hierarchy": "Text XML HaXml XmlContent",
          "module": "Text.XML.HaXml.XmlContent",
          "name": "fpsWriteXml",
          "normalized": "FilePath-\u003ea-\u003eIO()",
          "package": "HaXml",
          "partial": "Write Xml",
          "signature": "FilePath-\u003ea-\u003eIO()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent.html#v:fpsWriteXml"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eRead a Haskell value from an XML document, ignoring the DTD and\n   using the Haskell result type to determine how to parse it.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.XmlContent",
          "name": "fromXml",
          "package": "HaXml",
          "signature": "Document Posn -\u003e Either String a",
          "source": "src/Text-XML-HaXml-XmlContent.html#fromXml",
          "type": "function"
        },
        "index": {
          "description": "Read Haskell value from an XML document ignoring the DTD and using the Haskell result type to determine how to parse it",
          "hierarchy": "Text XML HaXml XmlContent",
          "module": "Text.XML.HaXml.XmlContent",
          "name": "fromXml",
          "normalized": "Document Posn-\u003eEither String a",
          "package": "HaXml",
          "partial": "Xml",
          "signature": "Document Posn-\u003eEither String a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent.html#v:fromXml"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eRead a fully-typed XML document from a file handle.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.XmlContent",
          "name": "hGetXml",
          "package": "HaXml",
          "signature": "Handle -\u003e IO a",
          "source": "src/Text-XML-HaXml-XmlContent.html#hGetXml",
          "type": "function"
        },
        "index": {
          "description": "Read fully-typed XML document from file handle",
          "hierarchy": "Text XML HaXml XmlContent",
          "module": "Text.XML.HaXml.XmlContent",
          "name": "hGetXml",
          "normalized": "Handle-\u003eIO a",
          "package": "HaXml",
          "partial": "Get Xml",
          "signature": "Handle-\u003eIO a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent.html#v:hGetXml"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eWrite a fully-typed XML document to a file handle.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.XmlContent",
          "name": "hPutXml",
          "package": "HaXml",
          "signature": "Handle -\u003e Bool -\u003e a -\u003e IO ()",
          "source": "src/Text-XML-HaXml-XmlContent.html#hPutXml",
          "type": "function"
        },
        "index": {
          "description": "Write fully-typed XML document to file handle",
          "hierarchy": "Text XML HaXml XmlContent",
          "module": "Text.XML.HaXml.XmlContent",
          "name": "hPutXml",
          "normalized": "Handle-\u003eBool-\u003ea-\u003eIO()",
          "package": "HaXml",
          "partial": "Put Xml",
          "signature": "Handle-\u003eBool-\u003ea-\u003eIO()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent.html#v:hPutXml"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eRead a fully-typed XML document from a string.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.XmlContent",
          "name": "readXml",
          "package": "HaXml",
          "signature": "String -\u003e Either String a",
          "source": "src/Text-XML-HaXml-XmlContent.html#readXml",
          "type": "function"
        },
        "index": {
          "description": "Read fully-typed XML document from string",
          "hierarchy": "Text XML HaXml XmlContent",
          "module": "Text.XML.HaXml.XmlContent",
          "name": "readXml",
          "normalized": "String-\u003eEither String a",
          "package": "HaXml",
          "partial": "Xml",
          "signature": "String-\u003eEither String a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent.html#v:readXml"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eConvert a fully-typed XML document to a string (without DTD).\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.XmlContent",
          "name": "showXml",
          "package": "HaXml",
          "signature": "Bool -\u003e a -\u003e String",
          "source": "src/Text-XML-HaXml-XmlContent.html#showXml",
          "type": "function"
        },
        "index": {
          "description": "Convert fully-typed XML document to string without DTD",
          "hierarchy": "Text XML HaXml XmlContent",
          "module": "Text.XML.HaXml.XmlContent",
          "name": "showXml",
          "normalized": "Bool-\u003ea-\u003eString",
          "package": "HaXml",
          "partial": "Xml",
          "signature": "Bool-\u003ea-\u003eString",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent.html#v:showXml"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eConvert a fully-typed XML document to a string (with or without DTD).\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.XmlContent",
          "name": "toXml",
          "package": "HaXml",
          "signature": "Bool -\u003e a -\u003e Document ()",
          "source": "src/Text-XML-HaXml-XmlContent.html#toXml",
          "type": "function"
        },
        "index": {
          "description": "Convert fully-typed XML document to string with or without DTD",
          "hierarchy": "Text XML HaXml XmlContent",
          "module": "Text.XML.HaXml.XmlContent",
          "name": "toXml",
          "normalized": "Bool-\u003ea-\u003eDocument()",
          "package": "HaXml",
          "partial": "Xml",
          "signature": "Bool-\u003ea-\u003eDocument()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-XmlContent.html#v:toXml"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThis is a new set of XML combinators for Xtract, not standard,\n   but based on the standard set in \u003ca\u003eText.Xml.Haxml.Combinators\u003c/a\u003e.\n   The main difference is that the Content Filter type becomes a\n   Double Filter.  A Double Filter always takes the whole document\n   as an extra argument, so you can start to traverse it again from\n   the root, when at any inner location within the document tree.\n\u003c/p\u003e\u003cp\u003eThe new combinator definitions are derived from the old ones.\n   The same names have the equivalent meaning - use module qualification\n   on imports to distinguish between CFilter and DFilter variations.\n\u003c/p\u003e\u003c/div\u003e",
          "module": "Text.XML.HaXml.Xtract.Combinators",
          "name": "Combinators",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Xtract-Combinators.html",
          "type": "module"
        },
        "index": {
          "description": "This is new set of XML combinators for Xtract not standard but based on the standard set in Text.Xml.Haxml.Combinators The main difference is that the Content Filter type becomes Double Filter Double Filter always takes the whole document as an extra argument so you can start to traverse it again from the root when at any inner location within the document tree The new combinator definitions are derived from the old ones The same names have the equivalent meaning use module qualification on imports to distinguish between CFilter and DFilter variations",
          "hierarchy": "Text XML HaXml Xtract Combinators",
          "module": "Text.XML.HaXml.Xtract.Combinators",
          "name": "Combinators",
          "package": "HaXml",
          "partial": "Combinators",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Xtract-Combinators.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003edouble content filter - takes document root + local subtree.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Xtract.Combinators",
          "name": "DFilter",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Xtract-Combinators.html#DFilter",
          "type": "type"
        },
        "index": {
          "description": "double content filter takes document root local subtree",
          "hierarchy": "Text XML HaXml Xtract Combinators",
          "module": "Text.XML.HaXml.Xtract.Combinators",
          "name": "DFilter",
          "package": "HaXml",
          "partial": "DFilter",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Xtract-Combinators.html#t:DFilter"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003elifted choice.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Xtract.Combinators",
          "name": "(|\u003e|)",
          "package": "HaXml",
          "signature": "(a -\u003e b -\u003e [c]) -\u003e (a -\u003e b -\u003e [c]) -\u003e a -\u003e b -\u003e [c]",
          "source": "src/Text-XML-HaXml-Xtract-Combinators.html#%7C%3E%7C",
          "type": "function"
        },
        "index": {
          "description": "lifted choice",
          "hierarchy": "Text XML HaXml Xtract Combinators",
          "module": "Text.XML.HaXml.Xtract.Combinators",
          "name": "(|\u003e|) |\u003e|",
          "normalized": "(a-\u003eb-\u003e[c])-\u003e(a-\u003eb-\u003e[c])-\u003ea-\u003eb-\u003e[c]",
          "package": "HaXml",
          "signature": "(a-\u003eb-\u003e[c])-\u003e(a-\u003eb-\u003e[c])-\u003ea-\u003eb-\u003e[c]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Xtract-Combinators.html#v:-124--62--124-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Xtract.Combinators",
          "name": "(/\u003e)",
          "package": "HaXml",
          "signature": "DFilter i -\u003e DFilter i -\u003e DFilter i",
          "source": "src/Text-XML-HaXml-Xtract-Combinators.html#%2F%3E",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Xtract Combinators",
          "module": "Text.XML.HaXml.Xtract.Combinators",
          "name": "(/\u003e) /\u003e",
          "normalized": "DFilter a-\u003eDFilter a-\u003eDFilter a",
          "package": "HaXml",
          "signature": "DFilter i-\u003eDFilter i-\u003eDFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Xtract-Combinators.html#v:-47--62-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Xtract.Combinators",
          "name": "(\u003c/)",
          "package": "HaXml",
          "signature": "DFilter i -\u003e DFilter i -\u003e DFilter i",
          "source": "src/Text-XML-HaXml-Xtract-Combinators.html#%3C%2F",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Xtract Combinators",
          "module": "Text.XML.HaXml.Xtract.Combinators",
          "name": "(\u003c/) \u003c/",
          "normalized": "DFilter a-\u003eDFilter a-\u003eDFilter a",
          "package": "HaXml",
          "signature": "DFilter i-\u003eDFilter i-\u003eDFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Xtract-Combinators.html#v:-60--47-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Xtract.Combinators",
          "name": "applypred",
          "package": "HaXml",
          "signature": "CFilter i -\u003e DFilter i -\u003e CFilter i",
          "source": "src/Text-XML-HaXml-Xtract-Combinators.html#applypred",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Xtract Combinators",
          "module": "Text.XML.HaXml.Xtract.Combinators",
          "name": "applypred",
          "normalized": "CFilter a-\u003eDFilter a-\u003eCFilter a",
          "package": "HaXml",
          "signature": "CFilter i-\u003eDFilter i-\u003eCFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Xtract-Combinators.html#v:applypred"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Xtract.Combinators",
          "name": "cat",
          "package": "HaXml",
          "signature": "[a -\u003e b -\u003e [c]] -\u003e a -\u003e b -\u003e [c]",
          "source": "src/Text-XML-HaXml-Xtract-Combinators.html#cat",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Xtract Combinators",
          "module": "Text.XML.HaXml.Xtract.Combinators",
          "name": "cat",
          "normalized": "[a-\u003eb-\u003e[c]]-\u003ea-\u003eb-\u003e[c]",
          "package": "HaXml",
          "signature": "[a-\u003eb-\u003e[c]]-\u003ea-\u003eb-\u003e[c]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Xtract-Combinators.html#v:cat"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003edrop a double filter to an ordinary content filter.\n   (Where interior access to the document root is not needed, the\n    retaining pointer to the outer element can be pruned away.\n   \u003ccode\u003e\u003ca\u003ecfilter\u003c/a\u003e\u003c/code\u003e is more space-efficient than \u003ccode\u003e\u003ca\u003edfilter\u003c/a\u003e\u003c/code\u003e in this situation.)\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Xtract.Combinators",
          "name": "cfilter",
          "package": "HaXml",
          "signature": "DFilter i -\u003e CFilter i",
          "source": "src/Text-XML-HaXml-Xtract-Combinators.html#cfilter",
          "type": "function"
        },
        "index": {
          "description": "drop double filter to an ordinary content filter Where interior access to the document root is not needed the retaining pointer to the outer element can be pruned away cfilter is more space-efficient than dfilter in this situation",
          "hierarchy": "Text XML HaXml Xtract Combinators",
          "module": "Text.XML.HaXml.Xtract.Combinators",
          "name": "cfilter",
          "normalized": "DFilter a-\u003eCFilter a",
          "package": "HaXml",
          "signature": "DFilter i-\u003eCFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Xtract-Combinators.html#v:cfilter"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Xtract.Combinators",
          "name": "children",
          "package": "HaXml",
          "signature": "DFilter i",
          "source": "src/Text-XML-HaXml-Xtract-Combinators.html#children",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Xtract Combinators",
          "module": "Text.XML.HaXml.Xtract.Combinators",
          "name": "children",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Xtract-Combinators.html#v:children"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Xtract.Combinators",
          "name": "deep",
          "package": "HaXml",
          "signature": "DFilter i -\u003e DFilter i",
          "source": "src/Text-XML-HaXml-Xtract-Combinators.html#deep",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Xtract Combinators",
          "module": "Text.XML.HaXml.Xtract.Combinators",
          "name": "deep",
          "normalized": "DFilter a-\u003eDFilter a",
          "package": "HaXml",
          "signature": "DFilter i-\u003eDFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Xtract-Combinators.html#v:deep"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Xtract.Combinators",
          "name": "deepest",
          "package": "HaXml",
          "signature": "DFilter i -\u003e DFilter i",
          "source": "src/Text-XML-HaXml-Xtract-Combinators.html#deepest",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Xtract Combinators",
          "module": "Text.XML.HaXml.Xtract.Combinators",
          "name": "deepest",
          "normalized": "DFilter a-\u003eDFilter a",
          "package": "HaXml",
          "signature": "DFilter i-\u003eDFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Xtract-Combinators.html#v:deepest"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003edrop a double filter to an ordinary content filter.\n   (permitting interior access to document root)\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Xtract.Combinators",
          "name": "dfilter",
          "package": "HaXml",
          "signature": "DFilter i -\u003e CFilter i",
          "source": "src/Text-XML-HaXml-Xtract-Combinators.html#dfilter",
          "type": "function"
        },
        "index": {
          "description": "drop double filter to an ordinary content filter permitting interior access to document root",
          "hierarchy": "Text XML HaXml Xtract Combinators",
          "module": "Text.XML.HaXml.Xtract.Combinators",
          "name": "dfilter",
          "normalized": "DFilter a-\u003eCFilter a",
          "package": "HaXml",
          "signature": "DFilter i-\u003eCFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Xtract-Combinators.html#v:dfilter"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Xtract.Combinators",
          "name": "elm",
          "package": "HaXml",
          "signature": "DFilter i",
          "source": "src/Text-XML-HaXml-Xtract-Combinators.html#elm",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Xtract Combinators",
          "module": "Text.XML.HaXml.Xtract.Combinators",
          "name": "elm",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Xtract-Combinators.html#v:elm"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003elift an ordinary content filter to a double filter.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Xtract.Combinators",
          "name": "global",
          "package": "HaXml",
          "signature": "CFilter i -\u003e DFilter i",
          "source": "src/Text-XML-HaXml-Xtract-Combinators.html#global",
          "type": "function"
        },
        "index": {
          "description": "lift an ordinary content filter to double filter",
          "hierarchy": "Text XML HaXml Xtract Combinators",
          "module": "Text.XML.HaXml.Xtract.Combinators",
          "name": "global",
          "normalized": "CFilter a-\u003eDFilter a",
          "package": "HaXml",
          "signature": "CFilter i-\u003eDFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Xtract-Combinators.html#v:global"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Xtract.Combinators",
          "name": "ifTxt",
          "package": "HaXml",
          "signature": "(String -\u003e DFilter i) -\u003e DFilter i -\u003e DFilter i",
          "source": "src/Text-XML-HaXml-Xtract-Combinators.html#ifTxt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Xtract Combinators",
          "module": "Text.XML.HaXml.Xtract.Combinators",
          "name": "ifTxt",
          "normalized": "(String-\u003eDFilter a)-\u003eDFilter a-\u003eDFilter a",
          "package": "HaXml",
          "partial": "Txt",
          "signature": "(String-\u003eDFilter i)-\u003eDFilter i-\u003eDFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Xtract-Combinators.html#v:ifTxt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Xtract.Combinators",
          "name": "iffind",
          "package": "HaXml",
          "signature": "String -\u003e (String -\u003e DFilter i) -\u003e DFilter i -\u003e DFilter i",
          "source": "src/Text-XML-HaXml-Xtract-Combinators.html#iffind",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Xtract Combinators",
          "module": "Text.XML.HaXml.Xtract.Combinators",
          "name": "iffind",
          "normalized": "String-\u003e(String-\u003eDFilter a)-\u003eDFilter a-\u003eDFilter a",
          "package": "HaXml",
          "signature": "String-\u003e(String-\u003eDFilter i)-\u003eDFilter i-\u003eDFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Xtract-Combinators.html#v:iffind"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003elifted unit and zero.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Xtract.Combinators",
          "name": "keep",
          "package": "HaXml",
          "signature": "DFilter i",
          "source": "src/Text-XML-HaXml-Xtract-Combinators.html#keep",
          "type": "function"
        },
        "index": {
          "description": "lifted unit and zero",
          "hierarchy": "Text XML HaXml Xtract Combinators",
          "module": "Text.XML.HaXml.Xtract.Combinators",
          "name": "keep",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Xtract-Combinators.html#v:keep"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003elift a CFilter combinator to a DFilter combinator\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Xtract.Combinators",
          "name": "liftGlobal",
          "package": "HaXml",
          "signature": "(CFilter i -\u003e CFilter i) -\u003e DFilter i -\u003e DFilter i",
          "source": "src/Text-XML-HaXml-Xtract-Combinators.html#liftGlobal",
          "type": "function"
        },
        "index": {
          "description": "lift CFilter combinator to DFilter combinator",
          "hierarchy": "Text XML HaXml Xtract Combinators",
          "module": "Text.XML.HaXml.Xtract.Combinators",
          "name": "liftGlobal",
          "normalized": "(CFilter a-\u003eCFilter a)-\u003eDFilter a-\u003eDFilter a",
          "package": "HaXml",
          "partial": "Global",
          "signature": "(CFilter i-\u003eCFilter i)-\u003eDFilter i-\u003eDFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Xtract-Combinators.html#v:liftGlobal"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003elift a CFilter combinator to a DFilter combinator\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Xtract.Combinators",
          "name": "liftLocal",
          "package": "HaXml",
          "signature": "(CFilter i -\u003e CFilter i) -\u003e DFilter i -\u003e DFilter i",
          "source": "src/Text-XML-HaXml-Xtract-Combinators.html#liftLocal",
          "type": "function"
        },
        "index": {
          "description": "lift CFilter combinator to DFilter combinator",
          "hierarchy": "Text XML HaXml Xtract Combinators",
          "module": "Text.XML.HaXml.Xtract.Combinators",
          "name": "liftLocal",
          "normalized": "(CFilter a-\u003eCFilter a)-\u003eDFilter a-\u003eDFilter a",
          "package": "HaXml",
          "partial": "Local",
          "signature": "(CFilter i-\u003eCFilter i)-\u003eDFilter i-\u003eDFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Xtract-Combinators.html#v:liftLocal"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003elift an ordinary content filter to a double filter.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Xtract.Combinators",
          "name": "local",
          "package": "HaXml",
          "signature": "CFilter i -\u003e DFilter i",
          "source": "src/Text-XML-HaXml-Xtract-Combinators.html#local",
          "type": "function"
        },
        "index": {
          "description": "lift an ordinary content filter to double filter",
          "hierarchy": "Text XML HaXml Xtract Combinators",
          "module": "Text.XML.HaXml.Xtract.Combinators",
          "name": "local",
          "normalized": "CFilter a-\u003eDFilter a",
          "package": "HaXml",
          "signature": "CFilter i-\u003eDFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Xtract-Combinators.html#v:local"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Xtract.Combinators",
          "name": "multi",
          "package": "HaXml",
          "signature": "DFilter i -\u003e DFilter i",
          "source": "src/Text-XML-HaXml-Xtract-Combinators.html#multi",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Xtract Combinators",
          "module": "Text.XML.HaXml.Xtract.Combinators",
          "name": "multi",
          "normalized": "DFilter a-\u003eDFilter a",
          "package": "HaXml",
          "signature": "DFilter i-\u003eDFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Xtract-Combinators.html#v:multi"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003elifted unit and zero.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Xtract.Combinators",
          "name": "none",
          "package": "HaXml",
          "signature": "DFilter i",
          "source": "src/Text-XML-HaXml-Xtract-Combinators.html#none",
          "type": "function"
        },
        "index": {
          "description": "lifted unit and zero",
          "hierarchy": "Text XML HaXml Xtract Combinators",
          "module": "Text.XML.HaXml.Xtract.Combinators",
          "name": "none",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Xtract-Combinators.html#v:none"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003elifted composition over double filters.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Xtract.Combinators",
          "name": "o",
          "package": "HaXml",
          "signature": "DFilter i -\u003e DFilter i -\u003e DFilter i",
          "source": "src/Text-XML-HaXml-Xtract-Combinators.html#o",
          "type": "function"
        },
        "index": {
          "description": "lifted composition over double filters",
          "hierarchy": "Text XML HaXml Xtract Combinators",
          "module": "Text.XML.HaXml.Xtract.Combinators",
          "name": "o",
          "normalized": "DFilter a-\u003eDFilter a-\u003eDFilter a",
          "package": "HaXml",
          "signature": "DFilter i-\u003eDFilter i-\u003eDFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Xtract-Combinators.html#v:o"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Xtract.Combinators",
          "name": "txt",
          "package": "HaXml",
          "signature": "DFilter i",
          "source": "src/Text-XML-HaXml-Xtract-Combinators.html#txt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Xtract Combinators",
          "module": "Text.XML.HaXml.Xtract.Combinators",
          "name": "txt",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Xtract-Combinators.html#v:txt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003elifted union.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Xtract.Combinators",
          "name": "union",
          "package": "HaXml",
          "signature": "(a -\u003e b -\u003e [c]) -\u003e (a -\u003e b -\u003e [c]) -\u003e a -\u003e b -\u003e [c]",
          "source": "src/Text-XML-HaXml-Xtract-Combinators.html#union",
          "type": "function"
        },
        "index": {
          "description": "lifted union",
          "hierarchy": "Text XML HaXml Xtract Combinators",
          "module": "Text.XML.HaXml.Xtract.Combinators",
          "name": "union",
          "normalized": "(a-\u003eb-\u003e[c])-\u003e(a-\u003eb-\u003e[c])-\u003ea-\u003eb-\u003e[c]",
          "package": "HaXml",
          "signature": "(a-\u003eb-\u003e[c])-\u003e(a-\u003eb-\u003e[c])-\u003ea-\u003eb-\u003e[c]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Xtract-Combinators.html#v:union"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003elifted predicates.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Xtract.Combinators",
          "name": "with",
          "package": "HaXml",
          "signature": "DFilter i -\u003e DFilter i -\u003e DFilter i",
          "source": "src/Text-XML-HaXml-Xtract-Combinators.html#with",
          "type": "function"
        },
        "index": {
          "description": "lifted predicates",
          "hierarchy": "Text XML HaXml Xtract Combinators",
          "module": "Text.XML.HaXml.Xtract.Combinators",
          "name": "with",
          "normalized": "DFilter a-\u003eDFilter a-\u003eDFilter a",
          "package": "HaXml",
          "signature": "DFilter i-\u003eDFilter i-\u003eDFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Xtract-Combinators.html#v:with"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003elifted predicates.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Xtract.Combinators",
          "name": "without",
          "package": "HaXml",
          "signature": "DFilter i -\u003e DFilter i -\u003e DFilter i",
          "source": "src/Text-XML-HaXml-Xtract-Combinators.html#without",
          "type": "function"
        },
        "index": {
          "description": "lifted predicates",
          "hierarchy": "Text XML HaXml Xtract Combinators",
          "module": "Text.XML.HaXml.Xtract.Combinators",
          "name": "without",
          "normalized": "DFilter a-\u003eDFilter a-\u003eDFilter a",
          "package": "HaXml",
          "signature": "DFilter i-\u003eDFilter i-\u003eDFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Xtract-Combinators.html#v:without"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThis is another hand-written lexer, this time for the Xtract\n   command-language.  The entry point is lexXtract.  You don't\n   normally need to use this module directly - the lexer is called\n   automatically by the parser.  (We only expose this interface\n   for debugging purposes.)\n\u003c/p\u003e\u003cp\u003eThe Xtract command language is very like the XPath specification.\n\u003c/p\u003e\u003c/div\u003e",
          "module": "Text.XML.HaXml.Xtract.Lex",
          "name": "Lex",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Xtract-Lex.html",
          "type": "module"
        },
        "index": {
          "description": "This is another hand-written lexer this time for the Xtract command-language The entry point is lexXtract You don normally need to use this module directly the lexer is called automatically by the parser We only expose this interface for debugging purposes The Xtract command language is very like the XPath specification",
          "hierarchy": "Text XML HaXml Xtract Lex",
          "module": "Text.XML.HaXml.Xtract.Lex",
          "name": "Lex",
          "package": "HaXml",
          "partial": "Lex",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Xtract-Lex.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Xtract.Lex",
          "name": "Posn",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Xtract-Lex.html#Posn",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Xtract Lex",
          "module": "Text.XML.HaXml.Xtract.Lex",
          "name": "Posn",
          "package": "HaXml",
          "partial": "Posn",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Xtract-Lex.html#t:Posn"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Xtract.Lex",
          "name": "Token",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Xtract-Lex.html#Token",
          "type": "type"
        },
        "index": {
          "hierarchy": "Text XML HaXml Xtract Lex",
          "module": "Text.XML.HaXml.Xtract.Lex",
          "name": "Token",
          "package": "HaXml",
          "partial": "Token",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Xtract-Lex.html#t:Token"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Xtract.Lex",
          "name": "TokenT",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Xtract-Lex.html#TokenT",
          "type": "data"
        },
        "index": {
          "hierarchy": "Text XML HaXml Xtract Lex",
          "module": "Text.XML.HaXml.Xtract.Lex",
          "name": "TokenT",
          "package": "HaXml",
          "partial": "Token",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Xtract-Lex.html#t:TokenT"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Xtract.Lex",
          "name": "Pn",
          "package": "HaXml",
          "signature": "Pn Int",
          "source": "src/Text-XML-HaXml-Xtract-Lex.html#Posn",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Xtract Lex",
          "module": "Text.XML.HaXml.Xtract.Lex",
          "name": "Pn",
          "package": "HaXml",
          "partial": "Pn",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Xtract-Lex.html#v:Pn"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Xtract.Lex",
          "name": "Symbol",
          "package": "HaXml",
          "signature": "Symbol String",
          "source": "src/Text-XML-HaXml-Xtract-Lex.html#TokenT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Xtract Lex",
          "module": "Text.XML.HaXml.Xtract.Lex",
          "name": "Symbol",
          "package": "HaXml",
          "partial": "Symbol",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Xtract-Lex.html#v:Symbol"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Xtract.Lex",
          "name": "TokNum",
          "package": "HaXml",
          "signature": "TokNum Integer",
          "source": "src/Text-XML-HaXml-Xtract-Lex.html#TokenT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Xtract Lex",
          "module": "Text.XML.HaXml.Xtract.Lex",
          "name": "TokNum",
          "package": "HaXml",
          "partial": "Tok Num",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Xtract-Lex.html#v:TokNum"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Text.XML.HaXml.Xtract.Lex",
          "name": "TokString",
          "package": "HaXml",
          "signature": "TokString String",
          "source": "src/Text-XML-HaXml-Xtract-Lex.html#TokenT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Text XML HaXml Xtract Lex",
          "module": "Text.XML.HaXml.Xtract.Lex",
          "name": "TokString",
          "package": "HaXml",
          "partial": "Tok String",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Xtract-Lex.html#v:TokString"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eFirst argument is a transformer for pattern strings, e.g. map toLower,\n   but only applying to parts of the pattern not in quotation marks.\n   (Needed to canonicalise HTML where tags are case-insensitive, but\n   attribute values are case sensitive.)\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Xtract.Lex",
          "name": "lexXtract",
          "package": "HaXml",
          "signature": "(String -\u003e String) -\u003e String -\u003e [Token]",
          "source": "src/Text-XML-HaXml-Xtract-Lex.html#lexXtract",
          "type": "function"
        },
        "index": {
          "description": "First argument is transformer for pattern strings e.g map toLower but only applying to parts of the pattern not in quotation marks Needed to canonicalise HTML where tags are case-insensitive but attribute values are case sensitive",
          "hierarchy": "Text XML HaXml Xtract Lex",
          "module": "Text.XML.HaXml.Xtract.Lex",
          "name": "lexXtract",
          "normalized": "(String-\u003eString)-\u003eString-\u003e[Token]",
          "package": "HaXml",
          "partial": "Xtract",
          "signature": "(String-\u003eString)-\u003eString-\u003e[Token]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Xtract-Lex.html#v:lexXtract"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eA parser for the Xtract command-language.  (The string input is\n   tokenised internally by the lexer \u003ccode\u003e\u003ca\u003elexXtract\u003c/a\u003e\u003c/code\u003e.)\n   See \u003ca\u003ehttp://www.haskell.org/HaXml/Xtract.html\u003c/a\u003e for the grammar that\n   is accepted.\n\u003c/p\u003e\u003c/div\u003e",
          "module": "Text.XML.HaXml.Xtract.Parse",
          "name": "Parse",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml-Xtract-Parse.html",
          "type": "module"
        },
        "index": {
          "description": "parser for the Xtract command-language The string input is tokenised internally by the lexer lexXtract See http www.haskell.org HaXml Xtract.html for the grammar that is accepted",
          "hierarchy": "Text XML HaXml Xtract Parse",
          "module": "Text.XML.HaXml.Xtract.Parse",
          "name": "Parse",
          "package": "HaXml",
          "partial": "Parse",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Xtract-Parse.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eThe cool thing is that the Xtract command parser directly builds\n   a higher-order \u003ccode\u003e\u003ca\u003eDFilter\u003c/a\u003e\u003c/code\u003e (see \u003ca\u003eText.XML.HaXml.Xtract.Combinators\u003c/a\u003e)\n   which can be applied to an XML document without further ado.\n   (\u003ccode\u003eparseXtract\u003c/code\u003e halts the program if a parse error is found.)\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Xtract.Parse",
          "name": "parseXtract",
          "package": "HaXml",
          "signature": "[Token] -\u003e DFilter i",
          "source": "src/Text-XML-HaXml-Xtract-Parse.html#parseXtract",
          "type": "function"
        },
        "index": {
          "description": "The cool thing is that the Xtract command parser directly builds higher-order DFilter see Text.XML.HaXml.Xtract.Combinators which can be applied to an XML document without further ado parseXtract halts the program if parse error is found",
          "hierarchy": "Text XML HaXml Xtract Parse",
          "module": "Text.XML.HaXml.Xtract.Parse",
          "name": "parseXtract",
          "normalized": "[Token]-\u003eDFilter a",
          "package": "HaXml",
          "partial": "Xtract",
          "signature": "[Token]-\u003eDFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Xtract-Parse.html#v:parseXtract"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eTo convert an Xtract query into an ordinary HaXml combinator expression.\n   First arg is a tag-transformation function (e.g. map toLower) applied\n\u003c/p\u003e",
          "module": "Text.XML.HaXml.Xtract.Parse",
          "name": "xtract",
          "package": "HaXml",
          "signature": "(String -\u003e String) -\u003e String -\u003e CFilter i",
          "source": "src/Text-XML-HaXml-Xtract-Parse.html#xtract",
          "type": "function"
        },
        "index": {
          "description": "To convert an Xtract query into an ordinary HaXml combinator expression First arg is tag-transformation function e.g map toLower applied",
          "hierarchy": "Text XML HaXml Xtract Parse",
          "module": "Text.XML.HaXml.Xtract.Parse",
          "name": "xtract",
          "normalized": "(String-\u003eString)-\u003eString-\u003eCFilter a",
          "package": "HaXml",
          "signature": "(String-\u003eString)-\u003eString-\u003eCFilter i",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml-Xtract-Parse.html#v:xtract"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eThis is just a convenient way of bunching the XML combinators\n   together with some other things you are likely to want at the\n   same time.\n\u003c/p\u003e\u003c/div\u003e",
          "module": "Text.XML.HaXml",
          "name": "HaXml",
          "package": "HaXml",
          "source": "src/Text-XML-HaXml.html",
          "type": "module"
        },
        "index": {
          "description": "This is just convenient way of bunching the XML combinators together with some other things you are likely to want at the same time",
          "hierarchy": "Text XML HaXml",
          "module": "Text.XML.HaXml",
          "name": "HaXml",
          "package": "HaXml",
          "partial": "Ha Xml",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eRender the \u003ccode\u003eDoc\u003c/code\u003e to a String using the default \u003ccode\u003eStyle\u003c/code\u003e.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml",
          "name": "render",
          "package": "HaXml",
          "signature": "Doc -\u003e String",
          "type": "function"
        },
        "index": {
          "description": "Render the Doc to String using the default Style",
          "hierarchy": "Text XML HaXml",
          "module": "Text.XML.HaXml",
          "name": "render",
          "normalized": "Doc-\u003eString",
          "package": "HaXml",
          "signature": "Doc-\u003eString",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml.html#v:render"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eThe version of the library.\n\u003c/p\u003e",
          "module": "Text.XML.HaXml",
          "name": "version",
          "package": "HaXml",
          "signature": "String",
          "source": "src/Text-XML-HaXml.html#version",
          "type": "function"
        },
        "index": {
          "description": "The version of the library",
          "hierarchy": "Text XML HaXml",
          "module": "Text.XML.HaXml",
          "name": "version",
          "package": "HaXml",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/HaXml/docs/Text-XML-HaXml.html#v:version"
      }
    }
  ]
]
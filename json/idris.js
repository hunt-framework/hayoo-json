[
  {
    "cmd": "delete-by-query",
    "query": {
      "contexts": [
        "package"
      ],
      "query": {
        "op": "case",
        "type": "word",
        "word": "idris"
      },
      "type": "context"
    }
  },
  [
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.BCImp",
          "name": "BCImp",
          "package": "idris",
          "source": "src/IRTS-BCImp.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "IRTS BCImp",
          "module": "IRTS.BCImp",
          "name": "BCImp",
          "package": "idris",
          "partial": "BCImp",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-BCImp.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.BCImp",
          "name": "BC",
          "package": "idris",
          "source": "src/IRTS-BCImp.html#BC",
          "type": "data"
        },
        "index": {
          "hierarchy": "IRTS BCImp",
          "module": "IRTS.BCImp",
          "name": "BC",
          "package": "idris",
          "partial": "BC",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-BCImp.html#t:BC"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.BCImp",
          "name": "Reg",
          "package": "idris",
          "source": "src/IRTS-BCImp.html#Reg",
          "type": "data"
        },
        "index": {
          "hierarchy": "IRTS BCImp",
          "module": "IRTS.BCImp",
          "name": "Reg",
          "package": "idris",
          "partial": "Reg",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-BCImp.html#t:Reg"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.BCImp",
          "name": "L",
          "package": "idris",
          "signature": "L Int",
          "source": "src/IRTS-BCImp.html#Reg",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS BCImp",
          "module": "IRTS.BCImp",
          "name": "L",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-BCImp.html#v:L"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.BCImp",
          "name": "NOP",
          "package": "idris",
          "signature": "NOP",
          "source": "src/IRTS-BCImp.html#BC",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS BCImp",
          "module": "IRTS.BCImp",
          "name": "NOP",
          "package": "idris",
          "partial": "NOP",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-BCImp.html#v:NOP"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.BCImp",
          "name": "RVal",
          "package": "idris",
          "signature": "RVal",
          "source": "src/IRTS-BCImp.html#Reg",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS BCImp",
          "module": "IRTS.BCImp",
          "name": "RVal",
          "package": "idris",
          "partial": "RVal",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-BCImp.html#v:RVal"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.BCImp",
          "name": "bc",
          "package": "idris",
          "signature": "Reg -\u003e SExp -\u003e [BC]",
          "source": "src/IRTS-BCImp.html#bc",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS BCImp",
          "module": "IRTS.BCImp",
          "name": "bc",
          "normalized": "Reg-\u003eSExp-\u003e[BC]",
          "package": "idris",
          "signature": "Reg-\u003eSExp-\u003e[BC]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-BCImp.html#v:bc"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.BCImp",
          "name": "toBC",
          "package": "idris",
          "signature": "(Name, SDecl) -\u003e (Name, [BC])",
          "source": "src/IRTS-BCImp.html#toBC",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS BCImp",
          "module": "IRTS.BCImp",
          "name": "toBC",
          "normalized": "(Name,SDecl)-\u003e(Name,[BC])",
          "package": "idris",
          "partial": "BC",
          "signature": "(Name,SDecl)-\u003e(Name,[BC])",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-BCImp.html#v:toBC"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Bytecode",
          "name": "Bytecode",
          "package": "idris",
          "source": "src/IRTS-Bytecode.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "IRTS Bytecode",
          "module": "IRTS.Bytecode",
          "name": "Bytecode",
          "package": "idris",
          "partial": "Bytecode",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Bytecode.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Bytecode",
          "name": "BC",
          "package": "idris",
          "source": "src/IRTS-Bytecode.html#BC",
          "type": "data"
        },
        "index": {
          "hierarchy": "IRTS Bytecode",
          "module": "IRTS.Bytecode",
          "name": "BC",
          "package": "idris",
          "partial": "BC",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Bytecode.html#t:BC"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Bytecode",
          "name": "Reg",
          "package": "idris",
          "source": "src/IRTS-Bytecode.html#Reg",
          "type": "data"
        },
        "index": {
          "hierarchy": "IRTS Bytecode",
          "module": "IRTS.Bytecode",
          "name": "Reg",
          "package": "idris",
          "partial": "Reg",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Bytecode.html#t:Reg"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Bytecode",
          "name": "ADDTOP",
          "package": "idris",
          "signature": "ADDTOP Int",
          "source": "src/IRTS-Bytecode.html#BC",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Bytecode",
          "module": "IRTS.Bytecode",
          "name": "ADDTOP",
          "package": "idris",
          "partial": "ADDTOP",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Bytecode.html#v:ADDTOP"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Bytecode",
          "name": "ASSIGN",
          "package": "idris",
          "signature": "ASSIGN Reg Reg",
          "source": "src/IRTS-Bytecode.html#BC",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Bytecode",
          "module": "IRTS.Bytecode",
          "name": "ASSIGN",
          "package": "idris",
          "partial": "ASSIGN",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Bytecode.html#v:ASSIGN"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Bytecode",
          "name": "ASSIGNCONST",
          "package": "idris",
          "signature": "ASSIGNCONST Reg Const",
          "source": "src/IRTS-Bytecode.html#BC",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Bytecode",
          "module": "IRTS.Bytecode",
          "name": "ASSIGNCONST",
          "package": "idris",
          "partial": "ASSIGNCONST",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Bytecode.html#v:ASSIGNCONST"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Bytecode",
          "name": "BASETOP",
          "package": "idris",
          "signature": "BASETOP Int",
          "source": "src/IRTS-Bytecode.html#BC",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Bytecode",
          "module": "IRTS.Bytecode",
          "name": "BASETOP",
          "package": "idris",
          "partial": "BASETOP",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Bytecode.html#v:BASETOP"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Bytecode",
          "name": "CALL",
          "package": "idris",
          "signature": "CALL Name",
          "source": "src/IRTS-Bytecode.html#BC",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Bytecode",
          "module": "IRTS.Bytecode",
          "name": "CALL",
          "package": "idris",
          "partial": "CALL",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Bytecode.html#v:CALL"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Bytecode",
          "name": "CASE",
          "package": "idris",
          "signature": "CASE Bool Reg [(Int, [BC])] (Maybe [BC])",
          "source": "src/IRTS-Bytecode.html#BC",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Bytecode",
          "module": "IRTS.Bytecode",
          "name": "CASE",
          "normalized": "CASE Bool Reg[(Int,[BC])](Maybe[BC])",
          "package": "idris",
          "partial": "CASE",
          "signature": "CASE Bool Reg[(Int,[BC])](Maybe[BC])",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Bytecode.html#v:CASE"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Bytecode",
          "name": "CONSTCASE",
          "package": "idris",
          "signature": "CONSTCASE Reg [(Const, [BC])] (Maybe [BC])",
          "source": "src/IRTS-Bytecode.html#BC",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Bytecode",
          "module": "IRTS.Bytecode",
          "name": "CONSTCASE",
          "normalized": "CONSTCASE Reg[(Const,[BC])](Maybe[BC])",
          "package": "idris",
          "partial": "CONSTCASE",
          "signature": "CONSTCASE Reg[(Const,[BC])](Maybe[BC])",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Bytecode.html#v:CONSTCASE"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Bytecode",
          "name": "ERROR",
          "package": "idris",
          "signature": "ERROR String",
          "source": "src/IRTS-Bytecode.html#BC",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Bytecode",
          "module": "IRTS.Bytecode",
          "name": "ERROR",
          "package": "idris",
          "partial": "ERROR",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Bytecode.html#v:ERROR"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Bytecode",
          "name": "FOREIGNCALL",
          "package": "idris",
          "signature": "FOREIGNCALL Reg FLang FType String [(FType, Reg)]",
          "source": "src/IRTS-Bytecode.html#BC",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Bytecode",
          "module": "IRTS.Bytecode",
          "name": "FOREIGNCALL",
          "normalized": "FOREIGNCALL Reg FLang FType String[(FType,Reg)]",
          "package": "idris",
          "partial": "FOREIGNCALL",
          "signature": "FOREIGNCALL Reg FLang FType String[(FType,Reg)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Bytecode.html#v:FOREIGNCALL"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Bytecode",
          "name": "L",
          "package": "idris",
          "signature": "L Int",
          "source": "src/IRTS-Bytecode.html#Reg",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Bytecode",
          "module": "IRTS.Bytecode",
          "name": "L",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Bytecode.html#v:L"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Bytecode",
          "name": "MKCON",
          "package": "idris",
          "signature": "MKCON Reg Int [Reg]",
          "source": "src/IRTS-Bytecode.html#BC",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Bytecode",
          "module": "IRTS.Bytecode",
          "name": "MKCON",
          "normalized": "MKCON Reg Int[Reg]",
          "package": "idris",
          "partial": "MKCON",
          "signature": "MKCON Reg Int[Reg]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Bytecode.html#v:MKCON"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Bytecode",
          "name": "NULL",
          "package": "idris",
          "signature": "NULL Reg",
          "source": "src/IRTS-Bytecode.html#BC",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Bytecode",
          "module": "IRTS.Bytecode",
          "name": "NULL",
          "package": "idris",
          "partial": "NULL",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Bytecode.html#v:NULL"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Bytecode",
          "name": "OP",
          "package": "idris",
          "signature": "OP Reg PrimFn [Reg]",
          "source": "src/IRTS-Bytecode.html#BC",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Bytecode",
          "module": "IRTS.Bytecode",
          "name": "OP",
          "normalized": "OP Reg PrimFn[Reg]",
          "package": "idris",
          "partial": "OP",
          "signature": "OP Reg PrimFn[Reg]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Bytecode.html#v:OP"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Bytecode",
          "name": "PROJECT",
          "package": "idris",
          "signature": "PROJECT Reg Int Int",
          "source": "src/IRTS-Bytecode.html#BC",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Bytecode",
          "module": "IRTS.Bytecode",
          "name": "PROJECT",
          "package": "idris",
          "partial": "PROJECT",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Bytecode.html#v:PROJECT"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Bytecode",
          "name": "PROJECTINTO",
          "package": "idris",
          "signature": "PROJECTINTO Reg Reg Int",
          "source": "src/IRTS-Bytecode.html#BC",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Bytecode",
          "module": "IRTS.Bytecode",
          "name": "PROJECTINTO",
          "package": "idris",
          "partial": "PROJECTINTO",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Bytecode.html#v:PROJECTINTO"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Bytecode",
          "name": "REBASE",
          "package": "idris",
          "signature": "REBASE",
          "source": "src/IRTS-Bytecode.html#BC",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Bytecode",
          "module": "IRTS.Bytecode",
          "name": "REBASE",
          "package": "idris",
          "partial": "REBASE",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Bytecode.html#v:REBASE"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Bytecode",
          "name": "RESERVE",
          "package": "idris",
          "signature": "RESERVE Int",
          "source": "src/IRTS-Bytecode.html#BC",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Bytecode",
          "module": "IRTS.Bytecode",
          "name": "RESERVE",
          "package": "idris",
          "partial": "RESERVE",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Bytecode.html#v:RESERVE"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Bytecode",
          "name": "RVal",
          "package": "idris",
          "signature": "RVal",
          "source": "src/IRTS-Bytecode.html#Reg",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Bytecode",
          "module": "IRTS.Bytecode",
          "name": "RVal",
          "package": "idris",
          "partial": "RVal",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Bytecode.html#v:RVal"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Bytecode",
          "name": "SLIDE",
          "package": "idris",
          "signature": "SLIDE Int",
          "source": "src/IRTS-Bytecode.html#BC",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Bytecode",
          "module": "IRTS.Bytecode",
          "name": "SLIDE",
          "package": "idris",
          "partial": "SLIDE",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Bytecode.html#v:SLIDE"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Bytecode",
          "name": "STOREOLD",
          "package": "idris",
          "signature": "STOREOLD",
          "source": "src/IRTS-Bytecode.html#BC",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Bytecode",
          "module": "IRTS.Bytecode",
          "name": "STOREOLD",
          "package": "idris",
          "partial": "STOREOLD",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Bytecode.html#v:STOREOLD"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Bytecode",
          "name": "T",
          "package": "idris",
          "signature": "T Int",
          "source": "src/IRTS-Bytecode.html#Reg",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Bytecode",
          "module": "IRTS.Bytecode",
          "name": "T",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Bytecode.html#v:T"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Bytecode",
          "name": "TAILCALL",
          "package": "idris",
          "signature": "TAILCALL Name",
          "source": "src/IRTS-Bytecode.html#BC",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Bytecode",
          "module": "IRTS.Bytecode",
          "name": "TAILCALL",
          "package": "idris",
          "partial": "TAILCALL",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Bytecode.html#v:TAILCALL"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Bytecode",
          "name": "TOPBASE",
          "package": "idris",
          "signature": "TOPBASE Int",
          "source": "src/IRTS-Bytecode.html#BC",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Bytecode",
          "module": "IRTS.Bytecode",
          "name": "TOPBASE",
          "package": "idris",
          "partial": "TOPBASE",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Bytecode.html#v:TOPBASE"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Bytecode",
          "name": "Tmp",
          "package": "idris",
          "signature": "Tmp",
          "source": "src/IRTS-Bytecode.html#Reg",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Bytecode",
          "module": "IRTS.Bytecode",
          "name": "Tmp",
          "package": "idris",
          "partial": "Tmp",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Bytecode.html#v:Tmp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Bytecode",
          "name": "UPDATE",
          "package": "idris",
          "signature": "UPDATE Reg Reg",
          "source": "src/IRTS-Bytecode.html#BC",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Bytecode",
          "module": "IRTS.Bytecode",
          "name": "UPDATE",
          "package": "idris",
          "partial": "UPDATE",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Bytecode.html#v:UPDATE"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Bytecode",
          "name": "assign",
          "package": "idris",
          "signature": "Reg -\u003e Reg -\u003e [BC]",
          "source": "src/IRTS-Bytecode.html#assign",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Bytecode",
          "module": "IRTS.Bytecode",
          "name": "assign",
          "normalized": "Reg-\u003eReg-\u003e[BC]",
          "package": "idris",
          "signature": "Reg-\u003eReg-\u003e[BC]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Bytecode.html#v:assign"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Bytecode",
          "name": "bc",
          "package": "idris",
          "signature": "Reg -\u003e SExp -\u003e Bool -\u003e [BC]",
          "source": "src/IRTS-Bytecode.html#bc",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Bytecode",
          "module": "IRTS.Bytecode",
          "name": "bc",
          "normalized": "Reg-\u003eSExp-\u003eBool-\u003e[BC]",
          "package": "idris",
          "signature": "Reg-\u003eSExp-\u003eBool-\u003e[BC]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Bytecode.html#v:bc"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Bytecode",
          "name": "caseAlt",
          "package": "idris",
          "signature": "Reg -\u003e Reg -\u003e Bool -\u003e SAlt -\u003e Maybe (Int, [BC])",
          "source": "src/IRTS-Bytecode.html#caseAlt",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Bytecode",
          "module": "IRTS.Bytecode",
          "name": "caseAlt",
          "normalized": "Reg-\u003eReg-\u003eBool-\u003eSAlt-\u003eMaybe(Int,[BC])",
          "package": "idris",
          "partial": "Alt",
          "signature": "Reg-\u003eReg-\u003eBool-\u003eSAlt-\u003eMaybe(Int,[BC])",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Bytecode.html#v:caseAlt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Bytecode",
          "name": "clean",
          "package": "idris",
          "signature": "Bool -\u003e [BC]",
          "source": "src/IRTS-Bytecode.html#clean",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Bytecode",
          "module": "IRTS.Bytecode",
          "name": "clean",
          "normalized": "Bool-\u003e[BC]",
          "package": "idris",
          "signature": "Bool-\u003e[BC]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Bytecode.html#v:clean"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Bytecode",
          "name": "conCase",
          "package": "idris",
          "signature": "Bool -\u003e Reg -\u003e Reg -\u003e [SAlt] -\u003e Bool -\u003e [BC]",
          "source": "src/IRTS-Bytecode.html#conCase",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Bytecode",
          "module": "IRTS.Bytecode",
          "name": "conCase",
          "normalized": "Bool-\u003eReg-\u003eReg-\u003e[SAlt]-\u003eBool-\u003e[BC]",
          "package": "idris",
          "partial": "Case",
          "signature": "Bool-\u003eReg-\u003eReg-\u003e[SAlt]-\u003eBool-\u003e[BC]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Bytecode.html#v:conCase"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Bytecode",
          "name": "constAlt",
          "package": "idris",
          "signature": "t -\u003e Reg -\u003e Bool -\u003e SAlt -\u003e Maybe (Const, [BC])",
          "source": "src/IRTS-Bytecode.html#constAlt",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Bytecode",
          "module": "IRTS.Bytecode",
          "name": "constAlt",
          "normalized": "a-\u003eReg-\u003eBool-\u003eSAlt-\u003eMaybe(Const,[BC])",
          "package": "idris",
          "partial": "Alt",
          "signature": "t-\u003eReg-\u003eBool-\u003eSAlt-\u003eMaybe(Const,[BC])",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Bytecode.html#v:constAlt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Bytecode",
          "name": "constCase",
          "package": "idris",
          "signature": "Reg -\u003e Reg -\u003e [SAlt] -\u003e Bool -\u003e [BC]",
          "source": "src/IRTS-Bytecode.html#constCase",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Bytecode",
          "module": "IRTS.Bytecode",
          "name": "constCase",
          "normalized": "Reg-\u003eReg-\u003e[SAlt]-\u003eBool-\u003e[BC]",
          "package": "idris",
          "partial": "Case",
          "signature": "Reg-\u003eReg-\u003e[SAlt]-\u003eBool-\u003e[BC]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Bytecode.html#v:constCase"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Bytecode",
          "name": "defaultAlt",
          "package": "idris",
          "signature": "Reg -\u003e [SAlt] -\u003e Bool -\u003e Maybe [BC]",
          "source": "src/IRTS-Bytecode.html#defaultAlt",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Bytecode",
          "module": "IRTS.Bytecode",
          "name": "defaultAlt",
          "normalized": "Reg-\u003e[SAlt]-\u003eBool-\u003eMaybe[BC]",
          "package": "idris",
          "partial": "Alt",
          "signature": "Reg-\u003e[SAlt]-\u003eBool-\u003eMaybe[BC]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Bytecode.html#v:defaultAlt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Bytecode",
          "name": "isConst",
          "package": "idris",
          "signature": "[SAlt] -\u003e Bool",
          "source": "src/IRTS-Bytecode.html#isConst",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Bytecode",
          "module": "IRTS.Bytecode",
          "name": "isConst",
          "normalized": "[SAlt]-\u003eBool",
          "package": "idris",
          "partial": "Const",
          "signature": "[SAlt]-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Bytecode.html#v:isConst"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Bytecode",
          "name": "moveReg",
          "package": "idris",
          "signature": "Int -\u003e [LVar] -\u003e [BC]",
          "source": "src/IRTS-Bytecode.html#moveReg",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Bytecode",
          "module": "IRTS.Bytecode",
          "name": "moveReg",
          "normalized": "Int-\u003e[LVar]-\u003e[BC]",
          "package": "idris",
          "partial": "Reg",
          "signature": "Int-\u003e[LVar]-\u003e[BC]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Bytecode.html#v:moveReg"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Bytecode",
          "name": "toBC",
          "package": "idris",
          "signature": "(Name, SDecl) -\u003e (Name, [BC])",
          "source": "src/IRTS-Bytecode.html#toBC",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Bytecode",
          "module": "IRTS.Bytecode",
          "name": "toBC",
          "normalized": "(Name,SDecl)-\u003e(Name,[BC])",
          "package": "idris",
          "partial": "BC",
          "signature": "(Name,SDecl)-\u003e(Name,[BC])",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Bytecode.html#v:toBC"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.CodegenC",
          "name": "CodegenC",
          "package": "idris",
          "source": "src/IRTS-CodegenC.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "IRTS CodegenC",
          "module": "IRTS.CodegenC",
          "name": "CodegenC",
          "package": "idris",
          "partial": "Codegen",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-CodegenC.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.CodegenC",
          "name": "codegenC",
          "package": "idris",
          "signature": "[(Name, SDecl)] -\u003e String -\u003e OutputType -\u003e [FilePath] -\u003e String -\u003e String -\u003e String -\u003e DbgLevel -\u003e IO ()",
          "source": "src/IRTS-CodegenC.html#codegenC",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS CodegenC",
          "module": "IRTS.CodegenC",
          "name": "codegenC",
          "normalized": "[(Name,SDecl)]-\u003eString-\u003eOutputType-\u003e[FilePath]-\u003eString-\u003eString-\u003eString-\u003eDbgLevel-\u003eIO()",
          "package": "idris",
          "signature": "[(Name,SDecl)]-\u003eString-\u003eOutputType-\u003e[FilePath]-\u003eString-\u003eString-\u003eString-\u003eDbgLevel-\u003eIO()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-CodegenC.html#v:codegenC"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.CodegenCommon",
          "name": "CodegenCommon",
          "package": "idris",
          "source": "src/IRTS-CodegenCommon.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "IRTS CodegenCommon",
          "module": "IRTS.CodegenCommon",
          "name": "CodegenCommon",
          "package": "idris",
          "partial": "Codegen Common",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-CodegenCommon.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.CodegenCommon",
          "name": "DbgLevel",
          "package": "idris",
          "source": "src/IRTS-CodegenCommon.html#DbgLevel",
          "type": "data"
        },
        "index": {
          "hierarchy": "IRTS CodegenCommon",
          "module": "IRTS.CodegenCommon",
          "name": "DbgLevel",
          "package": "idris",
          "partial": "Dbg Level",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-CodegenCommon.html#t:DbgLevel"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.CodegenCommon",
          "name": "OutputType",
          "package": "idris",
          "source": "src/IRTS-CodegenCommon.html#OutputType",
          "type": "data"
        },
        "index": {
          "hierarchy": "IRTS CodegenCommon",
          "module": "IRTS.CodegenCommon",
          "name": "OutputType",
          "package": "idris",
          "partial": "Output Type",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-CodegenCommon.html#t:OutputType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.CodegenCommon",
          "name": "DEBUG",
          "package": "idris",
          "signature": "DEBUG",
          "source": "src/IRTS-CodegenCommon.html#DbgLevel",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS CodegenCommon",
          "module": "IRTS.CodegenCommon",
          "name": "DEBUG",
          "package": "idris",
          "partial": "DEBUG",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-CodegenCommon.html#v:DEBUG"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.CodegenCommon",
          "name": "Executable",
          "package": "idris",
          "signature": "Executable",
          "source": "src/IRTS-CodegenCommon.html#OutputType",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS CodegenCommon",
          "module": "IRTS.CodegenCommon",
          "name": "Executable",
          "package": "idris",
          "partial": "Executable",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-CodegenCommon.html#v:Executable"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.CodegenCommon",
          "name": "MavenProject",
          "package": "idris",
          "signature": "MavenProject",
          "source": "src/IRTS-CodegenCommon.html#OutputType",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS CodegenCommon",
          "module": "IRTS.CodegenCommon",
          "name": "MavenProject",
          "package": "idris",
          "partial": "Maven Project",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-CodegenCommon.html#v:MavenProject"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.CodegenCommon",
          "name": "NONE",
          "package": "idris",
          "signature": "NONE",
          "source": "src/IRTS-CodegenCommon.html#DbgLevel",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS CodegenCommon",
          "module": "IRTS.CodegenCommon",
          "name": "NONE",
          "package": "idris",
          "partial": "NONE",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-CodegenCommon.html#v:NONE"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.CodegenCommon",
          "name": "Object",
          "package": "idris",
          "signature": "Object",
          "source": "src/IRTS-CodegenCommon.html#OutputType",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS CodegenCommon",
          "module": "IRTS.CodegenCommon",
          "name": "Object",
          "package": "idris",
          "partial": "Object",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-CodegenCommon.html#v:Object"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.CodegenCommon",
          "name": "Raw",
          "package": "idris",
          "signature": "Raw",
          "source": "src/IRTS-CodegenCommon.html#OutputType",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS CodegenCommon",
          "module": "IRTS.CodegenCommon",
          "name": "Raw",
          "package": "idris",
          "partial": "Raw",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-CodegenCommon.html#v:Raw"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.CodegenCommon",
          "name": "TRACE",
          "package": "idris",
          "signature": "TRACE",
          "source": "src/IRTS-CodegenCommon.html#DbgLevel",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS CodegenCommon",
          "module": "IRTS.CodegenCommon",
          "name": "TRACE",
          "package": "idris",
          "partial": "TRACE",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-CodegenCommon.html#v:TRACE"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.CodegenCommon",
          "name": "environment",
          "package": "idris",
          "signature": "String -\u003e IO (Maybe String)",
          "source": "src/IRTS-CodegenCommon.html#environment",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS CodegenCommon",
          "module": "IRTS.CodegenCommon",
          "name": "environment",
          "normalized": "String-\u003eIO(Maybe String)",
          "package": "idris",
          "signature": "String-\u003eIO(Maybe String)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-CodegenCommon.html#v:environment"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.CodegenJava",
          "name": "CodegenJava",
          "package": "idris",
          "source": "src/IRTS-CodegenJava.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "IRTS CodegenJava",
          "module": "IRTS.CodegenJava",
          "name": "CodegenJava",
          "package": "idris",
          "partial": "Codegen Java",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-CodegenJava.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.CodegenJava",
          "name": "codegenJava",
          "package": "idris",
          "signature": "[(Name, SExp)] -\u003e [(Name, SDecl)] -\u003e FilePath -\u003e [String] -\u003e [String] -\u003e OutputType -\u003e IO ()",
          "source": "src/IRTS-CodegenJava.html#codegenJava",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS CodegenJava",
          "module": "IRTS.CodegenJava",
          "name": "codegenJava",
          "normalized": "[(Name,SExp)]-\u003e[(Name,SDecl)]-\u003eFilePath-\u003e[String]-\u003e[String]-\u003eOutputType-\u003eIO()",
          "package": "idris",
          "partial": "Java",
          "signature": "[(Name,SExp)]-\u003e[(Name,SDecl)]-\u003eFilePath-\u003e[String]-\u003e[String]-\u003eOutputType-\u003eIO()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-CodegenJava.html#v:codegenJava"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.CodegenJavaScript",
          "name": "CodegenJavaScript",
          "package": "idris",
          "source": "src/IRTS-CodegenJavaScript.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "IRTS CodegenJavaScript",
          "module": "IRTS.CodegenJavaScript",
          "name": "CodegenJavaScript",
          "package": "idris",
          "partial": "Codegen Java Script",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-CodegenJavaScript.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.CodegenJavaScript",
          "name": "JSTarget",
          "package": "idris",
          "source": "src/IRTS-CodegenJavaScript.html#JSTarget",
          "type": "data"
        },
        "index": {
          "hierarchy": "IRTS CodegenJavaScript",
          "module": "IRTS.CodegenJavaScript",
          "name": "JSTarget",
          "package": "idris",
          "partial": "JSTarget",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-CodegenJavaScript.html#t:JSTarget"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.CodegenJavaScript",
          "name": "JavaScript",
          "package": "idris",
          "signature": "JavaScript",
          "source": "src/IRTS-CodegenJavaScript.html#JSTarget",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS CodegenJavaScript",
          "module": "IRTS.CodegenJavaScript",
          "name": "JavaScript",
          "package": "idris",
          "partial": "Java Script",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-CodegenJavaScript.html#v:JavaScript"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.CodegenJavaScript",
          "name": "Node",
          "package": "idris",
          "signature": "Node",
          "source": "src/IRTS-CodegenJavaScript.html#JSTarget",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS CodegenJavaScript",
          "module": "IRTS.CodegenJavaScript",
          "name": "Node",
          "package": "idris",
          "partial": "Node",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-CodegenJavaScript.html#v:Node"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.CodegenJavaScript",
          "name": "codegenJavaScript",
          "package": "idris",
          "signature": "JSTarget -\u003e [(Name, SDecl)] -\u003e FilePath -\u003e OutputType -\u003e IO ()",
          "source": "src/IRTS-CodegenJavaScript.html#codegenJavaScript",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS CodegenJavaScript",
          "module": "IRTS.CodegenJavaScript",
          "name": "codegenJavaScript",
          "normalized": "JSTarget-\u003e[(Name,SDecl)]-\u003eFilePath-\u003eOutputType-\u003eIO()",
          "package": "idris",
          "partial": "Java Script",
          "signature": "JSTarget-\u003e[(Name,SDecl)]-\u003eFilePath-\u003eOutputType-\u003eIO()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-CodegenJavaScript.html#v:codegenJavaScript"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Compiler",
          "name": "Compiler",
          "package": "idris",
          "source": "src/IRTS-Compiler.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "IRTS Compiler",
          "module": "IRTS.Compiler",
          "name": "Compiler",
          "package": "idris",
          "partial": "Compiler",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Compiler.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Compiler",
          "name": "ToIR",
          "package": "idris",
          "source": "src/IRTS-Compiler.html#ToIR",
          "type": "class"
        },
        "index": {
          "hierarchy": "IRTS Compiler",
          "module": "IRTS.Compiler",
          "name": "ToIR",
          "package": "idris",
          "partial": "To IR",
          "type": "class"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Compiler.html#t:ToIR"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Compiler",
          "name": "build",
          "package": "idris",
          "signature": "(Name, Def) -\u003e Idris (Name, LDecl)",
          "source": "src/IRTS-Compiler.html#build",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Compiler",
          "module": "IRTS.Compiler",
          "name": "build",
          "normalized": "(Name,Def)-\u003eIdris(Name,LDecl)",
          "package": "idris",
          "signature": "(Name,Def)-\u003eIdris(Name,LDecl)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Compiler.html#v:build"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Compiler",
          "name": "compile",
          "package": "idris",
          "signature": "Codegen -\u003e FilePath -\u003e Term -\u003e Idris ()",
          "source": "src/IRTS-Compiler.html#compile",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Compiler",
          "module": "IRTS.Compiler",
          "name": "compile",
          "normalized": "Codegen-\u003eFilePath-\u003eTerm-\u003eIdris()",
          "package": "idris",
          "signature": "Codegen-\u003eFilePath-\u003eTerm-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Compiler.html#v:compile"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Compiler",
          "name": "declArgs",
          "package": "idris",
          "signature": "[Name] -\u003e Bool -\u003e Name -\u003e LExp -\u003e LDecl",
          "source": "src/IRTS-Compiler.html#declArgs",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Compiler",
          "module": "IRTS.Compiler",
          "name": "declArgs",
          "normalized": "[Name]-\u003eBool-\u003eName-\u003eLExp-\u003eLDecl",
          "package": "idris",
          "partial": "Args",
          "signature": "[Name]-\u003eBool-\u003eName-\u003eLExp-\u003eLDecl",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Compiler.html#v:declArgs"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Compiler",
          "name": "getFTypes",
          "package": "idris",
          "signature": "TT Name -\u003e Maybe [FType]",
          "source": "src/IRTS-Compiler.html#getFTypes",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Compiler",
          "module": "IRTS.Compiler",
          "name": "getFTypes",
          "normalized": "TT Name-\u003eMaybe[FType]",
          "package": "idris",
          "partial": "FTypes",
          "signature": "TT Name-\u003eMaybe[FType]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Compiler.html#v:getFTypes"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Compiler",
          "name": "getPrim",
          "package": "idris",
          "signature": "IState -\u003e Name -\u003e [LExp] -\u003e Maybe LExp",
          "source": "src/IRTS-Compiler.html#getPrim",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Compiler",
          "module": "IRTS.Compiler",
          "name": "getPrim",
          "normalized": "IState-\u003eName-\u003e[LExp]-\u003eMaybe LExp",
          "package": "idris",
          "partial": "Prim",
          "signature": "IState-\u003eName-\u003e[LExp]-\u003eMaybe LExp",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Compiler.html#v:getPrim"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Compiler",
          "name": "ir",
          "package": "idris",
          "signature": "a -\u003e Idris LExp",
          "source": "src/IRTS-Compiler.html#ir",
          "type": "method"
        },
        "index": {
          "hierarchy": "IRTS Compiler",
          "module": "IRTS.Compiler",
          "name": "ir",
          "normalized": "a-\u003eIdris LExp",
          "package": "idris",
          "signature": "a-\u003eIdris LExp",
          "type": "method"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Compiler.html#v:ir"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Compiler",
          "name": "irMain",
          "package": "idris",
          "signature": "TT Name -\u003e Idris LDecl",
          "source": "src/IRTS-Compiler.html#irMain",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Compiler",
          "module": "IRTS.Compiler",
          "name": "irMain",
          "normalized": "TT Name-\u003eIdris LDecl",
          "package": "idris",
          "partial": "Main",
          "signature": "TT Name-\u003eIdris LDecl",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Compiler.html#v:irMain"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Compiler",
          "name": "isCon",
          "package": "idris",
          "signature": "Def -\u003e Bool",
          "source": "src/IRTS-Compiler.html#isCon",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Compiler",
          "module": "IRTS.Compiler",
          "name": "isCon",
          "normalized": "Def-\u003eBool",
          "package": "idris",
          "partial": "Con",
          "signature": "Def-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Compiler.html#v:isCon"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Compiler",
          "name": "mkDecls",
          "package": "idris",
          "signature": "Term -\u003e [Name] -\u003e Idris [(Name, LDecl)]",
          "source": "src/IRTS-Compiler.html#mkDecls",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Compiler",
          "module": "IRTS.Compiler",
          "name": "mkDecls",
          "normalized": "Term-\u003e[Name]-\u003eIdris[(Name,LDecl)]",
          "package": "idris",
          "partial": "Decls",
          "signature": "Term-\u003e[Name]-\u003eIdris[(Name,LDecl)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Compiler.html#v:mkDecls"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Compiler",
          "name": "mkIntIty",
          "package": "idris",
          "signature": "[Char] -\u003e FType",
          "source": "src/IRTS-Compiler.html#mkIntIty",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Compiler",
          "module": "IRTS.Compiler",
          "name": "mkIntIty",
          "normalized": "[Char]-\u003eFType",
          "package": "idris",
          "partial": "Int Ity",
          "signature": "[Char]-\u003eFType",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Compiler.html#v:mkIntIty"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Compiler",
          "name": "mkIty",
          "package": "idris",
          "signature": "[Char] -\u003e FType",
          "source": "src/IRTS-Compiler.html#mkIty",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Compiler",
          "module": "IRTS.Compiler",
          "name": "mkIty",
          "normalized": "[Char]-\u003eFType",
          "package": "idris",
          "partial": "Ity",
          "signature": "[Char]-\u003eFType",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Compiler.html#v:mkIty"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Compiler",
          "name": "mkIty'",
          "package": "idris",
          "signature": "TT Name -\u003e FType",
          "source": "src/IRTS-Compiler.html#mkIty%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Compiler",
          "module": "IRTS.Compiler",
          "name": "mkIty'",
          "normalized": "TT Name-\u003eFType",
          "package": "idris",
          "partial": "Ity'",
          "signature": "TT Name-\u003eFType",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Compiler.html#v:mkIty-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Compiler",
          "name": "mkLDecl",
          "package": "idris",
          "signature": "Name -\u003e Def -\u003e StateT IState (ErrorT Err IO) LDecl",
          "source": "src/IRTS-Compiler.html#mkLDecl",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Compiler",
          "module": "IRTS.Compiler",
          "name": "mkLDecl",
          "normalized": "Name-\u003eDef-\u003eStateT IState(ErrorT Err IO)LDecl",
          "package": "idris",
          "partial": "LDecl",
          "signature": "Name-\u003eDef-\u003eStateT IState(ErrorT Err IO)LDecl",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Compiler.html#v:mkLDecl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Compiler",
          "name": "showCaseTrees",
          "package": "idris",
          "signature": "[(Name, LDecl)] -\u003e String",
          "source": "src/IRTS-Compiler.html#showCaseTrees",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Compiler",
          "module": "IRTS.Compiler",
          "name": "showCaseTrees",
          "normalized": "[(Name,LDecl)]-\u003eString",
          "package": "idris",
          "partial": "Case Trees",
          "signature": "[(Name,LDecl)]-\u003eString",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Compiler.html#v:showCaseTrees"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Compiler",
          "name": "sname",
          "package": "idris",
          "signature": "Name",
          "source": "src/IRTS-Compiler.html#sname",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Compiler",
          "module": "IRTS.Compiler",
          "name": "sname",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Compiler.html#v:sname"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Compiler",
          "name": "zname",
          "package": "idris",
          "signature": "Name",
          "source": "src/IRTS-Compiler.html#zname",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Compiler",
          "module": "IRTS.Compiler",
          "name": "zname",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Compiler.html#v:zname"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Defunctionalise",
          "name": "Defunctionalise",
          "package": "idris",
          "source": "src/IRTS-Defunctionalise.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "IRTS Defunctionalise",
          "module": "IRTS.Defunctionalise",
          "name": "Defunctionalise",
          "package": "idris",
          "partial": "Defunctionalise",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Defunctionalise.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Defunctionalise",
          "name": "DAlt",
          "package": "idris",
          "source": "src/IRTS-Defunctionalise.html#DAlt",
          "type": "data"
        },
        "index": {
          "hierarchy": "IRTS Defunctionalise",
          "module": "IRTS.Defunctionalise",
          "name": "DAlt",
          "package": "idris",
          "partial": "DAlt",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Defunctionalise.html#t:DAlt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Defunctionalise",
          "name": "DDecl",
          "package": "idris",
          "source": "src/IRTS-Defunctionalise.html#DDecl",
          "type": "data"
        },
        "index": {
          "hierarchy": "IRTS Defunctionalise",
          "module": "IRTS.Defunctionalise",
          "name": "DDecl",
          "package": "idris",
          "partial": "DDecl",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Defunctionalise.html#t:DDecl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Defunctionalise",
          "name": "DDefs",
          "package": "idris",
          "source": "src/IRTS-Defunctionalise.html#DDefs",
          "type": "type"
        },
        "index": {
          "hierarchy": "IRTS Defunctionalise",
          "module": "IRTS.Defunctionalise",
          "name": "DDefs",
          "package": "idris",
          "partial": "DDefs",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Defunctionalise.html#t:DDefs"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Defunctionalise",
          "name": "DExp",
          "package": "idris",
          "source": "src/IRTS-Defunctionalise.html#DExp",
          "type": "data"
        },
        "index": {
          "hierarchy": "IRTS Defunctionalise",
          "module": "IRTS.Defunctionalise",
          "name": "DExp",
          "package": "idris",
          "partial": "DExp",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Defunctionalise.html#t:DExp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Defunctionalise",
          "name": "EvalApply",
          "package": "idris",
          "source": "src/IRTS-Defunctionalise.html#EvalApply",
          "type": "data"
        },
        "index": {
          "hierarchy": "IRTS Defunctionalise",
          "module": "IRTS.Defunctionalise",
          "name": "EvalApply",
          "package": "idris",
          "partial": "Eval Apply",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Defunctionalise.html#t:EvalApply"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Defunctionalise",
          "name": "ApplyCase",
          "package": "idris",
          "signature": "ApplyCase a",
          "source": "src/IRTS-Defunctionalise.html#EvalApply",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Defunctionalise",
          "module": "IRTS.Defunctionalise",
          "name": "ApplyCase",
          "package": "idris",
          "partial": "Apply Case",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Defunctionalise.html#v:ApplyCase"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Defunctionalise",
          "name": "DApp",
          "package": "idris",
          "signature": "DApp Bool Name [DExp]",
          "source": "src/IRTS-Defunctionalise.html#DExp",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Defunctionalise",
          "module": "IRTS.Defunctionalise",
          "name": "DApp",
          "normalized": "DApp Bool Name[DExp]",
          "package": "idris",
          "partial": "DApp",
          "signature": "DApp Bool Name[DExp]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Defunctionalise.html#v:DApp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Defunctionalise",
          "name": "DC",
          "package": "idris",
          "signature": "DC Int Name [DExp]",
          "source": "src/IRTS-Defunctionalise.html#DExp",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Defunctionalise",
          "module": "IRTS.Defunctionalise",
          "name": "DC",
          "normalized": "DC Int Name[DExp]",
          "package": "idris",
          "partial": "DC",
          "signature": "DC Int Name[DExp]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Defunctionalise.html#v:DC"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Defunctionalise",
          "name": "DCase",
          "package": "idris",
          "signature": "DCase DExp [DAlt]",
          "source": "src/IRTS-Defunctionalise.html#DExp",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Defunctionalise",
          "module": "IRTS.Defunctionalise",
          "name": "DCase",
          "normalized": "DCase DExp[DAlt]",
          "package": "idris",
          "partial": "DCase",
          "signature": "DCase DExp[DAlt]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Defunctionalise.html#v:DCase"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Defunctionalise",
          "name": "DChkCase",
          "package": "idris",
          "signature": "DChkCase DExp [DAlt]",
          "source": "src/IRTS-Defunctionalise.html#DExp",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Defunctionalise",
          "module": "IRTS.Defunctionalise",
          "name": "DChkCase",
          "normalized": "DChkCase DExp[DAlt]",
          "package": "idris",
          "partial": "DChk Case",
          "signature": "DChkCase DExp[DAlt]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Defunctionalise.html#v:DChkCase"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Defunctionalise",
          "name": "DConCase",
          "package": "idris",
          "signature": "DConCase Int Name [Name] DExp",
          "source": "src/IRTS-Defunctionalise.html#DAlt",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Defunctionalise",
          "module": "IRTS.Defunctionalise",
          "name": "DConCase",
          "normalized": "DConCase Int Name[Name]DExp",
          "package": "idris",
          "partial": "DCon Case",
          "signature": "DConCase Int Name[Name]DExp",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Defunctionalise.html#v:DConCase"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Defunctionalise",
          "name": "DConst",
          "package": "idris",
          "signature": "DConst Const",
          "source": "src/IRTS-Defunctionalise.html#DExp",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Defunctionalise",
          "module": "IRTS.Defunctionalise",
          "name": "DConst",
          "package": "idris",
          "partial": "DConst",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Defunctionalise.html#v:DConst"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Defunctionalise",
          "name": "DConstCase",
          "package": "idris",
          "signature": "DConstCase Const DExp",
          "source": "src/IRTS-Defunctionalise.html#DAlt",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Defunctionalise",
          "module": "IRTS.Defunctionalise",
          "name": "DConstCase",
          "package": "idris",
          "partial": "DConst Case",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Defunctionalise.html#v:DConstCase"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Defunctionalise",
          "name": "DConstructor",
          "package": "idris",
          "signature": "DConstructor Name Int Int",
          "source": "src/IRTS-Defunctionalise.html#DDecl",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Defunctionalise",
          "module": "IRTS.Defunctionalise",
          "name": "DConstructor",
          "package": "idris",
          "partial": "DConstructor",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Defunctionalise.html#v:DConstructor"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Defunctionalise",
          "name": "DDefaultCase",
          "package": "idris",
          "signature": "DDefaultCase DExp",
          "source": "src/IRTS-Defunctionalise.html#DAlt",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Defunctionalise",
          "module": "IRTS.Defunctionalise",
          "name": "DDefaultCase",
          "package": "idris",
          "partial": "DDefault Case",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Defunctionalise.html#v:DDefaultCase"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Defunctionalise",
          "name": "DError",
          "package": "idris",
          "signature": "DError String",
          "source": "src/IRTS-Defunctionalise.html#DExp",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Defunctionalise",
          "module": "IRTS.Defunctionalise",
          "name": "DError",
          "package": "idris",
          "partial": "DError",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Defunctionalise.html#v:DError"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Defunctionalise",
          "name": "DForeign",
          "package": "idris",
          "signature": "DForeign FLang FType String [(FType, DExp)]",
          "source": "src/IRTS-Defunctionalise.html#DExp",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Defunctionalise",
          "module": "IRTS.Defunctionalise",
          "name": "DForeign",
          "normalized": "DForeign FLang FType String[(FType,DExp)]",
          "package": "idris",
          "partial": "DForeign",
          "signature": "DForeign FLang FType String[(FType,DExp)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Defunctionalise.html#v:DForeign"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Defunctionalise",
          "name": "DFun",
          "package": "idris",
          "signature": "DFun Name [Name] DExp",
          "source": "src/IRTS-Defunctionalise.html#DDecl",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Defunctionalise",
          "module": "IRTS.Defunctionalise",
          "name": "DFun",
          "normalized": "DFun Name[Name]DExp",
          "package": "idris",
          "partial": "DFun",
          "signature": "DFun Name[Name]DExp",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Defunctionalise.html#v:DFun"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Defunctionalise",
          "name": "DLet",
          "package": "idris",
          "signature": "DLet Name DExp DExp",
          "source": "src/IRTS-Defunctionalise.html#DExp",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Defunctionalise",
          "module": "IRTS.Defunctionalise",
          "name": "DLet",
          "package": "idris",
          "partial": "DLet",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Defunctionalise.html#v:DLet"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Defunctionalise",
          "name": "DNothing",
          "package": "idris",
          "signature": "DNothing",
          "source": "src/IRTS-Defunctionalise.html#DExp",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Defunctionalise",
          "module": "IRTS.Defunctionalise",
          "name": "DNothing",
          "package": "idris",
          "partial": "DNothing",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Defunctionalise.html#v:DNothing"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Defunctionalise",
          "name": "DOp",
          "package": "idris",
          "signature": "DOp PrimFn [DExp]",
          "source": "src/IRTS-Defunctionalise.html#DExp",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Defunctionalise",
          "module": "IRTS.Defunctionalise",
          "name": "DOp",
          "normalized": "DOp PrimFn[DExp]",
          "package": "idris",
          "partial": "DOp",
          "signature": "DOp PrimFn[DExp]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Defunctionalise.html#v:DOp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Defunctionalise",
          "name": "DProj",
          "package": "idris",
          "signature": "DProj DExp Int",
          "source": "src/IRTS-Defunctionalise.html#DExp",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Defunctionalise",
          "module": "IRTS.Defunctionalise",
          "name": "DProj",
          "package": "idris",
          "partial": "DProj",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Defunctionalise.html#v:DProj"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Defunctionalise",
          "name": "DUpdate",
          "package": "idris",
          "signature": "DUpdate Name DExp",
          "source": "src/IRTS-Defunctionalise.html#DExp",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Defunctionalise",
          "module": "IRTS.Defunctionalise",
          "name": "DUpdate",
          "package": "idris",
          "partial": "DUpdate",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Defunctionalise.html#v:DUpdate"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Defunctionalise",
          "name": "DV",
          "package": "idris",
          "signature": "DV LVar",
          "source": "src/IRTS-Defunctionalise.html#DExp",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Defunctionalise",
          "module": "IRTS.Defunctionalise",
          "name": "DV",
          "package": "idris",
          "partial": "DV",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Defunctionalise.html#v:DV"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Defunctionalise",
          "name": "EvalCase",
          "package": "idris",
          "signature": "EvalCase (Name -\u003e a)",
          "source": "src/IRTS-Defunctionalise.html#EvalApply",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Defunctionalise",
          "module": "IRTS.Defunctionalise",
          "name": "EvalCase",
          "normalized": "EvalCase(Name-\u003ea)",
          "package": "idris",
          "partial": "Eval Case",
          "signature": "EvalCase(Name-\u003ea)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Defunctionalise.html#v:EvalCase"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Defunctionalise",
          "name": "addApps",
          "package": "idris",
          "signature": "LDefs -\u003e (Name, LDecl) -\u003e State [Name] (Name, DDecl)",
          "source": "src/IRTS-Defunctionalise.html#addApps",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Defunctionalise",
          "module": "IRTS.Defunctionalise",
          "name": "addApps",
          "normalized": "LDefs-\u003e(Name,LDecl)-\u003eState[Name](Name,DDecl)",
          "package": "idris",
          "partial": "Apps",
          "signature": "LDefs-\u003e(Name,LDecl)-\u003eState[Name](Name,DDecl)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Defunctionalise.html#v:addApps"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Defunctionalise",
          "name": "declare",
          "package": "idris",
          "signature": "Int -\u003e [(Name, Int, EvalApply DAlt)] -\u003e [(Name, DDecl)]",
          "source": "src/IRTS-Defunctionalise.html#declare",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Defunctionalise",
          "module": "IRTS.Defunctionalise",
          "name": "declare",
          "normalized": "Int-\u003e[(Name,Int,EvalApply DAlt)]-\u003e[(Name,DDecl)]",
          "package": "idris",
          "signature": "Int-\u003e[(Name,Int,EvalApply DAlt)]-\u003e[(Name,DDecl)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Defunctionalise.html#v:declare"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Defunctionalise",
          "name": "defunctionalise",
          "package": "idris",
          "signature": "Int -\u003e LDefs -\u003e DDefs",
          "source": "src/IRTS-Defunctionalise.html#defunctionalise",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Defunctionalise",
          "module": "IRTS.Defunctionalise",
          "name": "defunctionalise",
          "normalized": "Int-\u003eLDefs-\u003eDDefs",
          "package": "idris",
          "signature": "Int-\u003eLDefs-\u003eDDefs",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Defunctionalise.html#v:defunctionalise"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Defunctionalise",
          "name": "dumpDefuns",
          "package": "idris",
          "signature": "DDefs -\u003e String",
          "source": "src/IRTS-Defunctionalise.html#dumpDefuns",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Defunctionalise",
          "module": "IRTS.Defunctionalise",
          "name": "dumpDefuns",
          "normalized": "DDefs-\u003eString",
          "package": "idris",
          "partial": "Defuns",
          "signature": "DDefs-\u003eString",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Defunctionalise.html#v:dumpDefuns"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Defunctionalise",
          "name": "eEVAL",
          "package": "idris",
          "signature": "DExp -\u003e DExp",
          "source": "src/IRTS-Defunctionalise.html#eEVAL",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Defunctionalise",
          "module": "IRTS.Defunctionalise",
          "name": "eEVAL",
          "normalized": "DExp-\u003eDExp",
          "package": "idris",
          "partial": "EVAL",
          "signature": "DExp-\u003eDExp",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Defunctionalise.html#v:eEVAL"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Defunctionalise",
          "name": "genArgs",
          "package": "idris",
          "signature": "Int -\u003e [Name]",
          "source": "src/IRTS-Defunctionalise.html#genArgs",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Defunctionalise",
          "module": "IRTS.Defunctionalise",
          "name": "genArgs",
          "normalized": "Int-\u003e[Name]",
          "package": "idris",
          "partial": "Args",
          "signature": "Int-\u003e[Name]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Defunctionalise.html#v:genArgs"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Defunctionalise",
          "name": "getFn",
          "package": "idris",
          "signature": "[(Name, LDecl)] -\u003e [(Name, Int)]",
          "source": "src/IRTS-Defunctionalise.html#getFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Defunctionalise",
          "module": "IRTS.Defunctionalise",
          "name": "getFn",
          "normalized": "[(Name,LDecl)]-\u003e[(Name,Int)]",
          "package": "idris",
          "partial": "Fn",
          "signature": "[(Name,LDecl)]-\u003e[(Name,Int)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Defunctionalise.html#v:getFn"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Defunctionalise",
          "name": "groupsOf",
          "package": "idris",
          "signature": "Int -\u003e [DAlt] -\u003e [[DAlt]]",
          "source": "src/IRTS-Defunctionalise.html#groupsOf",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Defunctionalise",
          "module": "IRTS.Defunctionalise",
          "name": "groupsOf",
          "normalized": "Int-\u003e[DAlt]-\u003e[[DAlt]]",
          "package": "idris",
          "partial": "Of",
          "signature": "Int-\u003e[DAlt]-\u003e[[DAlt]]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Defunctionalise.html#v:groupsOf"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Defunctionalise",
          "name": "mkApply",
          "package": "idris",
          "signature": "[(Name, Int, EvalApply DAlt)] -\u003e (Name, DDecl)",
          "source": "src/IRTS-Defunctionalise.html#mkApply",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Defunctionalise",
          "module": "IRTS.Defunctionalise",
          "name": "mkApply",
          "normalized": "[(Name,Int,EvalApply DAlt)]-\u003e(Name,DDecl)",
          "package": "idris",
          "partial": "Apply",
          "signature": "[(Name,Int,EvalApply DAlt)]-\u003e(Name,DDecl)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Defunctionalise.html#v:mkApply"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Defunctionalise",
          "name": "mkApplyCase",
          "package": "idris",
          "signature": "Name -\u003e Int -\u003e Int -\u003e [(Name, Int, EvalApply DAlt)]",
          "source": "src/IRTS-Defunctionalise.html#mkApplyCase",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Defunctionalise",
          "module": "IRTS.Defunctionalise",
          "name": "mkApplyCase",
          "normalized": "Name-\u003eInt-\u003eInt-\u003e[(Name,Int,EvalApply DAlt)]",
          "package": "idris",
          "partial": "Apply Case",
          "signature": "Name-\u003eInt-\u003eInt-\u003e[(Name,Int,EvalApply DAlt)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Defunctionalise.html#v:mkApplyCase"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Defunctionalise",
          "name": "mkBigCase",
          "package": "idris",
          "signature": "t -\u003e Int -\u003e DExp -\u003e [DAlt] -\u003e DExp",
          "source": "src/IRTS-Defunctionalise.html#mkBigCase",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Defunctionalise",
          "module": "IRTS.Defunctionalise",
          "name": "mkBigCase",
          "normalized": "a-\u003eInt-\u003eDExp-\u003e[DAlt]-\u003eDExp",
          "package": "idris",
          "partial": "Big Case",
          "signature": "t-\u003eInt-\u003eDExp-\u003e[DAlt]-\u003eDExp",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Defunctionalise.html#v:mkBigCase"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Defunctionalise",
          "name": "mkEval",
          "package": "idris",
          "signature": "[(Name, Int, EvalApply DAlt)] -\u003e (Name, DDecl)",
          "source": "src/IRTS-Defunctionalise.html#mkEval",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Defunctionalise",
          "module": "IRTS.Defunctionalise",
          "name": "mkEval",
          "normalized": "[(Name,Int,EvalApply DAlt)]-\u003e(Name,DDecl)",
          "package": "idris",
          "partial": "Eval",
          "signature": "[(Name,Int,EvalApply DAlt)]-\u003e(Name,DDecl)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Defunctionalise.html#v:mkEval"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Defunctionalise",
          "name": "mkFnCon",
          "package": "idris",
          "signature": "a -\u003e Name",
          "source": "src/IRTS-Defunctionalise.html#mkFnCon",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Defunctionalise",
          "module": "IRTS.Defunctionalise",
          "name": "mkFnCon",
          "normalized": "a-\u003eName",
          "package": "idris",
          "partial": "Fn Con",
          "signature": "a-\u003eName",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Defunctionalise.html#v:mkFnCon"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Defunctionalise",
          "name": "mkUnderCon",
          "package": "idris",
          "signature": "Name -\u003e Int -\u003e Name",
          "source": "src/IRTS-Defunctionalise.html#mkUnderCon",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Defunctionalise",
          "module": "IRTS.Defunctionalise",
          "name": "mkUnderCon",
          "normalized": "Name-\u003eInt-\u003eName",
          "package": "idris",
          "partial": "Under Con",
          "signature": "Name-\u003eInt-\u003eName",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Defunctionalise.html#v:mkUnderCon"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Defunctionalise",
          "name": "toCons",
          "package": "idris",
          "signature": "[Name] -\u003e (Name, Int) -\u003e [(Name, Int, EvalApply DAlt)]",
          "source": "src/IRTS-Defunctionalise.html#toCons",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Defunctionalise",
          "module": "IRTS.Defunctionalise",
          "name": "toCons",
          "normalized": "[Name]-\u003e(Name,Int)-\u003e[(Name,Int,EvalApply DAlt)]",
          "package": "idris",
          "partial": "Cons",
          "signature": "[Name]-\u003e(Name,Int)-\u003e[(Name,Int,EvalApply DAlt)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Defunctionalise.html#v:toCons"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.DumpBC",
          "name": "DumpBC",
          "package": "idris",
          "source": "src/IRTS-DumpBC.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "IRTS DumpBC",
          "module": "IRTS.DumpBC",
          "name": "DumpBC",
          "package": "idris",
          "partial": "Dump BC",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-DumpBC.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.DumpBC",
          "name": "dumpBC",
          "package": "idris",
          "signature": "[(Name, SDecl)] -\u003e String -\u003e IO ()",
          "source": "src/IRTS-DumpBC.html#dumpBC",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS DumpBC",
          "module": "IRTS.DumpBC",
          "name": "dumpBC",
          "normalized": "[(Name,SDecl)]-\u003eString-\u003eIO()",
          "package": "idris",
          "partial": "BC",
          "signature": "[(Name,SDecl)]-\u003eString-\u003eIO()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-DumpBC.html#v:dumpBC"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.DumpBC",
          "name": "indent",
          "package": "idris",
          "signature": "Int -\u003e String",
          "source": "src/IRTS-DumpBC.html#indent",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS DumpBC",
          "module": "IRTS.DumpBC",
          "name": "indent",
          "normalized": "Int-\u003eString",
          "package": "idris",
          "signature": "Int-\u003eString",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-DumpBC.html#v:indent"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.DumpBC",
          "name": "interMap",
          "package": "idris",
          "signature": "[a] -\u003e [b] -\u003e (a -\u003e [b]) -\u003e [b]",
          "source": "src/IRTS-DumpBC.html#interMap",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS DumpBC",
          "module": "IRTS.DumpBC",
          "name": "interMap",
          "normalized": "[a]-\u003e[b]-\u003e(a-\u003e[b])-\u003e[b]",
          "package": "idris",
          "partial": "Map",
          "signature": "[a]-\u003e[b]-\u003e(a-\u003e[b])-\u003e[b]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-DumpBC.html#v:interMap"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.DumpBC",
          "name": "serialize",
          "package": "idris",
          "signature": "[(Name, [BC])] -\u003e String",
          "source": "src/IRTS-DumpBC.html#serialize",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS DumpBC",
          "module": "IRTS.DumpBC",
          "name": "serialize",
          "normalized": "[(Name,[BC])]-\u003eString",
          "package": "idris",
          "signature": "[(Name,[BC])]-\u003eString",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-DumpBC.html#v:serialize"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.DumpBC",
          "name": "serializeBC",
          "package": "idris",
          "signature": "Int -\u003e BC -\u003e String",
          "source": "src/IRTS-DumpBC.html#serializeBC",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS DumpBC",
          "module": "IRTS.DumpBC",
          "name": "serializeBC",
          "normalized": "Int-\u003eBC-\u003eString",
          "package": "idris",
          "partial": "BC",
          "signature": "Int-\u003eBC-\u003eString",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-DumpBC.html#v:serializeBC"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.DumpBC",
          "name": "serializeCase",
          "package": "idris",
          "signature": "Int -\u003e (a, [BC]) -\u003e String",
          "source": "src/IRTS-DumpBC.html#serializeCase",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS DumpBC",
          "module": "IRTS.DumpBC",
          "name": "serializeCase",
          "normalized": "Int-\u003e(a,[BC])-\u003eString",
          "package": "idris",
          "partial": "Case",
          "signature": "Int-\u003e(a,[BC])-\u003eString",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-DumpBC.html#v:serializeCase"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.DumpBC",
          "name": "serializeDefault",
          "package": "idris",
          "signature": "Int -\u003e [BC] -\u003e String",
          "source": "src/IRTS-DumpBC.html#serializeDefault",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS DumpBC",
          "module": "IRTS.DumpBC",
          "name": "serializeDefault",
          "normalized": "Int-\u003e[BC]-\u003eString",
          "package": "idris",
          "partial": "Default",
          "signature": "Int-\u003e[BC]-\u003eString",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-DumpBC.html#v:serializeDefault"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.DumpBC",
          "name": "serializeReg",
          "package": "idris",
          "signature": "Reg -\u003e String",
          "source": "src/IRTS-DumpBC.html#serializeReg",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS DumpBC",
          "module": "IRTS.DumpBC",
          "name": "serializeReg",
          "normalized": "Reg-\u003eString",
          "package": "idris",
          "partial": "Reg",
          "signature": "Reg-\u003eString",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-DumpBC.html#v:serializeReg"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Inliner",
          "name": "Inliner",
          "package": "idris",
          "source": "src/IRTS-Inliner.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "IRTS Inliner",
          "module": "IRTS.Inliner",
          "name": "Inliner",
          "package": "idris",
          "partial": "Inliner",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Inliner.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Inliner",
          "name": "evalD",
          "package": "idris",
          "signature": "t -\u003e a -\u003e Maybe a",
          "source": "src/IRTS-Inliner.html#evalD",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Inliner",
          "module": "IRTS.Inliner",
          "name": "evalD",
          "normalized": "a-\u003eb-\u003eMaybe b",
          "package": "idris",
          "signature": "t-\u003ea-\u003eMaybe a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Inliner.html#v:evalD"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Inliner",
          "name": "inl",
          "package": "idris",
          "signature": "DDefs -\u003e (Name, DDecl) -\u003e (Name, DDecl)",
          "source": "src/IRTS-Inliner.html#inl",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Inliner",
          "module": "IRTS.Inliner",
          "name": "inl",
          "normalized": "DDefs-\u003e(Name,DDecl)-\u003e(Name,DDecl)",
          "package": "idris",
          "signature": "DDefs-\u003e(Name,DDecl)-\u003e(Name,DDecl)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Inliner.html#v:inl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Inliner",
          "name": "inline",
          "package": "idris",
          "signature": "DDefs -\u003e DDefs",
          "source": "src/IRTS-Inliner.html#inline",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Inliner",
          "module": "IRTS.Inliner",
          "name": "inline",
          "normalized": "DDefs-\u003eDDefs",
          "package": "idris",
          "signature": "DDefs-\u003eDDefs",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Inliner.html#v:inline"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.ASTBuilding",
          "name": "ASTBuilding",
          "package": "idris",
          "source": "src/IRTS-Java-ASTBuilding.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "IRTS Java ASTBuilding",
          "module": "IRTS.Java.ASTBuilding",
          "name": "ASTBuilding",
          "package": "idris",
          "partial": "ASTBuilding",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-ASTBuilding.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.ASTBuilding",
          "name": "Callable",
          "package": "idris",
          "source": "src/IRTS-Java-ASTBuilding.html#Callable",
          "type": "class"
        },
        "index": {
          "hierarchy": "IRTS Java ASTBuilding",
          "module": "IRTS.Java.ASTBuilding",
          "name": "Callable",
          "package": "idris",
          "partial": "Callable",
          "type": "class"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-ASTBuilding.html#t:Callable"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.ASTBuilding",
          "name": "InvocationTarget",
          "package": "idris",
          "source": "src/IRTS-Java-ASTBuilding.html#InvocationTarget",
          "type": "class"
        },
        "index": {
          "hierarchy": "IRTS Java ASTBuilding",
          "module": "IRTS.Java.ASTBuilding",
          "name": "InvocationTarget",
          "package": "idris",
          "partial": "Invocation Target",
          "type": "class"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-ASTBuilding.html#t:InvocationTarget"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.ASTBuilding",
          "name": "(~&&~)",
          "package": "idris",
          "signature": "Exp -\u003e Exp -\u003e Exp",
          "source": "src/IRTS-Java-ASTBuilding.html#~%26%26~",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Java ASTBuilding",
          "module": "IRTS.Java.ASTBuilding",
          "name": "(~&&~) ~&&~",
          "normalized": "Exp-\u003eExp-\u003eExp",
          "package": "idris",
          "signature": "Exp-\u003eExp-\u003eExp",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-ASTBuilding.html#v:-126--38--38--126-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.ASTBuilding",
          "name": "(~==~)",
          "package": "idris",
          "signature": "Exp -\u003e Exp -\u003e Exp",
          "source": "src/IRTS-Java-ASTBuilding.html#~%3D%3D~",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Java ASTBuilding",
          "module": "IRTS.Java.ASTBuilding",
          "name": "(~==~) ~==~",
          "normalized": "Exp-\u003eExp-\u003eExp",
          "package": "idris",
          "signature": "Exp-\u003eExp-\u003eExp",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-ASTBuilding.html#v:-126--61--61--126-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.ASTBuilding",
          "name": "(~\u003e)",
          "package": "idris",
          "signature": "a -\u003e String -\u003e [Argument] -\u003e Exp",
          "source": "src/IRTS-Java-ASTBuilding.html#~%3E",
          "type": "method"
        },
        "index": {
          "hierarchy": "IRTS Java ASTBuilding",
          "module": "IRTS.Java.ASTBuilding",
          "name": "(~\u003e) ~\u003e",
          "normalized": "a-\u003eString-\u003e[Argument]-\u003eExp",
          "package": "idris",
          "signature": "a-\u003eString-\u003e[Argument]-\u003eExp",
          "type": "method"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-ASTBuilding.html#v:-126--62-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.ASTBuilding",
          "name": "(\u003c\u003e)",
          "package": "idris",
          "signature": "Type -\u003e Exp -\u003e Exp",
          "source": "src/IRTS-Java-ASTBuilding.html#%3C%3E",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Java ASTBuilding",
          "module": "IRTS.Java.ASTBuilding",
          "name": "(\u003c\u003e) \u003c\u003e",
          "normalized": "Type-\u003eExp-\u003eExp",
          "package": "idris",
          "signature": "Type-\u003eExp-\u003eExp",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-ASTBuilding.html#v:-60--62-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.ASTBuilding",
          "name": "(@!)",
          "package": "idris",
          "signature": "Exp -\u003e Int -\u003e ArrayIndex",
          "source": "src/IRTS-Java-ASTBuilding.html#%40%21",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Java ASTBuilding",
          "module": "IRTS.Java.ASTBuilding",
          "name": "(@!) @!",
          "normalized": "Exp-\u003eInt-\u003eArrayIndex",
          "package": "idris",
          "signature": "Exp-\u003eInt-\u003eArrayIndex",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-ASTBuilding.html#v:-64--33-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.ASTBuilding",
          "name": "(@:=)",
          "package": "idris",
          "signature": "Either ArrayIndex Ident -\u003e Exp -\u003e BlockStmt",
          "source": "src/IRTS-Java-ASTBuilding.html#%40%3A%3D",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Java ASTBuilding",
          "module": "IRTS.Java.ASTBuilding",
          "name": "(@:=) @:=",
          "normalized": "Either ArrayIndex Ident-\u003eExp-\u003eBlockStmt",
          "package": "idris",
          "signature": "Either ArrayIndex Ident-\u003eExp-\u003eBlockStmt",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-ASTBuilding.html#v:-64-:-61-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.ASTBuilding",
          "name": "addToBlock",
          "package": "idris",
          "signature": "[BlockStmt] -\u003e Exp -\u003e [BlockStmt]",
          "source": "src/IRTS-Java-ASTBuilding.html#addToBlock",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Java ASTBuilding",
          "module": "IRTS.Java.ASTBuilding",
          "name": "addToBlock",
          "normalized": "[BlockStmt]-\u003eExp-\u003e[BlockStmt]",
          "package": "idris",
          "partial": "To Block",
          "signature": "[BlockStmt]-\u003eExp-\u003e[BlockStmt]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-ASTBuilding.html#v:addToBlock"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.ASTBuilding",
          "name": "arrayInitExps",
          "package": "idris",
          "signature": "[Exp] -\u003e VarInit",
          "source": "src/IRTS-Java-ASTBuilding.html#arrayInitExps",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Java ASTBuilding",
          "module": "IRTS.Java.ASTBuilding",
          "name": "arrayInitExps",
          "normalized": "[Exp]-\u003eVarInit",
          "package": "idris",
          "partial": "Init Exps",
          "signature": "[Exp]-\u003eVarInit",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-ASTBuilding.html#v:arrayInitExps"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.ASTBuilding",
          "name": "bigInteger",
          "package": "idris",
          "signature": "String -\u003e Exp",
          "source": "src/IRTS-Java-ASTBuilding.html#bigInteger",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Java ASTBuilding",
          "module": "IRTS.Java.ASTBuilding",
          "name": "bigInteger",
          "normalized": "String-\u003eExp",
          "package": "idris",
          "partial": "Integer",
          "signature": "String-\u003eExp",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-ASTBuilding.html#v:bigInteger"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.ASTBuilding",
          "name": "call",
          "package": "idris",
          "signature": "a -\u003e [Argument] -\u003e Exp",
          "source": "src/IRTS-Java-ASTBuilding.html#call",
          "type": "method"
        },
        "index": {
          "hierarchy": "IRTS Java ASTBuilding",
          "module": "IRTS.Java.ASTBuilding",
          "name": "call",
          "normalized": "a-\u003e[Argument]-\u003eExp",
          "package": "idris",
          "signature": "a-\u003e[Argument]-\u003eExp",
          "type": "method"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-ASTBuilding.html#v:call"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.ASTBuilding",
          "name": "closure",
          "package": "idris",
          "signature": "Exp -\u003e Exp",
          "source": "src/IRTS-Java-ASTBuilding.html#closure",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Java ASTBuilding",
          "module": "IRTS.Java.ASTBuilding",
          "name": "closure",
          "normalized": "Exp-\u003eExp",
          "package": "idris",
          "signature": "Exp-\u003eExp",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-ASTBuilding.html#v:closure"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.ASTBuilding",
          "name": "declareFinalObjectArray",
          "package": "idris",
          "signature": "Ident -\u003e Maybe VarInit -\u003e BlockStmt",
          "source": "src/IRTS-Java-ASTBuilding.html#declareFinalObjectArray",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Java ASTBuilding",
          "module": "IRTS.Java.ASTBuilding",
          "name": "declareFinalObjectArray",
          "normalized": "Ident-\u003eMaybe VarInit-\u003eBlockStmt",
          "package": "idris",
          "partial": "Final Object Array",
          "signature": "Ident-\u003eMaybe VarInit-\u003eBlockStmt",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-ASTBuilding.html#v:declareFinalObjectArray"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.ASTBuilding",
          "name": "extendWithNull",
          "package": "idris",
          "signature": "[Exp] -\u003e Int -\u003e [Exp]",
          "source": "src/IRTS-Java-ASTBuilding.html#extendWithNull",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Java ASTBuilding",
          "module": "IRTS.Java.ASTBuilding",
          "name": "extendWithNull",
          "normalized": "[Exp]-\u003eInt-\u003e[Exp]",
          "package": "idris",
          "partial": "With Null",
          "signature": "[Exp]-\u003eInt-\u003e[Exp]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-ASTBuilding.html#v:extendWithNull"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.ASTBuilding",
          "name": "jConst",
          "package": "idris",
          "signature": "String -\u003e Exp",
          "source": "src/IRTS-Java-ASTBuilding.html#jConst",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Java ASTBuilding",
          "module": "IRTS.Java.ASTBuilding",
          "name": "jConst",
          "normalized": "String-\u003eExp",
          "package": "idris",
          "partial": "Const",
          "signature": "String-\u003eExp",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-ASTBuilding.html#v:jConst"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.ASTBuilding",
          "name": "jInt",
          "package": "idris",
          "signature": "Int -\u003e Exp",
          "source": "src/IRTS-Java-ASTBuilding.html#jInt",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Java ASTBuilding",
          "module": "IRTS.Java.ASTBuilding",
          "name": "jInt",
          "normalized": "Int-\u003eExp",
          "package": "idris",
          "partial": "Int",
          "signature": "Int-\u003eExp",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-ASTBuilding.html#v:jInt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.ASTBuilding",
          "name": "jName",
          "package": "idris",
          "signature": "String -\u003e Name",
          "source": "src/IRTS-Java-ASTBuilding.html#jName",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Java ASTBuilding",
          "module": "IRTS.Java.ASTBuilding",
          "name": "jName",
          "normalized": "String-\u003eName",
          "package": "idris",
          "partial": "Name",
          "signature": "String-\u003eName",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-ASTBuilding.html#v:jName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.ASTBuilding",
          "name": "jReturn",
          "package": "idris",
          "signature": "Exp -\u003e BlockStmt",
          "source": "src/IRTS-Java-ASTBuilding.html#jReturn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Java ASTBuilding",
          "module": "IRTS.Java.ASTBuilding",
          "name": "jReturn",
          "normalized": "Exp-\u003eBlockStmt",
          "package": "idris",
          "partial": "Return",
          "signature": "Exp-\u003eBlockStmt",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-ASTBuilding.html#v:jReturn"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.ASTBuilding",
          "name": "jString",
          "package": "idris",
          "signature": "String -\u003e Exp",
          "source": "src/IRTS-Java-ASTBuilding.html#jString",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Java ASTBuilding",
          "module": "IRTS.Java.ASTBuilding",
          "name": "jString",
          "normalized": "String-\u003eExp",
          "package": "idris",
          "partial": "String",
          "signature": "String-\u003eExp",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-ASTBuilding.html#v:jString"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.ASTBuilding",
          "name": "localVar",
          "package": "idris",
          "signature": "Int -\u003e Ident",
          "source": "src/IRTS-Java-ASTBuilding.html#localVar",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Java ASTBuilding",
          "module": "IRTS.Java.ASTBuilding",
          "name": "localVar",
          "normalized": "Int-\u003eIdent",
          "package": "idris",
          "partial": "Var",
          "signature": "Int-\u003eIdent",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-ASTBuilding.html#v:localVar"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.ASTBuilding",
          "name": "simpleMethod",
          "package": "idris",
          "signature": "[Modifier] -\u003e Maybe Type -\u003e String -\u003e [FormalParam] -\u003e Block -\u003e Decl",
          "source": "src/IRTS-Java-ASTBuilding.html#simpleMethod",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Java ASTBuilding",
          "module": "IRTS.Java.ASTBuilding",
          "name": "simpleMethod",
          "normalized": "[Modifier]-\u003eMaybe Type-\u003eString-\u003e[FormalParam]-\u003eBlock-\u003eDecl",
          "package": "idris",
          "partial": "Method",
          "signature": "[Modifier]-\u003eMaybe Type-\u003eString-\u003e[FormalParam]-\u003eBlock-\u003eDecl",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-ASTBuilding.html#v:simpleMethod"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.ASTBuilding",
          "name": "toClassType",
          "package": "idris",
          "signature": "Type -\u003e ClassType",
          "source": "src/IRTS-Java-ASTBuilding.html#toClassType",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Java ASTBuilding",
          "module": "IRTS.Java.ASTBuilding",
          "name": "toClassType",
          "normalized": "Type-\u003eClassType",
          "package": "idris",
          "partial": "Class Type",
          "signature": "Type-\u003eClassType",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-ASTBuilding.html#v:toClassType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.ASTBuilding",
          "name": "toRefType",
          "package": "idris",
          "signature": "Type -\u003e RefType",
          "source": "src/IRTS-Java-ASTBuilding.html#toRefType",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Java ASTBuilding",
          "module": "IRTS.Java.ASTBuilding",
          "name": "toRefType",
          "normalized": "Type-\u003eRefType",
          "package": "idris",
          "partial": "Ref Type",
          "signature": "Type-\u003eRefType",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-ASTBuilding.html#v:toRefType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.JTypes",
          "name": "JTypes",
          "package": "idris",
          "source": "src/IRTS-Java-JTypes.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "IRTS Java JTypes",
          "module": "IRTS.Java.JTypes",
          "name": "JTypes",
          "package": "idris",
          "partial": "JTypes",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-JTypes.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.JTypes",
          "name": "arithTyToJType",
          "package": "idris",
          "signature": "ArithTy -\u003e Type",
          "source": "src/IRTS-Java-JTypes.html#arithTyToJType",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Java JTypes",
          "module": "IRTS.Java.JTypes",
          "name": "arithTyToJType",
          "normalized": "ArithTy-\u003eType",
          "package": "idris",
          "partial": "Ty To JType",
          "signature": "ArithTy-\u003eType",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-JTypes.html#v:arithTyToJType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.JTypes",
          "name": "array",
          "package": "idris",
          "signature": "Type -\u003e Type",
          "source": "src/IRTS-Java-JTypes.html#array",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Java JTypes",
          "module": "IRTS.Java.JTypes",
          "name": "array",
          "normalized": "Type-\u003eType",
          "package": "idris",
          "signature": "Type-\u003eType",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-JTypes.html#v:array"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.JTypes",
          "name": "arraysType",
          "package": "idris",
          "signature": "Type",
          "source": "src/IRTS-Java-JTypes.html#arraysType",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Java JTypes",
          "module": "IRTS.Java.JTypes",
          "name": "arraysType",
          "package": "idris",
          "partial": "Type",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-JTypes.html#v:arraysType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.JTypes",
          "name": "bigIntegerType",
          "package": "idris",
          "signature": "Type",
          "source": "src/IRTS-Java-JTypes.html#bigIntegerType",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Java JTypes",
          "module": "IRTS.Java.JTypes",
          "name": "bigIntegerType",
          "package": "idris",
          "partial": "Integer Type",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-JTypes.html#v:bigIntegerType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.JTypes",
          "name": "box",
          "package": "idris",
          "signature": "Type -\u003e Type",
          "source": "src/IRTS-Java-JTypes.html#box",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Java JTypes",
          "module": "IRTS.Java.JTypes",
          "name": "box",
          "normalized": "Type-\u003eType",
          "package": "idris",
          "signature": "Type-\u003eType",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-JTypes.html#v:box"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.JTypes",
          "name": "byteType",
          "package": "idris",
          "signature": "Type",
          "source": "src/IRTS-Java-JTypes.html#byteType",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Java JTypes",
          "module": "IRTS.Java.JTypes",
          "name": "byteType",
          "package": "idris",
          "partial": "Type",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-JTypes.html#v:byteType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.JTypes",
          "name": "callableType",
          "package": "idris",
          "signature": "Type",
          "source": "src/IRTS-Java-JTypes.html#callableType",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Java JTypes",
          "module": "IRTS.Java.JTypes",
          "name": "callableType",
          "package": "idris",
          "partial": "Type",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-JTypes.html#v:callableType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.JTypes",
          "name": "charType",
          "package": "idris",
          "signature": "Type",
          "source": "src/IRTS-Java-JTypes.html#charType",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Java JTypes",
          "module": "IRTS.Java.JTypes",
          "name": "charType",
          "package": "idris",
          "partial": "Type",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-JTypes.html#v:charType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.JTypes",
          "name": "constType",
          "package": "idris",
          "signature": "Const -\u003e Type",
          "source": "src/IRTS-Java-JTypes.html#constType",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Java JTypes",
          "module": "IRTS.Java.JTypes",
          "name": "constType",
          "normalized": "Const-\u003eType",
          "package": "idris",
          "partial": "Type",
          "signature": "Const-\u003eType",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-JTypes.html#v:constType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.JTypes",
          "name": "contextArray",
          "package": "idris",
          "signature": "LVar -\u003e Exp",
          "source": "src/IRTS-Java-JTypes.html#contextArray",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Java JTypes",
          "module": "IRTS.Java.JTypes",
          "name": "contextArray",
          "normalized": "LVar-\u003eExp",
          "package": "idris",
          "partial": "Array",
          "signature": "LVar-\u003eExp",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-JTypes.html#v:contextArray"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.JTypes",
          "name": "contextParam",
          "package": "idris",
          "signature": "FormalParam",
          "source": "src/IRTS-Java-JTypes.html#contextParam",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Java JTypes",
          "module": "IRTS.Java.JTypes",
          "name": "contextParam",
          "package": "idris",
          "partial": "Param",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-JTypes.html#v:contextParam"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.JTypes",
          "name": "doubleType",
          "package": "idris",
          "signature": "Type",
          "source": "src/IRTS-Java-JTypes.html#doubleType",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Java JTypes",
          "module": "IRTS.Java.JTypes",
          "name": "doubleType",
          "package": "idris",
          "partial": "Type",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-JTypes.html#v:doubleType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.JTypes",
          "name": "exceptionType",
          "package": "idris",
          "signature": "Type",
          "source": "src/IRTS-Java-JTypes.html#exceptionType",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Java JTypes",
          "module": "IRTS.Java.JTypes",
          "name": "exceptionType",
          "package": "idris",
          "partial": "Type",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-JTypes.html#v:exceptionType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.JTypes",
          "name": "foreignType",
          "package": "idris",
          "signature": "FType -\u003e Maybe Type",
          "source": "src/IRTS-Java-JTypes.html#foreignType",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Java JTypes",
          "module": "IRTS.Java.JTypes",
          "name": "foreignType",
          "normalized": "FType-\u003eMaybe Type",
          "package": "idris",
          "partial": "Type",
          "signature": "FType-\u003eMaybe Type",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-JTypes.html#v:foreignType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.JTypes",
          "name": "foreignWrapperType",
          "package": "idris",
          "signature": "Type",
          "source": "src/IRTS-Java-JTypes.html#foreignWrapperType",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Java JTypes",
          "module": "IRTS.Java.JTypes",
          "name": "foreignWrapperType",
          "package": "idris",
          "partial": "Wrapper Type",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-JTypes.html#v:foreignWrapperType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.JTypes",
          "name": "globalContext",
          "package": "idris",
          "signature": "Exp",
          "source": "src/IRTS-Java-JTypes.html#globalContext",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Java JTypes",
          "module": "IRTS.Java.JTypes",
          "name": "globalContext",
          "package": "idris",
          "partial": "Context",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-JTypes.html#v:globalContext"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.JTypes",
          "name": "globalContextID",
          "package": "idris",
          "signature": "Ident",
          "source": "src/IRTS-Java-JTypes.html#globalContextID",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Java JTypes",
          "module": "IRTS.Java.JTypes",
          "name": "globalContextID",
          "package": "idris",
          "partial": "Context ID",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-JTypes.html#v:globalContextID"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.JTypes",
          "name": "idrisClosureType",
          "package": "idris",
          "signature": "Type",
          "source": "src/IRTS-Java-JTypes.html#idrisClosureType",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Java JTypes",
          "module": "IRTS.Java.JTypes",
          "name": "idrisClosureType",
          "package": "idris",
          "partial": "Closure Type",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-JTypes.html#v:idrisClosureType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.JTypes",
          "name": "idrisObjectType",
          "package": "idris",
          "signature": "Type",
          "source": "src/IRTS-Java-JTypes.html#idrisObjectType",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Java JTypes",
          "module": "IRTS.Java.JTypes",
          "name": "idrisObjectType",
          "package": "idris",
          "partial": "Object Type",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-JTypes.html#v:idrisObjectType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.JTypes",
          "name": "idrisTailCallClosureType",
          "package": "idris",
          "signature": "Type",
          "source": "src/IRTS-Java-JTypes.html#idrisTailCallClosureType",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Java JTypes",
          "module": "IRTS.Java.JTypes",
          "name": "idrisTailCallClosureType",
          "package": "idris",
          "partial": "Tail Call Closure Type",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-JTypes.html#v:idrisTailCallClosureType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.JTypes",
          "name": "intTyToJType",
          "package": "idris",
          "signature": "IntTy -\u003e Type",
          "source": "src/IRTS-Java-JTypes.html#intTyToJType",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Java JTypes",
          "module": "IRTS.Java.JTypes",
          "name": "intTyToJType",
          "normalized": "IntTy-\u003eType",
          "package": "idris",
          "partial": "Ty To JType",
          "signature": "IntTy-\u003eType",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-JTypes.html#v:intTyToJType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.JTypes",
          "name": "integerType",
          "package": "idris",
          "signature": "Type",
          "source": "src/IRTS-Java-JTypes.html#integerType",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Java JTypes",
          "module": "IRTS.Java.JTypes",
          "name": "integerType",
          "package": "idris",
          "partial": "Type",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-JTypes.html#v:integerType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.JTypes",
          "name": "isArray",
          "package": "idris",
          "signature": "Type -\u003e Bool",
          "source": "src/IRTS-Java-JTypes.html#isArray",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Java JTypes",
          "module": "IRTS.Java.JTypes",
          "name": "isArray",
          "normalized": "Type-\u003eBool",
          "package": "idris",
          "partial": "Array",
          "signature": "Type-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-JTypes.html#v:isArray"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.JTypes",
          "name": "isFloating",
          "package": "idris",
          "signature": "Type -\u003e Bool",
          "source": "src/IRTS-Java-JTypes.html#isFloating",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Java JTypes",
          "module": "IRTS.Java.JTypes",
          "name": "isFloating",
          "normalized": "Type-\u003eBool",
          "package": "idris",
          "partial": "Floating",
          "signature": "Type-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-JTypes.html#v:isFloating"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.JTypes",
          "name": "isPrimitive",
          "package": "idris",
          "signature": "Type -\u003e Bool",
          "source": "src/IRTS-Java-JTypes.html#isPrimitive",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Java JTypes",
          "module": "IRTS.Java.JTypes",
          "name": "isPrimitive",
          "normalized": "Type-\u003eBool",
          "package": "idris",
          "partial": "Primitive",
          "signature": "Type-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-JTypes.html#v:isPrimitive"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.JTypes",
          "name": "isString",
          "package": "idris",
          "signature": "Type -\u003e Bool",
          "source": "src/IRTS-Java-JTypes.html#isString",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Java JTypes",
          "module": "IRTS.Java.JTypes",
          "name": "isString",
          "normalized": "Type-\u003eBool",
          "package": "idris",
          "partial": "String",
          "signature": "Type-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-JTypes.html#v:isString"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.JTypes",
          "name": "localContext",
          "package": "idris",
          "signature": "Exp",
          "source": "src/IRTS-Java-JTypes.html#localContext",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Java JTypes",
          "module": "IRTS.Java.JTypes",
          "name": "localContext",
          "package": "idris",
          "partial": "Context",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-JTypes.html#v:localContext"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.JTypes",
          "name": "localContextID",
          "package": "idris",
          "signature": "Ident",
          "source": "src/IRTS-Java-JTypes.html#localContextID",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Java JTypes",
          "module": "IRTS.Java.JTypes",
          "name": "localContextID",
          "package": "idris",
          "partial": "Context ID",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-JTypes.html#v:localContextID"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.JTypes",
          "name": "longType",
          "package": "idris",
          "signature": "Type",
          "source": "src/IRTS-Java-JTypes.html#longType",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Java JTypes",
          "module": "IRTS.Java.JTypes",
          "name": "longType",
          "package": "idris",
          "partial": "Type",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-JTypes.html#v:longType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.JTypes",
          "name": "mathType",
          "package": "idris",
          "signature": "Type",
          "source": "src/IRTS-Java-JTypes.html#mathType",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Java JTypes",
          "module": "IRTS.Java.JTypes",
          "name": "mathType",
          "package": "idris",
          "partial": "Type",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-JTypes.html#v:mathType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.JTypes",
          "name": "nativeTyToJType",
          "package": "idris",
          "signature": "NativeTy -\u003e Type",
          "source": "src/IRTS-Java-JTypes.html#nativeTyToJType",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Java JTypes",
          "module": "IRTS.Java.JTypes",
          "name": "nativeTyToJType",
          "normalized": "NativeTy-\u003eType",
          "package": "idris",
          "partial": "Ty To JType",
          "signature": "NativeTy-\u003eType",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-JTypes.html#v:nativeTyToJType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.JTypes",
          "name": "newContext",
          "package": "idris",
          "signature": "Exp",
          "source": "src/IRTS-Java-JTypes.html#newContext",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Java JTypes",
          "module": "IRTS.Java.JTypes",
          "name": "newContext",
          "package": "idris",
          "partial": "Context",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-JTypes.html#v:newContext"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.JTypes",
          "name": "newContextID",
          "package": "idris",
          "signature": "Ident",
          "source": "src/IRTS-Java-JTypes.html#newContextID",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Java JTypes",
          "module": "IRTS.Java.JTypes",
          "name": "newContextID",
          "package": "idris",
          "partial": "Context ID",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-JTypes.html#v:newContextID"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.JTypes",
          "name": "objectType",
          "package": "idris",
          "signature": "Type",
          "source": "src/IRTS-Java-JTypes.html#objectType",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Java JTypes",
          "module": "IRTS.Java.JTypes",
          "name": "objectType",
          "package": "idris",
          "partial": "Type",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-JTypes.html#v:objectType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.JTypes",
          "name": "opName",
          "package": "idris",
          "signature": "PrimFn -\u003e String",
          "source": "src/IRTS-Java-JTypes.html#opName",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Java JTypes",
          "module": "IRTS.Java.JTypes",
          "name": "opName",
          "normalized": "PrimFn-\u003eString",
          "package": "idris",
          "partial": "Name",
          "signature": "PrimFn-\u003eString",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-JTypes.html#v:opName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.JTypes",
          "name": "primFnType",
          "package": "idris",
          "signature": "Type",
          "source": "src/IRTS-Java-JTypes.html#primFnType",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Java JTypes",
          "module": "IRTS.Java.JTypes",
          "name": "primFnType",
          "package": "idris",
          "partial": "Fn Type",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-JTypes.html#v:primFnType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.JTypes",
          "name": "runtimeExceptionType",
          "package": "idris",
          "signature": "Type",
          "source": "src/IRTS-Java-JTypes.html#runtimeExceptionType",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Java JTypes",
          "module": "IRTS.Java.JTypes",
          "name": "runtimeExceptionType",
          "package": "idris",
          "partial": "Exception Type",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-JTypes.html#v:runtimeExceptionType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.JTypes",
          "name": "shortType",
          "package": "idris",
          "signature": "Type",
          "source": "src/IRTS-Java-JTypes.html#shortType",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Java JTypes",
          "module": "IRTS.Java.JTypes",
          "name": "shortType",
          "package": "idris",
          "partial": "Type",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-JTypes.html#v:shortType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.JTypes",
          "name": "sourceTypes",
          "package": "idris",
          "signature": "PrimFn -\u003e [Type]",
          "source": "src/IRTS-Java-JTypes.html#sourceTypes",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Java JTypes",
          "module": "IRTS.Java.JTypes",
          "name": "sourceTypes",
          "normalized": "PrimFn-\u003e[Type]",
          "package": "idris",
          "partial": "Types",
          "signature": "PrimFn-\u003e[Type]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-JTypes.html#v:sourceTypes"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.JTypes",
          "name": "stringType",
          "package": "idris",
          "signature": "Type",
          "source": "src/IRTS-Java-JTypes.html#stringType",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Java JTypes",
          "module": "IRTS.Java.JTypes",
          "name": "stringType",
          "package": "idris",
          "partial": "Type",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-JTypes.html#v:stringType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.JTypes",
          "name": "threadType",
          "package": "idris",
          "signature": "Type",
          "source": "src/IRTS-Java-JTypes.html#threadType",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Java JTypes",
          "module": "IRTS.Java.JTypes",
          "name": "threadType",
          "package": "idris",
          "partial": "Type",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-JTypes.html#v:threadType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.JTypes",
          "name": "voidType",
          "package": "idris",
          "signature": "Type",
          "source": "src/IRTS-Java-JTypes.html#voidType",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Java JTypes",
          "module": "IRTS.Java.JTypes",
          "name": "voidType",
          "package": "idris",
          "partial": "Type",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-JTypes.html#v:voidType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.Mangling",
          "name": "Mangling",
          "package": "idris",
          "source": "src/IRTS-Java-Mangling.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "IRTS Java Mangling",
          "module": "IRTS.Java.Mangling",
          "name": "Mangling",
          "package": "idris",
          "partial": "Mangling",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-Mangling.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.Mangling",
          "name": "liftParsed",
          "package": "idris",
          "signature": "Either e a -\u003e m a",
          "source": "src/IRTS-Java-Mangling.html#liftParsed",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Java Mangling",
          "module": "IRTS.Java.Mangling",
          "name": "liftParsed",
          "normalized": "Either a b-\u003ec b",
          "package": "idris",
          "partial": "Parsed",
          "signature": "Either e a-\u003em a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-Mangling.html#v:liftParsed"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.Mangling",
          "name": "mangle",
          "package": "idris",
          "signature": "Name -\u003e m Ident",
          "source": "src/IRTS-Java-Mangling.html#mangle",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Java Mangling",
          "module": "IRTS.Java.Mangling",
          "name": "mangle",
          "normalized": "Name-\u003ea Ident",
          "package": "idris",
          "signature": "Name-\u003em Ident",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-Mangling.html#v:mangle"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.Mangling",
          "name": "mangle'",
          "package": "idris",
          "signature": "Name -\u003e Ident",
          "source": "src/IRTS-Java-Mangling.html#mangle%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Java Mangling",
          "module": "IRTS.Java.Mangling",
          "name": "mangle'",
          "normalized": "Name-\u003eIdent",
          "package": "idris",
          "signature": "Name-\u003eIdent",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-Mangling.html#v:mangle-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.Mangling",
          "name": "mangleFull",
          "package": "idris",
          "signature": "Name -\u003e m Name",
          "source": "src/IRTS-Java-Mangling.html#mangleFull",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Java Mangling",
          "module": "IRTS.Java.Mangling",
          "name": "mangleFull",
          "normalized": "Name-\u003ea Name",
          "package": "idris",
          "partial": "Full",
          "signature": "Name-\u003em Name",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-Mangling.html#v:mangleFull"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.Mangling",
          "name": "mangleWithPrefix",
          "package": "idris",
          "signature": "String -\u003e Name -\u003e m Ident",
          "source": "src/IRTS-Java-Mangling.html#mangleWithPrefix",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Java Mangling",
          "module": "IRTS.Java.Mangling",
          "name": "mangleWithPrefix",
          "normalized": "String-\u003eName-\u003ea Ident",
          "package": "idris",
          "partial": "With Prefix",
          "signature": "String-\u003eName-\u003em Ident",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-Mangling.html#v:mangleWithPrefix"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.Mangling",
          "name": "mkClassName",
          "package": "idris",
          "signature": "FilePath -\u003e m Ident",
          "source": "src/IRTS-Java-Mangling.html#mkClassName",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Java Mangling",
          "module": "IRTS.Java.Mangling",
          "name": "mkClassName",
          "normalized": "FilePath-\u003ea Ident",
          "package": "idris",
          "partial": "Class Name",
          "signature": "FilePath-\u003em Ident",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-Mangling.html#v:mkClassName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.Mangling",
          "name": "prefixCallNamespaces",
          "package": "idris",
          "signature": "Ident -\u003e SDecl -\u003e SDecl",
          "source": "src/IRTS-Java-Mangling.html#prefixCallNamespaces",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Java Mangling",
          "module": "IRTS.Java.Mangling",
          "name": "prefixCallNamespaces",
          "normalized": "Ident-\u003eSDecl-\u003eSDecl",
          "package": "idris",
          "partial": "Call Namespaces",
          "signature": "Ident-\u003eSDecl-\u003eSDecl",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-Mangling.html#v:prefixCallNamespaces"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.Pom",
          "name": "Pom",
          "package": "idris",
          "source": "src/IRTS-Java-Pom.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "IRTS Java Pom",
          "module": "IRTS.Java.Pom",
          "name": "Pom",
          "package": "idris",
          "partial": "Pom",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-Pom.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Java.Pom",
          "name": "pomString",
          "package": "idris",
          "signature": "String -\u003e String -\u003e [String] -\u003e String",
          "source": "src/IRTS-Java-Pom.html#pomString",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Java Pom",
          "module": "IRTS.Java.Pom",
          "name": "pomString",
          "normalized": "String-\u003eString-\u003e[String]-\u003eString",
          "package": "idris",
          "partial": "String",
          "signature": "String-\u003eString-\u003e[String]-\u003eString",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Java-Pom.html#v:pomString"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "Lang",
          "package": "idris",
          "source": "src/IRTS-Lang.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "Lang",
          "package": "idris",
          "partial": "Lang",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "Endianness",
          "package": "idris",
          "source": "src/IRTS-Lang.html#Endianness",
          "type": "data"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "Endianness",
          "package": "idris",
          "partial": "Endianness",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#t:Endianness"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "FCallType",
          "package": "idris",
          "source": "src/IRTS-Lang.html#FCallType",
          "type": "data"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "FCallType",
          "package": "idris",
          "partial": "FCall Type",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#t:FCallType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "FLang",
          "package": "idris",
          "source": "src/IRTS-Lang.html#FLang",
          "type": "data"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "FLang",
          "package": "idris",
          "partial": "FLang",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#t:FLang"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "FType",
          "package": "idris",
          "source": "src/IRTS-Lang.html#FType",
          "type": "data"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "FType",
          "package": "idris",
          "partial": "FType",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#t:FType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LAlt",
          "package": "idris",
          "source": "src/IRTS-Lang.html#LAlt",
          "type": "data"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LAlt",
          "package": "idris",
          "partial": "LAlt",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#t:LAlt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LDecl",
          "package": "idris",
          "source": "src/IRTS-Lang.html#LDecl",
          "type": "data"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LDecl",
          "package": "idris",
          "partial": "LDecl",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#t:LDecl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LDefs",
          "package": "idris",
          "source": "src/IRTS-Lang.html#LDefs",
          "type": "type"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LDefs",
          "package": "idris",
          "partial": "LDefs",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#t:LDefs"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LExp",
          "package": "idris",
          "source": "src/IRTS-Lang.html#LExp",
          "type": "data"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LExp",
          "package": "idris",
          "partial": "LExp",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#t:LExp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LOpt",
          "package": "idris",
          "source": "src/IRTS-Lang.html#LOpt",
          "type": "data"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LOpt",
          "package": "idris",
          "partial": "LOpt",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#t:LOpt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LVar",
          "package": "idris",
          "source": "src/IRTS-Lang.html#LVar",
          "type": "data"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LVar",
          "package": "idris",
          "partial": "LVar",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#t:LVar"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LiftState",
          "package": "idris",
          "source": "src/IRTS-Lang.html#LiftState",
          "type": "data"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LiftState",
          "package": "idris",
          "partial": "Lift State",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#t:LiftState"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "PrimFn",
          "package": "idris",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "data"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "PrimFn",
          "package": "idris",
          "partial": "Prim Fn",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#t:PrimFn"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "BE",
          "package": "idris",
          "signature": "BE",
          "source": "src/IRTS-Lang.html#Endianness",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "BE",
          "package": "idris",
          "partial": "BE",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:BE"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "FAny",
          "package": "idris",
          "signature": "FAny",
          "source": "src/IRTS-Lang.html#FType",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "FAny",
          "package": "idris",
          "partial": "FAny",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:FAny"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "FArith",
          "package": "idris",
          "signature": "FArith ArithTy",
          "source": "src/IRTS-Lang.html#FType",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "FArith",
          "package": "idris",
          "partial": "FArith",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:FArith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "FConstructor",
          "package": "idris",
          "signature": "FConstructor",
          "source": "src/IRTS-Lang.html#FCallType",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "FConstructor",
          "package": "idris",
          "partial": "FConstructor",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:FConstructor"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "FFunction",
          "package": "idris",
          "signature": "FFunction",
          "source": "src/IRTS-Lang.html#FType",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "FFunction",
          "package": "idris",
          "partial": "FFunction",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:FFunction"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "FFunctionIO",
          "package": "idris",
          "signature": "FFunctionIO",
          "source": "src/IRTS-Lang.html#FType",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "FFunctionIO",
          "package": "idris",
          "partial": "FFunction IO",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:FFunctionIO"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "FObject",
          "package": "idris",
          "signature": "FObject",
          "source": "src/IRTS-Lang.html#FCallType",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "FObject",
          "package": "idris",
          "partial": "FObject",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:FObject"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "FPtr",
          "package": "idris",
          "signature": "FPtr",
          "source": "src/IRTS-Lang.html#FType",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "FPtr",
          "package": "idris",
          "partial": "FPtr",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:FPtr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "FStatic",
          "package": "idris",
          "signature": "FStatic",
          "source": "src/IRTS-Lang.html#FCallType",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "FStatic",
          "package": "idris",
          "partial": "FStatic",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:FStatic"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "FString",
          "package": "idris",
          "signature": "FString",
          "source": "src/IRTS-Lang.html#FType",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "FString",
          "package": "idris",
          "partial": "FString",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:FString"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "FUnit",
          "package": "idris",
          "signature": "FUnit",
          "source": "src/IRTS-Lang.html#FType",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "FUnit",
          "package": "idris",
          "partial": "FUnit",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:FUnit"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "Glob",
          "package": "idris",
          "signature": "Glob Name",
          "source": "src/IRTS-Lang.html#LVar",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "Glob",
          "package": "idris",
          "partial": "Glob",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:Glob"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "Inline",
          "package": "idris",
          "signature": "Inline",
          "source": "src/IRTS-Lang.html#LOpt",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "Inline",
          "package": "idris",
          "partial": "Inline",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:Inline"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LANG_C",
          "package": "idris",
          "signature": "LANG_C",
          "source": "src/IRTS-Lang.html#FLang",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LANG_C",
          "package": "idris",
          "partial": "LANG",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LANG_C"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LANG_JAVA",
          "package": "idris",
          "signature": "LANG_JAVA FCallType",
          "source": "src/IRTS-Lang.html#FLang",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LANG_JAVA",
          "package": "idris",
          "partial": "LANG JAVA",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LANG_JAVA"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LASHR",
          "package": "idris",
          "signature": "LASHR IntTy",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LASHR",
          "package": "idris",
          "partial": "LASHR",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LASHR"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LAllocate",
          "package": "idris",
          "signature": "LAllocate",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LAllocate",
          "package": "idris",
          "partial": "LAllocate",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LAllocate"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LAnd",
          "package": "idris",
          "signature": "LAnd IntTy",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LAnd",
          "package": "idris",
          "partial": "LAnd",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LAnd"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LApp",
          "package": "idris",
          "signature": "LApp Bool LExp [LExp]",
          "source": "src/IRTS-Lang.html#LExp",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LApp",
          "normalized": "LApp Bool LExp[LExp]",
          "package": "idris",
          "partial": "LApp",
          "signature": "LApp Bool LExp[LExp]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LApp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LAppend",
          "package": "idris",
          "signature": "LAppend IntTy Endianness",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LAppend",
          "package": "idris",
          "partial": "LAppend",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LAppend"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LAppendBuffer",
          "package": "idris",
          "signature": "LAppendBuffer",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LAppendBuffer",
          "package": "idris",
          "partial": "LAppend Buffer",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LAppendBuffer"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LBitCast",
          "package": "idris",
          "signature": "LBitCast ArithTy ArithTy",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LBitCast",
          "package": "idris",
          "partial": "LBit Cast",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LBitCast"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LCase",
          "package": "idris",
          "signature": "LCase LExp [LAlt]",
          "source": "src/IRTS-Lang.html#LExp",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LCase",
          "normalized": "LCase LExp[LAlt]",
          "package": "idris",
          "partial": "LCase",
          "signature": "LCase LExp[LAlt]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LCase"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LChInt",
          "package": "idris",
          "signature": "LChInt IntTy",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LChInt",
          "package": "idris",
          "partial": "LCh Int",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LChInt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LCompl",
          "package": "idris",
          "signature": "LCompl IntTy",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LCompl",
          "package": "idris",
          "partial": "LCompl",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LCompl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LCon",
          "package": "idris",
          "signature": "LCon Int Name [LExp]",
          "source": "src/IRTS-Lang.html#LExp",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LCon",
          "normalized": "LCon Int Name[LExp]",
          "package": "idris",
          "partial": "LCon",
          "signature": "LCon Int Name[LExp]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LCon"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LConCase",
          "package": "idris",
          "signature": "LConCase Int Name [Name] LExp",
          "source": "src/IRTS-Lang.html#LAlt",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LConCase",
          "normalized": "LConCase Int Name[Name]LExp",
          "package": "idris",
          "partial": "LCon Case",
          "signature": "LConCase Int Name[Name]LExp",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LConCase"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LConst",
          "package": "idris",
          "signature": "LConst Const",
          "source": "src/IRTS-Lang.html#LExp",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LConst",
          "package": "idris",
          "partial": "LConst",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LConst"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LConstCase",
          "package": "idris",
          "signature": "LConstCase Const LExp",
          "source": "src/IRTS-Lang.html#LAlt",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LConstCase",
          "package": "idris",
          "partial": "LConst Case",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LConstCase"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LConstructor",
          "package": "idris",
          "signature": "LConstructor Name Int Int",
          "source": "src/IRTS-Lang.html#LDecl",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LConstructor",
          "package": "idris",
          "partial": "LConstructor",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LConstructor"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LDefaultCase",
          "package": "idris",
          "signature": "LDefaultCase LExp",
          "source": "src/IRTS-Lang.html#LAlt",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LDefaultCase",
          "package": "idris",
          "partial": "LDefault Case",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LDefaultCase"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LE",
          "package": "idris",
          "signature": "LE",
          "source": "src/IRTS-Lang.html#Endianness",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LE",
          "package": "idris",
          "partial": "LE",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LE"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LEq",
          "package": "idris",
          "signature": "LEq ArithTy",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LEq",
          "package": "idris",
          "partial": "LEq",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LEq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LError",
          "package": "idris",
          "signature": "LError String",
          "source": "src/IRTS-Lang.html#LExp",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LError",
          "package": "idris",
          "partial": "LError",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LError"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LFACos",
          "package": "idris",
          "signature": "LFACos",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LFACos",
          "package": "idris",
          "partial": "LFACos",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LFACos"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LFASin",
          "package": "idris",
          "signature": "LFASin",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LFASin",
          "package": "idris",
          "partial": "LFASin",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LFASin"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LFATan",
          "package": "idris",
          "signature": "LFATan",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LFATan",
          "package": "idris",
          "partial": "LFATan",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LFATan"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LFCeil",
          "package": "idris",
          "signature": "LFCeil",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LFCeil",
          "package": "idris",
          "partial": "LFCeil",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LFCeil"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LFCos",
          "package": "idris",
          "signature": "LFCos",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LFCos",
          "package": "idris",
          "partial": "LFCos",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LFCos"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LFExp",
          "package": "idris",
          "signature": "LFExp",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LFExp",
          "package": "idris",
          "partial": "LFExp",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LFExp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LFFloor",
          "package": "idris",
          "signature": "LFFloor",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LFFloor",
          "package": "idris",
          "partial": "LFFloor",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LFFloor"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LFLog",
          "package": "idris",
          "signature": "LFLog",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LFLog",
          "package": "idris",
          "partial": "LFLog",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LFLog"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LFSin",
          "package": "idris",
          "signature": "LFSin",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LFSin",
          "package": "idris",
          "partial": "LFSin",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LFSin"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LFSqrt",
          "package": "idris",
          "signature": "LFSqrt",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LFSqrt",
          "package": "idris",
          "partial": "LFSqrt",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LFSqrt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LFTan",
          "package": "idris",
          "signature": "LFTan",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LFTan",
          "package": "idris",
          "partial": "LFTan",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LFTan"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LFloatInt",
          "package": "idris",
          "signature": "LFloatInt IntTy",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LFloatInt",
          "package": "idris",
          "partial": "LFloat Int",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LFloatInt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LFloatStr",
          "package": "idris",
          "signature": "LFloatStr",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LFloatStr",
          "package": "idris",
          "partial": "LFloat Str",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LFloatStr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LForce",
          "package": "idris",
          "signature": "LForce LExp",
          "source": "src/IRTS-Lang.html#LExp",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LForce",
          "package": "idris",
          "partial": "LForce",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LForce"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LForeign",
          "package": "idris",
          "signature": "LForeign FLang FType String [(FType, LExp)]",
          "source": "src/IRTS-Lang.html#LExp",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LForeign",
          "normalized": "LForeign FLang FType String[(FType,LExp)]",
          "package": "idris",
          "partial": "LForeign",
          "signature": "LForeign FLang FType String[(FType,LExp)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LForeign"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LFork",
          "package": "idris",
          "signature": "LFork",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LFork",
          "package": "idris",
          "partial": "LFork",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LFork"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LFun",
          "package": "idris",
          "signature": "LFun [LOpt] Name [Name] LExp",
          "source": "src/IRTS-Lang.html#LDecl",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LFun",
          "normalized": "LFun[LOpt]Name[Name]LExp",
          "package": "idris",
          "partial": "LFun",
          "signature": "LFun[LOpt]Name[Name]LExp",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LFun"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LGe",
          "package": "idris",
          "signature": "LGe IntTy",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LGe",
          "package": "idris",
          "partial": "LGe",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LGe"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LGt",
          "package": "idris",
          "signature": "LGt IntTy",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LGt",
          "package": "idris",
          "partial": "LGt",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LGt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LIdxVec",
          "package": "idris",
          "signature": "LIdxVec NativeTy Int",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LIdxVec",
          "package": "idris",
          "partial": "LIdx Vec",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LIdxVec"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LIntCh",
          "package": "idris",
          "signature": "LIntCh IntTy",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LIntCh",
          "package": "idris",
          "partial": "LInt Ch",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LIntCh"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LIntFloat",
          "package": "idris",
          "signature": "LIntFloat IntTy",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LIntFloat",
          "package": "idris",
          "partial": "LInt Float",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LIntFloat"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LIntStr",
          "package": "idris",
          "signature": "LIntStr IntTy",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LIntStr",
          "package": "idris",
          "partial": "LInt Str",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LIntStr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LLSHR",
          "package": "idris",
          "signature": "LLSHR IntTy",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LLSHR",
          "package": "idris",
          "partial": "LLSHR",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LLSHR"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LLam",
          "package": "idris",
          "signature": "LLam [Name] LExp",
          "source": "src/IRTS-Lang.html#LExp",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LLam",
          "normalized": "LLam[Name]LExp",
          "package": "idris",
          "partial": "LLam",
          "signature": "LLam[Name]LExp",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LLam"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LLazyApp",
          "package": "idris",
          "signature": "LLazyApp Name [LExp]",
          "source": "src/IRTS-Lang.html#LExp",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LLazyApp",
          "normalized": "LLazyApp Name[LExp]",
          "package": "idris",
          "partial": "LLazy App",
          "signature": "LLazyApp Name[LExp]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LLazyApp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LLazyExp",
          "package": "idris",
          "signature": "LLazyExp LExp",
          "source": "src/IRTS-Lang.html#LExp",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LLazyExp",
          "package": "idris",
          "partial": "LLazy Exp",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LLazyExp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LLe",
          "package": "idris",
          "signature": "LLe IntTy",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LLe",
          "package": "idris",
          "partial": "LLe",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LLe"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LLet",
          "package": "idris",
          "signature": "LLet Name LExp LExp",
          "source": "src/IRTS-Lang.html#LExp",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LLet",
          "package": "idris",
          "partial": "LLet",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LLet"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LLt",
          "package": "idris",
          "signature": "LLt IntTy",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LLt",
          "package": "idris",
          "partial": "LLt",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LLt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LMinus",
          "package": "idris",
          "signature": "LMinus ArithTy",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LMinus",
          "package": "idris",
          "partial": "LMinus",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LMinus"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LMkVec",
          "package": "idris",
          "signature": "LMkVec NativeTy Int",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LMkVec",
          "package": "idris",
          "partial": "LMk Vec",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LMkVec"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LNoOp",
          "package": "idris",
          "signature": "LNoOp",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LNoOp",
          "package": "idris",
          "partial": "LNo Op",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LNoOp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LNothing",
          "package": "idris",
          "signature": "LNothing",
          "source": "src/IRTS-Lang.html#LExp",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LNothing",
          "package": "idris",
          "partial": "LNothing",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LNothing"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LNullPtr",
          "package": "idris",
          "signature": "LNullPtr",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LNullPtr",
          "package": "idris",
          "partial": "LNull Ptr",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LNullPtr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LOp",
          "package": "idris",
          "signature": "LOp PrimFn [LExp]",
          "source": "src/IRTS-Lang.html#LExp",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LOp",
          "normalized": "LOp PrimFn[LExp]",
          "package": "idris",
          "partial": "LOp",
          "signature": "LOp PrimFn[LExp]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LOp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LOr",
          "package": "idris",
          "signature": "LOr IntTy",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LOr",
          "package": "idris",
          "partial": "LOr",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LOr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LPar",
          "package": "idris",
          "signature": "LPar",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LPar",
          "package": "idris",
          "partial": "LPar",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LPar"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LPeek",
          "package": "idris",
          "signature": "LPeek IntTy Endianness",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LPeek",
          "package": "idris",
          "partial": "LPeek",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LPeek"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LPlus",
          "package": "idris",
          "signature": "LPlus ArithTy",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LPlus",
          "package": "idris",
          "partial": "LPlus",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LPlus"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LPrintNum",
          "package": "idris",
          "signature": "LPrintNum",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LPrintNum",
          "package": "idris",
          "partial": "LPrint Num",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LPrintNum"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LPrintStr",
          "package": "idris",
          "signature": "LPrintStr",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LPrintStr",
          "package": "idris",
          "partial": "LPrint Str",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LPrintStr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LProj",
          "package": "idris",
          "signature": "LProj LExp Int",
          "source": "src/IRTS-Lang.html#LExp",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LProj",
          "package": "idris",
          "partial": "LProj",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LProj"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LReadStr",
          "package": "idris",
          "signature": "LReadStr",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LReadStr",
          "package": "idris",
          "partial": "LRead Str",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LReadStr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LS",
          "package": "idris",
          "signature": "LS Name Int [(Name, LDecl)]",
          "source": "src/IRTS-Lang.html#LiftState",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LS",
          "normalized": "LS Name Int[(Name,LDecl)]",
          "package": "idris",
          "partial": "LS",
          "signature": "LS Name Int[(Name,LDecl)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LS"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LSDiv",
          "package": "idris",
          "signature": "LSDiv ArithTy",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LSDiv",
          "package": "idris",
          "partial": "LSDiv",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LSDiv"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LSExt",
          "package": "idris",
          "signature": "LSExt IntTy IntTy",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LSExt",
          "package": "idris",
          "partial": "LSExt",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LSExt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LSGe",
          "package": "idris",
          "signature": "LSGe ArithTy",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LSGe",
          "package": "idris",
          "partial": "LSGe",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LSGe"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LSGt",
          "package": "idris",
          "signature": "LSGt ArithTy",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LSGt",
          "package": "idris",
          "partial": "LSGt",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LSGt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LSHL",
          "package": "idris",
          "signature": "LSHL IntTy",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LSHL",
          "package": "idris",
          "partial": "LSHL",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LSHL"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LSLe",
          "package": "idris",
          "signature": "LSLe ArithTy",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LSLe",
          "package": "idris",
          "partial": "LSLe",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LSLe"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LSLt",
          "package": "idris",
          "signature": "LSLt ArithTy",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LSLt",
          "package": "idris",
          "partial": "LSLt",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LSLt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LSRem",
          "package": "idris",
          "signature": "LSRem ArithTy",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LSRem",
          "package": "idris",
          "partial": "LSRem",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LSRem"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LStdErr",
          "package": "idris",
          "signature": "LStdErr",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LStdErr",
          "package": "idris",
          "partial": "LStd Err",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LStdErr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LStdIn",
          "package": "idris",
          "signature": "LStdIn",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LStdIn",
          "package": "idris",
          "partial": "LStd In",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LStdIn"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LStdOut",
          "package": "idris",
          "signature": "LStdOut",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LStdOut",
          "package": "idris",
          "partial": "LStd Out",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LStdOut"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LStrConcat",
          "package": "idris",
          "signature": "LStrConcat",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LStrConcat",
          "package": "idris",
          "partial": "LStr Concat",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LStrConcat"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LStrCons",
          "package": "idris",
          "signature": "LStrCons",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LStrCons",
          "package": "idris",
          "partial": "LStr Cons",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LStrCons"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LStrEq",
          "package": "idris",
          "signature": "LStrEq",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LStrEq",
          "package": "idris",
          "partial": "LStr Eq",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LStrEq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LStrFloat",
          "package": "idris",
          "signature": "LStrFloat",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LStrFloat",
          "package": "idris",
          "partial": "LStr Float",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LStrFloat"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LStrHead",
          "package": "idris",
          "signature": "LStrHead",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LStrHead",
          "package": "idris",
          "partial": "LStr Head",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LStrHead"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LStrIndex",
          "package": "idris",
          "signature": "LStrIndex",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LStrIndex",
          "package": "idris",
          "partial": "LStr Index",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LStrIndex"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LStrInt",
          "package": "idris",
          "signature": "LStrInt IntTy",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LStrInt",
          "package": "idris",
          "partial": "LStr Int",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LStrInt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LStrLen",
          "package": "idris",
          "signature": "LStrLen",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LStrLen",
          "package": "idris",
          "partial": "LStr Len",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LStrLen"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LStrLt",
          "package": "idris",
          "signature": "LStrLt",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LStrLt",
          "package": "idris",
          "partial": "LStr Lt",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LStrLt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LStrRev",
          "package": "idris",
          "signature": "LStrRev",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LStrRev",
          "package": "idris",
          "partial": "LStr Rev",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LStrRev"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LStrTail",
          "package": "idris",
          "signature": "LStrTail",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LStrTail",
          "package": "idris",
          "partial": "LStr Tail",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LStrTail"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LTimes",
          "package": "idris",
          "signature": "LTimes ArithTy",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LTimes",
          "package": "idris",
          "partial": "LTimes",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LTimes"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LTrunc",
          "package": "idris",
          "signature": "LTrunc IntTy IntTy",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LTrunc",
          "package": "idris",
          "partial": "LTrunc",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LTrunc"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LUDiv",
          "package": "idris",
          "signature": "LUDiv IntTy",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LUDiv",
          "package": "idris",
          "partial": "LUDiv",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LUDiv"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LURem",
          "package": "idris",
          "signature": "LURem IntTy",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LURem",
          "package": "idris",
          "partial": "LURem",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LURem"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LUpdateVec",
          "package": "idris",
          "signature": "LUpdateVec NativeTy Int",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LUpdateVec",
          "package": "idris",
          "partial": "LUpdate Vec",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LUpdateVec"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LV",
          "package": "idris",
          "signature": "LV LVar",
          "source": "src/IRTS-Lang.html#LExp",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LV",
          "package": "idris",
          "partial": "LV",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LV"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LVMPtr",
          "package": "idris",
          "signature": "LVMPtr",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LVMPtr",
          "package": "idris",
          "partial": "LVMPtr",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LVMPtr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LXOr",
          "package": "idris",
          "signature": "LXOr IntTy",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LXOr",
          "package": "idris",
          "partial": "LXOr",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LXOr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "LZExt",
          "package": "idris",
          "signature": "LZExt IntTy IntTy",
          "source": "src/IRTS-Lang.html#PrimFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "LZExt",
          "package": "idris",
          "partial": "LZExt",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:LZExt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "Loc",
          "package": "idris",
          "signature": "Loc Int",
          "source": "src/IRTS-Lang.html#LVar",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "Loc",
          "package": "idris",
          "partial": "Loc",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:Loc"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "Native",
          "package": "idris",
          "signature": "Native",
          "source": "src/IRTS-Lang.html#Endianness",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "Native",
          "package": "idris",
          "partial": "Native",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:Native"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "NoInline",
          "package": "idris",
          "signature": "NoInline",
          "source": "src/IRTS-Lang.html#LOpt",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "NoInline",
          "package": "idris",
          "partial": "No Inline",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:NoInline"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "addFn",
          "package": "idris",
          "signature": "Name -\u003e LDecl -\u003e State LiftState ()",
          "source": "src/IRTS-Lang.html#addFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "addFn",
          "normalized": "Name-\u003eLDecl-\u003eState LiftState()",
          "package": "idris",
          "partial": "Fn",
          "signature": "Name-\u003eLDecl-\u003eState LiftState()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:addFn"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "addTags",
          "package": "idris",
          "signature": "Int -\u003e [(Name, LDecl)] -\u003e (Int, [(Name, LDecl)])",
          "source": "src/IRTS-Lang.html#addTags",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "addTags",
          "normalized": "Int-\u003e[(Name,LDecl)]-\u003e(Int,[(Name,LDecl)])",
          "package": "idris",
          "partial": "Tags",
          "signature": "Int-\u003e[(Name,LDecl)]-\u003e(Int,[(Name,LDecl)])",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:addTags"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "getNextName",
          "package": "idris",
          "signature": "State LiftState Name",
          "source": "src/IRTS-Lang.html#getNextName",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "getNextName",
          "package": "idris",
          "partial": "Next Name",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:getNextName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "lambdaLift",
          "package": "idris",
          "signature": "Name -\u003e LDecl -\u003e [(Name, LDecl)]",
          "source": "src/IRTS-Lang.html#lambdaLift",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "lambdaLift",
          "normalized": "Name-\u003eLDecl-\u003e[(Name,LDecl)]",
          "package": "idris",
          "partial": "Lift",
          "signature": "Name-\u003eLDecl-\u003e[(Name,LDecl)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:lambdaLift"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "lift",
          "package": "idris",
          "signature": "[Name] -\u003e LExp -\u003e State LiftState LExp",
          "source": "src/IRTS-Lang.html#lift",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "lift",
          "normalized": "[Name]-\u003eLExp-\u003eState LiftState LExp",
          "package": "idris",
          "signature": "[Name]-\u003eLExp-\u003eState LiftState LExp",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:lift"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "liftAll",
          "package": "idris",
          "signature": "[(Name, LDecl)] -\u003e [(Name, LDecl)]",
          "source": "src/IRTS-Lang.html#liftAll",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "liftAll",
          "normalized": "[(Name,LDecl)]-\u003e[(Name,LDecl)]",
          "package": "idris",
          "partial": "All",
          "signature": "[(Name,LDecl)]-\u003e[(Name,LDecl)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:liftAll"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "lname",
          "package": "idris",
          "signature": "Name -\u003e Int -\u003e Name",
          "source": "src/IRTS-Lang.html#lname",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "lname",
          "normalized": "Name-\u003eInt-\u003eName",
          "package": "idris",
          "signature": "Name-\u003eInt-\u003eName",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:lname"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "usedArg",
          "package": "idris",
          "signature": "[t] -\u003e t -\u003e [t]",
          "source": "src/IRTS-Lang.html#usedArg",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "usedArg",
          "normalized": "[a]-\u003ea-\u003e[a]",
          "package": "idris",
          "partial": "Arg",
          "signature": "[t]-\u003et-\u003e[t]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:usedArg"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Lang",
          "name": "usedIn",
          "package": "idris",
          "signature": "[Name] -\u003e LExp -\u003e [Name]",
          "source": "src/IRTS-Lang.html#usedIn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Lang",
          "module": "IRTS.Lang",
          "name": "usedIn",
          "normalized": "[Name]-\u003eLExp-\u003e[Name]",
          "package": "idris",
          "partial": "In",
          "signature": "[Name]-\u003eLExp-\u003e[Name]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Lang.html#v:usedIn"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Simplified",
          "name": "Simplified",
          "package": "idris",
          "source": "src/IRTS-Simplified.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "IRTS Simplified",
          "module": "IRTS.Simplified",
          "name": "Simplified",
          "package": "idris",
          "partial": "Simplified",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Simplified.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Simplified",
          "name": "SAlt",
          "package": "idris",
          "source": "src/IRTS-Simplified.html#SAlt",
          "type": "data"
        },
        "index": {
          "hierarchy": "IRTS Simplified",
          "module": "IRTS.Simplified",
          "name": "SAlt",
          "package": "idris",
          "partial": "SAlt",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Simplified.html#t:SAlt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Simplified",
          "name": "SDecl",
          "package": "idris",
          "source": "src/IRTS-Simplified.html#SDecl",
          "type": "data"
        },
        "index": {
          "hierarchy": "IRTS Simplified",
          "module": "IRTS.Simplified",
          "name": "SDecl",
          "package": "idris",
          "partial": "SDecl",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Simplified.html#t:SDecl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Simplified",
          "name": "SExp",
          "package": "idris",
          "source": "src/IRTS-Simplified.html#SExp",
          "type": "data"
        },
        "index": {
          "hierarchy": "IRTS Simplified",
          "module": "IRTS.Simplified",
          "name": "SExp",
          "package": "idris",
          "partial": "SExp",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Simplified.html#t:SExp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Simplified",
          "name": "SApp",
          "package": "idris",
          "signature": "SApp Bool Name [LVar]",
          "source": "src/IRTS-Simplified.html#SExp",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Simplified",
          "module": "IRTS.Simplified",
          "name": "SApp",
          "normalized": "SApp Bool Name[LVar]",
          "package": "idris",
          "partial": "SApp",
          "signature": "SApp Bool Name[LVar]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Simplified.html#v:SApp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Simplified",
          "name": "SCase",
          "package": "idris",
          "signature": "SCase LVar [SAlt]",
          "source": "src/IRTS-Simplified.html#SExp",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Simplified",
          "module": "IRTS.Simplified",
          "name": "SCase",
          "normalized": "SCase LVar[SAlt]",
          "package": "idris",
          "partial": "SCase",
          "signature": "SCase LVar[SAlt]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Simplified.html#v:SCase"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Simplified",
          "name": "SChkCase",
          "package": "idris",
          "signature": "SChkCase LVar [SAlt]",
          "source": "src/IRTS-Simplified.html#SExp",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Simplified",
          "module": "IRTS.Simplified",
          "name": "SChkCase",
          "normalized": "SChkCase LVar[SAlt]",
          "package": "idris",
          "partial": "SChk Case",
          "signature": "SChkCase LVar[SAlt]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Simplified.html#v:SChkCase"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Simplified",
          "name": "SCon",
          "package": "idris",
          "signature": "SCon Int Name [LVar]",
          "source": "src/IRTS-Simplified.html#SExp",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Simplified",
          "module": "IRTS.Simplified",
          "name": "SCon",
          "normalized": "SCon Int Name[LVar]",
          "package": "idris",
          "partial": "SCon",
          "signature": "SCon Int Name[LVar]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Simplified.html#v:SCon"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Simplified",
          "name": "SConCase",
          "package": "idris",
          "signature": "SConCase Int Int Name [Name] SExp",
          "source": "src/IRTS-Simplified.html#SAlt",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Simplified",
          "module": "IRTS.Simplified",
          "name": "SConCase",
          "normalized": "SConCase Int Int Name[Name]SExp",
          "package": "idris",
          "partial": "SCon Case",
          "signature": "SConCase Int Int Name[Name]SExp",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Simplified.html#v:SConCase"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Simplified",
          "name": "SConst",
          "package": "idris",
          "signature": "SConst Const",
          "source": "src/IRTS-Simplified.html#SExp",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Simplified",
          "module": "IRTS.Simplified",
          "name": "SConst",
          "package": "idris",
          "partial": "SConst",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Simplified.html#v:SConst"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Simplified",
          "name": "SConstCase",
          "package": "idris",
          "signature": "SConstCase Const SExp",
          "source": "src/IRTS-Simplified.html#SAlt",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Simplified",
          "module": "IRTS.Simplified",
          "name": "SConstCase",
          "package": "idris",
          "partial": "SConst Case",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Simplified.html#v:SConstCase"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Simplified",
          "name": "SDefaultCase",
          "package": "idris",
          "signature": "SDefaultCase SExp",
          "source": "src/IRTS-Simplified.html#SAlt",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Simplified",
          "module": "IRTS.Simplified",
          "name": "SDefaultCase",
          "package": "idris",
          "partial": "SDefault Case",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Simplified.html#v:SDefaultCase"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Simplified",
          "name": "SError",
          "package": "idris",
          "signature": "SError String",
          "source": "src/IRTS-Simplified.html#SExp",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Simplified",
          "module": "IRTS.Simplified",
          "name": "SError",
          "package": "idris",
          "partial": "SError",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Simplified.html#v:SError"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Simplified",
          "name": "SForeign",
          "package": "idris",
          "signature": "SForeign FLang FType String [(FType, LVar)]",
          "source": "src/IRTS-Simplified.html#SExp",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Simplified",
          "module": "IRTS.Simplified",
          "name": "SForeign",
          "normalized": "SForeign FLang FType String[(FType,LVar)]",
          "package": "idris",
          "partial": "SForeign",
          "signature": "SForeign FLang FType String[(FType,LVar)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Simplified.html#v:SForeign"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Simplified",
          "name": "SFun",
          "package": "idris",
          "signature": "SFun Name [Name] Int SExp",
          "source": "src/IRTS-Simplified.html#SDecl",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Simplified",
          "module": "IRTS.Simplified",
          "name": "SFun",
          "normalized": "SFun Name[Name]Int SExp",
          "package": "idris",
          "partial": "SFun",
          "signature": "SFun Name[Name]Int SExp",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Simplified.html#v:SFun"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Simplified",
          "name": "SLet",
          "package": "idris",
          "signature": "SLet LVar SExp SExp",
          "source": "src/IRTS-Simplified.html#SExp",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Simplified",
          "module": "IRTS.Simplified",
          "name": "SLet",
          "package": "idris",
          "partial": "SLet",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Simplified.html#v:SLet"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Simplified",
          "name": "SNothing",
          "package": "idris",
          "signature": "SNothing",
          "source": "src/IRTS-Simplified.html#SExp",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Simplified",
          "module": "IRTS.Simplified",
          "name": "SNothing",
          "package": "idris",
          "partial": "SNothing",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Simplified.html#v:SNothing"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Simplified",
          "name": "SOp",
          "package": "idris",
          "signature": "SOp PrimFn [LVar]",
          "source": "src/IRTS-Simplified.html#SExp",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Simplified",
          "module": "IRTS.Simplified",
          "name": "SOp",
          "normalized": "SOp PrimFn[LVar]",
          "package": "idris",
          "partial": "SOp",
          "signature": "SOp PrimFn[LVar]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Simplified.html#v:SOp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Simplified",
          "name": "SProj",
          "package": "idris",
          "signature": "SProj LVar Int",
          "source": "src/IRTS-Simplified.html#SExp",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Simplified",
          "module": "IRTS.Simplified",
          "name": "SProj",
          "package": "idris",
          "partial": "SProj",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Simplified.html#v:SProj"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Simplified",
          "name": "SUpdate",
          "package": "idris",
          "signature": "SUpdate LVar SExp",
          "source": "src/IRTS-Simplified.html#SExp",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Simplified",
          "module": "IRTS.Simplified",
          "name": "SUpdate",
          "package": "idris",
          "partial": "SUpdate",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Simplified.html#v:SUpdate"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Simplified",
          "name": "SV",
          "package": "idris",
          "signature": "SV LVar",
          "source": "src/IRTS-Simplified.html#SExp",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Simplified",
          "module": "IRTS.Simplified",
          "name": "SV",
          "package": "idris",
          "partial": "SV",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Simplified.html#v:SV"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Simplified",
          "name": "checkDefs",
          "package": "idris",
          "signature": "DDefs -\u003e [(Name, DDecl)] -\u003e TC [(Name, SDecl)]",
          "source": "src/IRTS-Simplified.html#checkDefs",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Simplified",
          "module": "IRTS.Simplified",
          "name": "checkDefs",
          "normalized": "DDefs-\u003e[(Name,DDecl)]-\u003eTC[(Name,SDecl)]",
          "package": "idris",
          "partial": "Defs",
          "signature": "DDefs-\u003e[(Name,DDecl)]-\u003eTC[(Name,SDecl)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Simplified.html#v:checkDefs"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Simplified",
          "name": "hvar",
          "package": "idris",
          "signature": "State (DDefs, Int) Int",
          "source": "src/IRTS-Simplified.html#hvar",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Simplified",
          "module": "IRTS.Simplified",
          "name": "hvar",
          "normalized": "State(DDefs,Int)Int",
          "package": "idris",
          "signature": "State(DDefs,Int)Int",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Simplified.html#v:hvar"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Simplified",
          "name": "ldefs",
          "package": "idris",
          "signature": "State (DDefs, Int) DDefs",
          "source": "src/IRTS-Simplified.html#ldefs",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Simplified",
          "module": "IRTS.Simplified",
          "name": "ldefs",
          "normalized": "State(DDefs,Int)DDefs",
          "package": "idris",
          "signature": "State(DDefs,Int)DDefs",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Simplified.html#v:ldefs"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Simplified",
          "name": "lvar",
          "package": "idris",
          "signature": "s -\u003e m ()",
          "source": "src/IRTS-Simplified.html#lvar",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Simplified",
          "module": "IRTS.Simplified",
          "name": "lvar",
          "normalized": "a-\u003eb()",
          "package": "idris",
          "signature": "s-\u003em()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Simplified.html#v:lvar"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Simplified",
          "name": "mkapp",
          "package": "idris",
          "signature": "([LVar] -\u003e SExp) -\u003e [(LVar, Maybe SExp)] -\u003e m SExp",
          "source": "src/IRTS-Simplified.html#mkapp",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Simplified",
          "module": "IRTS.Simplified",
          "name": "mkapp",
          "normalized": "([LVar]-\u003eSExp)-\u003e[(LVar,Maybe SExp)]-\u003ea SExp",
          "package": "idris",
          "signature": "([LVar]-\u003eSExp)-\u003e[(LVar,Maybe SExp)]-\u003em SExp",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Simplified.html#v:mkapp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Simplified",
          "name": "mkfapp",
          "package": "idris",
          "signature": "([(t, LVar)] -\u003e SExp) -\u003e [(t, (LVar, Maybe SExp))] -\u003e m SExp",
          "source": "src/IRTS-Simplified.html#mkfapp",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Simplified",
          "module": "IRTS.Simplified",
          "name": "mkfapp",
          "normalized": "([(a,LVar)]-\u003eSExp)-\u003e[(a,(LVar,Maybe SExp))]-\u003eb SExp",
          "package": "idris",
          "signature": "([(t,LVar)]-\u003eSExp)-\u003e[(t,(LVar,Maybe SExp))]-\u003em SExp",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Simplified.html#v:mkfapp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Simplified",
          "name": "sAlt",
          "package": "idris",
          "signature": "Bool -\u003e DAlt -\u003e StateT (DDefs, Int) Identity SAlt",
          "source": "src/IRTS-Simplified.html#sAlt",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Simplified",
          "module": "IRTS.Simplified",
          "name": "sAlt",
          "normalized": "Bool-\u003eDAlt-\u003eStateT(DDefs,Int)Identity SAlt",
          "package": "idris",
          "partial": "Alt",
          "signature": "Bool-\u003eDAlt-\u003eStateT(DDefs,Int)Identity SAlt",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Simplified.html#v:sAlt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Simplified",
          "name": "sVar",
          "package": "idris",
          "signature": "DExp -\u003e StateT (DDefs, Int) Identity (LVar, Maybe SExp)",
          "source": "src/IRTS-Simplified.html#sVar",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Simplified",
          "module": "IRTS.Simplified",
          "name": "sVar",
          "normalized": "DExp-\u003eStateT(DDefs,Int)Identity(LVar,Maybe SExp)",
          "package": "idris",
          "partial": "Var",
          "signature": "DExp-\u003eStateT(DDefs,Int)Identity(LVar,Maybe SExp)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Simplified.html#v:sVar"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Simplified",
          "name": "scopecheck",
          "package": "idris",
          "signature": "DDefs -\u003e [(Name, Int)] -\u003e SExp -\u003e StateT Int TC SExp",
          "source": "src/IRTS-Simplified.html#scopecheck",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Simplified",
          "module": "IRTS.Simplified",
          "name": "scopecheck",
          "normalized": "DDefs-\u003e[(Name,Int)]-\u003eSExp-\u003eStateT Int TC SExp",
          "package": "idris",
          "signature": "DDefs-\u003e[(Name,Int)]-\u003eSExp-\u003eStateT Int TC SExp",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Simplified.html#v:scopecheck"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.Simplified",
          "name": "simplify",
          "package": "idris",
          "signature": "Bool -\u003e DExp -\u003e State (DDefs, Int) SExp",
          "source": "src/IRTS-Simplified.html#simplify",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS Simplified",
          "module": "IRTS.Simplified",
          "name": "simplify",
          "normalized": "Bool-\u003eDExp-\u003eState(DDefs,Int)SExp",
          "package": "idris",
          "signature": "Bool-\u003eDExp-\u003eState(DDefs,Int)SExp",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-Simplified.html#v:simplify"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.System",
          "name": "System",
          "package": "idris",
          "source": "src/IRTS-System.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "IRTS System",
          "module": "IRTS.System",
          "name": "System",
          "package": "idris",
          "partial": "System",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-System.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.System",
          "name": "getCC",
          "package": "idris",
          "signature": "IO String",
          "source": "src/IRTS-System.html#getCC",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS System",
          "module": "IRTS.System",
          "name": "getCC",
          "package": "idris",
          "partial": "CC",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-System.html#v:getCC"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.System",
          "name": "getExecutablePom",
          "package": "idris",
          "signature": "IO FilePath",
          "source": "src/IRTS-System.html#getExecutablePom",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS System",
          "module": "IRTS.System",
          "name": "getExecutablePom",
          "package": "idris",
          "partial": "Executable Pom",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-System.html#v:getExecutablePom"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.System",
          "name": "getIdrisLibDir",
          "package": "idris",
          "signature": "IO FilePath",
          "source": "src/IRTS-System.html#getIdrisLibDir",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS System",
          "module": "IRTS.System",
          "name": "getIdrisLibDir",
          "package": "idris",
          "partial": "Idris Lib Dir",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-System.html#v:getIdrisLibDir"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.System",
          "name": "getIncFlags",
          "package": "idris",
          "signature": "IO [Char]",
          "source": "src/IRTS-System.html#getIncFlags",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS System",
          "module": "IRTS.System",
          "name": "getIncFlags",
          "normalized": "IO[Char]",
          "package": "idris",
          "partial": "Inc Flags",
          "signature": "IO[Char]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-System.html#v:getIncFlags"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.System",
          "name": "getLibFlags",
          "package": "idris",
          "signature": "IO [Char]",
          "source": "src/IRTS-System.html#getLibFlags",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS System",
          "module": "IRTS.System",
          "name": "getLibFlags",
          "normalized": "IO[Char]",
          "package": "idris",
          "partial": "Lib Flags",
          "signature": "IO[Char]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-System.html#v:getLibFlags"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.System",
          "name": "getMvn",
          "package": "idris",
          "signature": "IO String",
          "source": "src/IRTS-System.html#getMvn",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS System",
          "module": "IRTS.System",
          "name": "getMvn",
          "package": "idris",
          "partial": "Mvn",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-System.html#v:getMvn"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "IRTS.System",
          "name": "getTargetDir",
          "package": "idris",
          "signature": "IO String",
          "source": "src/IRTS-System.html#getTargetDir",
          "type": "function"
        },
        "index": {
          "hierarchy": "IRTS System",
          "module": "IRTS.System",
          "name": "getTargetDir",
          "package": "idris",
          "partial": "Target Dir",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/IRTS-System.html#v:getTargetDir"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "AbsSyntax",
          "package": "idris",
          "source": "src/Idris-AbsSyntax.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "AbsSyntax",
          "package": "idris",
          "partial": "Abs Syntax",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "EitherErr",
          "package": "idris",
          "source": "src/Idris-AbsSyntax.html#EitherErr",
          "type": "data"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "EitherErr",
          "package": "idris",
          "partial": "Either Err",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#t:EitherErr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "LeftErr",
          "package": "idris",
          "signature": "LeftErr a",
          "source": "src/Idris-AbsSyntax.html#EitherErr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "LeftErr",
          "package": "idris",
          "partial": "Left Err",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:LeftErr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "RightOK",
          "package": "idris",
          "signature": "RightOK b",
          "source": "src/Idris-AbsSyntax.html#EitherErr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "RightOK",
          "package": "idris",
          "partial": "Right OK",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:RightOK"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "addClass",
          "package": "idris",
          "signature": "Name -\u003e ClassInfo -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#addClass",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "addClass",
          "normalized": "Name-\u003eClassInfo-\u003eIdris()",
          "package": "idris",
          "partial": "Class",
          "signature": "Name-\u003eClassInfo-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:addClass"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "addCoercion",
          "package": "idris",
          "signature": "Name -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#addCoercion",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "addCoercion",
          "normalized": "Name-\u003eIdris()",
          "package": "idris",
          "partial": "Coercion",
          "signature": "Name-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:addCoercion"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "addConstraints",
          "package": "idris",
          "signature": "FC -\u003e (Int, [UConstraint]) -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#addConstraints",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "addConstraints",
          "normalized": "FC-\u003e(Int,[UConstraint])-\u003eIdris()",
          "package": "idris",
          "partial": "Constraints",
          "signature": "FC-\u003e(Int,[UConstraint])-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:addConstraints"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "addDeferred",
          "package": "idris",
          "signature": "[(Name, (Int, Maybe Name, Type, Bool))] -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#addDeferred",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "addDeferred",
          "normalized": "[(Name,(Int,Maybe Name,Type,Bool))]-\u003eIdris()",
          "package": "idris",
          "partial": "Deferred",
          "signature": "[(Name,(Int,Maybe Name,Type,Bool))]-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:addDeferred"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "addDeferred'",
          "package": "idris",
          "signature": "NameType -\u003e [(Name, (Int, Maybe Name, Type, Bool))] -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#addDeferred%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "addDeferred'",
          "normalized": "NameType-\u003e[(Name,(Int,Maybe Name,Type,Bool))]-\u003eIdris()",
          "package": "idris",
          "partial": "Deferred'",
          "signature": "NameType-\u003e[(Name,(Int,Maybe Name,Type,Bool))]-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:addDeferred-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "addDeferredTyCon",
          "package": "idris",
          "signature": "[(Name, (Int, Maybe Name, Type, Bool))] -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#addDeferredTyCon",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "addDeferredTyCon",
          "normalized": "[(Name,(Int,Maybe Name,Type,Bool))]-\u003eIdris()",
          "package": "idris",
          "partial": "Deferred Ty Con",
          "signature": "[(Name,(Int,Maybe Name,Type,Bool))]-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:addDeferredTyCon"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "addDocStr",
          "package": "idris",
          "signature": "Name -\u003e String -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#addDocStr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "addDocStr",
          "normalized": "Name-\u003eString-\u003eIdris()",
          "package": "idris",
          "partial": "Doc Str",
          "signature": "Name-\u003eString-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:addDocStr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "addDyLib",
          "package": "idris",
          "signature": "[String] -\u003e Idris (Either DynamicLib String)",
          "source": "src/Idris-AbsSyntax.html#addDyLib",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "addDyLib",
          "normalized": "[String]-\u003eIdris(Either DynamicLib String)",
          "package": "idris",
          "partial": "Dy Lib",
          "signature": "[String]-\u003eIdris(Either DynamicLib String)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:addDyLib"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "addErrRev",
          "package": "idris",
          "signature": "(Term, Term) -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#addErrRev",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "addErrRev",
          "normalized": "(Term,Term)-\u003eIdris()",
          "package": "idris",
          "partial": "Err Rev",
          "signature": "(Term,Term)-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:addErrRev"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "addFlag",
          "package": "idris",
          "signature": "Codegen -\u003e String -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#addFlag",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "addFlag",
          "normalized": "Codegen-\u003eString-\u003eIdris()",
          "package": "idris",
          "partial": "Flag",
          "signature": "Codegen-\u003eString-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:addFlag"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eAdds error handlers for a particular function and argument. If names are\n ambiguous, all matching handlers are updated.\n\u003c/p\u003e",
          "module": "Idris.AbsSyntax",
          "name": "addFunctionErrorHandlers",
          "package": "idris",
          "signature": "Name -\u003e Name -\u003e [Name] -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#addFunctionErrorHandlers",
          "type": "function"
        },
        "index": {
          "description": "Adds error handlers for particular function and argument If names are ambiguous all matching handlers are updated",
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "addFunctionErrorHandlers",
          "normalized": "Name-\u003eName-\u003e[Name]-\u003eIdris()",
          "package": "idris",
          "partial": "Function Error Handlers",
          "signature": "Name-\u003eName-\u003e[Name]-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:addFunctionErrorHandlers"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "addHdr",
          "package": "idris",
          "signature": "Codegen -\u003e String -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#addHdr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "addHdr",
          "normalized": "Codegen-\u003eString-\u003eIdris()",
          "package": "idris",
          "partial": "Hdr",
          "signature": "Codegen-\u003eString-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:addHdr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "addIBC",
          "package": "idris",
          "signature": "IBCWrite -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#addIBC",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "addIBC",
          "normalized": "IBCWrite-\u003eIdris()",
          "package": "idris",
          "partial": "IBC",
          "signature": "IBCWrite-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:addIBC"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "addImpl",
          "package": "idris",
          "signature": "IState -\u003e PTerm -\u003e PTerm",
          "source": "src/Idris-AbsSyntax.html#addImpl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "addImpl",
          "normalized": "IState-\u003ePTerm-\u003ePTerm",
          "package": "idris",
          "partial": "Impl",
          "signature": "IState-\u003ePTerm-\u003ePTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:addImpl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "addImpl'",
          "package": "idris",
          "signature": "Bool -\u003e [Name] -\u003e [Name] -\u003e IState -\u003e PTerm -\u003e PTerm",
          "source": "src/Idris-AbsSyntax.html#addImpl%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "addImpl'",
          "normalized": "Bool-\u003e[Name]-\u003e[Name]-\u003eIState-\u003ePTerm-\u003ePTerm",
          "package": "idris",
          "partial": "Impl'",
          "signature": "Bool-\u003e[Name]-\u003e[Name]-\u003eIState-\u003ePTerm-\u003ePTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:addImpl-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "addImplBound",
          "package": "idris",
          "signature": "IState -\u003e [Name] -\u003e PTerm -\u003e PTerm",
          "source": "src/Idris-AbsSyntax.html#addImplBound",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "addImplBound",
          "normalized": "IState-\u003e[Name]-\u003ePTerm-\u003ePTerm",
          "package": "idris",
          "partial": "Impl Bound",
          "signature": "IState-\u003e[Name]-\u003ePTerm-\u003ePTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:addImplBound"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "addImplBoundInf",
          "package": "idris",
          "signature": "IState -\u003e [Name] -\u003e [Name] -\u003e PTerm -\u003e PTerm",
          "source": "src/Idris-AbsSyntax.html#addImplBoundInf",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "addImplBoundInf",
          "normalized": "IState-\u003e[Name]-\u003e[Name]-\u003ePTerm-\u003ePTerm",
          "package": "idris",
          "partial": "Impl Bound Inf",
          "signature": "IState-\u003e[Name]-\u003e[Name]-\u003ePTerm-\u003ePTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:addImplBoundInf"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "addImplPat",
          "package": "idris",
          "signature": "IState -\u003e PTerm -\u003e PTerm",
          "source": "src/Idris-AbsSyntax.html#addImplPat",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "addImplPat",
          "normalized": "IState-\u003ePTerm-\u003ePTerm",
          "package": "idris",
          "partial": "Impl Pat",
          "signature": "IState-\u003ePTerm-\u003ePTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:addImplPat"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "addImportDir",
          "package": "idris",
          "signature": "FilePath -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#addImportDir",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "addImportDir",
          "normalized": "FilePath-\u003eIdris()",
          "package": "idris",
          "partial": "Import Dir",
          "signature": "FilePath-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:addImportDir"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "addInstance",
          "package": "idris",
          "signature": "Bool -\u003e Name -\u003e Name -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#addInstance",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "addInstance",
          "normalized": "Bool-\u003eName-\u003eName-\u003eIdris()",
          "package": "idris",
          "partial": "Instance",
          "signature": "Bool-\u003eName-\u003eName-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:addInstance"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "addInternalApp",
          "package": "idris",
          "signature": "FilePath -\u003e Int -\u003e PTerm -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#addInternalApp",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "addInternalApp",
          "normalized": "FilePath-\u003eInt-\u003ePTerm-\u003eIdris()",
          "package": "idris",
          "partial": "Internal App",
          "signature": "FilePath-\u003eInt-\u003ePTerm-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:addInternalApp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "addLangExt",
          "package": "idris",
          "signature": "LanguageExt -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#addLangExt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "addLangExt",
          "normalized": "LanguageExt-\u003eIdris()",
          "package": "idris",
          "partial": "Lang Ext",
          "signature": "LanguageExt-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:addLangExt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "addLib",
          "package": "idris",
          "signature": "Codegen -\u003e String -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#addLib",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "addLib",
          "normalized": "Codegen-\u003eString-\u003eIdris()",
          "package": "idris",
          "partial": "Lib",
          "signature": "Codegen-\u003eString-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:addLib"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "addNameHint",
          "package": "idris",
          "signature": "Name -\u003e Name -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#addNameHint",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "addNameHint",
          "normalized": "Name-\u003eName-\u003eIdris()",
          "package": "idris",
          "partial": "Name Hint",
          "signature": "Name-\u003eName-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:addNameHint"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "addNameIdx",
          "package": "idris",
          "signature": "Name -\u003e Idris (Int, Name)",
          "source": "src/Idris-AbsSyntax.html#addNameIdx",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "addNameIdx",
          "normalized": "Name-\u003eIdris(Int,Name)",
          "package": "idris",
          "partial": "Name Idx",
          "signature": "Name-\u003eIdris(Int,Name)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:addNameIdx"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "addNameIdx'",
          "package": "idris",
          "signature": "IState -\u003e Name -\u003e (IState, (Int, Name))",
          "source": "src/Idris-AbsSyntax.html#addNameIdx%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "addNameIdx'",
          "normalized": "IState-\u003eName-\u003e(IState,(Int,Name))",
          "package": "idris",
          "partial": "Name Idx'",
          "signature": "IState-\u003eName-\u003e(IState,(Int,Name))",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:addNameIdx-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "addObjectFile",
          "package": "idris",
          "signature": "Codegen -\u003e FilePath -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#addObjectFile",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "addObjectFile",
          "normalized": "Codegen-\u003eFilePath-\u003eIdris()",
          "package": "idris",
          "partial": "Object File",
          "signature": "Codegen-\u003eFilePath-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:addObjectFile"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "addStatics",
          "package": "idris",
          "signature": "Name -\u003e Term -\u003e PTerm -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#addStatics",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "addStatics",
          "normalized": "Name-\u003eTerm-\u003ePTerm-\u003eIdris()",
          "package": "idris",
          "partial": "Statics",
          "signature": "Name-\u003eTerm-\u003ePTerm-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:addStatics"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "addToCG",
          "package": "idris",
          "signature": "Name -\u003e CGInfo -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#addToCG",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "addToCG",
          "normalized": "Name-\u003eCGInfo-\u003eIdris()",
          "package": "idris",
          "partial": "To CG",
          "signature": "Name-\u003eCGInfo-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:addToCG"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "addToCalledG",
          "package": "idris",
          "signature": "Name -\u003e [Name] -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#addToCalledG",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "addToCalledG",
          "normalized": "Name-\u003e[Name]-\u003eIdris()",
          "package": "idris",
          "partial": "To Called",
          "signature": "Name-\u003e[Name]-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:addToCalledG"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "addTrans",
          "package": "idris",
          "signature": "(Term, Term) -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#addTrans",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "addTrans",
          "normalized": "(Term,Term)-\u003eIdris()",
          "package": "idris",
          "partial": "Trans",
          "signature": "(Term,Term)-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:addTrans"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "addTyInfConstraints",
          "package": "idris",
          "signature": "FC -\u003e [(Term, Term)] -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#addTyInfConstraints",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "addTyInfConstraints",
          "normalized": "FC-\u003e[(Term,Term)]-\u003eIdris()",
          "package": "idris",
          "partial": "Ty Inf Constraints",
          "signature": "FC-\u003e[(Term,Term)]-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:addTyInfConstraints"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "addTyInferred",
          "package": "idris",
          "signature": "Name -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#addTyInferred",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "addTyInferred",
          "normalized": "Name-\u003eIdris()",
          "package": "idris",
          "partial": "Ty Inferred",
          "signature": "Name-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:addTyInferred"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "addUsingConstraints",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e FC -\u003e PTerm -\u003e Idris PTerm",
          "source": "src/Idris-AbsSyntax.html#addUsingConstraints",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "addUsingConstraints",
          "normalized": "SyntaxInfo-\u003eFC-\u003ePTerm-\u003eIdris PTerm",
          "package": "idris",
          "partial": "Using Constraints",
          "signature": "SyntaxInfo-\u003eFC-\u003ePTerm-\u003eIdris PTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:addUsingConstraints"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "aiFn",
          "package": "idris",
          "signature": "Bool -\u003e Bool -\u003e IState -\u003e FC -\u003e Name -\u003e [[Text]] -\u003e [PArg] -\u003e Either Err PTerm",
          "source": "src/Idris-AbsSyntax.html#aiFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "aiFn",
          "normalized": "Bool-\u003eBool-\u003eIState-\u003eFC-\u003eName-\u003e[[Text]]-\u003e[PArg]-\u003eEither Err PTerm",
          "package": "idris",
          "partial": "Fn",
          "signature": "Bool-\u003eBool-\u003eIState-\u003eFC-\u003eName-\u003e[[Text]]-\u003e[PArg]-\u003eEither Err PTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:aiFn"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "allImportDirs",
          "package": "idris",
          "signature": "Idris [FilePath]",
          "source": "src/Idris-AbsSyntax.html#allImportDirs",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "allImportDirs",
          "normalized": "Idris[FilePath]",
          "package": "idris",
          "partial": "Import Dirs",
          "signature": "Idris[FilePath]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:allImportDirs"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "allNames",
          "package": "idris",
          "signature": "[Name] -\u003e Name -\u003e Idris [Name]",
          "source": "src/Idris-AbsSyntax.html#allNames",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "allNames",
          "normalized": "[Name]-\u003eName-\u003eIdris[Name]",
          "package": "idris",
          "partial": "Names",
          "signature": "[Name]-\u003eName-\u003eIdris[Name]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:allNames"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "checkUndefined",
          "package": "idris",
          "signature": "FC -\u003e Name -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#checkUndefined",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "checkUndefined",
          "normalized": "FC-\u003eName-\u003eIdris()",
          "package": "idris",
          "partial": "Undefined",
          "signature": "FC-\u003eName-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:checkUndefined"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "clearErr",
          "package": "idris",
          "signature": "Idris ()",
          "source": "src/Idris-AbsSyntax.html#clearErr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "clearErr",
          "normalized": "Idris()",
          "package": "idris",
          "partial": "Err",
          "signature": "Idris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:clearErr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "clearIBC",
          "package": "idris",
          "signature": "Idris ()",
          "source": "src/Idris-AbsSyntax.html#clearIBC",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "clearIBC",
          "normalized": "Idris()",
          "package": "idris",
          "partial": "IBC",
          "signature": "Idris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:clearIBC"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "clearOrigPats",
          "package": "idris",
          "signature": "Idris ()",
          "source": "src/Idris-AbsSyntax.html#clearOrigPats",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "clearOrigPats",
          "normalized": "Idris()",
          "package": "idris",
          "partial": "Orig Pats",
          "signature": "Idris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:clearOrigPats"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "clearPTypes",
          "package": "idris",
          "signature": "Idris ()",
          "source": "src/Idris-AbsSyntax.html#clearPTypes",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "clearPTypes",
          "normalized": "Idris()",
          "package": "idris",
          "partial": "PTypes",
          "signature": "Idris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:clearPTypes"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "clear_totcheck",
          "package": "idris",
          "signature": "Idris ()",
          "source": "src/Idris-AbsSyntax.html#clear_totcheck",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "clear_totcheck",
          "normalized": "Idris()",
          "package": "idris",
          "signature": "Idris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:clear_totcheck"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "cmdOptType",
          "package": "idris",
          "signature": "Opt -\u003e Idris Bool",
          "source": "src/Idris-AbsSyntax.html#cmdOptType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "cmdOptType",
          "normalized": "Opt-\u003eIdris Bool",
          "package": "idris",
          "partial": "Opt Type",
          "signature": "Opt-\u003eIdris Bool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:cmdOptType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "codegen",
          "package": "idris",
          "signature": "Idris Codegen",
          "source": "src/Idris-AbsSyntax.html#codegen",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "codegen",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:codegen"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "colourise",
          "package": "idris",
          "signature": "Idris Bool",
          "source": "src/Idris-AbsSyntax.html#colourise",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "colourise",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:colourise"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eWrite a pretty-printed term to the console with semantic coloring\n\u003c/p\u003e",
          "module": "Idris.AbsSyntax",
          "name": "consoleDisplayAnnotated",
          "package": "idris",
          "signature": "Handle -\u003e Doc OutputAnnotation -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#consoleDisplayAnnotated",
          "type": "function"
        },
        "index": {
          "description": "Write pretty-printed term to the console with semantic coloring",
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "consoleDisplayAnnotated",
          "normalized": "Handle-\u003eDoc OutputAnnotation-\u003eIdris()",
          "package": "idris",
          "partial": "Display Annotated",
          "signature": "Handle-\u003eDoc OutputAnnotation-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:consoleDisplayAnnotated"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "coverage",
          "package": "idris",
          "signature": "Idris Bool",
          "source": "src/Idris-AbsSyntax.html#coverage",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "coverage",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:coverage"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "defer_totcheck",
          "package": "idris",
          "signature": "(FC, Name) -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#defer_totcheck",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "defer_totcheck",
          "normalized": "(FC,Name)-\u003eIdris()",
          "package": "idris",
          "signature": "(FC,Name)-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:defer_totcheck"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "errContext",
          "package": "idris",
          "signature": "Idris Bool",
          "source": "src/Idris-AbsSyntax.html#errContext",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "errContext",
          "package": "idris",
          "partial": "Context",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:errContext"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "expandParams",
          "package": "idris",
          "signature": "(Name -\u003e Name) -\u003e [(Name, PTerm)] -\u003e [Name] -\u003e [Name] -\u003e PTerm -\u003e PTerm",
          "source": "src/Idris-AbsSyntax.html#expandParams",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "expandParams",
          "normalized": "(Name-\u003eName)-\u003e[(Name,PTerm)]-\u003e[Name]-\u003e[Name]-\u003ePTerm-\u003ePTerm",
          "package": "idris",
          "partial": "Params",
          "signature": "(Name-\u003eName)-\u003e[(Name,PTerm)]-\u003e[Name]-\u003e[Name]-\u003ePTerm-\u003ePTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:expandParams"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "expandParamsD",
          "package": "idris",
          "signature": "Bool -\u003e IState -\u003e (Name -\u003e Name) -\u003e [(Name, PTerm)] -\u003e [Name] -\u003e PDecl -\u003e PDecl",
          "source": "src/Idris-AbsSyntax.html#expandParamsD",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "expandParamsD",
          "normalized": "Bool-\u003eIState-\u003e(Name-\u003eName)-\u003e[(Name,PTerm)]-\u003e[Name]-\u003ePDecl-\u003ePDecl",
          "package": "idris",
          "partial": "Params",
          "signature": "Bool-\u003eIState-\u003e(Name-\u003eName)-\u003e[(Name,PTerm)]-\u003e[Name]-\u003ePDecl-\u003ePDecl",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:expandParamsD"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "fancifyAnnots",
          "package": "idris",
          "signature": "IState -\u003e OutputAnnotation -\u003e OutputAnnotation",
          "source": "src/Idris-AbsSyntax.html#fancifyAnnots",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "fancifyAnnots",
          "normalized": "IState-\u003eOutputAnnotation-\u003eOutputAnnotation",
          "package": "idris",
          "partial": "Annots",
          "signature": "IState-\u003eOutputAnnotation-\u003eOutputAnnotation",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:fancifyAnnots"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "findStatics",
          "package": "idris",
          "signature": "IState -\u003e PTerm -\u003e (PTerm, [Bool])",
          "source": "src/Idris-AbsSyntax.html#findStatics",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "findStatics",
          "normalized": "IState-\u003ePTerm-\u003e(PTerm,[Bool])",
          "package": "idris",
          "partial": "Statics",
          "signature": "IState-\u003ePTerm-\u003e(PTerm,[Bool])",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:findStatics"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "forCodegen",
          "package": "idris",
          "signature": "Codegen -\u003e [(Codegen, a)] -\u003e [a]",
          "source": "src/Idris-AbsSyntax.html#forCodegen",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "forCodegen",
          "normalized": "Codegen-\u003e[(Codegen,a)]-\u003e[a]",
          "package": "idris",
          "partial": "Codegen",
          "signature": "Codegen-\u003e[(Codegen,a)]-\u003e[a]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:forCodegen"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "getAllNames",
          "package": "idris",
          "signature": "Name -\u003e Idris [Name]",
          "source": "src/Idris-AbsSyntax.html#getAllNames",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "getAllNames",
          "normalized": "Name-\u003eIdris[Name]",
          "package": "idris",
          "partial": "All Names",
          "signature": "Name-\u003eIdris[Name]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:getAllNames"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "getCmdLine",
          "package": "idris",
          "signature": "Idris [Opt]",
          "source": "src/Idris-AbsSyntax.html#getCmdLine",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "getCmdLine",
          "normalized": "Idris[Opt]",
          "package": "idris",
          "partial": "Cmd Line",
          "signature": "Idris[Opt]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:getCmdLine"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "getCoercionsTo",
          "package": "idris",
          "signature": "IState -\u003e Type -\u003e [Name]",
          "source": "src/Idris-AbsSyntax.html#getCoercionsTo",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "getCoercionsTo",
          "normalized": "IState-\u003eType-\u003e[Name]",
          "package": "idris",
          "partial": "Coercions To",
          "signature": "IState-\u003eType-\u003e[Name]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:getCoercionsTo"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "getContext",
          "package": "idris",
          "signature": "Idris Context",
          "source": "src/Idris-AbsSyntax.html#getContext",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "getContext",
          "package": "idris",
          "partial": "Context",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:getContext"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "getDumpCases",
          "package": "idris",
          "signature": "Idris (Maybe FilePath)",
          "source": "src/Idris-AbsSyntax.html#getDumpCases",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "getDumpCases",
          "package": "idris",
          "partial": "Dump Cases",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:getDumpCases"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "getDumpDefun",
          "package": "idris",
          "signature": "Idris (Maybe FilePath)",
          "source": "src/Idris-AbsSyntax.html#getDumpDefun",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "getDumpDefun",
          "package": "idris",
          "partial": "Dump Defun",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:getDumpDefun"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "getFlags",
          "package": "idris",
          "signature": "Codegen -\u003e Idris [String]",
          "source": "src/Idris-AbsSyntax.html#getFlags",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "getFlags",
          "normalized": "Codegen-\u003eIdris[String]",
          "package": "idris",
          "partial": "Flags",
          "signature": "Codegen-\u003eIdris[String]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:getFlags"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "getFunctionErrorHandlers",
          "package": "idris",
          "signature": "Name -\u003e Name -\u003e Idris [Name]",
          "source": "src/Idris-AbsSyntax.html#getFunctionErrorHandlers",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "getFunctionErrorHandlers",
          "normalized": "Name-\u003eName-\u003eIdris[Name]",
          "package": "idris",
          "partial": "Function Error Handlers",
          "signature": "Name-\u003eName-\u003eIdris[Name]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:getFunctionErrorHandlers"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "getHdrs",
          "package": "idris",
          "signature": "Codegen -\u003e Idris [String]",
          "source": "src/Idris-AbsSyntax.html#getHdrs",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "getHdrs",
          "normalized": "Codegen-\u003eIdris[String]",
          "package": "idris",
          "partial": "Hdrs",
          "signature": "Codegen-\u003eIdris[String]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:getHdrs"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "getIState",
          "package": "idris",
          "signature": "Idris IState",
          "source": "src/Idris-AbsSyntax.html#getIState",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "getIState",
          "package": "idris",
          "partial": "IState",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:getIState"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "getInternalApp",
          "package": "idris",
          "signature": "FilePath -\u003e Int -\u003e Idris PTerm",
          "source": "src/Idris-AbsSyntax.html#getInternalApp",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "getInternalApp",
          "normalized": "FilePath-\u003eInt-\u003eIdris PTerm",
          "package": "idris",
          "partial": "Internal App",
          "signature": "FilePath-\u003eInt-\u003eIdris PTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:getInternalApp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "getLibs",
          "package": "idris",
          "signature": "Codegen -\u003e Idris [String]",
          "source": "src/Idris-AbsSyntax.html#getLibs",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "getLibs",
          "normalized": "Codegen-\u003eIdris[String]",
          "package": "idris",
          "partial": "Libs",
          "signature": "Codegen-\u003eIdris[String]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:getLibs"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "getName",
          "package": "idris",
          "signature": "Idris Int",
          "source": "src/Idris-AbsSyntax.html#getName",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "getName",
          "package": "idris",
          "partial": "Name",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:getName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "getNameHints",
          "package": "idris",
          "signature": "IState -\u003e Name -\u003e [Name]",
          "source": "src/Idris-AbsSyntax.html#getNameHints",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "getNameHints",
          "normalized": "IState-\u003eName-\u003e[Name]",
          "package": "idris",
          "partial": "Name Hints",
          "signature": "IState-\u003eName-\u003e[Name]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:getNameHints"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "getNoBanner",
          "package": "idris",
          "signature": "Idris Bool",
          "source": "src/Idris-AbsSyntax.html#getNoBanner",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "getNoBanner",
          "package": "idris",
          "partial": "No Banner",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:getNoBanner"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "getObjectFiles",
          "package": "idris",
          "signature": "Codegen -\u003e Idris [FilePath]",
          "source": "src/Idris-AbsSyntax.html#getObjectFiles",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "getObjectFiles",
          "normalized": "Codegen-\u003eIdris[FilePath]",
          "package": "idris",
          "partial": "Object Files",
          "signature": "Codegen-\u003eIdris[FilePath]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:getObjectFiles"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "getPriority",
          "package": "idris",
          "signature": "IState -\u003e PTerm -\u003e Int",
          "source": "src/Idris-AbsSyntax.html#getPriority",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "getPriority",
          "normalized": "IState-\u003ePTerm-\u003eInt",
          "package": "idris",
          "partial": "Priority",
          "signature": "IState-\u003ePTerm-\u003eInt",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:getPriority"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "getQuiet",
          "package": "idris",
          "signature": "Idris Bool",
          "source": "src/Idris-AbsSyntax.html#getQuiet",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "getQuiet",
          "package": "idris",
          "partial": "Quiet",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:getQuiet"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "getSO",
          "package": "idris",
          "signature": "Idris (Maybe String)",
          "source": "src/Idris-AbsSyntax.html#getSO",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "getSO",
          "package": "idris",
          "partial": "SO",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:getSO"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "getTotality",
          "package": "idris",
          "signature": "Name -\u003e Idris Totality",
          "source": "src/Idris-AbsSyntax.html#getTotality",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "getTotality",
          "normalized": "Name-\u003eIdris Totality",
          "package": "idris",
          "partial": "Totality",
          "signature": "Name-\u003eIdris Totality",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:getTotality"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "getUndefined",
          "package": "idris",
          "signature": "Idris [Name]",
          "source": "src/Idris-AbsSyntax.html#getUndefined",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "getUndefined",
          "normalized": "Idris[Name]",
          "package": "idris",
          "partial": "Undefined",
          "signature": "Idris[Name]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:getUndefined"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "getWidth",
          "package": "idris",
          "signature": "Idris ConsoleWidth",
          "source": "src/Idris-AbsSyntax.html#getWidth",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "getWidth",
          "package": "idris",
          "partial": "Width",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:getWidth"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "iLOG",
          "package": "idris",
          "signature": "String -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#iLOG",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "iLOG",
          "normalized": "String-\u003eIdris()",
          "package": "idris",
          "partial": "LOG",
          "signature": "String-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:iLOG"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "iPrintError",
          "package": "idris",
          "signature": "String -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#iPrintError",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "iPrintError",
          "normalized": "String-\u003eIdris()",
          "package": "idris",
          "partial": "Print Error",
          "signature": "String-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:iPrintError"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "iPrintResult",
          "package": "idris",
          "signature": "String -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#iPrintResult",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "iPrintResult",
          "normalized": "String-\u003eIdris()",
          "package": "idris",
          "partial": "Print Result",
          "signature": "String-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:iPrintResult"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "iRender",
          "package": "idris",
          "signature": "Doc a -\u003e Idris (SimpleDoc a)",
          "source": "src/Idris-AbsSyntax.html#iRender",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "iRender",
          "normalized": "Doc a-\u003eIdris(SimpleDoc a)",
          "package": "idris",
          "partial": "Render",
          "signature": "Doc a-\u003eIdris(SimpleDoc a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:iRender"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "iWarn",
          "package": "idris",
          "signature": "FC -\u003e String -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#iWarn",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "iWarn",
          "normalized": "FC-\u003eString-\u003eIdris()",
          "package": "idris",
          "partial": "Warn",
          "signature": "FC-\u003eString-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:iWarn"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eWrite pretty-printed output to IDESlave with semantic annotations\n\u003c/p\u003e",
          "module": "Idris.AbsSyntax",
          "name": "ideSlaveReturnAnnotated",
          "package": "idris",
          "signature": "Integer -\u003e Handle -\u003e Doc OutputAnnotation -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#ideSlaveReturnAnnotated",
          "type": "function"
        },
        "index": {
          "description": "Write pretty-printed output to IDESlave with semantic annotations",
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "ideSlaveReturnAnnotated",
          "normalized": "Integer-\u003eHandle-\u003eDoc OutputAnnotation-\u003eIdris()",
          "package": "idris",
          "partial": "Slave Return Annotated",
          "signature": "Integer-\u003eHandle-\u003eDoc OutputAnnotation-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:ideSlaveReturnAnnotated"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "ideslavePutSExp",
          "package": "idris",
          "signature": "String -\u003e a -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#ideslavePutSExp",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "ideslavePutSExp",
          "normalized": "String-\u003ea-\u003eIdris()",
          "package": "idris",
          "partial": "Put SExp",
          "signature": "String-\u003ea-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:ideslavePutSExp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "ihPrintError",
          "package": "idris",
          "signature": "Handle -\u003e String -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#ihPrintError",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "ihPrintError",
          "normalized": "Handle-\u003eString-\u003eIdris()",
          "package": "idris",
          "partial": "Print Error",
          "signature": "Handle-\u003eString-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:ihPrintError"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003ePretty-print a collection of overloadings to REPL or IDESlave - corresponds to :t name\n\u003c/p\u003e",
          "module": "Idris.AbsSyntax",
          "name": "ihPrintFunTypes",
          "package": "idris",
          "signature": "Handle -\u003e Name -\u003e [(Name, PTerm)] -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#ihPrintFunTypes",
          "type": "function"
        },
        "index": {
          "description": "Pretty-print collection of overloadings to REPL or IDESlave corresponds to name",
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "ihPrintFunTypes",
          "normalized": "Handle-\u003eName-\u003e[(Name,PTerm)]-\u003eIdris()",
          "package": "idris",
          "partial": "Print Fun Types",
          "signature": "Handle-\u003eName-\u003e[(Name,PTerm)]-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:ihPrintFunTypes"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "ihPrintResult",
          "package": "idris",
          "signature": "Handle -\u003e String -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#ihPrintResult",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "ihPrintResult",
          "normalized": "Handle-\u003eString-\u003eIdris()",
          "package": "idris",
          "partial": "Print Result",
          "signature": "Handle-\u003eString-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:ihPrintResult"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "ihPrintTermWithType",
          "package": "idris",
          "signature": "Handle -\u003e Doc OutputAnnotation -\u003e Doc OutputAnnotation -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#ihPrintTermWithType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "ihPrintTermWithType",
          "normalized": "Handle-\u003eDoc OutputAnnotation-\u003eDoc OutputAnnotation-\u003eIdris()",
          "package": "idris",
          "partial": "Print Term With Type",
          "signature": "Handle-\u003eDoc OutputAnnotation-\u003eDoc OutputAnnotation-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:ihPrintTermWithType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "ihRenderResult",
          "package": "idris",
          "signature": "Handle -\u003e Doc OutputAnnotation -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#ihRenderResult",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "ihRenderResult",
          "normalized": "Handle-\u003eDoc OutputAnnotation-\u003eIdris()",
          "package": "idris",
          "partial": "Render Result",
          "signature": "Handle-\u003eDoc OutputAnnotation-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:ihRenderResult"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "ihWarn",
          "package": "idris",
          "signature": "Handle -\u003e FC -\u003e String -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#ihWarn",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "ihWarn",
          "normalized": "Handle-\u003eFC-\u003eString-\u003eIdris()",
          "package": "idris",
          "partial": "Warn",
          "signature": "Handle-\u003eFC-\u003eString-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:ihWarn"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "ihputStrLn",
          "package": "idris",
          "signature": "Handle -\u003e String -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#ihputStrLn",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "ihputStrLn",
          "normalized": "Handle-\u003eString-\u003eIdris()",
          "package": "idris",
          "partial": "Str Ln",
          "signature": "Handle-\u003eString-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:ihputStrLn"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "impShow",
          "package": "idris",
          "signature": "Idris Bool",
          "source": "src/Idris-AbsSyntax.html#impShow",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "impShow",
          "package": "idris",
          "partial": "Show",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:impShow"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "implicit",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e Name -\u003e PTerm -\u003e Idris PTerm",
          "source": "src/Idris-AbsSyntax.html#implicit",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "implicit",
          "normalized": "SyntaxInfo-\u003eName-\u003ePTerm-\u003eIdris PTerm",
          "package": "idris",
          "signature": "SyntaxInfo-\u003eName-\u003ePTerm-\u003eIdris PTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:implicit"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "implicit'",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e [Name] -\u003e Name -\u003e PTerm -\u003e Idris PTerm",
          "source": "src/Idris-AbsSyntax.html#implicit%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "implicit'",
          "normalized": "SyntaxInfo-\u003e[Name]-\u003eName-\u003ePTerm-\u003eIdris PTerm",
          "package": "idris",
          "signature": "SyntaxInfo-\u003e[Name]-\u003eName-\u003ePTerm-\u003eIdris PTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:implicit-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "implicitise",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e [Name] -\u003e IState -\u003e PTerm -\u003e (PTerm, [PArg])",
          "source": "src/Idris-AbsSyntax.html#implicitise",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "implicitise",
          "normalized": "SyntaxInfo-\u003e[Name]-\u003eIState-\u003ePTerm-\u003e(PTerm,[PArg])",
          "package": "idris",
          "signature": "SyntaxInfo-\u003e[Name]-\u003eIState-\u003ePTerm-\u003e(PTerm,[PArg])",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:implicitise"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "iputGoal",
          "package": "idris",
          "signature": "SimpleDoc OutputAnnotation -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#iputGoal",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "iputGoal",
          "normalized": "SimpleDoc OutputAnnotation-\u003eIdris()",
          "package": "idris",
          "partial": "Goal",
          "signature": "SimpleDoc OutputAnnotation-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:iputGoal"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "iputStrLn",
          "package": "idris",
          "signature": "String -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#iputStrLn",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "iputStrLn",
          "normalized": "String-\u003eIdris()",
          "package": "idris",
          "partial": "Str Ln",
          "signature": "String-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:iputStrLn"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "isTyInferred",
          "package": "idris",
          "signature": "Name -\u003e Idris Bool",
          "source": "src/Idris-AbsSyntax.html#isTyInferred",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "isTyInferred",
          "normalized": "Name-\u003eIdris Bool",
          "package": "idris",
          "partial": "Ty Inferred",
          "signature": "Name-\u003eIdris Bool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:isTyInferred"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "isUndefined",
          "package": "idris",
          "signature": "FC -\u003e Name -\u003e Idris Bool",
          "source": "src/Idris-AbsSyntax.html#isUndefined",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "isUndefined",
          "normalized": "FC-\u003eName-\u003eIdris Bool",
          "package": "idris",
          "partial": "Undefined",
          "signature": "FC-\u003eName-\u003eIdris Bool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:isUndefined"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "isetPrompt",
          "package": "idris",
          "signature": "String -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#isetPrompt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "isetPrompt",
          "normalized": "String-\u003eIdris()",
          "package": "idris",
          "partial": "Prompt",
          "signature": "String-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:isetPrompt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "logLevel",
          "package": "idris",
          "signature": "Idris Int",
          "source": "src/Idris-AbsSyntax.html#logLevel",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "logLevel",
          "package": "idris",
          "partial": "Level",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:logLevel"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "logLvl",
          "package": "idris",
          "signature": "Int -\u003e String -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#logLvl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "logLvl",
          "normalized": "Int-\u003eString-\u003eIdris()",
          "package": "idris",
          "partial": "Lvl",
          "signature": "Int-\u003eString-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:logLvl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "mapsnd",
          "package": "idris",
          "signature": "(t -\u003e t2) -\u003e (t1, t) -\u003e (t1, t2)",
          "source": "src/Idris-AbsSyntax.html#mapsnd",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "mapsnd",
          "normalized": "(a-\u003ea)-\u003e(a,a)-\u003e(a,a)",
          "package": "idris",
          "signature": "(t-\u003et)-\u003e(t,t)-\u003e(t,t)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:mapsnd"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "matchClause",
          "package": "idris",
          "signature": "IState -\u003e PTerm -\u003e PTerm -\u003e Either (PTerm, PTerm) [(Name, PTerm)]",
          "source": "src/Idris-AbsSyntax.html#matchClause",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "matchClause",
          "normalized": "IState-\u003ePTerm-\u003ePTerm-\u003eEither(PTerm,PTerm)[(Name,PTerm)]",
          "package": "idris",
          "partial": "Clause",
          "signature": "IState-\u003ePTerm-\u003ePTerm-\u003eEither(PTerm,PTerm)[(Name,PTerm)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:matchClause"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "matchClause'",
          "package": "idris",
          "signature": "Bool -\u003e IState -\u003e PTerm -\u003e PTerm -\u003e Either (PTerm, PTerm) [(Name, PTerm)]",
          "source": "src/Idris-AbsSyntax.html#matchClause%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "matchClause'",
          "normalized": "Bool-\u003eIState-\u003ePTerm-\u003ePTerm-\u003eEither(PTerm,PTerm)[(Name,PTerm)]",
          "package": "idris",
          "partial": "Clause'",
          "signature": "Bool-\u003eIState-\u003ePTerm-\u003ePTerm-\u003eEither(PTerm,PTerm)[(Name,PTerm)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:matchClause-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "mkPApp",
          "package": "idris",
          "signature": "FC -\u003e Int -\u003e PTerm -\u003e [PArg] -\u003e PTerm",
          "source": "src/Idris-AbsSyntax.html#mkPApp",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "mkPApp",
          "normalized": "FC-\u003eInt-\u003ePTerm-\u003e[PArg]-\u003ePTerm",
          "package": "idris",
          "partial": "PApp",
          "signature": "FC-\u003eInt-\u003ePTerm-\u003e[PArg]-\u003ePTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:mkPApp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "mkUniqueNames",
          "package": "idris",
          "signature": "[Name] -\u003e PTerm -\u003e PTerm",
          "source": "src/Idris-AbsSyntax.html#mkUniqueNames",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "mkUniqueNames",
          "normalized": "[Name]-\u003ePTerm-\u003ePTerm",
          "package": "idris",
          "partial": "Unique Names",
          "signature": "[Name]-\u003ePTerm-\u003ePTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:mkUniqueNames"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "noErrors",
          "package": "idris",
          "signature": "Idris Bool",
          "source": "src/Idris-AbsSyntax.html#noErrors",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "noErrors",
          "package": "idris",
          "partial": "Errors",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:noErrors"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "optLevel",
          "package": "idris",
          "signature": "Idris Word",
          "source": "src/Idris-AbsSyntax.html#optLevel",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "optLevel",
          "package": "idris",
          "partial": "Level",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:optLevel"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "outputTy",
          "package": "idris",
          "signature": "Idris OutputType",
          "source": "src/Idris-AbsSyntax.html#outputTy",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "outputTy",
          "package": "idris",
          "partial": "Ty",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:outputTy"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "putIState",
          "package": "idris",
          "signature": "IState -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#putIState",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "putIState",
          "normalized": "IState-\u003eIdris()",
          "package": "idris",
          "partial": "IState",
          "signature": "IState-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:putIState"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "renderWidth",
          "package": "idris",
          "signature": "Idris Int",
          "source": "src/Idris-AbsSyntax.html#renderWidth",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "renderWidth",
          "package": "idris",
          "partial": "Width",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:renderWidth"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "resetNameIdx",
          "package": "idris",
          "signature": "Idris ()",
          "source": "src/Idris-AbsSyntax.html#resetNameIdx",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "resetNameIdx",
          "normalized": "Idris()",
          "package": "idris",
          "partial": "Name Idx",
          "signature": "Idris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:resetNameIdx"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eA version of liftIO that puts errors into the exception type of the Idris monad\n\u003c/p\u003e",
          "module": "Idris.AbsSyntax",
          "name": "runIO",
          "package": "idris",
          "signature": "IO a -\u003e Idris a",
          "source": "src/Idris-AbsSyntax.html#runIO",
          "type": "function"
        },
        "index": {
          "description": "version of liftIO that puts errors into the exception type of the Idris monad",
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "runIO",
          "normalized": "IO a-\u003eIdris a",
          "package": "idris",
          "partial": "IO",
          "signature": "IO a-\u003eIdris a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:runIO"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "setAccessibility",
          "package": "idris",
          "signature": "Name -\u003e Accessibility -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#setAccessibility",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "setAccessibility",
          "normalized": "Name-\u003eAccessibility-\u003eIdris()",
          "package": "idris",
          "partial": "Accessibility",
          "signature": "Name-\u003eAccessibility-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:setAccessibility"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "setCmdLine",
          "package": "idris",
          "signature": "[Opt] -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#setCmdLine",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "setCmdLine",
          "normalized": "[Opt]-\u003eIdris()",
          "package": "idris",
          "partial": "Cmd Line",
          "signature": "[Opt]-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:setCmdLine"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "setCodegen",
          "package": "idris",
          "signature": "Codegen -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#setCodegen",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "setCodegen",
          "normalized": "Codegen-\u003eIdris()",
          "package": "idris",
          "partial": "Codegen",
          "signature": "Codegen-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:setCodegen"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "setColour",
          "package": "idris",
          "signature": "ColourType -\u003e IdrisColour -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#setColour",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "setColour",
          "normalized": "ColourType-\u003eIdrisColour-\u003eIdris()",
          "package": "idris",
          "partial": "Colour",
          "signature": "ColourType-\u003eIdrisColour-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:setColour"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "setColourise",
          "package": "idris",
          "signature": "Bool -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#setColourise",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "setColourise",
          "normalized": "Bool-\u003eIdris()",
          "package": "idris",
          "partial": "Colourise",
          "signature": "Bool-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:setColourise"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "setContext",
          "package": "idris",
          "signature": "Context -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#setContext",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "setContext",
          "normalized": "Context-\u003eIdris()",
          "package": "idris",
          "partial": "Context",
          "signature": "Context-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:setContext"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "setCoverage",
          "package": "idris",
          "signature": "Bool -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#setCoverage",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "setCoverage",
          "normalized": "Bool-\u003eIdris()",
          "package": "idris",
          "partial": "Coverage",
          "signature": "Bool-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:setCoverage"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "setErrContext",
          "package": "idris",
          "signature": "Bool -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#setErrContext",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "setErrContext",
          "normalized": "Bool-\u003eIdris()",
          "package": "idris",
          "partial": "Err Context",
          "signature": "Bool-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:setErrContext"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "setErrLine",
          "package": "idris",
          "signature": "Int -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#setErrLine",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "setErrLine",
          "normalized": "Int-\u003eIdris()",
          "package": "idris",
          "partial": "Err Line",
          "signature": "Int-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:setErrLine"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "setFlags",
          "package": "idris",
          "signature": "Name -\u003e [FnOpt] -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#setFlags",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "setFlags",
          "normalized": "Name-\u003e[FnOpt]-\u003eIdris()",
          "package": "idris",
          "partial": "Flags",
          "signature": "Name-\u003e[FnOpt]-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:setFlags"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "setIBCSubDir",
          "package": "idris",
          "signature": "FilePath -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#setIBCSubDir",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "setIBCSubDir",
          "normalized": "FilePath-\u003eIdris()",
          "package": "idris",
          "partial": "IBCSub Dir",
          "signature": "FilePath-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:setIBCSubDir"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "setIdeSlave",
          "package": "idris",
          "signature": "Bool -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#setIdeSlave",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "setIdeSlave",
          "normalized": "Bool-\u003eIdris()",
          "package": "idris",
          "partial": "Ide Slave",
          "signature": "Bool-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:setIdeSlave"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "setImpShow",
          "package": "idris",
          "signature": "Bool -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#setImpShow",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "setImpShow",
          "normalized": "Bool-\u003eIdris()",
          "package": "idris",
          "partial": "Imp Show",
          "signature": "Bool-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:setImpShow"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "setImportDirs",
          "package": "idris",
          "signature": "[FilePath] -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#setImportDirs",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "setImportDirs",
          "normalized": "[FilePath]-\u003eIdris()",
          "package": "idris",
          "partial": "Import Dirs",
          "signature": "[FilePath]-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:setImportDirs"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "setLogLevel",
          "package": "idris",
          "signature": "Int -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#setLogLevel",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "setLogLevel",
          "normalized": "Int-\u003eIdris()",
          "package": "idris",
          "partial": "Log Level",
          "signature": "Int-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:setLogLevel"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "setNoBanner",
          "package": "idris",
          "signature": "Bool -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#setNoBanner",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "setNoBanner",
          "normalized": "Bool-\u003eIdris()",
          "package": "idris",
          "partial": "No Banner",
          "signature": "Bool-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:setNoBanner"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "setOptLevel",
          "package": "idris",
          "signature": "Word -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#setOptLevel",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "setOptLevel",
          "normalized": "Word-\u003eIdris()",
          "package": "idris",
          "partial": "Opt Level",
          "signature": "Word-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:setOptLevel"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "setOutH",
          "package": "idris",
          "signature": "Handle -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#setOutH",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "setOutH",
          "normalized": "Handle-\u003eIdris()",
          "package": "idris",
          "partial": "Out",
          "signature": "Handle-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:setOutH"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "setOutputTy",
          "package": "idris",
          "signature": "OutputType -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#setOutputTy",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "setOutputTy",
          "normalized": "OutputType-\u003eIdris()",
          "package": "idris",
          "partial": "Output Ty",
          "signature": "OutputType-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:setOutputTy"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "setQuiet",
          "package": "idris",
          "signature": "Bool -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#setQuiet",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "setQuiet",
          "normalized": "Bool-\u003eIdris()",
          "package": "idris",
          "partial": "Quiet",
          "signature": "Bool-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:setQuiet"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "setREPL",
          "package": "idris",
          "signature": "Bool -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#setREPL",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "setREPL",
          "normalized": "Bool-\u003eIdris()",
          "package": "idris",
          "partial": "REPL",
          "signature": "Bool-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:setREPL"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "setSO",
          "package": "idris",
          "signature": "Maybe String -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#setSO",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "setSO",
          "normalized": "Maybe String-\u003eIdris()",
          "package": "idris",
          "partial": "SO",
          "signature": "Maybe String-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:setSO"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "setShowOrigErr",
          "package": "idris",
          "signature": "Bool -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#setShowOrigErr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "setShowOrigErr",
          "normalized": "Bool-\u003eIdris()",
          "package": "idris",
          "partial": "Show Orig Err",
          "signature": "Bool-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:setShowOrigErr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "setTargetCPU",
          "package": "idris",
          "signature": "String -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#setTargetCPU",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "setTargetCPU",
          "normalized": "String-\u003eIdris()",
          "package": "idris",
          "partial": "Target CPU",
          "signature": "String-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:setTargetCPU"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "setTargetTriple",
          "package": "idris",
          "signature": "String -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#setTargetTriple",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "setTargetTriple",
          "normalized": "String-\u003eIdris()",
          "package": "idris",
          "partial": "Target Triple",
          "signature": "String-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:setTargetTriple"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "setTotality",
          "package": "idris",
          "signature": "Name -\u003e Totality -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#setTotality",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "setTotality",
          "normalized": "Name-\u003eTotality-\u003eIdris()",
          "package": "idris",
          "partial": "Totality",
          "signature": "Name-\u003eTotality-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:setTotality"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "setTypeCase",
          "package": "idris",
          "signature": "Bool -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#setTypeCase",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "setTypeCase",
          "normalized": "Bool-\u003eIdris()",
          "package": "idris",
          "partial": "Type Case",
          "signature": "Bool-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:setTypeCase"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "setTypeInType",
          "package": "idris",
          "signature": "Bool -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#setTypeInType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "setTypeInType",
          "normalized": "Bool-\u003eIdris()",
          "package": "idris",
          "partial": "Type In Type",
          "signature": "Bool-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:setTypeInType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "setVerbose",
          "package": "idris",
          "signature": "Bool -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#setVerbose",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "setVerbose",
          "normalized": "Bool-\u003eIdris()",
          "package": "idris",
          "partial": "Verbose",
          "signature": "Bool-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:setVerbose"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "setWidth",
          "package": "idris",
          "signature": "ConsoleWidth -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#setWidth",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "setWidth",
          "normalized": "ConsoleWidth-\u003eIdris()",
          "package": "idris",
          "partial": "Width",
          "signature": "ConsoleWidth-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:setWidth"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "shadow",
          "package": "idris",
          "signature": "Name -\u003e Name -\u003e PTerm -\u003e PTerm",
          "source": "src/Idris-AbsSyntax.html#shadow",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "shadow",
          "normalized": "Name-\u003eName-\u003ePTerm-\u003ePTerm",
          "package": "idris",
          "signature": "Name-\u003eName-\u003ePTerm-\u003ePTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:shadow"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "showOrigErr",
          "package": "idris",
          "signature": "Idris Bool",
          "source": "src/Idris-AbsSyntax.html#showOrigErr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "showOrigErr",
          "package": "idris",
          "partial": "Orig Err",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:showOrigErr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "solveDeferred",
          "package": "idris",
          "signature": "Name -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#solveDeferred",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "solveDeferred",
          "normalized": "Name-\u003eIdris()",
          "package": "idris",
          "partial": "Deferred",
          "signature": "Name-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:solveDeferred"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "stripLinear",
          "package": "idris",
          "signature": "IState -\u003e PTerm -\u003e PTerm",
          "source": "src/Idris-AbsSyntax.html#stripLinear",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "stripLinear",
          "normalized": "IState-\u003ePTerm-\u003ePTerm",
          "package": "idris",
          "partial": "Linear",
          "signature": "IState-\u003ePTerm-\u003ePTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:stripLinear"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "stripUnmatchable",
          "package": "idris",
          "signature": "IState -\u003e PTerm -\u003e PTerm",
          "source": "src/Idris-AbsSyntax.html#stripUnmatchable",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "stripUnmatchable",
          "normalized": "IState-\u003ePTerm-\u003ePTerm",
          "package": "idris",
          "partial": "Unmatchable",
          "signature": "IState-\u003ePTerm-\u003ePTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:stripUnmatchable"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "substMatch",
          "package": "idris",
          "signature": "Name -\u003e PTerm -\u003e PTerm -\u003e PTerm",
          "source": "src/Idris-AbsSyntax.html#substMatch",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "substMatch",
          "normalized": "Name-\u003ePTerm-\u003ePTerm-\u003ePTerm",
          "package": "idris",
          "partial": "Match",
          "signature": "Name-\u003ePTerm-\u003ePTerm-\u003ePTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:substMatch"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "substMatchShadow",
          "package": "idris",
          "signature": "Name -\u003e [Name] -\u003e PTerm -\u003e PTerm -\u003e PTerm",
          "source": "src/Idris-AbsSyntax.html#substMatchShadow",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "substMatchShadow",
          "normalized": "Name-\u003e[Name]-\u003ePTerm-\u003ePTerm-\u003ePTerm",
          "package": "idris",
          "partial": "Match Shadow",
          "signature": "Name-\u003e[Name]-\u003ePTerm-\u003ePTerm-\u003ePTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:substMatchShadow"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "substMatches",
          "package": "idris",
          "signature": "[(Name, PTerm)] -\u003e PTerm -\u003e PTerm",
          "source": "src/Idris-AbsSyntax.html#substMatches",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "substMatches",
          "normalized": "[(Name,PTerm)]-\u003ePTerm-\u003ePTerm",
          "package": "idris",
          "partial": "Matches",
          "signature": "[(Name,PTerm)]-\u003ePTerm-\u003ePTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:substMatches"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "substMatchesShadow",
          "package": "idris",
          "signature": "[(Name, PTerm)] -\u003e [Name] -\u003e PTerm -\u003e PTerm",
          "source": "src/Idris-AbsSyntax.html#substMatchesShadow",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "substMatchesShadow",
          "normalized": "[(Name,PTerm)]-\u003e[Name]-\u003ePTerm-\u003ePTerm",
          "package": "idris",
          "partial": "Matches Shadow",
          "signature": "[(Name,PTerm)]-\u003e[Name]-\u003ePTerm-\u003ePTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:substMatchesShadow"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "targetCPU",
          "package": "idris",
          "signature": "Idris String",
          "source": "src/Idris-AbsSyntax.html#targetCPU",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "targetCPU",
          "package": "idris",
          "partial": "CPU",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:targetCPU"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "targetTriple",
          "package": "idris",
          "signature": "Idris String",
          "source": "src/Idris-AbsSyntax.html#targetTriple",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "targetTriple",
          "package": "idris",
          "partial": "Triple",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:targetTriple"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "toEither",
          "package": "idris",
          "signature": "EitherErr a b -\u003e Either a b",
          "source": "src/Idris-AbsSyntax.html#toEither",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "toEither",
          "normalized": "EitherErr a b-\u003eEither a b",
          "package": "idris",
          "partial": "Either",
          "signature": "EitherErr a b-\u003eEither a b",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:toEither"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "totcheck",
          "package": "idris",
          "signature": "(FC, Name) -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#totcheck",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "totcheck",
          "normalized": "(FC,Name)-\u003eIdris()",
          "package": "idris",
          "signature": "(FC,Name)-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:totcheck"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "type1Doc",
          "package": "idris",
          "signature": "Doc OutputAnnotation",
          "source": "src/Idris-AbsSyntax.html#type1Doc",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "type1Doc",
          "package": "idris",
          "partial": "Doc",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:type1Doc"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "typeInType",
          "package": "idris",
          "signature": "Idris Bool",
          "source": "src/Idris-AbsSyntax.html#typeInType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "typeInType",
          "package": "idris",
          "partial": "In Type",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:typeInType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "updateContext",
          "package": "idris",
          "signature": "(Context -\u003e Context) -\u003e Idris ()",
          "source": "src/Idris-AbsSyntax.html#updateContext",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "updateContext",
          "normalized": "(Context-\u003eContext)-\u003eIdris()",
          "package": "idris",
          "partial": "Context",
          "signature": "(Context-\u003eContext)-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:updateContext"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "useREPL",
          "package": "idris",
          "signature": "Idris Bool",
          "source": "src/Idris-AbsSyntax.html#useREPL",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "useREPL",
          "package": "idris",
          "partial": "REPL",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:useREPL"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "valIBCSubDir",
          "package": "idris",
          "signature": "IState -\u003e Idris FilePath",
          "source": "src/Idris-AbsSyntax.html#valIBCSubDir",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "valIBCSubDir",
          "normalized": "IState-\u003eIdris FilePath",
          "package": "idris",
          "partial": "IBCSub Dir",
          "signature": "IState-\u003eIdris FilePath",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:valIBCSubDir"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntax",
          "name": "verbose",
          "package": "idris",
          "signature": "Idris Bool",
          "source": "src/Idris-AbsSyntax.html#verbose",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntax",
          "module": "Idris.AbsSyntax",
          "name": "verbose",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntax.html#v:verbose"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "AbsSyntaxTree",
          "package": "idris",
          "source": "src/Idris-AbsSyntaxTree.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "AbsSyntaxTree",
          "package": "idris",
          "partial": "Abs Syntax Tree",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "ArgOpt",
          "package": "idris",
          "source": "src/Idris-AbsSyntaxTree.html#ArgOpt",
          "type": "data"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "ArgOpt",
          "package": "idris",
          "partial": "Arg Opt",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#t:ArgOpt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "CGInfo",
          "package": "idris",
          "source": "src/Idris-AbsSyntaxTree.html#CGInfo",
          "type": "data"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "CGInfo",
          "package": "idris",
          "partial": "CGInfo",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#t:CGInfo"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "ClassInfo",
          "package": "idris",
          "source": "src/Idris-AbsSyntaxTree.html#ClassInfo",
          "type": "data"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "ClassInfo",
          "package": "idris",
          "partial": "Class Info",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#t:ClassInfo"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Codegen",
          "package": "idris",
          "source": "src/Idris-AbsSyntaxTree.html#Codegen",
          "type": "data"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Codegen",
          "package": "idris",
          "partial": "Codegen",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#t:Codegen"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eREPL commands\n\u003c/p\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "Command",
          "package": "idris",
          "source": "src/Idris-AbsSyntaxTree.html#Command",
          "type": "data"
        },
        "index": {
          "description": "REPL commands",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Command",
          "package": "idris",
          "partial": "Command",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#t:Command"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eHow wide is the console?\n\u003c/p\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "ConsoleWidth",
          "package": "idris",
          "source": "src/Idris-AbsSyntaxTree.html#ConsoleWidth",
          "type": "data"
        },
        "index": {
          "description": "How wide is the console",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "ConsoleWidth",
          "package": "idris",
          "partial": "Console Width",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#t:ConsoleWidth"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "DSL",
          "package": "idris",
          "source": "src/Idris-AbsSyntaxTree.html#DSL",
          "type": "type"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "DSL",
          "package": "idris",
          "partial": "DSL",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#t:DSL"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "DSL'",
          "package": "idris",
          "source": "src/Idris-AbsSyntaxTree.html#DSL%27",
          "type": "data"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "DSL'",
          "package": "idris",
          "partial": "DSL'",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#t:DSL-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eData declaration options\n\u003c/p\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "DataOpt",
          "package": "idris",
          "source": "src/Idris-AbsSyntaxTree.html#DataOpt",
          "type": "data"
        },
        "index": {
          "description": "Data declaration options",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "DataOpt",
          "package": "idris",
          "partial": "Data Opt",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#t:DataOpt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "DataOpts",
          "package": "idris",
          "source": "src/Idris-AbsSyntaxTree.html#DataOpts",
          "type": "type"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "DataOpts",
          "package": "idris",
          "partial": "Data Opts",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#t:DataOpts"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "ElabD",
          "package": "idris",
          "source": "src/Idris-AbsSyntaxTree.html#ElabD",
          "type": "type"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "ElabD",
          "package": "idris",
          "partial": "Elab",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#t:ElabD"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "FixDecl",
          "package": "idris",
          "source": "src/Idris-AbsSyntaxTree.html#FixDecl",
          "type": "data"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "FixDecl",
          "package": "idris",
          "partial": "Fix Decl",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#t:FixDecl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Fixity",
          "package": "idris",
          "source": "src/Idris-AbsSyntaxTree.html#Fixity",
          "type": "data"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Fixity",
          "package": "idris",
          "partial": "Fixity",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#t:Fixity"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "FnOpt",
          "package": "idris",
          "source": "src/Idris-AbsSyntaxTree.html#FnOpt",
          "type": "data"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "FnOpt",
          "package": "idris",
          "partial": "Fn Opt",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#t:FnOpt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "FnOpts",
          "package": "idris",
          "source": "src/Idris-AbsSyntaxTree.html#FnOpts",
          "type": "type"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "FnOpts",
          "package": "idris",
          "partial": "Fn Opts",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#t:FnOpts"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Forceability",
          "package": "idris",
          "source": "src/Idris-AbsSyntaxTree.html#Forceability",
          "type": "data"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Forceability",
          "package": "idris",
          "partial": "Forceability",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#t:Forceability"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "IBCWrite",
          "package": "idris",
          "source": "src/Idris-AbsSyntaxTree.html#IBCWrite",
          "type": "data"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "IBCWrite",
          "package": "idris",
          "partial": "IBCWrite",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#t:IBCWrite"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "IOption",
          "package": "idris",
          "source": "src/Idris-AbsSyntaxTree.html#IOption",
          "type": "data"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "IOption",
          "package": "idris",
          "partial": "IOption",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#t:IOption"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eThe global state used in the Idris monad\n\u003c/p\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "IState",
          "package": "idris",
          "source": "src/Idris-AbsSyntaxTree.html#IState",
          "type": "data"
        },
        "index": {
          "description": "The global state used in the Idris monad",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "IState",
          "package": "idris",
          "partial": "IState",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#t:IState"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eThe monad for the main REPL - reading and processing files and updating\n global state (hence the IO inner monad).\ntype Idris = WriterT [Either String (IO ())] (State IState a))\n\u003c/p\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "Idris",
          "package": "idris",
          "source": "src/Idris-AbsSyntaxTree.html#Idris",
          "type": "type"
        },
        "index": {
          "description": "The monad for the main REPL reading and processing files and updating global state hence the IO inner monad type Idris WriterT Either String IO State IState",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Idris",
          "package": "idris",
          "partial": "Idris",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#t:Idris"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "LanguageExt",
          "package": "idris",
          "source": "src/Idris-AbsSyntaxTree.html#LanguageExt",
          "type": "data"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "LanguageExt",
          "package": "idris",
          "partial": "Language Ext",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#t:LanguageExt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Opt",
          "package": "idris",
          "source": "src/Idris-AbsSyntaxTree.html#Opt",
          "type": "data"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Opt",
          "package": "idris",
          "partial": "Opt",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#t:Opt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "OptInfo",
          "package": "idris",
          "source": "src/Idris-AbsSyntaxTree.html#OptInfo",
          "type": "data"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "OptInfo",
          "package": "idris",
          "partial": "Opt Info",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#t:OptInfo"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eThe output mode in use\n\u003c/p\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "OutputMode",
          "package": "idris",
          "source": "src/Idris-AbsSyntaxTree.html#OutputMode",
          "type": "data"
        },
        "index": {
          "description": "The output mode in use",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "OutputMode",
          "package": "idris",
          "partial": "Output Mode",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#t:OutputMode"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "PArg",
          "package": "idris",
          "source": "src/Idris-AbsSyntaxTree.html#PArg",
          "type": "type"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PArg",
          "package": "idris",
          "partial": "PArg",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#t:PArg"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "PArg'",
          "package": "idris",
          "source": "src/Idris-AbsSyntaxTree.html#PArg%27",
          "type": "data"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PArg'",
          "package": "idris",
          "partial": "PArg'",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#t:PArg-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "PClause",
          "package": "idris",
          "source": "src/Idris-AbsSyntaxTree.html#PClause",
          "type": "type"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PClause",
          "package": "idris",
          "partial": "PClause",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#t:PClause"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eOne clause of a top-level definition. Term arguments to constructors are:\n\u003c/p\u003e\u003col\u003e\u003cli\u003e The whole application (missing for PClauseR and PWithR because they're within a \u003ca\u003ewith\u003c/a\u003e clause)\n\u003c/li\u003e\u003cli\u003e The list of extra \u003ccode\u003ewith\u003c/code\u003e patterns\n\u003c/li\u003e\u003cli\u003e The right-hand side\n\u003c/li\u003e\u003cli\u003e The where block (PDecl' t)\n\u003c/li\u003e\u003c/ol\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "PClause'",
          "package": "idris",
          "source": "src/Idris-AbsSyntaxTree.html#PClause%27",
          "type": "data"
        },
        "index": {
          "description": "One clause of top-level definition Term arguments to constructors are The whole application missing for PClauseR and PWithR because they re within with clause The list of extra with patterns The right-hand side The where block PDecl",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PClause'",
          "package": "idris",
          "partial": "PClause'",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#t:PClause-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "PData",
          "package": "idris",
          "source": "src/Idris-AbsSyntaxTree.html#PData",
          "type": "type"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PData",
          "package": "idris",
          "partial": "PData",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#t:PData"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eData declaration\n\u003c/p\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "PData'",
          "package": "idris",
          "source": "src/Idris-AbsSyntaxTree.html#PData%27",
          "type": "data"
        },
        "index": {
          "description": "Data declaration",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PData'",
          "package": "idris",
          "partial": "PData'",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#t:PData-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "PDecl",
          "package": "idris",
          "source": "src/Idris-AbsSyntaxTree.html#PDecl",
          "type": "type"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PDecl",
          "package": "idris",
          "partial": "PDecl",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#t:PDecl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eTop-level declarations such as compiler directives, definitions,\n datatypes and typeclasses.\n\u003c/p\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "PDecl'",
          "package": "idris",
          "source": "src/Idris-AbsSyntaxTree.html#PDecl%27",
          "type": "data"
        },
        "index": {
          "description": "Top-level declarations such as compiler directives definitions datatypes and typeclasses",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PDecl'",
          "package": "idris",
          "partial": "PDecl'",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#t:PDecl-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "PDo",
          "package": "idris",
          "source": "src/Idris-AbsSyntaxTree.html#PDo",
          "type": "type"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PDo",
          "package": "idris",
          "partial": "PDo",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#t:PDo"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "PDo'",
          "package": "idris",
          "source": "src/Idris-AbsSyntaxTree.html#PDo%27",
          "type": "data"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PDo'",
          "package": "idris",
          "partial": "PDo'",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#t:PDo-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "PTactic",
          "package": "idris",
          "source": "src/Idris-AbsSyntaxTree.html#PTactic",
          "type": "type"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PTactic",
          "package": "idris",
          "partial": "PTactic",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#t:PTactic"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "PTactic'",
          "package": "idris",
          "source": "src/Idris-AbsSyntaxTree.html#PTactic%27",
          "type": "data"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PTactic'",
          "package": "idris",
          "partial": "PTactic'",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#t:PTactic-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eHigh level language terms\n\u003c/p\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "PTerm",
          "package": "idris",
          "source": "src/Idris-AbsSyntaxTree.html#PTerm",
          "type": "data"
        },
        "index": {
          "description": "High level language terms",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PTerm",
          "package": "idris",
          "partial": "PTerm",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#t:PTerm"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Plicity",
          "package": "idris",
          "source": "src/Idris-AbsSyntaxTree.html#Plicity",
          "type": "data"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Plicity",
          "package": "idris",
          "partial": "Plicity",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#t:Plicity"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "PunInfo",
          "package": "idris",
          "source": "src/Idris-AbsSyntaxTree.html#PunInfo",
          "type": "data"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PunInfo",
          "package": "idris",
          "partial": "Pun Info",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#t:PunInfo"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "SCGEntry",
          "package": "idris",
          "source": "src/Idris-AbsSyntaxTree.html#SCGEntry",
          "type": "type"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "SCGEntry",
          "package": "idris",
          "partial": "SCGEntry",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#t:SCGEntry"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "SSymbol",
          "package": "idris",
          "source": "src/Idris-AbsSyntaxTree.html#SSymbol",
          "type": "data"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "SSymbol",
          "package": "idris",
          "partial": "SSymbol",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#t:SSymbol"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "SizeChange",
          "package": "idris",
          "source": "src/Idris-AbsSyntaxTree.html#SizeChange",
          "type": "data"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "SizeChange",
          "package": "idris",
          "partial": "Size Change",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#t:SizeChange"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Static",
          "package": "idris",
          "source": "src/Idris-AbsSyntaxTree.html#Static",
          "type": "data"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Static",
          "package": "idris",
          "partial": "Static",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#t:Static"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "SynContext",
          "package": "idris",
          "source": "src/Idris-AbsSyntaxTree.html#SynContext",
          "type": "data"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "SynContext",
          "package": "idris",
          "partial": "Syn Context",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#t:SynContext"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Syntax",
          "package": "idris",
          "source": "src/Idris-AbsSyntaxTree.html#Syntax",
          "type": "data"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Syntax",
          "package": "idris",
          "partial": "Syntax",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#t:Syntax"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "SyntaxInfo",
          "package": "idris",
          "source": "src/Idris-AbsSyntaxTree.html#SyntaxInfo",
          "type": "data"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "SyntaxInfo",
          "package": "idris",
          "partial": "Syntax Info",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#t:SyntaxInfo"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "TIData",
          "package": "idris",
          "source": "src/Idris-AbsSyntaxTree.html#TIData",
          "type": "data"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "TIData",
          "package": "idris",
          "partial": "TIData",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#t:TIData"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "TypeInfo",
          "package": "idris",
          "source": "src/Idris-AbsSyntaxTree.html#TypeInfo",
          "type": "data"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "TypeInfo",
          "package": "idris",
          "partial": "Type Info",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#t:TypeInfo"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Using",
          "package": "idris",
          "source": "src/Idris-AbsSyntaxTree.html#Using",
          "type": "data"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Using",
          "package": "idris",
          "partial": "Using",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#t:Using"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Abandon",
          "package": "idris",
          "signature": "Abandon",
          "source": "src/Idris-AbsSyntaxTree.html#PTactic%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Abandon",
          "package": "idris",
          "partial": "Abandon",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Abandon"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "AddClauseFrom",
          "package": "idris",
          "signature": "AddClauseFrom Bool Int Name",
          "source": "src/Idris-AbsSyntaxTree.html#Command",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "AddClauseFrom",
          "package": "idris",
          "partial": "Add Clause From",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:AddClauseFrom"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "AddMissing",
          "package": "idris",
          "signature": "AddMissing Bool Int Name",
          "source": "src/Idris-AbsSyntaxTree.html#Command",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "AddMissing",
          "package": "idris",
          "partial": "Add Missing",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:AddMissing"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "AddProof",
          "package": "idris",
          "signature": "AddProof (Maybe Name)",
          "source": "src/Idris-AbsSyntaxTree.html#Command",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "AddProof",
          "package": "idris",
          "partial": "Add Proof",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:AddProof"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "AddProofClauseFrom",
          "package": "idris",
          "signature": "AddProofClauseFrom Bool Int Name",
          "source": "src/Idris-AbsSyntaxTree.html#Command",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "AddProofClauseFrom",
          "package": "idris",
          "partial": "Add Proof Clause From",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:AddProofClauseFrom"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "AnySyntax",
          "package": "idris",
          "signature": "AnySyntax",
          "source": "src/Idris-AbsSyntaxTree.html#SynContext",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "AnySyntax",
          "package": "idris",
          "partial": "Any Syntax",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:AnySyntax"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "ApplyTactic",
          "package": "idris",
          "signature": "ApplyTactic t",
          "source": "src/Idris-AbsSyntaxTree.html#PTactic%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "ApplyTactic",
          "package": "idris",
          "partial": "Apply Tactic",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:ApplyTactic"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "AssertTotal",
          "package": "idris",
          "signature": "AssertTotal",
          "source": "src/Idris-AbsSyntaxTree.html#FnOpt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "AssertTotal",
          "package": "idris",
          "partial": "Assert Total",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:AssertTotal"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Attack",
          "package": "idris",
          "signature": "Attack",
          "source": "src/Idris-AbsSyntaxTree.html#PTactic%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Attack",
          "package": "idris",
          "partial": "Attack",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Attack"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eAutomatically adjust terminal width\n\u003c/p\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "AutoWidth",
          "package": "idris",
          "signature": "AutoWidth",
          "source": "src/Idris-AbsSyntaxTree.html#Opt",
          "type": "function"
        },
        "index": {
          "description": "Automatically adjust terminal width",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "AutoWidth",
          "package": "idris",
          "partial": "Auto Width",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:AutoWidth"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eAttempt to determine width, or 80 otherwise\n\u003c/p\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "AutomaticWidth",
          "package": "idris",
          "signature": "AutomaticWidth",
          "source": "src/Idris-AbsSyntaxTree.html#ConsoleWidth",
          "type": "function"
        },
        "index": {
          "description": "Attempt to determine width or otherwise",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "AutomaticWidth",
          "package": "idris",
          "partial": "Automatic Width",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:AutomaticWidth"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "BCAsm",
          "package": "idris",
          "signature": "BCAsm String",
          "source": "src/Idris-AbsSyntaxTree.html#Opt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "BCAsm",
          "package": "idris",
          "partial": "BCAsm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:BCAsm"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Bigger",
          "package": "idris",
          "signature": "Bigger",
          "source": "src/Idris-AbsSyntaxTree.html#SizeChange",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Bigger",
          "package": "idris",
          "partial": "Bigger",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Bigger"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Binding",
          "package": "idris",
          "signature": "Binding Name",
          "source": "src/Idris-AbsSyntaxTree.html#SSymbol",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Binding",
          "package": "idris",
          "partial": "Binding",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Binding"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "ByReflection",
          "package": "idris",
          "signature": "ByReflection t",
          "source": "src/Idris-AbsSyntaxTree.html#PTactic%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "ByReflection",
          "package": "idris",
          "partial": "By Reflection",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:ByReflection"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Bytecode",
          "package": "idris",
          "signature": "Bytecode",
          "source": "src/Idris-AbsSyntaxTree.html#Codegen",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Bytecode",
          "package": "idris",
          "partial": "Bytecode",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Bytecode"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "CExport",
          "package": "idris",
          "signature": "CExport String",
          "source": "src/Idris-AbsSyntaxTree.html#FnOpt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "CExport",
          "package": "idris",
          "partial": "CExport",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:CExport"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "CGInfo",
          "package": "idris",
          "signature": "CGInfo",
          "source": "src/Idris-AbsSyntaxTree.html#CGInfo",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "CGInfo",
          "package": "idris",
          "partial": "CGInfo",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:CGInfo"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "CI",
          "package": "idris",
          "signature": "CI",
          "source": "src/Idris-AbsSyntaxTree.html#ClassInfo",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "CI",
          "package": "idris",
          "partial": "CI",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:CI"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "CaseSplitAt",
          "package": "idris",
          "signature": "CaseSplitAt Bool Int Name",
          "source": "src/Idris-AbsSyntaxTree.html#Command",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "CaseSplitAt",
          "package": "idris",
          "partial": "Case Split At",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:CaseSplitAt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "ChangeDirectory",
          "package": "idris",
          "signature": "ChangeDirectory FilePath",
          "source": "src/Idris-AbsSyntaxTree.html#Command",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "ChangeDirectory",
          "package": "idris",
          "partial": "Change Directory",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:ChangeDirectory"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Check",
          "package": "idris",
          "signature": "Check PTerm",
          "source": "src/Idris-AbsSyntaxTree.html#Command",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Check",
          "package": "idris",
          "partial": "Check",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Check"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Client",
          "package": "idris",
          "signature": "Client String",
          "source": "src/Idris-AbsSyntaxTree.html#Opt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Client",
          "package": "idris",
          "partial": "Client",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Client"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Codata",
          "package": "idris",
          "signature": "Codata",
          "source": "src/Idris-AbsSyntaxTree.html#DataOpt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Codata",
          "package": "idris",
          "partial": "Codata",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Codata"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Coinductive",
          "package": "idris",
          "signature": "Coinductive",
          "source": "src/Idris-AbsSyntaxTree.html#FnOpt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Coinductive",
          "package": "idris",
          "partial": "Coinductive",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Coinductive"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "ColourOff",
          "package": "idris",
          "signature": "ColourOff",
          "source": "src/Idris-AbsSyntaxTree.html#Command",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "ColourOff",
          "package": "idris",
          "partial": "Colour Off",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:ColourOff"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "ColourOn",
          "package": "idris",
          "signature": "ColourOn",
          "source": "src/Idris-AbsSyntaxTree.html#Command",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "ColourOn",
          "package": "idris",
          "partial": "Colour On",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:ColourOn"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "ColourREPL",
          "package": "idris",
          "signature": "ColourREPL Bool",
          "source": "src/Idris-AbsSyntaxTree.html#Opt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "ColourREPL",
          "package": "idris",
          "partial": "Colour REPL",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:ColourREPL"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eManually specified - must be positive\n\u003c/p\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "ColsWide",
          "package": "idris",
          "signature": "ColsWide Int",
          "source": "src/Idris-AbsSyntaxTree.html#ConsoleWidth",
          "type": "function"
        },
        "index": {
          "description": "Manually specified must be positive",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "ColsWide",
          "package": "idris",
          "partial": "Cols Wide",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:ColsWide"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Compile",
          "package": "idris",
          "signature": "Compile Codegen String",
          "source": "src/Idris-AbsSyntaxTree.html#Command",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Compile",
          "package": "idris",
          "partial": "Compile",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Compile"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Compute",
          "package": "idris",
          "signature": "Compute",
          "source": "src/Idris-AbsSyntaxTree.html#PTactic%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Compute",
          "package": "idris",
          "partial": "Compute",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Compute"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Conditional",
          "package": "idris",
          "signature": "Conditional",
          "source": "src/Idris-AbsSyntaxTree.html#Forceability",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Conditional",
          "package": "idris",
          "partial": "Conditional",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Conditional"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Constraint",
          "package": "idris",
          "signature": "Constraint",
          "source": "src/Idris-AbsSyntaxTree.html#Plicity",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Constraint",
          "package": "idris",
          "partial": "Constraint",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Constraint"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "DSL",
          "package": "idris",
          "signature": "DSL",
          "source": "src/Idris-AbsSyntaxTree.html#DSL%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "DSL",
          "package": "idris",
          "partial": "DSL",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:DSL"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "DataErrRev",
          "package": "idris",
          "signature": "DataErrRev",
          "source": "src/Idris-AbsSyntaxTree.html#DataOpt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "DataErrRev",
          "package": "idris",
          "partial": "Data Err Rev",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:DataErrRev"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "DebugInfo",
          "package": "idris",
          "signature": "DebugInfo Name",
          "source": "src/Idris-AbsSyntaxTree.html#Command",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "DebugInfo",
          "package": "idris",
          "partial": "Debug Info",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:DebugInfo"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "DefaultEliminator",
          "package": "idris",
          "signature": "DefaultEliminator",
          "source": "src/Idris-AbsSyntaxTree.html#DataOpt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "DefaultEliminator",
          "package": "idris",
          "partial": "Default Eliminator",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:DefaultEliminator"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "DefaultPartial",
          "package": "idris",
          "signature": "DefaultPartial",
          "source": "src/Idris-AbsSyntaxTree.html#Opt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "DefaultPartial",
          "package": "idris",
          "partial": "Default Partial",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:DefaultPartial"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "DefaultTotal",
          "package": "idris",
          "signature": "DefaultTotal",
          "source": "src/Idris-AbsSyntaxTree.html#Opt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "DefaultTotal",
          "package": "idris",
          "partial": "Default Total",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:DefaultTotal"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Defn",
          "package": "idris",
          "signature": "Defn Name",
          "source": "src/Idris-AbsSyntaxTree.html#Command",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Defn",
          "package": "idris",
          "partial": "Defn",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Defn"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Dictionary",
          "package": "idris",
          "signature": "Dictionary",
          "source": "src/Idris-AbsSyntaxTree.html#FnOpt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Dictionary",
          "package": "idris",
          "partial": "Dictionary",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Dictionary"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "DoBind",
          "package": "idris",
          "signature": "DoBind FC Name t",
          "source": "src/Idris-AbsSyntaxTree.html#PDo%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "DoBind",
          "package": "idris",
          "partial": "Do Bind",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:DoBind"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "DoBindP",
          "package": "idris",
          "signature": "DoBindP FC t t",
          "source": "src/Idris-AbsSyntaxTree.html#PDo%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "DoBindP",
          "package": "idris",
          "partial": "Do Bind",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:DoBindP"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "DoExp",
          "package": "idris",
          "signature": "DoExp FC t",
          "source": "src/Idris-AbsSyntaxTree.html#PDo%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "DoExp",
          "package": "idris",
          "partial": "Do Exp",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:DoExp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "DoLet",
          "package": "idris",
          "signature": "DoLet FC Name t t",
          "source": "src/Idris-AbsSyntaxTree.html#PDo%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "DoLet",
          "package": "idris",
          "partial": "Do Let",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:DoLet"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "DoLetP",
          "package": "idris",
          "signature": "DoLetP FC t t",
          "source": "src/Idris-AbsSyntaxTree.html#PDo%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "DoLetP",
          "package": "idris",
          "partial": "Do Let",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:DoLetP"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "DoProofSearch",
          "package": "idris",
          "signature": "DoProofSearch Bool Int Name [Name]",
          "source": "src/Idris-AbsSyntaxTree.html#Command",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "DoProofSearch",
          "normalized": "DoProofSearch Bool Int Name[Name]",
          "package": "idris",
          "partial": "Do Proof Search",
          "signature": "DoProofSearch Bool Int Name[Name]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:DoProofSearch"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "DocStr",
          "package": "idris",
          "signature": "DocStr Name",
          "source": "src/Idris-AbsSyntaxTree.html#Command",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "DocStr",
          "package": "idris",
          "partial": "Doc Str",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:DocStr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "DumpCases",
          "package": "idris",
          "signature": "DumpCases String",
          "source": "src/Idris-AbsSyntaxTree.html#Opt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "DumpCases",
          "package": "idris",
          "partial": "Dump Cases",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:DumpCases"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "DumpDefun",
          "package": "idris",
          "signature": "DumpDefun String",
          "source": "src/Idris-AbsSyntaxTree.html#Opt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "DumpDefun",
          "package": "idris",
          "partial": "Dump Defun",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:DumpDefun"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Dynamic",
          "package": "idris",
          "signature": "Dynamic",
          "source": "src/Idris-AbsSyntaxTree.html#Static",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Dynamic",
          "package": "idris",
          "partial": "Dynamic",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Dynamic"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "DynamicLink",
          "package": "idris",
          "signature": "DynamicLink FilePath",
          "source": "src/Idris-AbsSyntaxTree.html#Command",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "DynamicLink",
          "package": "idris",
          "partial": "Dynamic Link",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:DynamicLink"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Edit",
          "package": "idris",
          "signature": "Edit",
          "source": "src/Idris-AbsSyntaxTree.html#Command",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Edit",
          "package": "idris",
          "partial": "Edit",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Edit"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Equiv",
          "package": "idris",
          "signature": "Equiv t",
          "source": "src/Idris-AbsSyntaxTree.html#PTactic%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Equiv",
          "package": "idris",
          "partial": "Equiv",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Equiv"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "ErrContext",
          "package": "idris",
          "signature": "ErrContext",
          "source": "src/Idris-AbsSyntaxTree.html#Opt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "ErrContext",
          "package": "idris",
          "partial": "Err Context",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:ErrContext"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e^ an error handler for use with the ErrorReflection extension\n\u003c/p\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "ErrorHandler",
          "package": "idris",
          "signature": "ErrorHandler",
          "source": "src/Idris-AbsSyntaxTree.html#FnOpt",
          "type": "function"
        },
        "index": {
          "description": "an error handler for use with the ErrorReflection extension",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "ErrorHandler",
          "package": "idris",
          "partial": "Error Handler",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:ErrorHandler"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "ErrorReflection",
          "package": "idris",
          "signature": "ErrorReflection",
          "source": "src/Idris-AbsSyntaxTree.html#LanguageExt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "ErrorReflection",
          "package": "idris",
          "partial": "Error Reflection",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:ErrorReflection"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e^ attempt to reverse normalise before showing in error \n\u003c/p\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "ErrorReverse",
          "package": "idris",
          "signature": "ErrorReverse",
          "source": "src/Idris-AbsSyntaxTree.html#FnOpt",
          "type": "function"
        },
        "index": {
          "description": "attempt to reverse normalise before showing in error",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "ErrorReverse",
          "package": "idris",
          "partial": "Error Reverse",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:ErrorReverse"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Eval",
          "package": "idris",
          "signature": "Eval PTerm",
          "source": "src/Idris-AbsSyntaxTree.html#Command",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Eval",
          "package": "idris",
          "partial": "Eval",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Eval"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Exact",
          "package": "idris",
          "signature": "Exact t",
          "source": "src/Idris-AbsSyntaxTree.html#PTactic%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Exact",
          "package": "idris",
          "partial": "Exact",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Exact"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "ExecVal",
          "package": "idris",
          "signature": "ExecVal PTerm",
          "source": "src/Idris-AbsSyntaxTree.html#Command",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "ExecVal",
          "package": "idris",
          "partial": "Exec Val",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:ExecVal"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Execute",
          "package": "idris",
          "signature": "Execute",
          "source": "src/Idris-AbsSyntaxTree.html#Command",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Execute",
          "package": "idris",
          "partial": "Execute",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Execute"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Exp",
          "package": "idris",
          "signature": "Exp",
          "source": "src/Idris-AbsSyntaxTree.html#Plicity",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Exp",
          "package": "idris",
          "partial": "Exp",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Exp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Expr",
          "package": "idris",
          "signature": "Expr Name",
          "source": "src/Idris-AbsSyntaxTree.html#SSymbol",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Expr",
          "package": "idris",
          "partial": "Expr",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Expr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Extension",
          "package": "idris",
          "signature": "Extension LanguageExt",
          "source": "src/Idris-AbsSyntaxTree.html#Opt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Extension",
          "package": "idris",
          "partial": "Extension",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Extension"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Filename",
          "package": "idris",
          "signature": "Filename String",
          "source": "src/Idris-AbsSyntaxTree.html#Opt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Filename",
          "package": "idris",
          "partial": "Filename",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Filename"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Fill",
          "package": "idris",
          "signature": "Fill t",
          "source": "src/Idris-AbsSyntaxTree.html#PTactic%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Fill",
          "package": "idris",
          "partial": "Fill",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Fill"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Fix",
          "package": "idris",
          "signature": "Fix Fixity String",
          "source": "src/Idris-AbsSyntaxTree.html#FixDecl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Fix",
          "package": "idris",
          "partial": "Fix",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Fix"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Focus",
          "package": "idris",
          "signature": "Focus Name",
          "source": "src/Idris-AbsSyntaxTree.html#PTactic%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Focus",
          "package": "idris",
          "partial": "Focus",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Focus"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "GoalType",
          "package": "idris",
          "signature": "GoalType String (PTactic' t)",
          "source": "src/Idris-AbsSyntaxTree.html#PTactic%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "GoalType",
          "package": "idris",
          "partial": "Goal Type",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:GoalType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "HNF",
          "package": "idris",
          "signature": "HNF PTerm",
          "source": "src/Idris-AbsSyntaxTree.html#Command",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "HNF",
          "package": "idris",
          "partial": "HNF",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:HNF"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Help",
          "package": "idris",
          "signature": "Help",
          "source": "src/Idris-AbsSyntaxTree.html#Command",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Help",
          "package": "idris",
          "partial": "Help",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Help"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "HideDisplay",
          "package": "idris",
          "signature": "HideDisplay",
          "source": "src/Idris-AbsSyntaxTree.html#ArgOpt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "HideDisplay",
          "package": "idris",
          "partial": "Hide Display",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:HideDisplay"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "IBCAccess",
          "package": "idris",
          "signature": "IBCAccess Name Accessibility",
          "source": "src/Idris-AbsSyntaxTree.html#IBCWrite",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "IBCAccess",
          "package": "idris",
          "partial": "IBCAccess",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:IBCAccess"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "IBCCG",
          "package": "idris",
          "signature": "IBCCG Name",
          "source": "src/Idris-AbsSyntaxTree.html#IBCWrite",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "IBCCG",
          "package": "idris",
          "partial": "IBCCG",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:IBCCG"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "IBCCGFlag",
          "package": "idris",
          "signature": "IBCCGFlag Codegen String",
          "source": "src/Idris-AbsSyntaxTree.html#IBCWrite",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "IBCCGFlag",
          "package": "idris",
          "partial": "IBCCGFlag",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:IBCCGFlag"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "IBCClass",
          "package": "idris",
          "signature": "IBCClass Name",
          "source": "src/Idris-AbsSyntaxTree.html#IBCWrite",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "IBCClass",
          "package": "idris",
          "partial": "IBCClass",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:IBCClass"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "IBCCoercion",
          "package": "idris",
          "signature": "IBCCoercion Name",
          "source": "src/Idris-AbsSyntaxTree.html#IBCWrite",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "IBCCoercion",
          "package": "idris",
          "partial": "IBCCoercion",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:IBCCoercion"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "IBCDSL",
          "package": "idris",
          "signature": "IBCDSL Name",
          "source": "src/Idris-AbsSyntaxTree.html#IBCWrite",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "IBCDSL",
          "package": "idris",
          "partial": "IBCDSL",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:IBCDSL"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "IBCData",
          "package": "idris",
          "signature": "IBCData Name",
          "source": "src/Idris-AbsSyntaxTree.html#IBCWrite",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "IBCData",
          "package": "idris",
          "partial": "IBCData",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:IBCData"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "IBCDef",
          "package": "idris",
          "signature": "IBCDef Name",
          "source": "src/Idris-AbsSyntaxTree.html#IBCWrite",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "IBCDef",
          "package": "idris",
          "partial": "IBCDef",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:IBCDef"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "IBCDoc",
          "package": "idris",
          "signature": "IBCDoc Name",
          "source": "src/Idris-AbsSyntaxTree.html#IBCWrite",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "IBCDoc",
          "package": "idris",
          "partial": "IBCDoc",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:IBCDoc"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "IBCDyLib",
          "package": "idris",
          "signature": "IBCDyLib String",
          "source": "src/Idris-AbsSyntaxTree.html#IBCWrite",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "IBCDyLib",
          "package": "idris",
          "partial": "IBCDy Lib",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:IBCDyLib"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "IBCErrRev",
          "package": "idris",
          "signature": "IBCErrRev (Term, Term)",
          "source": "src/Idris-AbsSyntaxTree.html#IBCWrite",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "IBCErrRev",
          "normalized": "IBCErrRev(Term,Term)",
          "package": "idris",
          "partial": "IBCErr Rev",
          "signature": "IBCErrRev(Term,Term)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:IBCErrRev"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "IBCErrorHandler",
          "package": "idris",
          "signature": "IBCErrorHandler Name",
          "source": "src/Idris-AbsSyntaxTree.html#IBCWrite",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "IBCErrorHandler",
          "package": "idris",
          "partial": "IBCError Handler",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:IBCErrorHandler"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "IBCFix",
          "package": "idris",
          "signature": "IBCFix FixDecl",
          "source": "src/Idris-AbsSyntaxTree.html#IBCWrite",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "IBCFix",
          "package": "idris",
          "partial": "IBCFix",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:IBCFix"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "IBCFlags",
          "package": "idris",
          "signature": "IBCFlags Name [FnOpt]",
          "source": "src/Idris-AbsSyntaxTree.html#IBCWrite",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "IBCFlags",
          "normalized": "IBCFlags Name[FnOpt]",
          "package": "idris",
          "partial": "IBCFlags",
          "signature": "IBCFlags Name[FnOpt]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:IBCFlags"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "IBCFunctionErrorHandler",
          "package": "idris",
          "signature": "IBCFunctionErrorHandler Name Name Name",
          "source": "src/Idris-AbsSyntaxTree.html#IBCWrite",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "IBCFunctionErrorHandler",
          "package": "idris",
          "partial": "IBCFunction Error Handler",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:IBCFunctionErrorHandler"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "IBCHeader",
          "package": "idris",
          "signature": "IBCHeader Codegen String",
          "source": "src/Idris-AbsSyntaxTree.html#IBCWrite",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "IBCHeader",
          "package": "idris",
          "partial": "IBCHeader",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:IBCHeader"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "IBCImp",
          "package": "idris",
          "signature": "IBCImp Name",
          "source": "src/Idris-AbsSyntaxTree.html#IBCWrite",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "IBCImp",
          "package": "idris",
          "partial": "IBCImp",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:IBCImp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "IBCImport",
          "package": "idris",
          "signature": "IBCImport FilePath",
          "source": "src/Idris-AbsSyntaxTree.html#IBCWrite",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "IBCImport",
          "package": "idris",
          "partial": "IBCImport",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:IBCImport"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "IBCInstance",
          "package": "idris",
          "signature": "IBCInstance Bool Name Name",
          "source": "src/Idris-AbsSyntaxTree.html#IBCWrite",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "IBCInstance",
          "package": "idris",
          "partial": "IBCInstance",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:IBCInstance"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "IBCKeyword",
          "package": "idris",
          "signature": "IBCKeyword String",
          "source": "src/Idris-AbsSyntaxTree.html#IBCWrite",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "IBCKeyword",
          "package": "idris",
          "partial": "IBCKeyword",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:IBCKeyword"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "IBCLib",
          "package": "idris",
          "signature": "IBCLib Codegen String",
          "source": "src/Idris-AbsSyntaxTree.html#IBCWrite",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "IBCLib",
          "package": "idris",
          "partial": "IBCLib",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:IBCLib"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "IBCLineApp",
          "package": "idris",
          "signature": "IBCLineApp FilePath Int PTerm",
          "source": "src/Idris-AbsSyntaxTree.html#IBCWrite",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "IBCLineApp",
          "package": "idris",
          "partial": "IBCLine App",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:IBCLineApp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "IBCMetaInformation",
          "package": "idris",
          "signature": "IBCMetaInformation Name MetaInformation",
          "source": "src/Idris-AbsSyntaxTree.html#IBCWrite",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "IBCMetaInformation",
          "package": "idris",
          "partial": "IBCMeta Information",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:IBCMetaInformation"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "IBCNameHint",
          "package": "idris",
          "signature": "IBCNameHint (Name, Name)",
          "source": "src/Idris-AbsSyntaxTree.html#IBCWrite",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "IBCNameHint",
          "normalized": "IBCNameHint(Name,Name)",
          "package": "idris",
          "partial": "IBCName Hint",
          "signature": "IBCNameHint(Name,Name)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:IBCNameHint"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "IBCObj",
          "package": "idris",
          "signature": "IBCObj Codegen FilePath",
          "source": "src/Idris-AbsSyntaxTree.html#IBCWrite",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "IBCObj",
          "package": "idris",
          "partial": "IBCObj",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:IBCObj"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "IBCOpt",
          "package": "idris",
          "signature": "IBCOpt Name",
          "source": "src/Idris-AbsSyntaxTree.html#IBCWrite",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "IBCOpt",
          "package": "idris",
          "partial": "IBCOpt",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:IBCOpt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "IBCStatic",
          "package": "idris",
          "signature": "IBCStatic Name",
          "source": "src/Idris-AbsSyntaxTree.html#IBCWrite",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "IBCStatic",
          "package": "idris",
          "partial": "IBCStatic",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:IBCStatic"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "IBCSubDir",
          "package": "idris",
          "signature": "IBCSubDir String",
          "source": "src/Idris-AbsSyntaxTree.html#Opt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "IBCSubDir",
          "package": "idris",
          "partial": "IBCSub Dir",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:IBCSubDir"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "IBCSyntax",
          "package": "idris",
          "signature": "IBCSyntax Syntax",
          "source": "src/Idris-AbsSyntaxTree.html#IBCWrite",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "IBCSyntax",
          "package": "idris",
          "partial": "IBCSyntax",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:IBCSyntax"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "IBCTotal",
          "package": "idris",
          "signature": "IBCTotal Name Totality",
          "source": "src/Idris-AbsSyntaxTree.html#IBCWrite",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "IBCTotal",
          "package": "idris",
          "partial": "IBCTotal",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:IBCTotal"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "IBCTrans",
          "package": "idris",
          "signature": "IBCTrans (Term, Term)",
          "source": "src/Idris-AbsSyntaxTree.html#IBCWrite",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "IBCTrans",
          "normalized": "IBCTrans(Term,Term)",
          "package": "idris",
          "partial": "IBCTrans",
          "signature": "IBCTrans(Term,Term)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:IBCTrans"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "IOption",
          "package": "idris",
          "signature": "IOption",
          "source": "src/Idris-AbsSyntaxTree.html#IOption",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "IOption",
          "package": "idris",
          "partial": "IOption",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:IOption"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "IState",
          "package": "idris",
          "signature": "IState",
          "source": "src/Idris-AbsSyntaxTree.html#IState",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "IState",
          "package": "idris",
          "partial": "IState",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:IState"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "IdeSlave",
          "package": "idris",
          "signature": "IdeSlave Integer",
          "source": "src/Idris-AbsSyntaxTree.html#OutputMode",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "IdeSlave",
          "package": "idris",
          "partial": "Ide Slave",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:IdeSlave"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Ideslave",
          "package": "idris",
          "signature": "Ideslave",
          "source": "src/Idris-AbsSyntaxTree.html#Opt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Ideslave",
          "package": "idris",
          "partial": "Ideslave",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Ideslave"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Imp",
          "package": "idris",
          "signature": "Imp",
          "source": "src/Idris-AbsSyntaxTree.html#Plicity",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Imp",
          "package": "idris",
          "partial": "Imp",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Imp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Implicit",
          "package": "idris",
          "signature": "Implicit",
          "source": "src/Idris-AbsSyntaxTree.html#FnOpt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Implicit",
          "package": "idris",
          "partial": "Implicit",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Implicit"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "ImportDir",
          "package": "idris",
          "signature": "ImportDir String",
          "source": "src/Idris-AbsSyntaxTree.html#Opt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "ImportDir",
          "package": "idris",
          "partial": "Import Dir",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:ImportDir"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Induction",
          "package": "idris",
          "signature": "Induction Name",
          "source": "src/Idris-AbsSyntaxTree.html#PTactic%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Induction",
          "package": "idris",
          "partial": "Induction",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Induction"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eHave pretty-printer assume that lines should not be broken\n\u003c/p\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "InfinitelyWide",
          "package": "idris",
          "signature": "InfinitelyWide",
          "source": "src/Idris-AbsSyntaxTree.html#ConsoleWidth",
          "type": "function"
        },
        "index": {
          "description": "Have pretty-printer assume that lines should not be broken",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "InfinitelyWide",
          "package": "idris",
          "partial": "Infinitely Wide",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:InfinitelyWide"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "InfixN",
          "package": "idris",
          "signature": "InfixN",
          "source": "src/Idris-AbsSyntaxTree.html#Fixity",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "InfixN",
          "package": "idris",
          "partial": "Infix",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:InfixN"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Infixl",
          "package": "idris",
          "signature": "Infixl",
          "source": "src/Idris-AbsSyntaxTree.html#Fixity",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Infixl",
          "package": "idris",
          "partial": "Infixl",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Infixl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Infixr",
          "package": "idris",
          "signature": "Infixr",
          "source": "src/Idris-AbsSyntaxTree.html#Fixity",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Infixr",
          "package": "idris",
          "partial": "Infixr",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Infixr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Info",
          "package": "idris",
          "signature": "Info Name",
          "source": "src/Idris-AbsSyntaxTree.html#Command",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Info",
          "package": "idris",
          "partial": "Info",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Info"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Inlinable",
          "package": "idris",
          "signature": "Inlinable",
          "source": "src/Idris-AbsSyntaxTree.html#FnOpt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Inlinable",
          "package": "idris",
          "partial": "Inlinable",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Inlinable"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "InterpretScript",
          "package": "idris",
          "signature": "InterpretScript String",
          "source": "src/Idris-AbsSyntaxTree.html#Opt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "InterpretScript",
          "package": "idris",
          "partial": "Interpret Script",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:InterpretScript"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Intro",
          "package": "idris",
          "signature": "Intro [Name]",
          "source": "src/Idris-AbsSyntaxTree.html#PTactic%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Intro",
          "normalized": "Intro[Name]",
          "package": "idris",
          "partial": "Intro",
          "signature": "Intro[Name]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Intro"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Intros",
          "package": "idris",
          "signature": "Intros",
          "source": "src/Idris-AbsSyntaxTree.html#PTactic%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Intros",
          "package": "idris",
          "partial": "Intros",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Intros"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "IsTerm",
          "package": "idris",
          "signature": "IsTerm",
          "source": "src/Idris-AbsSyntaxTree.html#PunInfo",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "IsTerm",
          "package": "idris",
          "partial": "Is Term",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:IsTerm"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "IsType",
          "package": "idris",
          "signature": "IsType",
          "source": "src/Idris-AbsSyntaxTree.html#PunInfo",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "IsType",
          "package": "idris",
          "partial": "Is Type",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:IsType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Keyword",
          "package": "idris",
          "signature": "Keyword Name",
          "source": "src/Idris-AbsSyntaxTree.html#SSymbol",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Keyword",
          "package": "idris",
          "partial": "Keyword",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Keyword"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Lazy",
          "package": "idris",
          "signature": "Lazy",
          "source": "src/Idris-AbsSyntaxTree.html#ArgOpt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Lazy",
          "package": "idris",
          "partial": "Lazy",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Lazy"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "LetTac",
          "package": "idris",
          "signature": "LetTac Name t",
          "source": "src/Idris-AbsSyntaxTree.html#PTactic%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "LetTac",
          "package": "idris",
          "partial": "Let Tac",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:LetTac"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "LetTacTy",
          "package": "idris",
          "signature": "LetTacTy Name t t",
          "source": "src/Idris-AbsSyntaxTree.html#PTactic%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "LetTacTy",
          "package": "idris",
          "partial": "Let Tac Ty",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:LetTacTy"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "ListDynamic",
          "package": "idris",
          "signature": "ListDynamic",
          "source": "src/Idris-AbsSyntaxTree.html#Command",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "ListDynamic",
          "package": "idris",
          "partial": "List Dynamic",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:ListDynamic"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "ListErrorHandlers",
          "package": "idris",
          "signature": "ListErrorHandlers",
          "source": "src/Idris-AbsSyntaxTree.html#Command",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "ListErrorHandlers",
          "package": "idris",
          "partial": "List Error Handlers",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:ListErrorHandlers"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Load",
          "package": "idris",
          "signature": "Load FilePath",
          "source": "src/Idris-AbsSyntaxTree.html#Command",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Load",
          "package": "idris",
          "partial": "Load",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Load"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "LogLvl",
          "package": "idris",
          "signature": "LogLvl Int",
          "source": "src/Idris-AbsSyntaxTree.html#Command",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "LogLvl",
          "package": "idris",
          "partial": "Log Lvl",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:LogLvl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "MakeWith",
          "package": "idris",
          "signature": "MakeWith Bool Int Name",
          "source": "src/Idris-AbsSyntaxTree.html#Command",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "MakeWith",
          "package": "idris",
          "partial": "Make With",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:MakeWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "MatchRefine",
          "package": "idris",
          "signature": "MatchRefine Name",
          "source": "src/Idris-AbsSyntaxTree.html#PTactic%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "MatchRefine",
          "package": "idris",
          "partial": "Match Refine",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:MatchRefine"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Metavars",
          "package": "idris",
          "signature": "Metavars",
          "source": "src/Idris-AbsSyntaxTree.html#Command",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Metavars",
          "package": "idris",
          "partial": "Metavars",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Metavars"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Missing",
          "package": "idris",
          "signature": "Missing Name",
          "source": "src/Idris-AbsSyntaxTree.html#Command",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Missing",
          "package": "idris",
          "partial": "Missing",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Missing"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "ModImport",
          "package": "idris",
          "signature": "ModImport String",
          "source": "src/Idris-AbsSyntaxTree.html#Command",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "ModImport",
          "package": "idris",
          "partial": "Mod Import",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:ModImport"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "NOP",
          "package": "idris",
          "signature": "NOP",
          "source": "src/Idris-AbsSyntaxTree.html#Command",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "NOP",
          "package": "idris",
          "partial": "NOP",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:NOP"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "NoBanner",
          "package": "idris",
          "signature": "NoBanner",
          "source": "src/Idris-AbsSyntaxTree.html#Opt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "NoBanner",
          "package": "idris",
          "partial": "No Banner",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:NoBanner"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "NoBasePkgs",
          "package": "idris",
          "signature": "NoBasePkgs",
          "source": "src/Idris-AbsSyntaxTree.html#Opt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "NoBasePkgs",
          "package": "idris",
          "partial": "No Base Pkgs",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:NoBasePkgs"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "NoBuiltins",
          "package": "idris",
          "signature": "NoBuiltins",
          "source": "src/Idris-AbsSyntaxTree.html#Opt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "NoBuiltins",
          "package": "idris",
          "partial": "No Builtins",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:NoBuiltins"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "NoCoverage",
          "package": "idris",
          "signature": "NoCoverage",
          "source": "src/Idris-AbsSyntaxTree.html#Opt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "NoCoverage",
          "package": "idris",
          "partial": "No Coverage",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:NoCoverage"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "NoPrelude",
          "package": "idris",
          "signature": "NoPrelude",
          "source": "src/Idris-AbsSyntaxTree.html#Opt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "NoPrelude",
          "package": "idris",
          "partial": "No Prelude",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:NoPrelude"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "NoREPL",
          "package": "idris",
          "signature": "NoREPL",
          "source": "src/Idris-AbsSyntaxTree.html#Opt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "NoREPL",
          "package": "idris",
          "partial": "No REPL",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:NoREPL"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "OLogging",
          "package": "idris",
          "signature": "OLogging Int",
          "source": "src/Idris-AbsSyntaxTree.html#Opt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "OLogging",
          "package": "idris",
          "partial": "OLogging",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:OLogging"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "OptLevel",
          "package": "idris",
          "signature": "OptLevel Word",
          "source": "src/Idris-AbsSyntaxTree.html#Opt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "OptLevel",
          "package": "idris",
          "partial": "Opt Level",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:OptLevel"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Optimise",
          "package": "idris",
          "signature": "Optimise",
          "source": "src/Idris-AbsSyntaxTree.html#OptInfo",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Optimise",
          "package": "idris",
          "partial": "Optimise",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Optimise"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Output",
          "package": "idris",
          "signature": "Output String",
          "source": "src/Idris-AbsSyntaxTree.html#Opt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Output",
          "package": "idris",
          "partial": "Output",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Output"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "OutputTy",
          "package": "idris",
          "signature": "OutputTy OutputType",
          "source": "src/Idris-AbsSyntaxTree.html#Opt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "OutputTy",
          "package": "idris",
          "partial": "Output Ty",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:OutputTy"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "PAlternative",
          "package": "idris",
          "signature": "PAlternative Bool [PTerm]",
          "source": "src/Idris-AbsSyntaxTree.html#PTerm",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PAlternative",
          "normalized": "PAlternative Bool[PTerm]",
          "package": "idris",
          "partial": "PAlternative",
          "signature": "PAlternative Bool[PTerm]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:PAlternative"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "PApp",
          "package": "idris",
          "signature": "PApp FC PTerm [PArg]",
          "source": "src/Idris-AbsSyntaxTree.html#PTerm",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PApp",
          "normalized": "PApp FC PTerm[PArg]",
          "package": "idris",
          "partial": "PApp",
          "signature": "PApp FC PTerm[PArg]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:PApp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eimplicitly bound application\n\u003c/p\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "PAppBind",
          "package": "idris",
          "signature": "PAppBind FC PTerm [PArg]",
          "source": "src/Idris-AbsSyntaxTree.html#PTerm",
          "type": "function"
        },
        "index": {
          "description": "implicitly bound application",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PAppBind",
          "normalized": "PAppBind FC PTerm[PArg]",
          "package": "idris",
          "partial": "PApp Bind",
          "signature": "PAppBind FC PTerm[PArg]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:PAppBind"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eTop level constant\n\u003c/p\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "PCAF",
          "package": "idris",
          "signature": "PCAF FC Name t",
          "source": "src/Idris-AbsSyntaxTree.html#PDecl%27",
          "type": "function"
        },
        "index": {
          "description": "Top level constant",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PCAF",
          "package": "idris",
          "partial": "PCAF",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:PCAF"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "PCase",
          "package": "idris",
          "signature": "PCase FC PTerm [(PTerm, PTerm)]",
          "source": "src/Idris-AbsSyntaxTree.html#PTerm",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PCase",
          "normalized": "PCase FC PTerm[(PTerm,PTerm)]",
          "package": "idris",
          "partial": "PCase",
          "signature": "PCase FC PTerm[(PTerm,PTerm)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:PCase"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eType class: arguments are documentation, syntax info, source location, constraints,\n class name, parameters, method declarations\n\u003c/p\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "PClass",
          "package": "idris",
          "signature": "PClass String SyntaxInfo FC [t] Name [(Name, t)] [PDecl' t]",
          "source": "src/Idris-AbsSyntaxTree.html#PDecl%27",
          "type": "function"
        },
        "index": {
          "description": "Type class arguments are documentation syntax info source location constraints class name parameters method declarations",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PClass",
          "normalized": "PClass String SyntaxInfo FC[a]Name[(Name,a)][PDecl' a]",
          "package": "idris",
          "partial": "PClass",
          "signature": "PClass String SyntaxInfo FC[t]Name[(Name,t)][PDecl' t]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:PClass"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eA normal top-level definition.\n\u003c/p\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "PClause",
          "package": "idris",
          "signature": "PClause FC Name t [t] t [PDecl' t]",
          "source": "src/Idris-AbsSyntaxTree.html#PClause%27",
          "type": "function"
        },
        "index": {
          "description": "normal top-level definition",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PClause",
          "normalized": "PClause FC Name a[a]a[PDecl' a]",
          "package": "idris",
          "partial": "PClause",
          "signature": "PClause FC Name t[t]t[PDecl' t]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:PClause"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "PClauseR",
          "package": "idris",
          "signature": "PClauseR FC [t] t [PDecl' t]",
          "source": "src/Idris-AbsSyntaxTree.html#PClause%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PClauseR",
          "normalized": "PClauseR FC[a]a[PDecl' a]",
          "package": "idris",
          "partial": "PClause",
          "signature": "PClauseR FC[t]t[PDecl' t]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:PClauseR"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003ePattern clause\n\u003c/p\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "PClauses",
          "package": "idris",
          "signature": "PClauses FC FnOpts Name [PClause' t]",
          "source": "src/Idris-AbsSyntaxTree.html#PDecl%27",
          "type": "function"
        },
        "index": {
          "description": "Pattern clause",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PClauses",
          "normalized": "PClauses FC FnOpts Name[PClause' a]",
          "package": "idris",
          "partial": "PClauses",
          "signature": "PClauses FC FnOpts Name[PClause' t]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:PClauses"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eTo mark a coerced argument, so as not to coerce twice\n\u003c/p\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "PCoerced",
          "package": "idris",
          "signature": "PCoerced PTerm",
          "source": "src/Idris-AbsSyntaxTree.html#PTerm",
          "type": "function"
        },
        "index": {
          "description": "To mark coerced argument so as not to coerce twice",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PCoerced",
          "package": "idris",
          "partial": "PCoerced",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:PCoerced"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "PConstant",
          "package": "idris",
          "signature": "PConstant Const",
          "source": "src/Idris-AbsSyntaxTree.html#PTerm",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PConstant",
          "package": "idris",
          "partial": "PConstant",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:PConstant"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "PConstraint",
          "package": "idris",
          "signature": "PConstraint",
          "source": "src/Idris-AbsSyntaxTree.html#PArg%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PConstraint",
          "package": "idris",
          "partial": "PConstraint",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:PConstraint"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "PDPair",
          "package": "idris",
          "signature": "PDPair FC PTerm PTerm PTerm",
          "source": "src/Idris-AbsSyntaxTree.html#PTerm",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PDPair",
          "package": "idris",
          "partial": "PDPair",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:PDPair"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eDSL declaration\n\u003c/p\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "PDSL",
          "package": "idris",
          "signature": "PDSL Name (DSL' t)",
          "source": "src/Idris-AbsSyntaxTree.html#PDecl%27",
          "type": "function"
        },
        "index": {
          "description": "DSL declaration",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PDSL",
          "package": "idris",
          "partial": "PDSL",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:PDSL"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eData declaration.\n\u003c/p\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "PData",
          "package": "idris",
          "signature": "PData String SyntaxInfo FC DataOpts (PData' t)",
          "source": "src/Idris-AbsSyntaxTree.html#PDecl%27",
          "type": "function"
        },
        "index": {
          "description": "Data declaration",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PData",
          "package": "idris",
          "partial": "PData",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:PData"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eData declaration\n\u003c/p\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "PDatadecl",
          "package": "idris",
          "signature": "PDatadecl",
          "source": "src/Idris-AbsSyntaxTree.html#PData%27",
          "type": "function"
        },
        "index": {
          "description": "Data declaration",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PDatadecl",
          "package": "idris",
          "partial": "PDatadecl",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:PDatadecl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eCompiler directive. The parser inserts the corresponding action in the Idris monad.\n\u003c/p\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "PDirective",
          "package": "idris",
          "signature": "PDirective (Idris ())",
          "source": "src/Idris-AbsSyntaxTree.html#PDecl%27",
          "type": "function"
        },
        "index": {
          "description": "Compiler directive The parser inserts the corresponding action in the Idris monad",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PDirective",
          "normalized": "PDirective(Idris())",
          "package": "idris",
          "partial": "PDirective",
          "signature": "PDirective(Idris())",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:PDirective"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003ePreferences for explicit namespaces\n\u003c/p\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "PDisamb",
          "package": "idris",
          "signature": "PDisamb [[Text]] PTerm",
          "source": "src/Idris-AbsSyntaxTree.html#PTerm",
          "type": "function"
        },
        "index": {
          "description": "Preferences for explicit namespaces",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PDisamb",
          "normalized": "PDisamb[[Text]]PTerm",
          "package": "idris",
          "partial": "PDisamb",
          "signature": "PDisamb[[Text]]PTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:PDisamb"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "PDoBlock",
          "package": "idris",
          "signature": "PDoBlock [PDo]",
          "source": "src/Idris-AbsSyntaxTree.html#PTerm",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PDoBlock",
          "normalized": "PDoBlock[PDo]",
          "package": "idris",
          "partial": "PDo Block",
          "signature": "PDoBlock[PDo]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:PDoBlock"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eError to report on elaboration\n\u003c/p\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "PElabError",
          "package": "idris",
          "signature": "PElabError Err",
          "source": "src/Idris-AbsSyntaxTree.html#PTerm",
          "type": "function"
        },
        "index": {
          "description": "Error to report on elaboration",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PElabError",
          "package": "idris",
          "partial": "PElab Error",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:PElabError"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "PEq",
          "package": "idris",
          "signature": "PEq FC PTerm PTerm",
          "source": "src/Idris-AbsSyntaxTree.html#PTerm",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PEq",
          "package": "idris",
          "partial": "PEq",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:PEq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "PExp",
          "package": "idris",
          "signature": "PExp",
          "source": "src/Idris-AbsSyntaxTree.html#PArg%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PExp",
          "package": "idris",
          "partial": "PExp",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:PExp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "PFalse",
          "package": "idris",
          "signature": "PFalse FC",
          "source": "src/Idris-AbsSyntaxTree.html#PTerm",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PFalse",
          "package": "idris",
          "partial": "PFalse",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:PFalse"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eFixity declaration\n\u003c/p\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "PFix",
          "package": "idris",
          "signature": "PFix FC Fixity [String]",
          "source": "src/Idris-AbsSyntaxTree.html#PDecl%27",
          "type": "function"
        },
        "index": {
          "description": "Fixity declaration",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PFix",
          "normalized": "PFix FC Fixity[String]",
          "package": "idris",
          "partial": "PFix",
          "signature": "PFix FC Fixity[String]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:PFix"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "PGoal",
          "package": "idris",
          "signature": "PGoal FC PTerm Name PTerm",
          "source": "src/Idris-AbsSyntaxTree.html#PTerm",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PGoal",
          "package": "idris",
          "partial": "PGoal",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:PGoal"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eIrrelevant or hidden pattern\n\u003c/p\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "PHidden",
          "package": "idris",
          "signature": "PHidden PTerm",
          "source": "src/Idris-AbsSyntaxTree.html#PTerm",
          "type": "function"
        },
        "index": {
          "description": "Irrelevant or hidden pattern",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PHidden",
          "package": "idris",
          "partial": "PHidden",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:PHidden"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "PIdiom",
          "package": "idris",
          "signature": "PIdiom FC PTerm",
          "source": "src/Idris-AbsSyntaxTree.html#PTerm",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PIdiom",
          "package": "idris",
          "partial": "PIdiom",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:PIdiom"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "PImp",
          "package": "idris",
          "signature": "PImp",
          "source": "src/Idris-AbsSyntaxTree.html#PArg%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PImp",
          "package": "idris",
          "partial": "PImp",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:PImp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eSpecial case for declaring when an LHS can't typecheck\n\u003c/p\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "PImpossible",
          "package": "idris",
          "signature": "PImpossible",
          "source": "src/Idris-AbsSyntaxTree.html#PTerm",
          "type": "function"
        },
        "index": {
          "description": "Special case for declaring when an LHS can typecheck",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PImpossible",
          "package": "idris",
          "partial": "PImpossible",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:PImpossible"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eA name to be defined later\n\u003c/p\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "PInferRef",
          "package": "idris",
          "signature": "PInferRef FC Name",
          "source": "src/Idris-AbsSyntaxTree.html#PTerm",
          "type": "function"
        },
        "index": {
          "description": "name to be defined later",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PInferRef",
          "package": "idris",
          "partial": "PInfer Ref",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:PInferRef"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eInstance declaration: arguments are syntax info, source location, constraints,\n class name, parameters, full instance type, optional explicit name, and definitions\n\u003c/p\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "PInstance",
          "package": "idris",
          "signature": "PInstance SyntaxInfo FC [t] Name [t] t (Maybe Name) [PDecl' t]",
          "source": "src/Idris-AbsSyntaxTree.html#PDecl%27",
          "type": "function"
        },
        "index": {
          "description": "Instance declaration arguments are syntax info source location constraints class name parameters full instance type optional explicit name and definitions",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PInstance",
          "normalized": "PInstance SyntaxInfo FC[a]Name[a]a(Maybe Name)[PDecl' a]",
          "package": "idris",
          "partial": "PInstance",
          "signature": "PInstance SyntaxInfo FC[t]Name[t]t(Maybe Name)[PDecl' t]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:PInstance"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "PLam",
          "package": "idris",
          "signature": "PLam Name PTerm PTerm",
          "source": "src/Idris-AbsSyntaxTree.html#PTerm",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PLam",
          "package": "idris",
          "partial": "PLam",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:PLam"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e\u003ca\u003ePlaceholder\u003c/a\u003e for data whose constructors are defined later\n\u003c/p\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "PLaterdecl",
          "package": "idris",
          "signature": "PLaterdecl",
          "source": "src/Idris-AbsSyntaxTree.html#PData%27",
          "type": "function"
        },
        "index": {
          "description": "Placeholder for data whose constructors are defined later",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PLaterdecl",
          "package": "idris",
          "partial": "PLaterdecl",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:PLaterdecl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "PLet",
          "package": "idris",
          "signature": "PLet Name PTerm PTerm PTerm",
          "source": "src/Idris-AbsSyntaxTree.html#PTerm",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PLet",
          "package": "idris",
          "partial": "PLet",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:PLet"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eMake an application by type matching\n\u003c/p\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "PMatchApp",
          "package": "idris",
          "signature": "PMatchApp FC Name",
          "source": "src/Idris-AbsSyntaxTree.html#PTerm",
          "type": "function"
        },
        "index": {
          "description": "Make an application by type matching",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PMatchApp",
          "package": "idris",
          "partial": "PMatch App",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:PMatchApp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "PMetavar",
          "package": "idris",
          "signature": "PMetavar Name",
          "source": "src/Idris-AbsSyntaxTree.html#PTerm",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PMetavar",
          "package": "idris",
          "partial": "PMetavar",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:PMetavar"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eMutual block\n\u003c/p\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "PMutual",
          "package": "idris",
          "signature": "PMutual FC [PDecl' t]",
          "source": "src/Idris-AbsSyntaxTree.html#PDecl%27",
          "type": "function"
        },
        "index": {
          "description": "Mutual block",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PMutual",
          "normalized": "PMutual FC[PDecl' a]",
          "package": "idris",
          "partial": "PMutual",
          "signature": "PMutual FC[PDecl' t]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:PMutual"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eNew namespace\n\u003c/p\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "PNamespace",
          "package": "idris",
          "signature": "PNamespace String [PDecl' t]",
          "source": "src/Idris-AbsSyntaxTree.html#PDecl%27",
          "type": "function"
        },
        "index": {
          "description": "New namespace",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PNamespace",
          "normalized": "PNamespace String[PDecl' a]",
          "package": "idris",
          "partial": "PNamespace",
          "signature": "PNamespace String[PDecl' t]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:PNamespace"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003enever run implicit converions on the term\n\u003c/p\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "PNoImplicits",
          "package": "idris",
          "signature": "PNoImplicits PTerm",
          "source": "src/Idris-AbsSyntaxTree.html#PTerm",
          "type": "function"
        },
        "index": {
          "description": "never run implicit converions on the term",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PNoImplicits",
          "package": "idris",
          "partial": "PNo Implicits",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:PNoImplicits"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "PPair",
          "package": "idris",
          "signature": "PPair FC PunInfo PTerm PTerm",
          "source": "src/Idris-AbsSyntaxTree.html#PTerm",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PPair",
          "package": "idris",
          "partial": "PPair",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:PPair"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParams block\n\u003c/p\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "PParams",
          "package": "idris",
          "signature": "PParams FC [(Name, t)] [PDecl' t]",
          "source": "src/Idris-AbsSyntaxTree.html#PDecl%27",
          "type": "function"
        },
        "index": {
          "description": "Params block",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PParams",
          "normalized": "PParams FC[(Name,a)][PDecl' a]",
          "package": "idris",
          "partial": "PParams",
          "signature": "PParams FC[(Name,t)][PDecl' t]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:PParams"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "PPatvar",
          "package": "idris",
          "signature": "PPatvar FC Name",
          "source": "src/Idris-AbsSyntaxTree.html#PTerm",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PPatvar",
          "package": "idris",
          "partial": "PPatvar",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:PPatvar"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "PPi",
          "package": "idris",
          "signature": "PPi Plicity Name PTerm PTerm",
          "source": "src/Idris-AbsSyntaxTree.html#PTerm",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PPi",
          "package": "idris",
          "partial": "PPi",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:PPi"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003ePostulate\n\u003c/p\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "PPostulate",
          "package": "idris",
          "signature": "PPostulate String SyntaxInfo FC FnOpts Name t",
          "source": "src/Idris-AbsSyntaxTree.html#PDecl%27",
          "type": "function"
        },
        "index": {
          "description": "Postulate",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PPostulate",
          "package": "idris",
          "partial": "PPostulate",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:PPostulate"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eProof script\n\u003c/p\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "PProof",
          "package": "idris",
          "signature": "PProof [PTactic]",
          "source": "src/Idris-AbsSyntaxTree.html#PTerm",
          "type": "function"
        },
        "index": {
          "description": "Proof script",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PProof",
          "normalized": "PProof[PTactic]",
          "package": "idris",
          "partial": "PProof",
          "signature": "PProof[PTactic]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:PProof"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eType provider. The first t is the type, the second is the term\n\u003c/p\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "PProvider",
          "package": "idris",
          "signature": "PProvider SyntaxInfo FC Name t t",
          "source": "src/Idris-AbsSyntaxTree.html#PDecl%27",
          "type": "function"
        },
        "index": {
          "description": "Type provider The first is the type the second is the term",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PProvider",
          "package": "idris",
          "partial": "PProvider",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:PProvider"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "PQuote",
          "package": "idris",
          "signature": "PQuote Raw",
          "source": "src/Idris-AbsSyntaxTree.html#PTerm",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PQuote",
          "package": "idris",
          "partial": "PQuote",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:PQuote"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eRecord declaration\n\u003c/p\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "PRecord",
          "package": "idris",
          "signature": "PRecord String SyntaxInfo FC Name t String Name t",
          "source": "src/Idris-AbsSyntaxTree.html#PDecl%27",
          "type": "function"
        },
        "index": {
          "description": "Record declaration",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PRecord",
          "package": "idris",
          "partial": "PRecord",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:PRecord"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "PRef",
          "package": "idris",
          "signature": "PRef FC Name",
          "source": "src/Idris-AbsSyntaxTree.html#PTerm",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PRef",
          "package": "idris",
          "partial": "PRef",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:PRef"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "PRefl",
          "package": "idris",
          "signature": "PRefl FC PTerm",
          "source": "src/Idris-AbsSyntaxTree.html#PTerm",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PRefl",
          "package": "idris",
          "partial": "PRefl",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:PRefl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "PResolveTC",
          "package": "idris",
          "signature": "PResolveTC FC",
          "source": "src/Idris-AbsSyntaxTree.html#PTerm",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PResolveTC",
          "package": "idris",
          "partial": "PResolve TC",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:PResolveTC"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "PReturn",
          "package": "idris",
          "signature": "PReturn FC",
          "source": "src/Idris-AbsSyntaxTree.html#PTerm",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PReturn",
          "package": "idris",
          "partial": "PReturn",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:PReturn"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "PRewrite",
          "package": "idris",
          "signature": "PRewrite FC PTerm PTerm (Maybe PTerm)",
          "source": "src/Idris-AbsSyntaxTree.html#PTerm",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PRewrite",
          "package": "idris",
          "partial": "PRewrite",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:PRewrite"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eSyntax definition\n\u003c/p\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "PSyntax",
          "package": "idris",
          "signature": "PSyntax FC Syntax",
          "source": "src/Idris-AbsSyntaxTree.html#PDecl%27",
          "type": "function"
        },
        "index": {
          "description": "Syntax definition",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PSyntax",
          "package": "idris",
          "partial": "PSyntax",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:PSyntax"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "PTacImplicit",
          "package": "idris",
          "signature": "PTacImplicit",
          "source": "src/Idris-AbsSyntaxTree.html#PArg%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PTacImplicit",
          "package": "idris",
          "partial": "PTac Implicit",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:PTacImplicit"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eAs PProof, but no auto solving\n\u003c/p\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "PTactics",
          "package": "idris",
          "signature": "PTactics [PTactic]",
          "source": "src/Idris-AbsSyntaxTree.html#PTerm",
          "type": "function"
        },
        "index": {
          "description": "As PProof but no auto solving",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PTactics",
          "normalized": "PTactics[PTactic]",
          "package": "idris",
          "partial": "PTactics",
          "signature": "PTactics[PTactic]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:PTactics"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eSource-to-source transformation rule. If\n bool is True, lhs and rhs must be convertible\n\u003c/p\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "PTransform",
          "package": "idris",
          "signature": "PTransform FC Bool t t",
          "source": "src/Idris-AbsSyntaxTree.html#PDecl%27",
          "type": "function"
        },
        "index": {
          "description": "Source-to-source transformation rule If bool is True lhs and rhs must be convertible",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PTransform",
          "package": "idris",
          "partial": "PTransform",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:PTransform"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "PTrue",
          "package": "idris",
          "signature": "PTrue FC PunInfo",
          "source": "src/Idris-AbsSyntaxTree.html#PTerm",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PTrue",
          "package": "idris",
          "partial": "PTrue",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:PTrue"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eType declaration\n\u003c/p\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "PTy",
          "package": "idris",
          "signature": "PTy String SyntaxInfo FC FnOpts Name t",
          "source": "src/Idris-AbsSyntaxTree.html#PDecl%27",
          "type": "function"
        },
        "index": {
          "description": "Type declaration",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PTy",
          "package": "idris",
          "partial": "PTy",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:PTy"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "PType",
          "package": "idris",
          "signature": "PType",
          "source": "src/Idris-AbsSyntaxTree.html#PTerm",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PType",
          "package": "idris",
          "partial": "PType",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:PType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eTerm with explicit type\n\u003c/p\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "PTyped",
          "package": "idris",
          "signature": "PTyped PTerm PTerm",
          "source": "src/Idris-AbsSyntaxTree.html#PTerm",
          "type": "function"
        },
        "index": {
          "description": "Term with explicit type",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PTyped",
          "package": "idris",
          "partial": "PTyped",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:PTyped"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003edump a trace of unifications when building term\n\u003c/p\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "PUnifyLog",
          "package": "idris",
          "signature": "PUnifyLog PTerm",
          "source": "src/Idris-AbsSyntaxTree.html#PTerm",
          "type": "function"
        },
        "index": {
          "description": "dump trace of unifications when building term",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PUnifyLog",
          "package": "idris",
          "partial": "PUnify Log",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:PUnifyLog"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "PWith",
          "package": "idris",
          "signature": "PWith FC Name t [t] t [PDecl' t]",
          "source": "src/Idris-AbsSyntaxTree.html#PClause%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PWith",
          "normalized": "PWith FC Name a[a]a[PDecl' a]",
          "package": "idris",
          "partial": "PWith",
          "signature": "PWith FC Name t[t]t[PDecl' t]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:PWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "PWithR",
          "package": "idris",
          "signature": "PWithR FC [t] t [PDecl' t]",
          "source": "src/Idris-AbsSyntaxTree.html#PClause%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PWithR",
          "normalized": "PWithR FC[a]a[PDecl' a]",
          "package": "idris",
          "partial": "PWith",
          "signature": "PWithR FC[t]t[PDecl' t]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:PWithR"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "PartialFn",
          "package": "idris",
          "signature": "PartialFn",
          "source": "src/Idris-AbsSyntaxTree.html#FnOpt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PartialFn",
          "package": "idris",
          "partial": "Partial Fn",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:PartialFn"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Pattelab",
          "package": "idris",
          "signature": "Pattelab PTerm",
          "source": "src/Idris-AbsSyntaxTree.html#Command",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Pattelab",
          "package": "idris",
          "partial": "Pattelab",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Pattelab"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "PatternSyntax",
          "package": "idris",
          "signature": "PatternSyntax",
          "source": "src/Idris-AbsSyntaxTree.html#SynContext",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PatternSyntax",
          "package": "idris",
          "partial": "Pattern Syntax",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:PatternSyntax"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Pkg",
          "package": "idris",
          "signature": "Pkg String",
          "source": "src/Idris-AbsSyntaxTree.html#Opt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Pkg",
          "package": "idris",
          "partial": "Pkg",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Pkg"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "PkgBuild",
          "package": "idris",
          "signature": "PkgBuild String",
          "source": "src/Idris-AbsSyntaxTree.html#Opt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PkgBuild",
          "package": "idris",
          "partial": "Pkg Build",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:PkgBuild"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "PkgCheck",
          "package": "idris",
          "signature": "PkgCheck String",
          "source": "src/Idris-AbsSyntaxTree.html#Opt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PkgCheck",
          "package": "idris",
          "partial": "Pkg Check",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:PkgCheck"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "PkgClean",
          "package": "idris",
          "signature": "PkgClean String",
          "source": "src/Idris-AbsSyntaxTree.html#Opt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PkgClean",
          "package": "idris",
          "partial": "Pkg Clean",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:PkgClean"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "PkgInstall",
          "package": "idris",
          "signature": "PkgInstall String",
          "source": "src/Idris-AbsSyntaxTree.html#Opt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PkgInstall",
          "package": "idris",
          "partial": "Pkg Install",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:PkgInstall"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "PkgREPL",
          "package": "idris",
          "signature": "PkgREPL String",
          "source": "src/Idris-AbsSyntaxTree.html#Opt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PkgREPL",
          "package": "idris",
          "partial": "Pkg REPL",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:PkgREPL"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Placeholder",
          "package": "idris",
          "signature": "Placeholder",
          "source": "src/Idris-AbsSyntaxTree.html#PTerm",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Placeholder",
          "package": "idris",
          "partial": "Placeholder",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Placeholder"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "PrefixN",
          "package": "idris",
          "signature": "PrefixN",
          "source": "src/Idris-AbsSyntaxTree.html#Fixity",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "PrefixN",
          "package": "idris",
          "partial": "Prefix",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:PrefixN"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "ProofSearch",
          "package": "idris",
          "signature": "ProofSearch (Maybe Name) Name [Name]",
          "source": "src/Idris-AbsSyntaxTree.html#PTactic%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "ProofSearch",
          "normalized": "ProofSearch(Maybe Name)Name[Name]",
          "package": "idris",
          "partial": "Proof Search",
          "signature": "ProofSearch(Maybe Name)Name[Name]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:ProofSearch"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "ProofState",
          "package": "idris",
          "signature": "ProofState",
          "source": "src/Idris-AbsSyntaxTree.html#PTactic%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "ProofState",
          "package": "idris",
          "partial": "Proof State",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:ProofState"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "ProofTerm",
          "package": "idris",
          "signature": "ProofTerm",
          "source": "src/Idris-AbsSyntaxTree.html#PTactic%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "ProofTerm",
          "package": "idris",
          "partial": "Proof Term",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:ProofTerm"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Proofs",
          "package": "idris",
          "signature": "Proofs",
          "source": "src/Idris-AbsSyntaxTree.html#Command",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Proofs",
          "package": "idris",
          "partial": "Proofs",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Proofs"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Prove",
          "package": "idris",
          "signature": "Prove Name",
          "source": "src/Idris-AbsSyntaxTree.html#Command",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Prove",
          "package": "idris",
          "partial": "Prove",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Prove"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Qed",
          "package": "idris",
          "signature": "Qed",
          "source": "src/Idris-AbsSyntaxTree.html#PTactic%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Qed",
          "package": "idris",
          "partial": "Qed",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Qed"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Quiet",
          "package": "idris",
          "signature": "Quiet",
          "source": "src/Idris-AbsSyntaxTree.html#Opt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Quiet",
          "package": "idris",
          "partial": "Quiet",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Quiet"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Quit",
          "package": "idris",
          "signature": "Quit",
          "source": "src/Idris-AbsSyntaxTree.html#Command",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Quit",
          "package": "idris",
          "partial": "Quit",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Quit"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "RawOutput",
          "package": "idris",
          "signature": "RawOutput",
          "source": "src/Idris-AbsSyntaxTree.html#OutputMode",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "RawOutput",
          "package": "idris",
          "partial": "Raw Output",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:RawOutput"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Refine",
          "package": "idris",
          "signature": "Refine Name [Bool]",
          "source": "src/Idris-AbsSyntaxTree.html#PTactic%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Refine",
          "normalized": "Refine Name[Bool]",
          "package": "idris",
          "partial": "Refine",
          "signature": "Refine Name[Bool]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Refine"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Reflect",
          "package": "idris",
          "signature": "Reflect t",
          "source": "src/Idris-AbsSyntaxTree.html#PTactic%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Reflect",
          "package": "idris",
          "partial": "Reflect",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Reflect"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Reflection",
          "package": "idris",
          "signature": "Reflection",
          "source": "src/Idris-AbsSyntaxTree.html#FnOpt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Reflection",
          "package": "idris",
          "partial": "Reflection",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Reflection"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Reload",
          "package": "idris",
          "signature": "Reload",
          "source": "src/Idris-AbsSyntaxTree.html#Command",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Reload",
          "package": "idris",
          "partial": "Reload",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Reload"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Rewrite",
          "package": "idris",
          "signature": "Rewrite t",
          "source": "src/Idris-AbsSyntaxTree.html#PTactic%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Rewrite",
          "package": "idris",
          "partial": "Rewrite",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Rewrite"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "RmProof",
          "package": "idris",
          "signature": "RmProof Name",
          "source": "src/Idris-AbsSyntaxTree.html#Command",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "RmProof",
          "package": "idris",
          "partial": "Rm Proof",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:RmProof"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Rule",
          "package": "idris",
          "signature": "Rule [SSymbol] PTerm SynContext",
          "source": "src/Idris-AbsSyntaxTree.html#Syntax",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Rule",
          "normalized": "Rule[SSymbol]PTerm SynContext",
          "package": "idris",
          "partial": "Rule",
          "signature": "Rule[SSymbol]PTerm SynContext",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Rule"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Same",
          "package": "idris",
          "signature": "Same",
          "source": "src/Idris-AbsSyntaxTree.html#SizeChange",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Same",
          "package": "idris",
          "partial": "Same",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Same"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Search",
          "package": "idris",
          "signature": "Search PTerm",
          "source": "src/Idris-AbsSyntaxTree.html#Command",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Search",
          "package": "idris",
          "partial": "Search",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Search"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "SetColour",
          "package": "idris",
          "signature": "SetColour ColourType IdrisColour",
          "source": "src/Idris-AbsSyntaxTree.html#Command",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "SetColour",
          "package": "idris",
          "partial": "Set Colour",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:SetColour"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "SetConsoleWidth",
          "package": "idris",
          "signature": "SetConsoleWidth ConsoleWidth",
          "source": "src/Idris-AbsSyntaxTree.html#Command",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "SetConsoleWidth",
          "package": "idris",
          "partial": "Set Console Width",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:SetConsoleWidth"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "SetOpt",
          "package": "idris",
          "signature": "SetOpt Opt",
          "source": "src/Idris-AbsSyntaxTree.html#Command",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "SetOpt",
          "package": "idris",
          "partial": "Set Opt",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:SetOpt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "ShowImpl",
          "package": "idris",
          "signature": "ShowImpl",
          "source": "src/Idris-AbsSyntaxTree.html#Opt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "ShowImpl",
          "package": "idris",
          "partial": "Show Impl",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:ShowImpl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "ShowIncs",
          "package": "idris",
          "signature": "ShowIncs",
          "source": "src/Idris-AbsSyntaxTree.html#Opt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "ShowIncs",
          "package": "idris",
          "partial": "Show Incs",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:ShowIncs"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "ShowLibdir",
          "package": "idris",
          "signature": "ShowLibdir",
          "source": "src/Idris-AbsSyntaxTree.html#Opt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "ShowLibdir",
          "package": "idris",
          "partial": "Show Libdir",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:ShowLibdir"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "ShowLibs",
          "package": "idris",
          "signature": "ShowLibs",
          "source": "src/Idris-AbsSyntaxTree.html#Opt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "ShowLibs",
          "package": "idris",
          "partial": "Show Libs",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:ShowLibs"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "ShowOrigErr",
          "package": "idris",
          "signature": "ShowOrigErr",
          "source": "src/Idris-AbsSyntaxTree.html#Opt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "ShowOrigErr",
          "package": "idris",
          "partial": "Show Orig Err",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:ShowOrigErr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "ShowProof",
          "package": "idris",
          "signature": "ShowProof Name",
          "source": "src/Idris-AbsSyntaxTree.html#Command",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "ShowProof",
          "package": "idris",
          "partial": "Show Proof",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:ShowProof"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "SimpleExpr",
          "package": "idris",
          "signature": "SimpleExpr Name",
          "source": "src/Idris-AbsSyntaxTree.html#SSymbol",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "SimpleExpr",
          "package": "idris",
          "partial": "Simple Expr",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:SimpleExpr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Smaller",
          "package": "idris",
          "signature": "Smaller",
          "source": "src/Idris-AbsSyntaxTree.html#SizeChange",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Smaller",
          "package": "idris",
          "partial": "Smaller",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Smaller"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Solve",
          "package": "idris",
          "signature": "Solve",
          "source": "src/Idris-AbsSyntaxTree.html#PTactic%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Solve",
          "package": "idris",
          "partial": "Solve",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Solve"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Spec",
          "package": "idris",
          "signature": "Spec PTerm",
          "source": "src/Idris-AbsSyntaxTree.html#Command",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Spec",
          "package": "idris",
          "partial": "Spec",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Spec"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Specialise",
          "package": "idris",
          "signature": "Specialise [(Name, Maybe Int)]",
          "source": "src/Idris-AbsSyntaxTree.html#FnOpt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Specialise",
          "normalized": "Specialise[(Name,Maybe Int)]",
          "package": "idris",
          "partial": "Specialise",
          "signature": "Specialise[(Name,Maybe Int)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Specialise"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Static",
          "package": "idris",
          "signature": "Static",
          "source": "src/Idris-AbsSyntaxTree.html#Static",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Static",
          "package": "idris",
          "partial": "Static",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Static"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Symbol",
          "package": "idris",
          "signature": "Symbol String",
          "source": "src/Idris-AbsSyntaxTree.html#SSymbol",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Symbol",
          "package": "idris",
          "partial": "Symbol",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Symbol"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Syn",
          "package": "idris",
          "signature": "Syn",
          "source": "src/Idris-AbsSyntaxTree.html#SyntaxInfo",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Syn",
          "package": "idris",
          "partial": "Syn",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Syn"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "TCInstance",
          "package": "idris",
          "signature": "TCInstance",
          "source": "src/Idris-AbsSyntaxTree.html#PTactic%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "TCInstance",
          "package": "idris",
          "partial": "TCInstance",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:TCInstance"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "TI",
          "package": "idris",
          "signature": "TI",
          "source": "src/Idris-AbsSyntaxTree.html#TypeInfo",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "TI",
          "package": "idris",
          "partial": "TI",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:TI"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003ea function with a partially defined type\n\u003c/p\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "TIPartial",
          "package": "idris",
          "signature": "TIPartial",
          "source": "src/Idris-AbsSyntaxTree.html#TIData",
          "type": "function"
        },
        "index": {
          "description": "function with partially defined type",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "TIPartial",
          "package": "idris",
          "partial": "TIPartial",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:TIPartial"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003epossible solutions to a metavariable in a type \n\u003c/p\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "TISolution",
          "package": "idris",
          "signature": "TISolution [Term]",
          "source": "src/Idris-AbsSyntaxTree.html#TIData",
          "type": "function"
        },
        "index": {
          "description": "possible solutions to metavariable in type",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "TISolution",
          "normalized": "TISolution[Term]",
          "package": "idris",
          "partial": "TISolution",
          "signature": "TISolution[Term]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:TISolution"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "TSeq",
          "package": "idris",
          "signature": "TSeq (PTactic' t) (PTactic' t)",
          "source": "src/Idris-AbsSyntaxTree.html#PTactic%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "TSeq",
          "package": "idris",
          "partial": "TSeq",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:TSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "TacImp",
          "package": "idris",
          "signature": "TacImp",
          "source": "src/Idris-AbsSyntaxTree.html#Plicity",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "TacImp",
          "package": "idris",
          "partial": "Tac Imp",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:TacImp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "TargetCPU",
          "package": "idris",
          "signature": "TargetCPU String",
          "source": "src/Idris-AbsSyntaxTree.html#Opt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "TargetCPU",
          "package": "idris",
          "partial": "Target CPU",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:TargetCPU"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "TargetTriple",
          "package": "idris",
          "signature": "TargetTriple String",
          "source": "src/Idris-AbsSyntaxTree.html#Opt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "TargetTriple",
          "package": "idris",
          "partial": "Target Triple",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:TargetTriple"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "TermSyntax",
          "package": "idris",
          "signature": "TermSyntax",
          "source": "src/Idris-AbsSyntaxTree.html#SynContext",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "TermSyntax",
          "package": "idris",
          "partial": "Term Syntax",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:TermSyntax"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "TestInline",
          "package": "idris",
          "signature": "TestInline PTerm",
          "source": "src/Idris-AbsSyntaxTree.html#Command",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "TestInline",
          "package": "idris",
          "partial": "Test Inline",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:TestInline"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "TotCheck",
          "package": "idris",
          "signature": "TotCheck Name",
          "source": "src/Idris-AbsSyntaxTree.html#Command",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "TotCheck",
          "package": "idris",
          "partial": "Tot Check",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:TotCheck"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "TotalFn",
          "package": "idris",
          "signature": "TotalFn",
          "source": "src/Idris-AbsSyntaxTree.html#FnOpt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "TotalFn",
          "package": "idris",
          "partial": "Total Fn",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:TotalFn"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Trivial",
          "package": "idris",
          "signature": "Trivial",
          "source": "src/Idris-AbsSyntaxTree.html#PTactic%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Trivial",
          "package": "idris",
          "partial": "Trivial",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Trivial"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Try",
          "package": "idris",
          "signature": "Try (PTactic' t) (PTactic' t)",
          "source": "src/Idris-AbsSyntaxTree.html#PTactic%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Try",
          "package": "idris",
          "partial": "Try",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Try"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "TypeCase",
          "package": "idris",
          "signature": "TypeCase",
          "source": "src/Idris-AbsSyntaxTree.html#Opt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "TypeCase",
          "package": "idris",
          "partial": "Type Case",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:TypeCase"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "TypeInType",
          "package": "idris",
          "signature": "TypeInType",
          "source": "src/Idris-AbsSyntaxTree.html#Opt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "TypeInType",
          "package": "idris",
          "partial": "Type In Type",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:TypeInType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "TypeOrTerm",
          "package": "idris",
          "signature": "TypeOrTerm",
          "source": "src/Idris-AbsSyntaxTree.html#PunInfo",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "TypeOrTerm",
          "package": "idris",
          "partial": "Type Or Term",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:TypeOrTerm"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "TypeProviders",
          "package": "idris",
          "signature": "TypeProviders",
          "source": "src/Idris-AbsSyntaxTree.html#LanguageExt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "TypeProviders",
          "package": "idris",
          "partial": "Type Providers",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:TypeProviders"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "UConstraint",
          "package": "idris",
          "signature": "UConstraint Name [Name]",
          "source": "src/Idris-AbsSyntaxTree.html#Using",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "UConstraint",
          "normalized": "UConstraint Name[Name]",
          "package": "idris",
          "partial": "UConstraint",
          "signature": "UConstraint Name[Name]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:UConstraint"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "UImplicit",
          "package": "idris",
          "signature": "UImplicit Name PTerm",
          "source": "src/Idris-AbsSyntaxTree.html#Using",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "UImplicit",
          "package": "idris",
          "partial": "UImplicit",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:UImplicit"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Unconditional",
          "package": "idris",
          "signature": "Unconditional",
          "source": "src/Idris-AbsSyntaxTree.html#Forceability",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Unconditional",
          "package": "idris",
          "partial": "Unconditional",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Unconditional"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Undo",
          "package": "idris",
          "signature": "Undo",
          "source": "src/Idris-AbsSyntaxTree.html#PTactic%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Undo",
          "package": "idris",
          "partial": "Undo",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Undo"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Universes",
          "package": "idris",
          "signature": "Universes",
          "source": "src/Idris-AbsSyntaxTree.html#Command",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Universes",
          "package": "idris",
          "partial": "Universes",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Universes"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Unknown",
          "package": "idris",
          "signature": "Unknown",
          "source": "src/Idris-AbsSyntaxTree.html#SizeChange",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Unknown",
          "package": "idris",
          "partial": "Unknown",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Unknown"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "UnsetOpt",
          "package": "idris",
          "signature": "UnsetOpt Opt",
          "source": "src/Idris-AbsSyntaxTree.html#Command",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "UnsetOpt",
          "package": "idris",
          "partial": "Unset Opt",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:UnsetOpt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Usage",
          "package": "idris",
          "signature": "Usage",
          "source": "src/Idris-AbsSyntaxTree.html#Opt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Usage",
          "package": "idris",
          "partial": "Usage",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Usage"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "UseCodegen",
          "package": "idris",
          "signature": "UseCodegen Codegen",
          "source": "src/Idris-AbsSyntaxTree.html#Opt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "UseCodegen",
          "package": "idris",
          "partial": "Use Codegen",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:UseCodegen"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Ver",
          "package": "idris",
          "signature": "Ver",
          "source": "src/Idris-AbsSyntaxTree.html#Opt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Ver",
          "package": "idris",
          "partial": "Ver",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Ver"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "Verbose",
          "package": "idris",
          "signature": "Verbose",
          "source": "src/Idris-AbsSyntaxTree.html#Opt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "Verbose",
          "package": "idris",
          "partial": "Verbose",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:Verbose"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "ViaC",
          "package": "idris",
          "signature": "ViaC",
          "source": "src/Idris-AbsSyntaxTree.html#Codegen",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "ViaC",
          "package": "idris",
          "partial": "Via",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:ViaC"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "ViaJava",
          "package": "idris",
          "signature": "ViaJava",
          "source": "src/Idris-AbsSyntaxTree.html#Codegen",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "ViaJava",
          "package": "idris",
          "partial": "Via Java",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:ViaJava"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "ViaJavaScript",
          "package": "idris",
          "signature": "ViaJavaScript",
          "source": "src/Idris-AbsSyntaxTree.html#Codegen",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "ViaJavaScript",
          "package": "idris",
          "partial": "Via Java Script",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:ViaJavaScript"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "ViaLLVM",
          "package": "idris",
          "signature": "ViaLLVM",
          "source": "src/Idris-AbsSyntaxTree.html#Codegen",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "ViaLLVM",
          "package": "idris",
          "partial": "Via LLVM",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:ViaLLVM"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "ViaNode",
          "package": "idris",
          "signature": "ViaNode",
          "source": "src/Idris-AbsSyntaxTree.html#Codegen",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "ViaNode",
          "package": "idris",
          "partial": "Via Node",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:ViaNode"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "WarnOnly",
          "package": "idris",
          "signature": "WarnOnly",
          "source": "src/Idris-AbsSyntaxTree.html#Opt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "WarnOnly",
          "package": "idris",
          "partial": "Warn Only",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:WarnOnly"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "WarnPartial",
          "package": "idris",
          "signature": "WarnPartial",
          "source": "src/Idris-AbsSyntaxTree.html#Opt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "WarnPartial",
          "package": "idris",
          "partial": "Warn Partial",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:WarnPartial"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "allNamesIn",
          "package": "idris",
          "signature": "PTerm -\u003e [Name]",
          "source": "src/Idris-AbsSyntaxTree.html#allNamesIn",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "allNamesIn",
          "normalized": "PTerm-\u003e[Name]",
          "package": "idris",
          "partial": "Names In",
          "signature": "PTerm-\u003e[Name]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:allNamesIn"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "argopts",
          "package": "idris",
          "signature": "[ArgOpt]",
          "source": "src/Idris-AbsSyntaxTree.html#PArg%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "argopts",
          "normalized": "[ArgOpt]",
          "package": "idris",
          "signature": "[ArgOpt]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:argopts"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "argsdef",
          "package": "idris",
          "signature": "[Name]",
          "source": "src/Idris-AbsSyntaxTree.html#CGInfo",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "argsdef",
          "normalized": "[Name]",
          "package": "idris",
          "signature": "[Name]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:argsdef"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "argsused",
          "package": "idris",
          "signature": "[Name]",
          "source": "src/Idris-AbsSyntaxTree.html#CGInfo",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "argsused",
          "normalized": "[Name]",
          "package": "idris",
          "signature": "[Name]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:argsused"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "bi",
          "package": "idris",
          "signature": "FC",
          "source": "src/Idris-AbsSyntaxTree.html#bi",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "bi",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:bi"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003ePretty-printer helper for the binding site of a name\n\u003c/p\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "bindingOf",
          "package": "idris",
          "signature": "Name-\u003e Bool-\u003e Doc OutputAnnotation",
          "type": "function"
        },
        "index": {
          "description": "Pretty-printer helper for the binding site of name",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "bindingOf",
          "normalized": "Name-\u003eBool-\u003eDoc OutputAnnotation",
          "package": "idris",
          "partial": "Of",
          "signature": "Name-\u003eBool-\u003eDoc OutputAnnotation",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:bindingOf"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "boundNamesIn",
          "package": "idris",
          "signature": "PTerm -\u003e [Name]",
          "source": "src/Idris-AbsSyntaxTree.html#boundNamesIn",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "boundNamesIn",
          "normalized": "PTerm-\u003e[Name]",
          "package": "idris",
          "partial": "Names In",
          "signature": "PTerm-\u003e[Name]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:boundNamesIn"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "brace_stack",
          "package": "idris",
          "signature": "[Maybe Int]",
          "source": "src/Idris-AbsSyntaxTree.html#IState",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "brace_stack",
          "normalized": "[Maybe Int]",
          "package": "idris",
          "signature": "[Maybe Int]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:brace_stack"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "calls",
          "package": "idris",
          "signature": "[(Name, [[Name]])]",
          "source": "src/Idris-AbsSyntaxTree.html#CGInfo",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "calls",
          "normalized": "[(Name,[[Name]])]",
          "package": "idris",
          "signature": "[(Name,[[Name]])]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:calls"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "class_default_superclasses",
          "package": "idris",
          "signature": "[PDecl]",
          "source": "src/Idris-AbsSyntaxTree.html#ClassInfo",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "class_default_superclasses",
          "normalized": "[PDecl]",
          "package": "idris",
          "signature": "[PDecl]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:class_default_superclasses"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "class_defaults",
          "package": "idris",
          "signature": "[(Name, (Name, PDecl))]",
          "source": "src/Idris-AbsSyntaxTree.html#ClassInfo",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "class_defaults",
          "normalized": "[(Name,(Name,PDecl))]",
          "package": "idris",
          "signature": "[(Name,(Name,PDecl))]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:class_defaults"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "class_instances",
          "package": "idris",
          "signature": "[Name]",
          "source": "src/Idris-AbsSyntaxTree.html#ClassInfo",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "class_instances",
          "normalized": "[Name]",
          "package": "idris",
          "signature": "[Name]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:class_instances"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "class_methods",
          "package": "idris",
          "signature": "[(Name, (FnOpts, PTerm))]",
          "source": "src/Idris-AbsSyntaxTree.html#ClassInfo",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "class_methods",
          "normalized": "[(Name,(FnOpts,PTerm))]",
          "package": "idris",
          "signature": "[(Name,(FnOpts,PTerm))]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:class_methods"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "class_params",
          "package": "idris",
          "signature": "[Name]",
          "source": "src/Idris-AbsSyntaxTree.html#ClassInfo",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "class_params",
          "normalized": "[Name]",
          "package": "idris",
          "signature": "[Name]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:class_params"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "codata",
          "package": "idris",
          "signature": "Bool",
          "source": "src/Idris-AbsSyntaxTree.html#TypeInfo",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "codata",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:codata"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "collapsible",
          "package": "idris",
          "signature": "Bool",
          "source": "src/Idris-AbsSyntaxTree.html#OptInfo",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "collapsible",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:collapsible"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "compiled_so",
          "package": "idris",
          "signature": "Maybe String",
          "source": "src/Idris-AbsSyntaxTree.html#IState",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "compiled_so",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:compiled_so"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "con_names",
          "package": "idris",
          "signature": "[Name]",
          "source": "src/Idris-AbsSyntaxTree.html#TypeInfo",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "con_names",
          "normalized": "[Name]",
          "package": "idris",
          "signature": "[Name]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:con_names"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eColourise annotations according to an Idris state. It ignores the names\n in the annotation, as there's no good way to show extended information on a\n terminal.\n\u003c/p\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "consoleDecorate",
          "package": "idris",
          "signature": "IState -\u003e OutputAnnotation -\u003e String -\u003e String",
          "source": "src/Idris-AbsSyntaxTree.html#consoleDecorate",
          "type": "function"
        },
        "index": {
          "description": "Colourise annotations according to an Idris state It ignores the names in the annotation as there no good way to show extended information on terminal",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "consoleDecorate",
          "normalized": "IState-\u003eOutputAnnotation-\u003eString-\u003eString",
          "package": "idris",
          "partial": "Decorate",
          "signature": "IState-\u003eOutputAnnotation-\u003eString-\u003eString",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:consoleDecorate"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "constraint",
          "package": "idris",
          "signature": "Plicity",
          "source": "src/Idris-AbsSyntaxTree.html#constraint",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "constraint",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:constraint"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eConstructors\n\u003c/p\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "d_cons",
          "package": "idris",
          "signature": "[(String, Name, t, FC, [Name])]",
          "source": "src/Idris-AbsSyntaxTree.html#PData%27",
          "type": "function"
        },
        "index": {
          "description": "Constructors",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "d_cons",
          "normalized": "[(String,Name,a,FC,[Name])]",
          "package": "idris",
          "signature": "[(String,Name,t,FC,[Name])]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:d_cons"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eThe name of the datatype\n\u003c/p\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "d_name",
          "package": "idris",
          "signature": "Name",
          "source": "src/Idris-AbsSyntaxTree.html#PData%27",
          "type": "function"
        },
        "index": {
          "description": "The name of the datatype",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "d_name",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:d_name"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eType constructor\n\u003c/p\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "d_tcon",
          "package": "idris",
          "signature": "t",
          "source": "src/Idris-AbsSyntaxTree.html#PData%27",
          "type": "function"
        },
        "index": {
          "description": "Type constructor",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "d_tcon",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:d_tcon"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "data_opts",
          "package": "idris",
          "signature": "DataOpts",
          "source": "src/Idris-AbsSyntaxTree.html#TypeInfo",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "data_opts",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:data_opts"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "declared",
          "package": "idris",
          "signature": "PDecl -\u003e [Name]",
          "source": "src/Idris-AbsSyntaxTree.html#declared",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "declared",
          "normalized": "PDecl-\u003e[Name]",
          "package": "idris",
          "signature": "PDecl-\u003e[Name]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:declared"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "decoration",
          "package": "idris",
          "signature": "Name -\u003e Name",
          "source": "src/Idris-AbsSyntaxTree.html#SyntaxInfo",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "decoration",
          "normalized": "Name-\u003eName",
          "package": "idris",
          "signature": "Name-\u003eName",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:decoration"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "defaultOpts",
          "package": "idris",
          "signature": "IOption",
          "source": "src/Idris-AbsSyntaxTree.html#defaultOpts",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "defaultOpts",
          "package": "idris",
          "partial": "Opts",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:defaultOpts"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "defaultSyntax",
          "package": "idris",
          "signature": "SyntaxInfo",
          "source": "src/Idris-AbsSyntaxTree.html#defaultSyntax",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "defaultSyntax",
          "package": "idris",
          "partial": "Syntax",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:defaultSyntax"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "default_access",
          "package": "idris",
          "signature": "Accessibility",
          "source": "src/Idris-AbsSyntaxTree.html#IState",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "default_access",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:default_access"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "default_total",
          "package": "idris",
          "signature": "Bool",
          "source": "src/Idris-AbsSyntaxTree.html#IState",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "default_total",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:default_total"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "defined",
          "package": "idris",
          "signature": "PDecl -\u003e [Name]",
          "source": "src/Idris-AbsSyntaxTree.html#defined",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "defined",
          "normalized": "PDecl-\u003e[Name]",
          "package": "idris",
          "signature": "PDecl-\u003e[Name]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:defined"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "dictionary",
          "package": "idris",
          "signature": "FnOpts -\u003e Bool",
          "source": "src/Idris-AbsSyntaxTree.html#dictionary",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "dictionary",
          "normalized": "FnOpts-\u003eBool",
          "package": "idris",
          "signature": "FnOpts-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:dictionary"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "dsl_apply",
          "package": "idris",
          "signature": "t",
          "source": "src/Idris-AbsSyntaxTree.html#DSL%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "dsl_apply",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:dsl_apply"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "dsl_bind",
          "package": "idris",
          "signature": "t",
          "source": "src/Idris-AbsSyntaxTree.html#DSL%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "dsl_bind",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:dsl_bind"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "dsl_info",
          "package": "idris",
          "signature": "DSL",
          "source": "src/Idris-AbsSyntaxTree.html#SyntaxInfo",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "dsl_info",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:dsl_info"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "dsl_lambda",
          "package": "idris",
          "signature": "Maybe t",
          "source": "src/Idris-AbsSyntaxTree.html#DSL%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "dsl_lambda",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:dsl_lambda"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "dsl_let",
          "package": "idris",
          "signature": "Maybe t",
          "source": "src/Idris-AbsSyntaxTree.html#DSL%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "dsl_let",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:dsl_let"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "dsl_pure",
          "package": "idris",
          "signature": "t",
          "source": "src/Idris-AbsSyntaxTree.html#DSL%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "dsl_pure",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:dsl_pure"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "dsl_return",
          "package": "idris",
          "signature": "t",
          "source": "src/Idris-AbsSyntaxTree.html#DSL%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "dsl_return",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:dsl_return"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "dsl_var",
          "package": "idris",
          "signature": "Maybe t",
          "source": "src/Idris-AbsSyntaxTree.html#DSL%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "dsl_var",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:dsl_var"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "elimDecl",
          "package": "idris",
          "signature": "PDecl' PTerm",
          "source": "src/Idris-AbsSyntaxTree.html#elimDecl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "elimDecl",
          "package": "idris",
          "partial": "Decl",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:elimDecl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "elimMethElim",
          "package": "idris",
          "signature": "Name",
          "source": "src/Idris-AbsSyntaxTree.html#elimMethElim",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "elimMethElim",
          "package": "idris",
          "partial": "Meth Elim",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:elimMethElim"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "elimMethElimTy",
          "package": "idris",
          "signature": "Name",
          "source": "src/Idris-AbsSyntaxTree.html#elimMethElimTy",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "elimMethElimTy",
          "package": "idris",
          "partial": "Meth Elim Ty",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:elimMethElimTy"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "elimName",
          "package": "idris",
          "signature": "Name",
          "source": "src/Idris-AbsSyntaxTree.html#elimName",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "elimName",
          "package": "idris",
          "partial": "Name",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:elimName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "eqCon",
          "package": "idris",
          "signature": "Name",
          "source": "src/Idris-AbsSyntaxTree.html#eqCon",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "eqCon",
          "package": "idris",
          "partial": "Con",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:eqCon"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "eqDecl",
          "package": "idris",
          "signature": "PData' PTerm",
          "source": "src/Idris-AbsSyntaxTree.html#eqDecl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "eqDecl",
          "package": "idris",
          "partial": "Decl",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:eqDecl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "eqOpts",
          "package": "idris",
          "signature": "[a]",
          "source": "src/Idris-AbsSyntaxTree.html#eqOpts",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "eqOpts",
          "normalized": "[a]",
          "package": "idris",
          "partial": "Opts",
          "signature": "[a]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:eqOpts"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "eqTy",
          "package": "idris",
          "signature": "Name",
          "source": "src/Idris-AbsSyntaxTree.html#eqTy",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "eqTy",
          "package": "idris",
          "partial": "Ty",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:eqTy"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "errLine",
          "package": "idris",
          "signature": "Maybe Int",
          "source": "src/Idris-AbsSyntaxTree.html#IState",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "errLine",
          "package": "idris",
          "partial": "Line",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:errLine"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "existsCon",
          "package": "idris",
          "signature": "Name",
          "source": "src/Idris-AbsSyntaxTree.html#existsCon",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "existsCon",
          "package": "idris",
          "partial": "Con",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:existsCon"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "expandNS",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e Name -\u003e Name",
          "source": "src/Idris-AbsSyntaxTree.html#expandNS",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "expandNS",
          "normalized": "SyntaxInfo-\u003eName-\u003eName",
          "package": "idris",
          "partial": "NS",
          "signature": "SyntaxInfo-\u003eName-\u003eName",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:expandNS"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "expl",
          "package": "idris",
          "signature": "Plicity",
          "source": "src/Idris-AbsSyntaxTree.html#expl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "expl",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:expl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "expl_param",
          "package": "idris",
          "signature": "Plicity",
          "source": "src/Idris-AbsSyntaxTree.html#expl_param",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "expl_param",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:expl_param"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "falseDecl",
          "package": "idris",
          "signature": "PData' PTerm",
          "source": "src/Idris-AbsSyntaxTree.html#falseDecl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "falseDecl",
          "package": "idris",
          "partial": "Decl",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:falseDecl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "falseOpts",
          "package": "idris",
          "signature": "[a]",
          "source": "src/Idris-AbsSyntaxTree.html#falseOpts",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "falseOpts",
          "normalized": "[a]",
          "package": "idris",
          "partial": "Opts",
          "signature": "[a]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:falseOpts"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "falseTy",
          "package": "idris",
          "signature": "Name",
          "source": "src/Idris-AbsSyntaxTree.html#falseTy",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "falseTy",
          "package": "idris",
          "partial": "Ty",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:falseTy"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "forceable",
          "package": "idris",
          "signature": "[(Int, Forceability)]",
          "source": "src/Idris-AbsSyntaxTree.html#OptInfo",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "forceable",
          "normalized": "[(Int,Forceability)]",
          "package": "idris",
          "signature": "[(Int,Forceability)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:forceable"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "getAll",
          "package": "idris",
          "signature": "[PArg] -\u003e [PTerm]",
          "source": "src/Idris-AbsSyntaxTree.html#getAll",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "getAll",
          "normalized": "[PArg]-\u003e[PTerm]",
          "package": "idris",
          "partial": "All",
          "signature": "[PArg]-\u003e[PTerm]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:getAll"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "getConsts",
          "package": "idris",
          "signature": "[PArg] -\u003e [PTerm]",
          "source": "src/Idris-AbsSyntaxTree.html#getConsts",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "getConsts",
          "normalized": "[PArg]-\u003e[PTerm]",
          "package": "idris",
          "partial": "Consts",
          "signature": "[PArg]-\u003e[PTerm]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:getConsts"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "getExps",
          "package": "idris",
          "signature": "[PArg] -\u003e [PTerm]",
          "source": "src/Idris-AbsSyntaxTree.html#getExps",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "getExps",
          "normalized": "[PArg]-\u003e[PTerm]",
          "package": "idris",
          "partial": "Exps",
          "signature": "[PArg]-\u003e[PTerm]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:getExps"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "getImps",
          "package": "idris",
          "signature": "[PArg] -\u003e [(Name, PTerm)]",
          "source": "src/Idris-AbsSyntaxTree.html#getImps",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "getImps",
          "normalized": "[PArg]-\u003e[(Name,PTerm)]",
          "package": "idris",
          "partial": "Imps",
          "signature": "[PArg]-\u003e[(Name,PTerm)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:getImps"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "getInferTerm",
          "package": "idris",
          "signature": "Term -\u003e Term",
          "source": "src/Idris-AbsSyntaxTree.html#getInferTerm",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "getInferTerm",
          "normalized": "Term-\u003eTerm",
          "package": "idris",
          "partial": "Infer Term",
          "signature": "Term-\u003eTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:getInferTerm"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "getInferType",
          "package": "idris",
          "signature": "Term -\u003e Term",
          "source": "src/Idris-AbsSyntaxTree.html#getInferType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "getInferType",
          "normalized": "Term-\u003eTerm",
          "package": "idris",
          "partial": "Infer Type",
          "signature": "Term-\u003eTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:getInferType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "getPArity",
          "package": "idris",
          "signature": "PTerm -\u003e Int",
          "source": "src/Idris-AbsSyntaxTree.html#getPArity",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "getPArity",
          "normalized": "PTerm-\u003eInt",
          "package": "idris",
          "partial": "PArity",
          "signature": "PTerm-\u003eInt",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:getPArity"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "getScript",
          "package": "idris",
          "signature": "t",
          "source": "src/Idris-AbsSyntaxTree.html#PArg%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "getScript",
          "package": "idris",
          "partial": "Script",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:getScript"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "getTm",
          "package": "idris",
          "signature": "t",
          "source": "src/Idris-AbsSyntaxTree.html#PArg%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "getTm",
          "package": "idris",
          "partial": "Tm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:getTm"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "hide_list",
          "package": "idris",
          "signature": "[(Name, Maybe Accessibility)]",
          "source": "src/Idris-AbsSyntaxTree.html#IState",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "hide_list",
          "normalized": "[(Name,Maybe Accessibility)]",
          "package": "idris",
          "signature": "[(Name,Maybe Accessibility)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:hide_list"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "ibc_write",
          "package": "idris",
          "signature": "[IBCWrite]",
          "source": "src/Idris-AbsSyntaxTree.html#IState",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "ibc_write",
          "normalized": "[IBCWrite]",
          "package": "idris",
          "signature": "[IBCWrite]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:ibc_write"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eThe initial state for the compiler\n\u003c/p\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "idrisInit",
          "package": "idris",
          "signature": "IState",
          "source": "src/Idris-AbsSyntaxTree.html#idrisInit",
          "type": "function"
        },
        "index": {
          "description": "The initial state for the compiler",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "idrisInit",
          "package": "idris",
          "partial": "Init",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:idrisInit"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_calledgraph",
          "package": "idris",
          "signature": "Ctxt [Name]",
          "source": "src/Idris-AbsSyntaxTree.html#IState",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_calledgraph",
          "normalized": "Ctxt[Name]",
          "package": "idris",
          "signature": "Ctxt[Name]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:idris_calledgraph"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_callgraph",
          "package": "idris",
          "signature": "Ctxt CGInfo",
          "source": "src/Idris-AbsSyntaxTree.html#IState",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_callgraph",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:idris_callgraph"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_cgflags",
          "package": "idris",
          "signature": "[(Codegen, String)]",
          "source": "src/Idris-AbsSyntaxTree.html#IState",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_cgflags",
          "normalized": "[(Codegen,String)]",
          "package": "idris",
          "signature": "[(Codegen,String)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:idris_cgflags"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_classes",
          "package": "idris",
          "signature": "Ctxt ClassInfo",
          "source": "src/Idris-AbsSyntaxTree.html#IState",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_classes",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:idris_classes"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_coercions",
          "package": "idris",
          "signature": "[Name]",
          "source": "src/Idris-AbsSyntaxTree.html#IState",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_coercions",
          "normalized": "[Name]",
          "package": "idris",
          "signature": "[Name]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:idris_coercions"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_colourRepl",
          "package": "idris",
          "signature": "Bool",
          "source": "src/Idris-AbsSyntaxTree.html#IState",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_colourRepl",
          "package": "idris",
          "partial": "Repl",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:idris_colourRepl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_colourTheme",
          "package": "idris",
          "signature": "ColourTheme",
          "source": "src/Idris-AbsSyntaxTree.html#IState",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_colourTheme",
          "package": "idris",
          "partial": "Theme",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:idris_colourTheme"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eHow many chars wide is the console?\n\u003c/p\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_consolewidth",
          "package": "idris",
          "signature": "ConsoleWidth",
          "source": "src/Idris-AbsSyntaxTree.html#IState",
          "type": "function"
        },
        "index": {
          "description": "How many chars wide is the console",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_consolewidth",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:idris_consolewidth"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eA list of universe constraints and their corresponding source locations\n\u003c/p\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_constraints",
          "package": "idris",
          "signature": "[(UConstraint, FC)]",
          "source": "src/Idris-AbsSyntaxTree.html#IState",
          "type": "function"
        },
        "index": {
          "description": "list of universe constraints and their corresponding source locations",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_constraints",
          "normalized": "[(UConstraint,FC)]",
          "package": "idris",
          "signature": "[(UConstraint,FC)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:idris_constraints"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_datatypes",
          "package": "idris",
          "signature": "Ctxt TypeInfo",
          "source": "src/Idris-AbsSyntaxTree.html#IState",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_datatypes",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:idris_datatypes"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_defertotcheck",
          "package": "idris",
          "signature": "[(FC, Name)]",
          "source": "src/Idris-AbsSyntaxTree.html#IState",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_defertotcheck",
          "normalized": "[(FC,Name)]",
          "package": "idris",
          "signature": "[(FC,Name)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:idris_defertotcheck"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_docstrings",
          "package": "idris",
          "signature": "Ctxt String",
          "source": "src/Idris-AbsSyntaxTree.html#IState",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_docstrings",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:idris_docstrings"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_dsls",
          "package": "idris",
          "signature": "Ctxt DSL",
          "source": "src/Idris-AbsSyntaxTree.html#IState",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_dsls",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:idris_dsls"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_dynamic_libs",
          "package": "idris",
          "signature": "[DynamicLib]",
          "source": "src/Idris-AbsSyntaxTree.html#IState",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_dynamic_libs",
          "normalized": "[DynamicLib]",
          "package": "idris",
          "signature": "[DynamicLib]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:idris_dynamic_libs"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_errRev",
          "package": "idris",
          "signature": "[(Term, Term)]",
          "source": "src/Idris-AbsSyntaxTree.html#IState",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_errRev",
          "normalized": "[(Term,Term)]",
          "package": "idris",
          "partial": "Rev",
          "signature": "[(Term,Term)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:idris_errRev"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eGlobal error handlers\n\u003c/p\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_errorhandlers",
          "package": "idris",
          "signature": "[Name]",
          "source": "src/Idris-AbsSyntaxTree.html#IState",
          "type": "function"
        },
        "index": {
          "description": "Global error handlers",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_errorhandlers",
          "normalized": "[Name]",
          "package": "idris",
          "signature": "[Name]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:idris_errorhandlers"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_flags",
          "package": "idris",
          "signature": "Ctxt [FnOpt]",
          "source": "src/Idris-AbsSyntaxTree.html#IState",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_flags",
          "normalized": "Ctxt[FnOpt]",
          "package": "idris",
          "signature": "Ctxt[FnOpt]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:idris_flags"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eSpecific error handlers\n\u003c/p\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_function_errorhandlers",
          "package": "idris",
          "signature": "Ctxt (Map Name (Set Name))",
          "source": "src/Idris-AbsSyntaxTree.html#IState",
          "type": "function"
        },
        "index": {
          "description": "Specific error handlers",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_function_errorhandlers",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:idris_function_errorhandlers"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_hdrs",
          "package": "idris",
          "signature": "[(Codegen, String)]",
          "source": "src/Idris-AbsSyntaxTree.html#IState",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_hdrs",
          "normalized": "[(Codegen,String)]",
          "package": "idris",
          "signature": "[(Codegen,String)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:idris_hdrs"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_implicits",
          "package": "idris",
          "signature": "Ctxt [PArg]",
          "source": "src/Idris-AbsSyntaxTree.html#IState",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_implicits",
          "normalized": "Ctxt[PArg]",
          "package": "idris",
          "signature": "Ctxt[PArg]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:idris_implicits"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eCurrently defined infix operators\n\u003c/p\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_infixes",
          "package": "idris",
          "signature": "[FixDecl]",
          "source": "src/Idris-AbsSyntaxTree.html#IState",
          "type": "function"
        },
        "index": {
          "description": "Currently defined infix operators",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_infixes",
          "normalized": "[FixDecl]",
          "package": "idris",
          "signature": "[FixDecl]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:idris_infixes"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_language_extensions",
          "package": "idris",
          "signature": "[LanguageExt]",
          "source": "src/Idris-AbsSyntaxTree.html#IState",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_language_extensions",
          "normalized": "[LanguageExt]",
          "package": "idris",
          "signature": "[LanguageExt]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:idris_language_extensions"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_libs",
          "package": "idris",
          "signature": "[(Codegen, String)]",
          "source": "src/Idris-AbsSyntaxTree.html#IState",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_libs",
          "normalized": "[(Codegen,String)]",
          "package": "idris",
          "signature": "[(Codegen,String)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:idris_libs"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eFull application LHS on source line\n\u003c/p\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_lineapps",
          "package": "idris",
          "signature": "[((FilePath, Int), PTerm)]",
          "source": "src/Idris-AbsSyntaxTree.html#IState",
          "type": "function"
        },
        "index": {
          "description": "Full application LHS on source line",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_lineapps",
          "normalized": "[((FilePath,Int),PTerm)]",
          "package": "idris",
          "signature": "[((FilePath,Int),PTerm)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:idris_lineapps"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eThe currently defined but not proven metavariables\n\u003c/p\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_metavars",
          "package": "idris",
          "signature": "[(Name, (Maybe Name, Int, Bool))]",
          "source": "src/Idris-AbsSyntaxTree.html#IState",
          "type": "function"
        },
        "index": {
          "description": "The currently defined but not proven metavariables",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_metavars",
          "normalized": "[(Name,(Maybe Name,Int,Bool))]",
          "package": "idris",
          "signature": "[(Name,(Maybe Name,Int,Bool))]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:idris_metavars"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_name",
          "package": "idris",
          "signature": "Int",
          "source": "src/Idris-AbsSyntaxTree.html#IState",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_name",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:idris_name"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_nameIdx",
          "package": "idris",
          "signature": "(Int, Ctxt (Int, Name))",
          "source": "src/Idris-AbsSyntaxTree.html#IState",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_nameIdx",
          "normalized": "(Int,Ctxt(Int,Name))",
          "package": "idris",
          "partial": "Idx",
          "signature": "(Int,Ctxt(Int,Name))",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:idris_nameIdx"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_namehints",
          "package": "idris",
          "signature": "Ctxt [Name]",
          "source": "src/Idris-AbsSyntaxTree.html#IState",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_namehints",
          "normalized": "Ctxt[Name]",
          "package": "idris",
          "signature": "Ctxt[Name]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:idris_namehints"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_objs",
          "package": "idris",
          "signature": "[(Codegen, FilePath)]",
          "source": "src/Idris-AbsSyntaxTree.html#IState",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_objs",
          "normalized": "[(Codegen,FilePath)]",
          "package": "idris",
          "signature": "[(Codegen,FilePath)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:idris_objs"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_optimisation",
          "package": "idris",
          "signature": "Ctxt OptInfo",
          "source": "src/Idris-AbsSyntaxTree.html#IState",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_optimisation",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:idris_optimisation"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_options",
          "package": "idris",
          "signature": "IOption",
          "source": "src/Idris-AbsSyntaxTree.html#IState",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_options",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:idris_options"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_outh",
          "package": "idris",
          "signature": "Handle",
          "source": "src/Idris-AbsSyntaxTree.html#IState",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_outh",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:idris_outh"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_outputmode",
          "package": "idris",
          "signature": "OutputMode",
          "source": "src/Idris-AbsSyntaxTree.html#IState",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_outputmode",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:idris_outputmode"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003elist of lhs/rhs, and a list of missing clauses\n\u003c/p\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_patdefs",
          "package": "idris",
          "signature": "Ctxt ([([Name], Term, Term)], [PTerm])",
          "source": "src/Idris-AbsSyntaxTree.html#IState",
          "type": "function"
        },
        "index": {
          "description": "list of lhs rhs and list of missing clauses",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_patdefs",
          "normalized": "Ctxt([([Name],Term,Term)],[PTerm])",
          "package": "idris",
          "signature": "Ctxt([([Name],Term,Term)],[PTerm])",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:idris_patdefs"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_scprims",
          "package": "idris",
          "signature": "[(Name, (Int, PrimFn))]",
          "source": "src/Idris-AbsSyntaxTree.html#IState",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_scprims",
          "normalized": "[(Name,(Int,PrimFn))]",
          "package": "idris",
          "signature": "[(Name,(Int,PrimFn))]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:idris_scprims"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_statics",
          "package": "idris",
          "signature": "Ctxt [Bool]",
          "source": "src/Idris-AbsSyntaxTree.html#IState",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_statics",
          "normalized": "Ctxt[Bool]",
          "package": "idris",
          "signature": "Ctxt[Bool]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:idris_statics"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_totcheck",
          "package": "idris",
          "signature": "[(FC, Name)]",
          "source": "src/Idris-AbsSyntaxTree.html#IState",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_totcheck",
          "normalized": "[(FC,Name)]",
          "package": "idris",
          "signature": "[(FC,Name)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:idris_totcheck"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_transforms",
          "package": "idris",
          "signature": "[(Term, Term)]",
          "source": "src/Idris-AbsSyntaxTree.html#IState",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_transforms",
          "normalized": "[(Term,Term)]",
          "package": "idris",
          "signature": "[(Term,Term)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:idris_transforms"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_tyinfodata",
          "package": "idris",
          "signature": "Ctxt TIData",
          "source": "src/Idris-AbsSyntaxTree.html#IState",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "idris_tyinfodata",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:idris_tyinfodata"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "impl",
          "package": "idris",
          "signature": "Plicity",
          "source": "src/Idris-AbsSyntaxTree.html#impl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "impl",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:impl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "implicitAllowed",
          "package": "idris",
          "signature": "Bool",
          "source": "src/Idris-AbsSyntaxTree.html#SyntaxInfo",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "implicitAllowed",
          "package": "idris",
          "partial": "Allowed",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:implicitAllowed"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eThe imported modules\n\u003c/p\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "imported",
          "package": "idris",
          "signature": "[FilePath]",
          "source": "src/Idris-AbsSyntaxTree.html#IState",
          "type": "function"
        },
        "index": {
          "description": "The imported modules",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "imported",
          "normalized": "[FilePath]",
          "package": "idris",
          "signature": "[FilePath]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:imported"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "inPattern",
          "package": "idris",
          "signature": "Bool",
          "source": "src/Idris-AbsSyntaxTree.html#SyntaxInfo",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "inPattern",
          "package": "idris",
          "partial": "Pattern",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:inPattern"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "indent_stack",
          "package": "idris",
          "signature": "[Int]",
          "source": "src/Idris-AbsSyntaxTree.html#IState",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "indent_stack",
          "normalized": "[Int]",
          "package": "idris",
          "signature": "[Int]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:indent_stack"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "index_first",
          "package": "idris",
          "signature": "Maybe t",
          "source": "src/Idris-AbsSyntaxTree.html#DSL%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "index_first",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:index_first"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "index_next",
          "package": "idris",
          "signature": "Maybe t",
          "source": "src/Idris-AbsSyntaxTree.html#DSL%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "index_next",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:index_next"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "infP",
          "package": "idris",
          "signature": "TT Name",
          "source": "src/Idris-AbsSyntaxTree.html#infP",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "infP",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:infP"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "infTerm",
          "package": "idris",
          "signature": "PTerm -\u003e PTerm",
          "source": "src/Idris-AbsSyntaxTree.html#infTerm",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "infTerm",
          "normalized": "PTerm-\u003ePTerm",
          "package": "idris",
          "partial": "Term",
          "signature": "PTerm-\u003ePTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:infTerm"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "inferCon",
          "package": "idris",
          "signature": "Name",
          "source": "src/Idris-AbsSyntaxTree.html#inferCon",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "inferCon",
          "package": "idris",
          "partial": "Con",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:inferCon"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "inferDecl",
          "package": "idris",
          "signature": "PData' PTerm",
          "source": "src/Idris-AbsSyntaxTree.html#inferDecl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "inferDecl",
          "package": "idris",
          "partial": "Decl",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:inferDecl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "inferOpts",
          "package": "idris",
          "signature": "[a]",
          "source": "src/Idris-AbsSyntaxTree.html#inferOpts",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "inferOpts",
          "normalized": "[a]",
          "package": "idris",
          "partial": "Opts",
          "signature": "[a]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:inferOpts"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "inferTy",
          "package": "idris",
          "signature": "Name",
          "source": "src/Idris-AbsSyntaxTree.html#inferTy",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "inferTy",
          "package": "idris",
          "partial": "Ty",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:inferTy"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "initDSL",
          "package": "idris",
          "signature": "DSL' PTerm",
          "source": "src/Idris-AbsSyntaxTree.html#initDSL",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "initDSL",
          "package": "idris",
          "partial": "DSL",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:initDSL"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "inlinable",
          "package": "idris",
          "signature": "FnOpts -\u003e Bool",
          "source": "src/Idris-AbsSyntaxTree.html#inlinable",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "inlinable",
          "normalized": "FnOpts-\u003eBool",
          "package": "idris",
          "signature": "FnOpts-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:inlinable"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "instanceName",
          "package": "idris",
          "signature": "Name",
          "source": "src/Idris-AbsSyntaxTree.html#ClassInfo",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "instanceName",
          "package": "idris",
          "partial": "Name",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:instanceName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "isnewtype",
          "package": "idris",
          "signature": "Bool",
          "source": "src/Idris-AbsSyntaxTree.html#OptInfo",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "isnewtype",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:isnewtype"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "lastParse",
          "package": "idris",
          "signature": "Maybe Name",
          "source": "src/Idris-AbsSyntaxTree.html#IState",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "lastParse",
          "package": "idris",
          "partial": "Parse",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:lastParse"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "lazyarg",
          "package": "idris",
          "signature": "PArg' t -\u003e Bool",
          "source": "src/Idris-AbsSyntaxTree.html#lazyarg",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "lazyarg",
          "normalized": "PArg' a-\u003eBool",
          "package": "idris",
          "signature": "PArg' t-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:lazyarg"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "machine_inf",
          "package": "idris",
          "signature": "Bool",
          "source": "src/Idris-AbsSyntaxTree.html#PArg%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "machine_inf",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:machine_inf"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "mapPT",
          "package": "idris",
          "signature": "(PTerm -\u003e PTerm) -\u003e PTerm -\u003e PTerm",
          "source": "src/Idris-AbsSyntaxTree.html#mapPT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "mapPT",
          "normalized": "(PTerm-\u003ePTerm)-\u003ePTerm-\u003ePTerm",
          "package": "idris",
          "partial": "PT",
          "signature": "(PTerm-\u003ePTerm)-\u003ePTerm-\u003ePTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:mapPT"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "module_aliases",
          "package": "idris",
          "signature": "Map [Text] [Text]",
          "source": "src/Idris-AbsSyntaxTree.html#IState",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "module_aliases",
          "normalized": "Map[Text][Text]",
          "package": "idris",
          "signature": "Map[Text][Text]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:module_aliases"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "namesIn",
          "package": "idris",
          "signature": "[(Name, PTerm)] -\u003e IState -\u003e PTerm -\u003e [Name]",
          "source": "src/Idris-AbsSyntaxTree.html#namesIn",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "namesIn",
          "normalized": "[(Name,PTerm)]-\u003eIState-\u003ePTerm-\u003e[Name]",
          "package": "idris",
          "partial": "In",
          "signature": "[(Name,PTerm)]-\u003eIState-\u003ePTerm-\u003e[Name]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:namesIn"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "no_imp",
          "package": "idris",
          "signature": "[Name]",
          "source": "src/Idris-AbsSyntaxTree.html#SyntaxInfo",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "no_imp",
          "normalized": "[Name]",
          "package": "idris",
          "signature": "[Name]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:no_imp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "opt_cmdline",
          "package": "idris",
          "signature": "[Opt]",
          "source": "src/Idris-AbsSyntaxTree.html#IOption",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "opt_cmdline",
          "normalized": "[Opt]",
          "package": "idris",
          "signature": "[Opt]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:opt_cmdline"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "opt_codegen",
          "package": "idris",
          "signature": "Codegen",
          "source": "src/Idris-AbsSyntaxTree.html#IOption",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "opt_codegen",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:opt_codegen"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "opt_coverage",
          "package": "idris",
          "signature": "Bool",
          "source": "src/Idris-AbsSyntaxTree.html#IOption",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "opt_coverage",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:opt_coverage"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "opt_cpu",
          "package": "idris",
          "signature": "String",
          "source": "src/Idris-AbsSyntaxTree.html#IOption",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "opt_cpu",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:opt_cpu"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "opt_errContext",
          "package": "idris",
          "signature": "Bool",
          "source": "src/Idris-AbsSyntaxTree.html#IOption",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "opt_errContext",
          "package": "idris",
          "partial": "Context",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:opt_errContext"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "opt_ibcsubdir",
          "package": "idris",
          "signature": "FilePath",
          "source": "src/Idris-AbsSyntaxTree.html#IOption",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "opt_ibcsubdir",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:opt_ibcsubdir"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "opt_importdirs",
          "package": "idris",
          "signature": "[FilePath]",
          "source": "src/Idris-AbsSyntaxTree.html#IOption",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "opt_importdirs",
          "normalized": "[FilePath]",
          "package": "idris",
          "signature": "[FilePath]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:opt_importdirs"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "opt_logLevel",
          "package": "idris",
          "signature": "Int",
          "source": "src/Idris-AbsSyntaxTree.html#IOption",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "opt_logLevel",
          "package": "idris",
          "partial": "Level",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:opt_logLevel"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "opt_nobanner",
          "package": "idris",
          "signature": "Bool",
          "source": "src/Idris-AbsSyntaxTree.html#IOption",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "opt_nobanner",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:opt_nobanner"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "opt_optLevel",
          "package": "idris",
          "signature": "Word",
          "source": "src/Idris-AbsSyntaxTree.html#IOption",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "opt_optLevel",
          "package": "idris",
          "partial": "Level",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:opt_optLevel"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "opt_origerr",
          "package": "idris",
          "signature": "Bool",
          "source": "src/Idris-AbsSyntaxTree.html#IOption",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "opt_origerr",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:opt_origerr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "opt_outputTy",
          "package": "idris",
          "signature": "OutputType",
          "source": "src/Idris-AbsSyntaxTree.html#IOption",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "opt_outputTy",
          "package": "idris",
          "partial": "Ty",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:opt_outputTy"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "opt_quiet",
          "package": "idris",
          "signature": "Bool",
          "source": "src/Idris-AbsSyntaxTree.html#IOption",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "opt_quiet",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:opt_quiet"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "opt_repl",
          "package": "idris",
          "signature": "Bool",
          "source": "src/Idris-AbsSyntaxTree.html#IOption",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "opt_repl",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:opt_repl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e^ show implicits\n\u003c/p\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "opt_showimp",
          "package": "idris",
          "signature": "Bool",
          "source": "src/Idris-AbsSyntaxTree.html#IOption",
          "type": "function"
        },
        "index": {
          "description": "show implicits",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "opt_showimp",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:opt_showimp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "opt_triple",
          "package": "idris",
          "signature": "String",
          "source": "src/Idris-AbsSyntaxTree.html#IOption",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "opt_triple",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:opt_triple"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "opt_typecase",
          "package": "idris",
          "signature": "Bool",
          "source": "src/Idris-AbsSyntaxTree.html#IOption",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "opt_typecase",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:opt_typecase"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "opt_typeintype",
          "package": "idris",
          "signature": "Bool",
          "source": "src/Idris-AbsSyntaxTree.html#IOption",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "opt_typeintype",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:opt_typeintype"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "opt_verbose",
          "package": "idris",
          "signature": "Bool",
          "source": "src/Idris-AbsSyntaxTree.html#IOption",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "opt_verbose",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:opt_verbose"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "pairCon",
          "package": "idris",
          "signature": "Name",
          "source": "src/Idris-AbsSyntaxTree.html#pairCon",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "pairCon",
          "package": "idris",
          "partial": "Con",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:pairCon"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "pairDecl",
          "package": "idris",
          "signature": "PData' PTerm",
          "source": "src/Idris-AbsSyntaxTree.html#pairDecl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "pairDecl",
          "package": "idris",
          "partial": "Decl",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:pairDecl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "pairOpts",
          "package": "idris",
          "signature": "[a]",
          "source": "src/Idris-AbsSyntaxTree.html#pairOpts",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "pairOpts",
          "normalized": "[a]",
          "package": "idris",
          "partial": "Opts",
          "signature": "[a]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:pairOpts"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "pairTy",
          "package": "idris",
          "signature": "Name",
          "source": "src/Idris-AbsSyntaxTree.html#pairTy",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "pairTy",
          "package": "idris",
          "partial": "Ty",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:pairTy"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "param_pos",
          "package": "idris",
          "signature": "[Int]",
          "source": "src/Idris-AbsSyntaxTree.html#TypeInfo",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "param_pos",
          "normalized": "[Int]",
          "package": "idris",
          "signature": "[Int]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:param_pos"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "pargdoc",
          "package": "idris",
          "signature": "String",
          "source": "src/Idris-AbsSyntaxTree.html#PArg%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "pargdoc",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:pargdoc"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "pargopts",
          "package": "idris",
          "signature": "[ArgOpt]",
          "source": "src/Idris-AbsSyntaxTree.html#Plicity",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "pargopts",
          "normalized": "[ArgOpt]",
          "package": "idris",
          "signature": "[ArgOpt]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:pargopts"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "pconst",
          "package": "idris",
          "signature": "t -\u003e PArg' t",
          "source": "src/Idris-AbsSyntaxTree.html#pconst",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "pconst",
          "normalized": "a-\u003ePArg' a",
          "package": "idris",
          "signature": "t-\u003ePArg' t",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:pconst"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "pdocstr",
          "package": "idris",
          "signature": "String",
          "source": "src/Idris-AbsSyntaxTree.html#Plicity",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "pdocstr",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:pdocstr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "pexp",
          "package": "idris",
          "signature": "t -\u003e PArg' t",
          "source": "src/Idris-AbsSyntaxTree.html#pexp",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "pexp",
          "normalized": "a-\u003ePArg' a",
          "package": "idris",
          "signature": "t-\u003ePArg' t",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:pexp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "piBind",
          "package": "idris",
          "signature": "[(Name, PTerm)] -\u003e PTerm -\u003e PTerm",
          "source": "src/Idris-AbsSyntaxTree.html#piBind",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "piBind",
          "normalized": "[(Name,PTerm)]-\u003ePTerm-\u003ePTerm",
          "package": "idris",
          "partial": "Bind",
          "signature": "[(Name,PTerm)]-\u003ePTerm-\u003ePTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:piBind"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "piBindp",
          "package": "idris",
          "signature": "Plicity -\u003e [(Name, PTerm)] -\u003e PTerm -\u003e PTerm",
          "source": "src/Idris-AbsSyntaxTree.html#piBindp",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "piBindp",
          "normalized": "Plicity-\u003e[(Name,PTerm)]-\u003ePTerm-\u003ePTerm",
          "package": "idris",
          "partial": "Bindp",
          "signature": "Plicity-\u003e[(Name,PTerm)]-\u003ePTerm-\u003ePTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:piBindp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "pimp",
          "package": "idris",
          "signature": "Name -\u003e t -\u003e Bool -\u003e PArg' t",
          "source": "src/Idris-AbsSyntaxTree.html#pimp",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "pimp",
          "normalized": "Name-\u003ea-\u003eBool-\u003ePArg' a",
          "package": "idris",
          "signature": "Name-\u003et-\u003eBool-\u003ePArg' t",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:pimp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "plazy",
          "package": "idris",
          "signature": "Plicity -\u003e Bool",
          "source": "src/Idris-AbsSyntaxTree.html#plazy",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "plazy",
          "normalized": "Plicity-\u003eBool",
          "package": "idris",
          "signature": "Plicity-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:plazy"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "pname",
          "package": "idris",
          "signature": "Name",
          "source": "src/Idris-AbsSyntaxTree.html#PArg%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "pname",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:pname"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "pparam",
          "package": "idris",
          "signature": "Bool",
          "source": "src/Idris-AbsSyntaxTree.html#Plicity",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "pparam",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:pparam"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003ePretty-print a high-level Idris term in some bindings context\n\u003c/p\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "pprintPTerm",
          "package": "idris",
          "signature": "Bool-\u003e [(Name, Bool)]-\u003e PTerm-\u003e Doc OutputAnnotation",
          "type": "function"
        },
        "index": {
          "description": "Pretty-print high-level Idris term in some bindings context",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "pprintPTerm",
          "normalized": "Bool-\u003e[(Name,Bool)]-\u003ePTerm-\u003eDoc OutputAnnotation",
          "package": "idris",
          "partial": "PTerm",
          "signature": "Bool-\u003e[(Name,Bool)]-\u003ePTerm-\u003eDoc OutputAnnotation",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:pprintPTerm"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "prec",
          "package": "idris",
          "signature": "Int",
          "source": "src/Idris-AbsSyntaxTree.html#Fixity",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "prec",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:prec"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003ePretty-print a high-level closed Idris term\n\u003c/p\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "prettyImp",
          "package": "idris",
          "signature": "Bool-\u003e PTerm-\u003e Doc OutputAnnotation",
          "type": "function"
        },
        "index": {
          "description": "Pretty-print high-level closed Idris term",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "prettyImp",
          "normalized": "Bool-\u003ePTerm-\u003eDoc OutputAnnotation",
          "package": "idris",
          "partial": "Imp",
          "signature": "Bool-\u003ePTerm-\u003eDoc OutputAnnotation",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:prettyImp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003ePretty-printer helper for names that attaches the correct annotations\n\u003c/p\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "prettyName",
          "package": "idris",
          "signature": "Bool-\u003e [(Name, Bool)]-\u003e Name-\u003e Doc OutputAnnotation",
          "type": "function"
        },
        "index": {
          "description": "Pretty-printer helper for names that attaches the correct annotations",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "prettyName",
          "normalized": "Bool-\u003e[(Name,Bool)]-\u003eName-\u003eDoc OutputAnnotation",
          "package": "idris",
          "partial": "Name",
          "signature": "Bool-\u003e[(Name,Bool)]-\u003eName-\u003eDoc OutputAnnotation",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:prettyName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "primDefs",
          "package": "idris",
          "signature": "[Name]",
          "source": "src/Idris-AbsSyntaxTree.html#primDefs",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "primDefs",
          "normalized": "[Name]",
          "package": "idris",
          "partial": "Defs",
          "signature": "[Name]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:primDefs"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "primNames",
          "package": "idris",
          "signature": "[Name]",
          "source": "src/Idris-AbsSyntaxTree.html#primNames",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "primNames",
          "normalized": "[Name]",
          "package": "idris",
          "partial": "Names",
          "signature": "[Name]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:primNames"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "priority",
          "package": "idris",
          "signature": "Int",
          "source": "src/Idris-AbsSyntaxTree.html#PArg%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "priority",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:priority"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "proof_list",
          "package": "idris",
          "signature": "[(Name, [String])]",
          "source": "src/Idris-AbsSyntaxTree.html#IState",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "proof_list",
          "normalized": "[(Name,[String])]",
          "package": "idris",
          "signature": "[(Name,[String])]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:proof_list"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "pscript",
          "package": "idris",
          "signature": "PTerm",
          "source": "src/Idris-AbsSyntaxTree.html#Plicity",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "pscript",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:pscript"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "pstatic",
          "package": "idris",
          "signature": "Static",
          "source": "src/Idris-AbsSyntaxTree.html#Plicity",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "pstatic",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:pstatic"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "ptacimp",
          "package": "idris",
          "signature": "Name -\u003e t -\u003e t -\u003e PArg' t",
          "source": "src/Idris-AbsSyntaxTree.html#ptacimp",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "ptacimp",
          "normalized": "Name-\u003ea-\u003ea-\u003ePArg' a",
          "package": "idris",
          "signature": "Name-\u003et-\u003et-\u003ePArg' t",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:ptacimp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "recursive",
          "package": "idris",
          "signature": "[Int]",
          "source": "src/Idris-AbsSyntaxTree.html#OptInfo",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "recursive",
          "normalized": "[Int]",
          "package": "idris",
          "signature": "[Int]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:recursive"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "scg",
          "package": "idris",
          "signature": "[SCGEntry]",
          "source": "src/Idris-AbsSyntaxTree.html#CGInfo",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "scg",
          "normalized": "[SCGEntry]",
          "package": "idris",
          "signature": "[SCGEntry]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:scg"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "showCImp",
          "package": "idris",
          "signature": "Bool -\u003e PClause -\u003e Doc OutputAnnotation",
          "source": "src/Idris-AbsSyntaxTree.html#showCImp",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "showCImp",
          "normalized": "Bool-\u003ePClause-\u003eDoc OutputAnnotation",
          "package": "idris",
          "partial": "CImp",
          "signature": "Bool-\u003ePClause-\u003eDoc OutputAnnotation",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:showCImp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "showDImp",
          "package": "idris",
          "signature": "Bool -\u003e PData -\u003e Doc OutputAnnotation",
          "source": "src/Idris-AbsSyntaxTree.html#showDImp",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "showDImp",
          "normalized": "Bool-\u003ePData-\u003eDoc OutputAnnotation",
          "package": "idris",
          "partial": "DImp",
          "signature": "Bool-\u003ePData-\u003eDoc OutputAnnotation",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:showDImp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "showDeclImp",
          "package": "idris",
          "signature": "Bool -\u003e PDecl' PTerm -\u003e Doc OutputAnnotation",
          "source": "src/Idris-AbsSyntaxTree.html#showDeclImp",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "showDeclImp",
          "normalized": "Bool-\u003ePDecl' PTerm-\u003eDoc OutputAnnotation",
          "package": "idris",
          "partial": "Decl Imp",
          "signature": "Bool-\u003ePDecl' PTerm-\u003eDoc OutputAnnotation",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:showDeclImp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "showDecls",
          "package": "idris",
          "signature": "Bool -\u003e [PDecl] -\u003e Doc OutputAnnotation",
          "source": "src/Idris-AbsSyntaxTree.html#showDecls",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "showDecls",
          "normalized": "Bool-\u003e[PDecl]-\u003eDoc OutputAnnotation",
          "package": "idris",
          "partial": "Decls",
          "signature": "Bool-\u003e[PDecl]-\u003eDoc OutputAnnotation",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:showDecls"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eShow Idris name\n\u003c/p\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "showName",
          "package": "idris",
          "signature": "Maybe IState-\u003e [(Name, Bool)]-\u003e Bool-\u003e Bool-\u003e Name-\u003e String",
          "type": "function"
        },
        "index": {
          "description": "Show Idris name",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "showName",
          "normalized": "Maybe IState-\u003e[(Name,Bool)]-\u003eBool-\u003eBool-\u003eName-\u003eString",
          "package": "idris",
          "partial": "Name",
          "signature": "Maybe IState-\u003e[(Name,Bool)]-\u003eBool-\u003eBool-\u003eName-\u003eString",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:showName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "showTm",
          "package": "idris",
          "signature": "IState-\u003e PTerm-\u003e String",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "showTm",
          "normalized": "IState-\u003ePTerm-\u003eString",
          "package": "idris",
          "partial": "Tm",
          "signature": "IState-\u003ePTerm-\u003eString",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:showTm"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eShow a term with implicits, no colours\n\u003c/p\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "showTmImpls",
          "package": "idris",
          "signature": "PTerm -\u003e String",
          "source": "src/Idris-AbsSyntaxTree.html#showTmImpls",
          "type": "function"
        },
        "index": {
          "description": "Show term with implicits no colours",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "showTmImpls",
          "normalized": "PTerm-\u003eString",
          "package": "idris",
          "partial": "Tm Impls",
          "signature": "PTerm-\u003eString",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:showTmImpls"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "sigmaTy",
          "package": "idris",
          "signature": "Name",
          "source": "src/Idris-AbsSyntaxTree.html#sigmaTy",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "sigmaTy",
          "package": "idris",
          "partial": "Ty",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:sigmaTy"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "syn_namespace",
          "package": "idris",
          "signature": "[String]",
          "source": "src/Idris-AbsSyntaxTree.html#SyntaxInfo",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "syn_namespace",
          "normalized": "[String]",
          "package": "idris",
          "signature": "[String]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:syn_namespace"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "syn_params",
          "package": "idris",
          "signature": "[(Name, PTerm)]",
          "source": "src/Idris-AbsSyntaxTree.html#SyntaxInfo",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "syn_params",
          "normalized": "[(Name,PTerm)]",
          "package": "idris",
          "signature": "[(Name,PTerm)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:syn_params"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "syntax_keywords",
          "package": "idris",
          "signature": "[String]",
          "source": "src/Idris-AbsSyntaxTree.html#IState",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "syntax_keywords",
          "normalized": "[String]",
          "package": "idris",
          "signature": "[String]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:syntax_keywords"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "syntax_rules",
          "package": "idris",
          "signature": "[Syntax]",
          "source": "src/Idris-AbsSyntaxTree.html#IState",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "syntax_rules",
          "normalized": "[Syntax]",
          "package": "idris",
          "signature": "[Syntax]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:syntax_rules"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "tacimpl",
          "package": "idris",
          "signature": "PTerm -\u003e Plicity",
          "source": "src/Idris-AbsSyntaxTree.html#tacimpl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "tacimpl",
          "normalized": "PTerm-\u003ePlicity",
          "package": "idris",
          "signature": "PTerm-\u003ePlicity",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:tacimpl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "tldeclared",
          "package": "idris",
          "signature": "PDecl -\u003e [Name]",
          "source": "src/Idris-AbsSyntaxTree.html#tldeclared",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "tldeclared",
          "normalized": "PDecl-\u003e[Name]",
          "package": "idris",
          "signature": "PDecl-\u003e[Name]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:tldeclared"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eAll the currently defined names and their terms\n\u003c/p\u003e",
          "module": "Idris.AbsSyntaxTree",
          "name": "tt_ctxt",
          "package": "idris",
          "signature": "Context",
          "source": "src/Idris-AbsSyntaxTree.html#IState",
          "type": "function"
        },
        "index": {
          "description": "All the currently defined names and their terms",
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "tt_ctxt",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:tt_ctxt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "unitCon",
          "package": "idris",
          "signature": "Name",
          "source": "src/Idris-AbsSyntaxTree.html#unitCon",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "unitCon",
          "package": "idris",
          "partial": "Con",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:unitCon"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "unitDecl",
          "package": "idris",
          "signature": "PData' PTerm",
          "source": "src/Idris-AbsSyntaxTree.html#unitDecl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "unitDecl",
          "package": "idris",
          "partial": "Decl",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:unitDecl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "unitOpts",
          "package": "idris",
          "signature": "[DataOpt]",
          "source": "src/Idris-AbsSyntaxTree.html#unitOpts",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "unitOpts",
          "normalized": "[DataOpt]",
          "package": "idris",
          "partial": "Opts",
          "signature": "[DataOpt]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:unitOpts"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "unitTy",
          "package": "idris",
          "signature": "Name",
          "source": "src/Idris-AbsSyntaxTree.html#unitTy",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "unitTy",
          "package": "idris",
          "partial": "Ty",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:unitTy"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "unusedpos",
          "package": "idris",
          "signature": "[Int]",
          "source": "src/Idris-AbsSyntaxTree.html#CGInfo",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "unusedpos",
          "normalized": "[Int]",
          "package": "idris",
          "signature": "[Int]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:unusedpos"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "updateN",
          "package": "idris",
          "signature": "[(Name, Name)] -\u003e Name -\u003e Name",
          "source": "src/Idris-AbsSyntaxTree.html#updateN",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "updateN",
          "normalized": "[(Name,Name)]-\u003eName-\u003eName",
          "package": "idris",
          "signature": "[(Name,Name)]-\u003eName-\u003eName",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:updateN"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "updateNs",
          "package": "idris",
          "signature": "[(Name, Name)] -\u003e PTerm -\u003e PTerm",
          "source": "src/Idris-AbsSyntaxTree.html#updateNs",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "updateNs",
          "normalized": "[(Name,Name)]-\u003ePTerm-\u003ePTerm",
          "package": "idris",
          "partial": "Ns",
          "signature": "[(Name,Name)]-\u003ePTerm-\u003ePTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:updateNs"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "usedNamesIn",
          "package": "idris",
          "signature": "[Name] -\u003e IState -\u003e PTerm -\u003e [Name]",
          "source": "src/Idris-AbsSyntaxTree.html#usedNamesIn",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "usedNamesIn",
          "normalized": "[Name]-\u003eIState-\u003ePTerm-\u003e[Name]",
          "package": "idris",
          "partial": "Names In",
          "signature": "[Name]-\u003eIState-\u003ePTerm-\u003e[Name]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:usedNamesIn"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.AbsSyntaxTree",
          "name": "using",
          "package": "idris",
          "signature": "[Using]",
          "source": "src/Idris-AbsSyntaxTree.html#SyntaxInfo",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris AbsSyntaxTree",
          "module": "Idris.AbsSyntaxTree",
          "name": "using",
          "normalized": "[Using]",
          "package": "idris",
          "signature": "[Using]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-AbsSyntaxTree.html#v:using"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.CaseSplit",
          "name": "CaseSplit",
          "package": "idris",
          "source": "src/Idris-CaseSplit.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "Idris CaseSplit",
          "module": "Idris.CaseSplit",
          "name": "CaseSplit",
          "package": "idris",
          "partial": "Case Split",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-CaseSplit.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.CaseSplit",
          "name": "getClause",
          "package": "idris",
          "signature": "Int-\u003e Name-\u003e FilePath-\u003e Idris String",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris CaseSplit",
          "module": "Idris.CaseSplit",
          "name": "getClause",
          "normalized": "Int-\u003eName-\u003eFilePath-\u003eIdris String",
          "package": "idris",
          "partial": "Clause",
          "signature": "Int-\u003eName-\u003eFilePath-\u003eIdris String",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-CaseSplit.html#v:getClause"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.CaseSplit",
          "name": "getProofClause",
          "package": "idris",
          "signature": "Int-\u003e Name-\u003e FilePath-\u003e Idris String",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris CaseSplit",
          "module": "Idris.CaseSplit",
          "name": "getProofClause",
          "normalized": "Int-\u003eName-\u003eFilePath-\u003eIdris String",
          "package": "idris",
          "partial": "Proof Clause",
          "signature": "Int-\u003eName-\u003eFilePath-\u003eIdris String",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-CaseSplit.html#v:getProofClause"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.CaseSplit",
          "name": "getUniq",
          "package": "idris",
          "signature": "[Char] -\u003e t -\u003e StateT IState (ErrorT Err IO) ([Char], t)",
          "source": "src/Idris-CaseSplit.html#getUniq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris CaseSplit",
          "module": "Idris.CaseSplit",
          "name": "getUniq",
          "normalized": "[Char]-\u003ea-\u003eStateT IState(ErrorT Err IO)([Char],a)",
          "package": "idris",
          "partial": "Uniq",
          "signature": "[Char]-\u003et-\u003eStateT IState(ErrorT Err IO)([Char],t)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-CaseSplit.html#v:getUniq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.CaseSplit",
          "name": "mkWith",
          "package": "idris",
          "signature": "String -\u003e Name -\u003e String",
          "source": "src/Idris-CaseSplit.html#mkWith",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris CaseSplit",
          "module": "Idris.CaseSplit",
          "name": "mkWith",
          "normalized": "String-\u003eName-\u003eString",
          "package": "idris",
          "partial": "With",
          "signature": "String-\u003eName-\u003eString",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-CaseSplit.html#v:mkWith"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.CaseSplit",
          "name": "nameMissing",
          "package": "idris",
          "signature": "[PTerm] -\u003e Idris [PTerm]",
          "source": "src/Idris-CaseSplit.html#nameMissing",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris CaseSplit",
          "module": "Idris.CaseSplit",
          "name": "nameMissing",
          "normalized": "[PTerm]-\u003eIdris[PTerm]",
          "package": "idris",
          "partial": "Missing",
          "signature": "[PTerm]-\u003eIdris[PTerm]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-CaseSplit.html#v:nameMissing"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.CaseSplit",
          "name": "nameRoot",
          "package": "idris",
          "signature": "[String] -\u003e [Char] -\u003e String",
          "source": "src/Idris-CaseSplit.html#nameRoot",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris CaseSplit",
          "module": "Idris.CaseSplit",
          "name": "nameRoot",
          "normalized": "[String]-\u003e[Char]-\u003eString",
          "package": "idris",
          "partial": "Root",
          "signature": "[String]-\u003e[Char]-\u003eString",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-CaseSplit.html#v:nameRoot"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.CaseSplit",
          "name": "replaceSplits",
          "package": "idris",
          "signature": "String -\u003e [[(Name, PTerm)]] -\u003e Idris [String]",
          "source": "src/Idris-CaseSplit.html#replaceSplits",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris CaseSplit",
          "module": "Idris.CaseSplit",
          "name": "replaceSplits",
          "normalized": "String-\u003e[[(Name,PTerm)]]-\u003eIdris[String]",
          "package": "idris",
          "partial": "Splits",
          "signature": "String-\u003e[[(Name,PTerm)]]-\u003eIdris[String]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-CaseSplit.html#v:replaceSplits"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.CaseSplit",
          "name": "splitOnLine",
          "package": "idris",
          "signature": "Int-\u003e Name-\u003e FilePath-\u003e Idris [[(Name, PTerm)]]",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris CaseSplit",
          "module": "Idris.CaseSplit",
          "name": "splitOnLine",
          "normalized": "Int-\u003eName-\u003eFilePath-\u003eIdris[[(Name,PTerm)]]",
          "package": "idris",
          "partial": "On Line",
          "signature": "Int-\u003eName-\u003eFilePath-\u003eIdris[[(Name,PTerm)]]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-CaseSplit.html#v:splitOnLine"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Chaser",
          "name": "Chaser",
          "package": "idris",
          "source": "src/Idris-Chaser.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "Idris Chaser",
          "module": "Idris.Chaser",
          "name": "Chaser",
          "package": "idris",
          "partial": "Chaser",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Chaser.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Chaser",
          "name": "ModuleTree",
          "package": "idris",
          "source": "src/Idris-Chaser.html#ModuleTree",
          "type": "data"
        },
        "index": {
          "hierarchy": "Idris Chaser",
          "module": "Idris.Chaser",
          "name": "ModuleTree",
          "package": "idris",
          "partial": "Module Tree",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Chaser.html#t:ModuleTree"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Chaser",
          "name": "MTree",
          "package": "idris",
          "signature": "MTree",
          "source": "src/Idris-Chaser.html#ModuleTree",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Chaser",
          "module": "Idris.Chaser",
          "name": "MTree",
          "package": "idris",
          "partial": "MTree",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Chaser.html#v:MTree"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Chaser",
          "name": "buildTree",
          "package": "idris",
          "signature": "[FilePath] -\u003e FilePath -\u003e Idris [ModuleTree]",
          "source": "src/Idris-Chaser.html#buildTree",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Chaser",
          "module": "Idris.Chaser",
          "name": "buildTree",
          "normalized": "[FilePath]-\u003eFilePath-\u003eIdris[ModuleTree]",
          "package": "idris",
          "partial": "Tree",
          "signature": "[FilePath]-\u003eFilePath-\u003eIdris[ModuleTree]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Chaser.html#v:buildTree"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Chaser",
          "name": "getModuleFiles",
          "package": "idris",
          "signature": "[ModuleTree] -\u003e [IFileType]",
          "source": "src/Idris-Chaser.html#getModuleFiles",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Chaser",
          "module": "Idris.Chaser",
          "name": "getModuleFiles",
          "normalized": "[ModuleTree]-\u003e[IFileType]",
          "package": "idris",
          "partial": "Module Files",
          "signature": "[ModuleTree]-\u003e[IFileType]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Chaser.html#v:getModuleFiles"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Chaser",
          "name": "mod_deps",
          "package": "idris",
          "signature": "[ModuleTree]",
          "source": "src/Idris-Chaser.html#ModuleTree",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Chaser",
          "module": "Idris.Chaser",
          "name": "mod_deps",
          "normalized": "[ModuleTree]",
          "package": "idris",
          "signature": "[ModuleTree]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Chaser.html#v:mod_deps"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Chaser",
          "name": "mod_needsRecheck",
          "package": "idris",
          "signature": "Bool",
          "source": "src/Idris-Chaser.html#ModuleTree",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Chaser",
          "module": "Idris.Chaser",
          "name": "mod_needsRecheck",
          "package": "idris",
          "partial": "Recheck",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Chaser.html#v:mod_needsRecheck"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Chaser",
          "name": "mod_path",
          "package": "idris",
          "signature": "IFileType",
          "source": "src/Idris-Chaser.html#ModuleTree",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Chaser",
          "module": "Idris.Chaser",
          "name": "mod_path",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Chaser.html#v:mod_path"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Chaser",
          "name": "mod_time",
          "package": "idris",
          "signature": "UTCTime",
          "source": "src/Idris-Chaser.html#ModuleTree",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Chaser",
          "module": "Idris.Chaser",
          "name": "mod_time",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Chaser.html#v:mod_time"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Colours",
          "name": "Colours",
          "package": "idris",
          "source": "src/Idris-Colours.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "Idris Colours",
          "module": "Idris.Colours",
          "name": "Colours",
          "package": "idris",
          "partial": "Colours",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Colours.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Colours",
          "name": "ColourTheme",
          "package": "idris",
          "source": "src/Idris-Colours.html#ColourTheme",
          "type": "data"
        },
        "index": {
          "hierarchy": "Idris Colours",
          "module": "Idris.Colours",
          "name": "ColourTheme",
          "package": "idris",
          "partial": "Colour Theme",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Colours.html#t:ColourTheme"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Colours",
          "name": "ColourType",
          "package": "idris",
          "source": "src/Idris-Colours.html#ColourType",
          "type": "data"
        },
        "index": {
          "hierarchy": "Idris Colours",
          "module": "Idris.Colours",
          "name": "ColourType",
          "package": "idris",
          "partial": "Colour Type",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Colours.html#t:ColourType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Colours",
          "name": "IdrisColour",
          "package": "idris",
          "source": "src/Idris-Colours.html#IdrisColour",
          "type": "data"
        },
        "index": {
          "hierarchy": "Idris Colours",
          "module": "Idris.Colours",
          "name": "IdrisColour",
          "package": "idris",
          "partial": "Idris Colour",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Colours.html#t:IdrisColour"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Colours",
          "name": "BoundVarColour",
          "package": "idris",
          "signature": "BoundVarColour",
          "source": "src/Idris-Colours.html#ColourType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Colours",
          "module": "Idris.Colours",
          "name": "BoundVarColour",
          "package": "idris",
          "partial": "Bound Var Colour",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Colours.html#v:BoundVarColour"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Colours",
          "name": "ColourTheme",
          "package": "idris",
          "signature": "ColourTheme",
          "source": "src/Idris-Colours.html#ColourTheme",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Colours",
          "module": "Idris.Colours",
          "name": "ColourTheme",
          "package": "idris",
          "partial": "Colour Theme",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Colours.html#v:ColourTheme"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Colours",
          "name": "DataColour",
          "package": "idris",
          "signature": "DataColour",
          "source": "src/Idris-Colours.html#ColourType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Colours",
          "module": "Idris.Colours",
          "name": "DataColour",
          "package": "idris",
          "partial": "Data Colour",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Colours.html#v:DataColour"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Colours",
          "name": "FunctionColour",
          "package": "idris",
          "signature": "FunctionColour",
          "source": "src/Idris-Colours.html#ColourType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Colours",
          "module": "Idris.Colours",
          "name": "FunctionColour",
          "package": "idris",
          "partial": "Function Colour",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Colours.html#v:FunctionColour"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Colours",
          "name": "IdrisColour",
          "package": "idris",
          "signature": "IdrisColour",
          "source": "src/Idris-Colours.html#IdrisColour",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Colours",
          "module": "Idris.Colours",
          "name": "IdrisColour",
          "package": "idris",
          "partial": "Idris Colour",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Colours.html#v:IdrisColour"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Colours",
          "name": "ImplicitColour",
          "package": "idris",
          "signature": "ImplicitColour",
          "source": "src/Idris-Colours.html#ColourType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Colours",
          "module": "Idris.Colours",
          "name": "ImplicitColour",
          "package": "idris",
          "partial": "Implicit Colour",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Colours.html#v:ImplicitColour"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Colours",
          "name": "KeywordColour",
          "package": "idris",
          "signature": "KeywordColour",
          "source": "src/Idris-Colours.html#ColourType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Colours",
          "module": "Idris.Colours",
          "name": "KeywordColour",
          "package": "idris",
          "partial": "Keyword Colour",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Colours.html#v:KeywordColour"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Colours",
          "name": "PromptColour",
          "package": "idris",
          "signature": "PromptColour",
          "source": "src/Idris-Colours.html#ColourType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Colours",
          "module": "Idris.Colours",
          "name": "PromptColour",
          "package": "idris",
          "partial": "Prompt Colour",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Colours.html#v:PromptColour"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Colours",
          "name": "TypeColour",
          "package": "idris",
          "signature": "TypeColour",
          "source": "src/Idris-Colours.html#ColourType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Colours",
          "module": "Idris.Colours",
          "name": "TypeColour",
          "package": "idris",
          "partial": "Type Colour",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Colours.html#v:TypeColour"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Colours",
          "name": "bold",
          "package": "idris",
          "signature": "Bool",
          "source": "src/Idris-Colours.html#IdrisColour",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Colours",
          "module": "Idris.Colours",
          "name": "bold",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Colours.html#v:bold"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Colours",
          "name": "boundVarColour",
          "package": "idris",
          "signature": "IdrisColour",
          "source": "src/Idris-Colours.html#ColourTheme",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Colours",
          "module": "Idris.Colours",
          "name": "boundVarColour",
          "package": "idris",
          "partial": "Var Colour",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Colours.html#v:boundVarColour"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Colours",
          "name": "colour",
          "package": "idris",
          "signature": "Maybe Color",
          "source": "src/Idris-Colours.html#IdrisColour",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Colours",
          "module": "Idris.Colours",
          "name": "colour",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Colours.html#v:colour"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Colours",
          "name": "colouriseBound",
          "package": "idris",
          "signature": "ColourTheme -\u003e String -\u003e String",
          "source": "src/Idris-Colours.html#colouriseBound",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Colours",
          "module": "Idris.Colours",
          "name": "colouriseBound",
          "normalized": "ColourTheme-\u003eString-\u003eString",
          "package": "idris",
          "partial": "Bound",
          "signature": "ColourTheme-\u003eString-\u003eString",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Colours.html#v:colouriseBound"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Colours",
          "name": "colouriseData",
          "package": "idris",
          "signature": "ColourTheme -\u003e String -\u003e String",
          "source": "src/Idris-Colours.html#colouriseData",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Colours",
          "module": "Idris.Colours",
          "name": "colouriseData",
          "normalized": "ColourTheme-\u003eString-\u003eString",
          "package": "idris",
          "partial": "Data",
          "signature": "ColourTheme-\u003eString-\u003eString",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Colours.html#v:colouriseData"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Colours",
          "name": "colouriseFun",
          "package": "idris",
          "signature": "ColourTheme -\u003e String -\u003e String",
          "source": "src/Idris-Colours.html#colouriseFun",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Colours",
          "module": "Idris.Colours",
          "name": "colouriseFun",
          "normalized": "ColourTheme-\u003eString-\u003eString",
          "package": "idris",
          "partial": "Fun",
          "signature": "ColourTheme-\u003eString-\u003eString",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Colours.html#v:colouriseFun"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Colours",
          "name": "colouriseImplicit",
          "package": "idris",
          "signature": "ColourTheme -\u003e String -\u003e String",
          "source": "src/Idris-Colours.html#colouriseImplicit",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Colours",
          "module": "Idris.Colours",
          "name": "colouriseImplicit",
          "normalized": "ColourTheme-\u003eString-\u003eString",
          "package": "idris",
          "partial": "Implicit",
          "signature": "ColourTheme-\u003eString-\u003eString",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Colours.html#v:colouriseImplicit"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Colours",
          "name": "colouriseKwd",
          "package": "idris",
          "signature": "ColourTheme -\u003e String -\u003e String",
          "source": "src/Idris-Colours.html#colouriseKwd",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Colours",
          "module": "Idris.Colours",
          "name": "colouriseKwd",
          "normalized": "ColourTheme-\u003eString-\u003eString",
          "package": "idris",
          "partial": "Kwd",
          "signature": "ColourTheme-\u003eString-\u003eString",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Colours.html#v:colouriseKwd"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Colours",
          "name": "colourisePrompt",
          "package": "idris",
          "signature": "ColourTheme -\u003e String -\u003e String",
          "source": "src/Idris-Colours.html#colourisePrompt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Colours",
          "module": "Idris.Colours",
          "name": "colourisePrompt",
          "normalized": "ColourTheme-\u003eString-\u003eString",
          "package": "idris",
          "partial": "Prompt",
          "signature": "ColourTheme-\u003eString-\u003eString",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Colours.html#v:colourisePrompt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Colours",
          "name": "colouriseType",
          "package": "idris",
          "signature": "ColourTheme -\u003e String -\u003e String",
          "source": "src/Idris-Colours.html#colouriseType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Colours",
          "module": "Idris.Colours",
          "name": "colouriseType",
          "normalized": "ColourTheme-\u003eString-\u003eString",
          "package": "idris",
          "partial": "Type",
          "signature": "ColourTheme-\u003eString-\u003eString",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Colours.html#v:colouriseType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Colours",
          "name": "dataColour",
          "package": "idris",
          "signature": "IdrisColour",
          "source": "src/Idris-Colours.html#ColourTheme",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Colours",
          "module": "Idris.Colours",
          "name": "dataColour",
          "package": "idris",
          "partial": "Colour",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Colours.html#v:dataColour"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Colours",
          "name": "defaultTheme",
          "package": "idris",
          "signature": "ColourTheme",
          "source": "src/Idris-Colours.html#defaultTheme",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Colours",
          "module": "Idris.Colours",
          "name": "defaultTheme",
          "package": "idris",
          "partial": "Theme",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Colours.html#v:defaultTheme"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Colours",
          "name": "functionColour",
          "package": "idris",
          "signature": "IdrisColour",
          "source": "src/Idris-Colours.html#ColourTheme",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Colours",
          "module": "Idris.Colours",
          "name": "functionColour",
          "package": "idris",
          "partial": "Colour",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Colours.html#v:functionColour"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Colours",
          "name": "implicitColour",
          "package": "idris",
          "signature": "IdrisColour",
          "source": "src/Idris-Colours.html#ColourTheme",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Colours",
          "module": "Idris.Colours",
          "name": "implicitColour",
          "package": "idris",
          "partial": "Colour",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Colours.html#v:implicitColour"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Colours",
          "name": "italic",
          "package": "idris",
          "signature": "Bool",
          "source": "src/Idris-Colours.html#IdrisColour",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Colours",
          "module": "Idris.Colours",
          "name": "italic",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Colours.html#v:italic"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Colours",
          "name": "keywordColour",
          "package": "idris",
          "signature": "IdrisColour",
          "source": "src/Idris-Colours.html#ColourTheme",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Colours",
          "module": "Idris.Colours",
          "name": "keywordColour",
          "package": "idris",
          "partial": "Colour",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Colours.html#v:keywordColour"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Colours",
          "name": "promptColour",
          "package": "idris",
          "signature": "IdrisColour",
          "source": "src/Idris-Colours.html#ColourTheme",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Colours",
          "module": "Idris.Colours",
          "name": "promptColour",
          "package": "idris",
          "partial": "Colour",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Colours.html#v:promptColour"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Colours",
          "name": "typeColour",
          "package": "idris",
          "signature": "IdrisColour",
          "source": "src/Idris-Colours.html#ColourTheme",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Colours",
          "module": "Idris.Colours",
          "name": "typeColour",
          "package": "idris",
          "partial": "Colour",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Colours.html#v:typeColour"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Colours",
          "name": "underline",
          "package": "idris",
          "signature": "Bool",
          "source": "src/Idris-Colours.html#IdrisColour",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Colours",
          "module": "Idris.Colours",
          "name": "underline",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Colours.html#v:underline"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Colours",
          "name": "vivid",
          "package": "idris",
          "signature": "Bool",
          "source": "src/Idris-Colours.html#IdrisColour",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Colours",
          "module": "Idris.Colours",
          "name": "vivid",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Colours.html#v:vivid"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eSupport for command-line completion at the REPL and in the prover\n\u003c/p\u003e\u003c/div\u003e",
          "module": "Idris.Completion",
          "name": "Completion",
          "package": "idris",
          "source": "src/Idris-Completion.html",
          "type": "module"
        },
        "index": {
          "description": "Support for command-line completion at the REPL and in the prover",
          "hierarchy": "Idris Completion",
          "module": "Idris.Completion",
          "name": "Completion",
          "package": "idris",
          "partial": "Completion",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Completion.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eComplete tactics and their arguments\n\u003c/p\u003e",
          "module": "Idris.Completion",
          "name": "proverCompletion",
          "package": "idris",
          "signature": "[String]-\u003e CompletionFunc Idris",
          "type": "function"
        },
        "index": {
          "description": "Complete tactics and their arguments",
          "hierarchy": "Idris Completion",
          "module": "Idris.Completion",
          "name": "proverCompletion",
          "normalized": "[String]-\u003eCompletionFunc Idris",
          "package": "idris",
          "partial": "Completion",
          "signature": "[String]-\u003eCompletionFunc Idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Completion.html#v:proverCompletion"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eComplete REPL commands and defined identifiers\n\u003c/p\u003e",
          "module": "Idris.Completion",
          "name": "replCompletion",
          "package": "idris",
          "signature": "CompletionFunc Idris",
          "source": "src/Idris-Completion.html#replCompletion",
          "type": "function"
        },
        "index": {
          "description": "Complete REPL commands and defined identifiers",
          "hierarchy": "Idris Completion",
          "module": "Idris.Completion",
          "name": "replCompletion",
          "package": "idris",
          "partial": "Completion",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Completion.html#v:replCompletion"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.CaseTree",
          "name": "CaseTree",
          "package": "idris",
          "source": "src/Idris-Core-CaseTree.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "Idris Core CaseTree",
          "module": "Idris.Core.CaseTree",
          "name": "CaseTree",
          "package": "idris",
          "partial": "Case Tree",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-CaseTree.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.CaseTree",
          "name": "CaseAlt",
          "package": "idris",
          "source": "src/Idris-Core-CaseTree.html#CaseAlt",
          "type": "type"
        },
        "index": {
          "hierarchy": "Idris Core CaseTree",
          "module": "Idris.Core.CaseTree",
          "name": "CaseAlt",
          "package": "idris",
          "partial": "Case Alt",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-CaseTree.html#t:CaseAlt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.CaseTree",
          "name": "CaseAlt'",
          "package": "idris",
          "source": "src/Idris-Core-CaseTree.html#CaseAlt%27",
          "type": "data"
        },
        "index": {
          "hierarchy": "Idris Core CaseTree",
          "module": "Idris.Core.CaseTree",
          "name": "CaseAlt'",
          "package": "idris",
          "partial": "Case Alt'",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-CaseTree.html#t:CaseAlt-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.CaseTree",
          "name": "CaseDef",
          "package": "idris",
          "source": "src/Idris-Core-CaseTree.html#CaseDef",
          "type": "data"
        },
        "index": {
          "hierarchy": "Idris Core CaseTree",
          "module": "Idris.Core.CaseTree",
          "name": "CaseDef",
          "package": "idris",
          "partial": "Case Def",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-CaseTree.html#t:CaseDef"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.CaseTree",
          "name": "CaseTree",
          "package": "idris",
          "source": "src/Idris-Core-CaseTree.html#CaseTree",
          "type": "type"
        },
        "index": {
          "hierarchy": "Idris Core CaseTree",
          "module": "Idris.Core.CaseTree",
          "name": "CaseTree",
          "package": "idris",
          "partial": "Case Tree",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-CaseTree.html#t:CaseTree"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.CaseTree",
          "name": "Phase",
          "package": "idris",
          "source": "src/Idris-Core-CaseTree.html#Phase",
          "type": "data"
        },
        "index": {
          "hierarchy": "Idris Core CaseTree",
          "module": "Idris.Core.CaseTree",
          "name": "Phase",
          "package": "idris",
          "partial": "Phase",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-CaseTree.html#t:Phase"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.CaseTree",
          "name": "SC",
          "package": "idris",
          "source": "src/Idris-Core-CaseTree.html#SC",
          "type": "type"
        },
        "index": {
          "hierarchy": "Idris Core CaseTree",
          "module": "Idris.Core.CaseTree",
          "name": "SC",
          "package": "idris",
          "partial": "SC",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-CaseTree.html#t:SC"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.CaseTree",
          "name": "SC'",
          "package": "idris",
          "source": "src/Idris-Core-CaseTree.html#SC%27",
          "type": "data"
        },
        "index": {
          "hierarchy": "Idris Core CaseTree",
          "module": "Idris.Core.CaseTree",
          "name": "SC'",
          "package": "idris",
          "partial": "SC'",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-CaseTree.html#t:SC-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003einvariant: lowest tags first\n\u003c/p\u003e",
          "module": "Idris.Core.CaseTree",
          "name": "Case",
          "package": "idris",
          "signature": "Case Name [CaseAlt' t]",
          "source": "src/Idris-Core-CaseTree.html#SC%27",
          "type": "function"
        },
        "index": {
          "description": "invariant lowest tags first",
          "hierarchy": "Idris Core CaseTree",
          "module": "Idris.Core.CaseTree",
          "name": "Case",
          "normalized": "Case Name[CaseAlt' a]",
          "package": "idris",
          "partial": "Case",
          "signature": "Case Name[CaseAlt' t]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-CaseTree.html#v:Case"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.CaseTree",
          "name": "CaseDef",
          "package": "idris",
          "signature": "CaseDef [Name] !SC [Term]",
          "source": "src/Idris-Core-CaseTree.html#CaseDef",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core CaseTree",
          "module": "Idris.Core.CaseTree",
          "name": "CaseDef",
          "normalized": "CaseDef[Name]SC[Term]",
          "package": "idris",
          "partial": "Case Def",
          "signature": "CaseDef[Name]SC[Term]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-CaseTree.html#v:CaseDef"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.CaseTree",
          "name": "CompileTime",
          "package": "idris",
          "signature": "CompileTime",
          "source": "src/Idris-Core-CaseTree.html#Phase",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core CaseTree",
          "module": "Idris.Core.CaseTree",
          "name": "CompileTime",
          "package": "idris",
          "partial": "Compile Time",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-CaseTree.html#v:CompileTime"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.CaseTree",
          "name": "ConCase",
          "package": "idris",
          "signature": "ConCase Name Int [Name] !(SC' t)",
          "source": "src/Idris-Core-CaseTree.html#CaseAlt%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core CaseTree",
          "module": "Idris.Core.CaseTree",
          "name": "ConCase",
          "normalized": "ConCase Name Int[Name](SC' a)",
          "package": "idris",
          "partial": "Con Case",
          "signature": "ConCase Name Int[Name](SC' t)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-CaseTree.html#v:ConCase"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.CaseTree",
          "name": "ConstCase",
          "package": "idris",
          "signature": "ConstCase Const !(SC' t)",
          "source": "src/Idris-Core-CaseTree.html#CaseAlt%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core CaseTree",
          "module": "Idris.Core.CaseTree",
          "name": "ConstCase",
          "package": "idris",
          "partial": "Const Case",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-CaseTree.html#v:ConstCase"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.CaseTree",
          "name": "DefaultCase",
          "package": "idris",
          "signature": "DefaultCase !(SC' t)",
          "source": "src/Idris-Core-CaseTree.html#CaseAlt%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core CaseTree",
          "module": "Idris.Core.CaseTree",
          "name": "DefaultCase",
          "package": "idris",
          "partial": "Default Case",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-CaseTree.html#v:DefaultCase"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003ereflection function\n\u003c/p\u003e",
          "module": "Idris.Core.CaseTree",
          "name": "FnCase",
          "package": "idris",
          "signature": "FnCase Name [Name] !(SC' t)",
          "source": "src/Idris-Core-CaseTree.html#CaseAlt%27",
          "type": "function"
        },
        "index": {
          "description": "reflection function",
          "hierarchy": "Idris Core CaseTree",
          "module": "Idris.Core.CaseTree",
          "name": "FnCase",
          "normalized": "FnCase Name[Name](SC' a)",
          "package": "idris",
          "partial": "Fn Case",
          "signature": "FnCase Name[Name](SC' t)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-CaseTree.html#v:FnCase"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003ealready checked to be impossible\n\u003c/p\u003e",
          "module": "Idris.Core.CaseTree",
          "name": "ImpossibleCase",
          "package": "idris",
          "signature": "ImpossibleCase",
          "source": "src/Idris-Core-CaseTree.html#SC%27",
          "type": "function"
        },
        "index": {
          "description": "already checked to be impossible",
          "hierarchy": "Idris Core CaseTree",
          "module": "Idris.Core.CaseTree",
          "name": "ImpossibleCase",
          "package": "idris",
          "partial": "Impossible Case",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-CaseTree.html#v:ImpossibleCase"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003especial case for projections\n\u003c/p\u003e",
          "module": "Idris.Core.CaseTree",
          "name": "ProjCase",
          "package": "idris",
          "signature": "ProjCase t [CaseAlt' t]",
          "source": "src/Idris-Core-CaseTree.html#SC%27",
          "type": "function"
        },
        "index": {
          "description": "special case for projections",
          "hierarchy": "Idris Core CaseTree",
          "module": "Idris.Core.CaseTree",
          "name": "ProjCase",
          "normalized": "ProjCase a[CaseAlt' a]",
          "package": "idris",
          "partial": "Proj Case",
          "signature": "ProjCase t[CaseAlt' t]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-CaseTree.html#v:ProjCase"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.CaseTree",
          "name": "RunTime",
          "package": "idris",
          "signature": "RunTime",
          "source": "src/Idris-Core-CaseTree.html#Phase",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core CaseTree",
          "module": "Idris.Core.CaseTree",
          "name": "RunTime",
          "package": "idris",
          "partial": "Run Time",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-CaseTree.html#v:RunTime"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.CaseTree",
          "name": "STerm",
          "package": "idris",
          "signature": "STerm !t",
          "source": "src/Idris-Core-CaseTree.html#SC%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core CaseTree",
          "module": "Idris.Core.CaseTree",
          "name": "STerm",
          "package": "idris",
          "partial": "STerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-CaseTree.html#v:STerm"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.CaseTree",
          "name": "SucCase",
          "package": "idris",
          "signature": "SucCase Name !(SC' t)",
          "source": "src/Idris-Core-CaseTree.html#CaseAlt%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core CaseTree",
          "module": "Idris.Core.CaseTree",
          "name": "SucCase",
          "package": "idris",
          "partial": "Suc Case",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-CaseTree.html#v:SucCase"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eerror message\n\u003c/p\u003e",
          "module": "Idris.Core.CaseTree",
          "name": "UnmatchedCase",
          "package": "idris",
          "signature": "UnmatchedCase String",
          "source": "src/Idris-Core-CaseTree.html#SC%27",
          "type": "function"
        },
        "index": {
          "description": "error message",
          "hierarchy": "Idris Core CaseTree",
          "module": "Idris.Core.CaseTree",
          "name": "UnmatchedCase",
          "package": "idris",
          "partial": "Unmatched Case",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-CaseTree.html#v:UnmatchedCase"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.CaseTree",
          "name": "findCalls",
          "package": "idris",
          "signature": "SC -\u003e [Name] -\u003e [(Name, [[Name]])]",
          "source": "src/Idris-Core-CaseTree.html#findCalls",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core CaseTree",
          "module": "Idris.Core.CaseTree",
          "name": "findCalls",
          "normalized": "SC-\u003e[Name]-\u003e[(Name,[[Name]])]",
          "package": "idris",
          "partial": "Calls",
          "signature": "SC-\u003e[Name]-\u003e[(Name,[[Name]])]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-CaseTree.html#v:findCalls"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.CaseTree",
          "name": "findUsedArgs",
          "package": "idris",
          "signature": "SC -\u003e [Name] -\u003e [Name]",
          "source": "src/Idris-Core-CaseTree.html#findUsedArgs",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core CaseTree",
          "module": "Idris.Core.CaseTree",
          "name": "findUsedArgs",
          "normalized": "SC-\u003e[Name]-\u003e[Name]",
          "package": "idris",
          "partial": "Used Args",
          "signature": "SC-\u003e[Name]-\u003e[Name]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-CaseTree.html#v:findUsedArgs"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.CaseTree",
          "name": "namesUsed",
          "package": "idris",
          "signature": "SC -\u003e [Name]",
          "source": "src/Idris-Core-CaseTree.html#namesUsed",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core CaseTree",
          "module": "Idris.Core.CaseTree",
          "name": "namesUsed",
          "normalized": "SC-\u003e[Name]",
          "package": "idris",
          "partial": "Used",
          "signature": "SC-\u003e[Name]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-CaseTree.html#v:namesUsed"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.CaseTree",
          "name": "simpleCase",
          "package": "idris",
          "signature": "Bool -\u003e Bool -\u003e Bool -\u003e Phase -\u003e FC -\u003e [Type] -\u003e [([Name], Term, Term)] -\u003e TC CaseDef",
          "source": "src/Idris-Core-CaseTree.html#simpleCase",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core CaseTree",
          "module": "Idris.Core.CaseTree",
          "name": "simpleCase",
          "normalized": "Bool-\u003eBool-\u003eBool-\u003ePhase-\u003eFC-\u003e[Type]-\u003e[([Name],Term,Term)]-\u003eTC CaseDef",
          "package": "idris",
          "partial": "Case",
          "signature": "Bool-\u003eBool-\u003eBool-\u003ePhase-\u003eFC-\u003e[Type]-\u003e[([Name],Term,Term)]-\u003eTC CaseDef",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-CaseTree.html#v:simpleCase"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.CaseTree",
          "name": "small",
          "package": "idris",
          "signature": "Name -\u003e [Name] -\u003e SC -\u003e Bool",
          "source": "src/Idris-Core-CaseTree.html#small",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core CaseTree",
          "module": "Idris.Core.CaseTree",
          "name": "small",
          "normalized": "Name-\u003e[Name]-\u003eSC-\u003eBool",
          "package": "idris",
          "signature": "Name-\u003e[Name]-\u003eSC-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-CaseTree.html#v:small"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eCheck universe constraints.\n\u003c/p\u003e\u003c/div\u003e",
          "module": "Idris.Core.Constraints",
          "name": "Constraints",
          "package": "idris",
          "source": "src/Idris-Core-Constraints.html",
          "type": "module"
        },
        "index": {
          "description": "Check universe constraints",
          "hierarchy": "Idris Core Constraints",
          "module": "Idris.Core.Constraints",
          "name": "Constraints",
          "package": "idris",
          "partial": "Constraints",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Constraints.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eCheck that a list of universe constraints can be satisfied.\n\u003c/p\u003e",
          "module": "Idris.Core.Constraints",
          "name": "ucheck",
          "package": "idris",
          "signature": "[(UConstraint, FC)] -\u003e TC ()",
          "source": "src/Idris-Core-Constraints.html#ucheck",
          "type": "function"
        },
        "index": {
          "description": "Check that list of universe constraints can be satisfied",
          "hierarchy": "Idris Core Constraints",
          "module": "Idris.Core.Constraints",
          "name": "ucheck",
          "normalized": "[(UConstraint,FC)]-\u003eTC()",
          "package": "idris",
          "signature": "[(UConstraint,FC)]-\u003eTC()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Constraints.html#v:ucheck"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.DeepSeq",
          "name": "DeepSeq",
          "package": "idris",
          "source": "src/Idris-Core-DeepSeq.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "Idris Core DeepSeq",
          "module": "Idris.Core.DeepSeq",
          "name": "DeepSeq",
          "package": "idris",
          "partial": "Deep Seq",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-DeepSeq.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "Elaborate",
          "package": "idris",
          "source": "src/Idris-Core-Elaborate.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "Elaborate",
          "package": "idris",
          "partial": "Elaborate",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "Command",
          "package": "idris",
          "source": "src/Idris-Core-Elaborate.html#Command",
          "type": "data"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "Command",
          "package": "idris",
          "partial": "Command",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#t:Command"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "Elab",
          "package": "idris",
          "source": "src/Idris-Core-Elaborate.html#Elab",
          "type": "type"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "Elab",
          "package": "idris",
          "partial": "Elab",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#t:Elab"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "Elab'",
          "package": "idris",
          "source": "src/Idris-Core-Elaborate.html#Elab%27",
          "type": "type"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "Elab'",
          "package": "idris",
          "partial": "Elab'",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#t:Elab-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "ElabState",
          "package": "idris",
          "source": "src/Idris-Core-Elaborate.html#ElabState",
          "type": "data"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "ElabState",
          "package": "idris",
          "partial": "Elab State",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#t:ElabState"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "ES",
          "package": "idris",
          "signature": "ES (ProofState, aux) String (Maybe (ElabState aux))",
          "source": "src/Idris-Core-Elaborate.html#ElabState",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "ES",
          "normalized": "ES(ProofState,a)String(Maybe(ElabState a))",
          "package": "idris",
          "partial": "ES",
          "signature": "ES(ProofState,aux)String(Maybe(ElabState aux))",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:ES"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "Eval",
          "package": "idris",
          "signature": "Eval Raw",
          "source": "src/Idris-Core-Elaborate.html#Command",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "Eval",
          "package": "idris",
          "partial": "Eval",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:Eval"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "Print",
          "package": "idris",
          "signature": "Print Name",
          "source": "src/Idris-Core-Elaborate.html#Command",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "Print",
          "package": "idris",
          "partial": "Print",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:Print"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "Quit",
          "package": "idris",
          "signature": "Quit",
          "source": "src/Idris-Core-Elaborate.html#Command",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "Quit",
          "package": "idris",
          "partial": "Quit",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:Quit"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "Tac",
          "package": "idris",
          "signature": "Tac (Elab ())",
          "source": "src/Idris-Core-Elaborate.html#Command",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "Tac",
          "normalized": "Tac(Elab())",
          "package": "idris",
          "partial": "Tac",
          "signature": "Tac(Elab())",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:Tac"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "Theorem",
          "package": "idris",
          "signature": "Theorem Name Raw",
          "source": "src/Idris-Core-Elaborate.html#Command",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "Theorem",
          "package": "idris",
          "partial": "Theorem",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:Theorem"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "apply",
          "package": "idris",
          "signature": "Raw -\u003e [(Bool, Int)] -\u003e Elab' aux [(Name, Name)]",
          "source": "src/Idris-Core-Elaborate.html#apply",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "apply",
          "normalized": "Raw-\u003e[(Bool,Int)]-\u003eElab' a[(Name,Name)]",
          "package": "idris",
          "signature": "Raw-\u003e[(Bool,Int)]-\u003eElab' aux[(Name,Name)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:apply"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "apply'",
          "package": "idris",
          "signature": "(Raw -\u003e Elab' aux ()) -\u003e Raw -\u003e [(Bool, Int)] -\u003e Elab' aux [(Name, Name)]",
          "source": "src/Idris-Core-Elaborate.html#apply%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "apply'",
          "normalized": "(Raw-\u003eElab' a())-\u003eRaw-\u003e[(Bool,Int)]-\u003eElab' a[(Name,Name)]",
          "package": "idris",
          "signature": "(Raw-\u003eElab' aux())-\u003eRaw-\u003e[(Bool,Int)]-\u003eElab' aux[(Name,Name)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:apply-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "apply2",
          "package": "idris",
          "signature": "Raw -\u003e [Maybe (Elab' aux ())] -\u003e Elab' aux ()",
          "source": "src/Idris-Core-Elaborate.html#apply2",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "apply2",
          "normalized": "Raw-\u003e[Maybe(Elab' a())]-\u003eElab' a()",
          "package": "idris",
          "signature": "Raw-\u003e[Maybe(Elab' aux())]-\u003eElab' aux()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:apply2"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "apply_elab",
          "package": "idris",
          "signature": "Name -\u003e [Maybe (Int, Elab' aux ())] -\u003e Elab' aux ()",
          "source": "src/Idris-Core-Elaborate.html#apply_elab",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "apply_elab",
          "normalized": "Name-\u003e[Maybe(Int,Elab' a())]-\u003eElab' a()",
          "package": "idris",
          "signature": "Name-\u003e[Maybe(Int,Elab' aux())]-\u003eElab' aux()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:apply_elab"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "arg",
          "package": "idris",
          "signature": "Name -\u003e Name -\u003e Elab' aux ()",
          "source": "src/Idris-Core-Elaborate.html#arg",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "arg",
          "normalized": "Name-\u003eName-\u003eElab' a()",
          "package": "idris",
          "signature": "Name-\u003eName-\u003eElab' aux()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:arg"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "attack",
          "package": "idris",
          "signature": "Elab' aux ()",
          "source": "src/Idris-Core-Elaborate.html#attack",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "attack",
          "normalized": "Elab' a()",
          "package": "idris",
          "signature": "Elab' aux()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:attack"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "checkInjective",
          "package": "idris",
          "signature": "(Term, Term, Term) -\u003e Elab' aux ()",
          "source": "src/Idris-Core-Elaborate.html#checkInjective",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "checkInjective",
          "normalized": "(Term,Term,Term)-\u003eElab' a()",
          "package": "idris",
          "partial": "Injective",
          "signature": "(Term,Term,Term)-\u003eElab' aux()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:checkInjective"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "checkPiGoal",
          "package": "idris",
          "signature": "Name -\u003e Elab' aux ()",
          "source": "src/Idris-Core-Elaborate.html#checkPiGoal",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "checkPiGoal",
          "normalized": "Name-\u003eElab' a()",
          "package": "idris",
          "partial": "Pi Goal",
          "signature": "Name-\u003eElab' aux()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:checkPiGoal"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "check_in",
          "package": "idris",
          "signature": "Raw -\u003e Elab' aux ()",
          "source": "src/Idris-Core-Elaborate.html#check_in",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "check_in",
          "normalized": "Raw-\u003eElab' a()",
          "package": "idris",
          "signature": "Raw-\u003eElab' aux()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:check_in"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "claim",
          "package": "idris",
          "signature": "Name -\u003e Raw -\u003e Elab' aux ()",
          "source": "src/Idris-Core-Elaborate.html#claim",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "claim",
          "normalized": "Name-\u003eRaw-\u003eElab' a()",
          "package": "idris",
          "signature": "Name-\u003eRaw-\u003eElab' aux()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:claim"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "complete_fill",
          "package": "idris",
          "signature": "Elab' aux ()",
          "source": "src/Idris-Core-Elaborate.html#complete_fill",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "complete_fill",
          "normalized": "Elab' a()",
          "package": "idris",
          "signature": "Elab' aux()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:complete_fill"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "compute",
          "package": "idris",
          "signature": "Elab' aux ()",
          "source": "src/Idris-Core-Elaborate.html#compute",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "compute",
          "normalized": "Elab' a()",
          "package": "idris",
          "signature": "Elab' aux()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:compute"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "computeLet",
          "package": "idris",
          "signature": "Name -\u003e Elab' aux ()",
          "source": "src/Idris-Core-Elaborate.html#computeLet",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "computeLet",
          "normalized": "Name-\u003eElab' a()",
          "package": "idris",
          "partial": "Let",
          "signature": "Name-\u003eElab' aux()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:computeLet"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "defer",
          "package": "idris",
          "signature": "Name -\u003e Elab' aux ()",
          "source": "src/Idris-Core-Elaborate.html#defer",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "defer",
          "normalized": "Name-\u003eElab' a()",
          "package": "idris",
          "signature": "Name-\u003eElab' aux()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:defer"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "deferType",
          "package": "idris",
          "signature": "Name -\u003e Raw -\u003e [Name] -\u003e Elab' aux ()",
          "source": "src/Idris-Core-Elaborate.html#deferType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "deferType",
          "normalized": "Name-\u003eRaw-\u003e[Name]-\u003eElab' a()",
          "package": "idris",
          "partial": "Type",
          "signature": "Name-\u003eRaw-\u003e[Name]-\u003eElab' aux()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:deferType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "dumpprobs",
          "package": "idris",
          "signature": "[(t, t1, t2, a)] -\u003e [Char]",
          "source": "src/Idris-Core-Elaborate.html#dumpprobs",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "dumpprobs",
          "normalized": "[(a,a,a,b)]-\u003e[Char]",
          "package": "idris",
          "signature": "[(t,t,t,a)]-\u003e[Char]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:dumpprobs"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "elaborate",
          "package": "idris",
          "signature": "Context -\u003e Name -\u003e Type -\u003e aux -\u003e Elab' aux a -\u003e TC (a, String)",
          "source": "src/Idris-Core-Elaborate.html#elaborate",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "elaborate",
          "normalized": "Context-\u003eName-\u003eType-\u003ea-\u003eElab' a b-\u003eTC(b,String)",
          "package": "idris",
          "signature": "Context-\u003eName-\u003eType-\u003eaux-\u003eElab' aux a-\u003eTC(a,String)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:elaborate"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "elog",
          "package": "idris",
          "signature": "String -\u003e Elab' aux ()",
          "source": "src/Idris-Core-Elaborate.html#elog",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "elog",
          "normalized": "String-\u003eElab' a()",
          "package": "idris",
          "signature": "String-\u003eElab' aux()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:elog"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "end_unify",
          "package": "idris",
          "signature": "Elab' aux ()",
          "source": "src/Idris-Core-Elaborate.html#end_unify",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "end_unify",
          "normalized": "Elab' a()",
          "package": "idris",
          "signature": "Elab' aux()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:end_unify"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "equiv",
          "package": "idris",
          "signature": "Raw -\u003e Elab' aux ()",
          "source": "src/Idris-Core-Elaborate.html#equiv",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "equiv",
          "normalized": "Raw-\u003eElab' a()",
          "package": "idris",
          "signature": "Raw-\u003eElab' aux()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:equiv"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "errAt",
          "package": "idris",
          "signature": "String -\u003e Name -\u003e Elab' aux a -\u003e Elab' aux a",
          "source": "src/Idris-Core-Elaborate.html#errAt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "errAt",
          "normalized": "String-\u003eName-\u003eElab' a b-\u003eElab' a b",
          "package": "idris",
          "partial": "At",
          "signature": "String-\u003eName-\u003eElab' aux a-\u003eElab' aux a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:errAt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "erun",
          "package": "idris",
          "signature": "FC -\u003e Elab' aux a -\u003e Elab' aux a",
          "source": "src/Idris-Core-Elaborate.html#erun",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "erun",
          "normalized": "FC-\u003eElab' a b-\u003eElab' a b",
          "package": "idris",
          "signature": "FC-\u003eElab' aux a-\u003eElab' aux a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:erun"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "eval_in",
          "package": "idris",
          "signature": "Raw -\u003e Elab' aux ()",
          "source": "src/Idris-Core-Elaborate.html#eval_in",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "eval_in",
          "normalized": "Raw-\u003eElab' a()",
          "package": "idris",
          "signature": "Raw-\u003eElab' aux()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:eval_in"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "exact",
          "package": "idris",
          "signature": "Raw -\u003e Elab' aux ()",
          "source": "src/Idris-Core-Elaborate.html#exact",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "exact",
          "normalized": "Raw-\u003eElab' a()",
          "package": "idris",
          "signature": "Raw-\u003eElab' aux()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:exact"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "execElab",
          "package": "idris",
          "signature": "aux -\u003e Elab' aux a -\u003e ProofState -\u003e TC (ElabState aux)",
          "source": "src/Idris-Core-Elaborate.html#execElab",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "execElab",
          "normalized": "a-\u003eElab' a b-\u003eProofState-\u003eTC(ElabState a)",
          "package": "idris",
          "partial": "Elab",
          "signature": "aux-\u003eElab' aux a-\u003eProofState-\u003eTC(ElabState aux)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:execElab"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "expandLet",
          "package": "idris",
          "signature": "Name -\u003e Term -\u003e Elab' aux ()",
          "source": "src/Idris-Core-Elaborate.html#expandLet",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "expandLet",
          "normalized": "Name-\u003eTerm-\u003eElab' a()",
          "package": "idris",
          "partial": "Let",
          "signature": "Name-\u003eTerm-\u003eElab' aux()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:expandLet"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "explicit",
          "package": "idris",
          "signature": "Name -\u003e Elab' aux ()",
          "source": "src/Idris-Core-Elaborate.html#explicit",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "explicit",
          "normalized": "Name-\u003eElab' a()",
          "package": "idris",
          "signature": "Name-\u003eElab' aux()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:explicit"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "fill",
          "package": "idris",
          "signature": "Raw -\u003e Elab' aux ()",
          "source": "src/Idris-Core-Elaborate.html#fill",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "fill",
          "normalized": "Raw-\u003eElab' a()",
          "package": "idris",
          "signature": "Raw-\u003eElab' aux()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:fill"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "focus",
          "package": "idris",
          "signature": "Name -\u003e Elab' aux ()",
          "source": "src/Idris-Core-Elaborate.html#focus",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "focus",
          "normalized": "Name-\u003eElab' a()",
          "package": "idris",
          "signature": "Name-\u003eElab' aux()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:focus"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "forall",
          "package": "idris",
          "signature": "Name -\u003e Raw -\u003e Elab' aux ()",
          "source": "src/Idris-Core-Elaborate.html#forall",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "forall",
          "normalized": "Name-\u003eRaw-\u003eElab' a()",
          "package": "idris",
          "signature": "Name-\u003eRaw-\u003eElab' aux()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:forall"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "force_term",
          "package": "idris",
          "signature": "Elab' aux ()",
          "source": "src/Idris-Core-Elaborate.html#force_term",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "force_term",
          "normalized": "Elab' a()",
          "package": "idris",
          "signature": "Elab' aux()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:force_term"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "getAux",
          "package": "idris",
          "signature": "Elab' aux aux",
          "source": "src/Idris-Core-Elaborate.html#getAux",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "getAux",
          "package": "idris",
          "partial": "Aux",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:getAux"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "getLog",
          "package": "idris",
          "signature": "Elab' aux String",
          "source": "src/Idris-Core-Elaborate.html#getLog",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "getLog",
          "package": "idris",
          "partial": "Log",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:getLog"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "getNameFrom",
          "package": "idris",
          "signature": "Name -\u003e Elab' aux Name",
          "source": "src/Idris-Core-Elaborate.html#getNameFrom",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "getNameFrom",
          "normalized": "Name-\u003eElab' a Name",
          "package": "idris",
          "partial": "Name From",
          "signature": "Name-\u003eElab' aux Name",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:getNameFrom"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "getUnifyLog",
          "package": "idris",
          "signature": "Elab' aux Bool",
          "source": "src/Idris-Core-Elaborate.html#getUnifyLog",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "getUnifyLog",
          "package": "idris",
          "partial": "Unify Log",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:getUnifyLog"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "get_context",
          "package": "idris",
          "signature": "Elab' aux Context",
          "source": "src/Idris-Core-Elaborate.html#get_context",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "get_context",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:get_context"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "get_deferred",
          "package": "idris",
          "signature": "Elab' aux [Name]",
          "source": "src/Idris-Core-Elaborate.html#get_deferred",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "get_deferred",
          "normalized": "Elab' a[Name]",
          "package": "idris",
          "signature": "Elab' aux[Name]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:get_deferred"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "get_env",
          "package": "idris",
          "signature": "Elab' aux Env",
          "source": "src/Idris-Core-Elaborate.html#get_env",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "get_env",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:get_env"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "get_guess",
          "package": "idris",
          "signature": "Elab' aux Type",
          "source": "src/Idris-Core-Elaborate.html#get_guess",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "get_guess",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:get_guess"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "get_holes",
          "package": "idris",
          "signature": "Elab' aux [Name]",
          "source": "src/Idris-Core-Elaborate.html#get_holes",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "get_holes",
          "normalized": "Elab' a[Name]",
          "package": "idris",
          "signature": "Elab' aux[Name]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:get_holes"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "get_instances",
          "package": "idris",
          "signature": "Elab' aux [Name]",
          "source": "src/Idris-Core-Elaborate.html#get_instances",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "get_instances",
          "normalized": "Elab' a[Name]",
          "package": "idris",
          "signature": "Elab' aux[Name]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:get_instances"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "get_probs",
          "package": "idris",
          "signature": "Elab' aux Fails",
          "source": "src/Idris-Core-Elaborate.html#get_probs",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "get_probs",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:get_probs"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "get_term",
          "package": "idris",
          "signature": "Elab' aux Term",
          "source": "src/Idris-Core-Elaborate.html#get_term",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "get_term",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:get_term"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "get_type",
          "package": "idris",
          "signature": "Raw -\u003e Elab' aux Type",
          "source": "src/Idris-Core-Elaborate.html#get_type",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "get_type",
          "normalized": "Raw-\u003eElab' a Type",
          "package": "idris",
          "signature": "Raw-\u003eElab' aux Type",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:get_type"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "get_type_val",
          "package": "idris",
          "signature": "Raw -\u003e Elab' aux (Term, Type)",
          "source": "src/Idris-Core-Elaborate.html#get_type_val",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "get_type_val",
          "normalized": "Raw-\u003eElab' a(Term,Type)",
          "package": "idris",
          "signature": "Raw-\u003eElab' aux(Term,Type)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:get_type_val"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "goal",
          "package": "idris",
          "signature": "Elab' aux Type",
          "source": "src/Idris-Core-Elaborate.html#goal",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "goal",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:goal"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "hnf_compute",
          "package": "idris",
          "signature": "Elab' aux ()",
          "source": "src/Idris-Core-Elaborate.html#hnf_compute",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "hnf_compute",
          "normalized": "Elab' a()",
          "package": "idris",
          "signature": "Elab' aux()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:hnf_compute"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "induction",
          "package": "idris",
          "signature": "Name -\u003e Elab' aux ()",
          "source": "src/Idris-Core-Elaborate.html#induction",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "induction",
          "normalized": "Name-\u003eElab' a()",
          "package": "idris",
          "signature": "Name-\u003eElab' aux()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:induction"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "initElaborator",
          "package": "idris",
          "signature": "Name -\u003e Context -\u003e Type -\u003e ProofState",
          "source": "src/Idris-Core-Elaborate.html#initElaborator",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "initElaborator",
          "normalized": "Name-\u003eContext-\u003eType-\u003eProofState",
          "package": "idris",
          "partial": "Elaborator",
          "signature": "Name-\u003eContext-\u003eType-\u003eProofState",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:initElaborator"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "initNextNameFrom",
          "package": "idris",
          "signature": "[Name] -\u003e Elab' aux ()",
          "source": "src/Idris-Core-Elaborate.html#initNextNameFrom",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "initNextNameFrom",
          "normalized": "[Name]-\u003eElab' a()",
          "package": "idris",
          "partial": "Next Name From",
          "signature": "[Name]-\u003eElab' aux()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:initNextNameFrom"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "instanceArg",
          "package": "idris",
          "signature": "Name -\u003e Elab' aux ()",
          "source": "src/Idris-Core-Elaborate.html#instanceArg",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "instanceArg",
          "normalized": "Name-\u003eElab' a()",
          "package": "idris",
          "partial": "Arg",
          "signature": "Name-\u003eElab' aux()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:instanceArg"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "intro",
          "package": "idris",
          "signature": "Maybe Name -\u003e Elab' aux ()",
          "source": "src/Idris-Core-Elaborate.html#intro",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "intro",
          "normalized": "Maybe Name-\u003eElab' a()",
          "package": "idris",
          "signature": "Maybe Name-\u003eElab' aux()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:intro"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "introTy",
          "package": "idris",
          "signature": "Raw -\u003e Maybe Name -\u003e Elab' aux ()",
          "source": "src/Idris-Core-Elaborate.html#introTy",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "introTy",
          "normalized": "Raw-\u003eMaybe Name-\u003eElab' a()",
          "package": "idris",
          "partial": "Ty",
          "signature": "Raw-\u003eMaybe Name-\u003eElab' aux()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:introTy"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "letbind",
          "package": "idris",
          "signature": "Name -\u003e Raw -\u003e Raw -\u003e Elab' aux ()",
          "source": "src/Idris-Core-Elaborate.html#letbind",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "letbind",
          "normalized": "Name-\u003eRaw-\u003eRaw-\u003eElab' a()",
          "package": "idris",
          "signature": "Name-\u003eRaw-\u003eRaw-\u003eElab' aux()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:letbind"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "loadState",
          "package": "idris",
          "signature": "Elab' aux ()",
          "source": "src/Idris-Core-Elaborate.html#loadState",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "loadState",
          "normalized": "Elab' a()",
          "package": "idris",
          "partial": "State",
          "signature": "Elab' aux()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:loadState"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "matchProblems",
          "package": "idris",
          "signature": "Elab' aux ()",
          "source": "src/Idris-Core-Elaborate.html#matchProblems",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "matchProblems",
          "normalized": "Elab' a()",
          "package": "idris",
          "partial": "Problems",
          "signature": "Elab' aux()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:matchProblems"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "match_apply",
          "package": "idris",
          "signature": "Raw -\u003e [(Bool, Int)] -\u003e Elab' aux [(Name, Name)]",
          "source": "src/Idris-Core-Elaborate.html#match_apply",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "match_apply",
          "normalized": "Raw-\u003e[(Bool,Int)]-\u003eElab' a[(Name,Name)]",
          "package": "idris",
          "signature": "Raw-\u003e[(Bool,Int)]-\u003eElab' aux[(Name,Name)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:match_apply"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "match_fill",
          "package": "idris",
          "signature": "Raw -\u003e Elab' aux ()",
          "source": "src/Idris-Core-Elaborate.html#match_fill",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "match_fill",
          "normalized": "Raw-\u003eElab' a()",
          "package": "idris",
          "signature": "Raw-\u003eElab' aux()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:match_fill"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "movelast",
          "package": "idris",
          "signature": "Name -\u003e Elab' aux ()",
          "source": "src/Idris-Core-Elaborate.html#movelast",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "movelast",
          "normalized": "Name-\u003eElab' a()",
          "package": "idris",
          "signature": "Name-\u003eElab' aux()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:movelast"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "no_errors",
          "package": "idris",
          "signature": "Elab' aux () -\u003e Maybe Err -\u003e Elab' aux ()",
          "source": "src/Idris-Core-Elaborate.html#no_errors",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "no_errors",
          "normalized": "Elab' a()-\u003eMaybe Err-\u003eElab' a()",
          "package": "idris",
          "signature": "Elab' aux()-\u003eMaybe Err-\u003eElab' aux()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:no_errors"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "patbind",
          "package": "idris",
          "signature": "Name -\u003e Elab' aux ()",
          "source": "src/Idris-Core-Elaborate.html#patbind",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "patbind",
          "normalized": "Name-\u003eElab' a()",
          "package": "idris",
          "signature": "Name-\u003eElab' aux()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:patbind"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "patvar",
          "package": "idris",
          "signature": "Name -\u003e Elab' aux ()",
          "source": "src/Idris-Core-Elaborate.html#patvar",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "patvar",
          "normalized": "Name-\u003eElab' a()",
          "package": "idris",
          "signature": "Name-\u003eElab' aux()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:patvar"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "prep_fill",
          "package": "idris",
          "signature": "Name -\u003e [Name] -\u003e Elab' aux ()",
          "source": "src/Idris-Core-Elaborate.html#prep_fill",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "prep_fill",
          "normalized": "Name-\u003e[Name]-\u003eElab' a()",
          "package": "idris",
          "signature": "Name-\u003e[Name]-\u003eElab' aux()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:prep_fill"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003ePrepare to apply a function by creating holes to be filled by the arguments\n\u003c/p\u003e",
          "module": "Idris.Core.Elaborate",
          "name": "prepare_apply",
          "package": "idris",
          "signature": "Raw-\u003e [Bool]-\u003e Elab' aux [(Name, Name)]",
          "type": "function"
        },
        "index": {
          "description": "Prepare to apply function by creating holes to be filled by the arguments",
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "prepare_apply",
          "normalized": "Raw-\u003e[Bool]-\u003eElab' a[(Name,Name)]",
          "package": "idris",
          "signature": "Raw-\u003e[Bool]-\u003eElab' aux[(Name,Name)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:prepare_apply"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "processTactic'",
          "package": "idris",
          "signature": "Tactic -\u003e t (TC' Err) ()",
          "source": "src/Idris-Core-Elaborate.html#processTactic%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "processTactic'",
          "normalized": "Tactic-\u003ea(TC' Err)()",
          "package": "idris",
          "partial": "Tactic'",
          "signature": "Tactic-\u003et(TC' Err)()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:processTactic-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "proof",
          "package": "idris",
          "signature": "ElabState aux -\u003e ProofState",
          "source": "src/Idris-Core-Elaborate.html#proof",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "proof",
          "normalized": "ElabState a-\u003eProofState",
          "package": "idris",
          "signature": "ElabState aux-\u003eProofState",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:proof"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "proofFail",
          "package": "idris",
          "signature": "Elab' aux a -\u003e Elab' aux a",
          "source": "src/Idris-Core-Elaborate.html#proofFail",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "proofFail",
          "normalized": "Elab' a b-\u003eElab' a b",
          "package": "idris",
          "partial": "Fail",
          "signature": "Elab' aux a-\u003eElab' aux a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:proofFail"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "proofstate",
          "package": "idris",
          "signature": "Elab' aux ()",
          "source": "src/Idris-Core-Elaborate.html#proofstate",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "proofstate",
          "normalized": "Elab' a()",
          "package": "idris",
          "signature": "Elab' aux()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:proofstate"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "prunStateT",
          "package": "idris",
          "signature": "Int -\u003e Bool -\u003e [a] -\u003e StateT (ElabState t) (TC' Err) t1 -\u003e ElabState t -\u003e TC' Err ((t1, Int), ElabState t)",
          "source": "src/Idris-Core-Elaborate.html#prunStateT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "prunStateT",
          "normalized": "Int-\u003eBool-\u003e[a]-\u003eStateT(ElabState b)(TC' Err)b-\u003eElabState b-\u003eTC' Err((b,Int),ElabState b)",
          "package": "idris",
          "partial": "State",
          "signature": "Int-\u003eBool-\u003e[a]-\u003eStateT(ElabState t)(TC' Err)t-\u003eElabState t-\u003eTC' Err((t,Int),ElabState t)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:prunStateT"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "qed",
          "package": "idris",
          "signature": "Elab' aux Term",
          "source": "src/Idris-Core-Elaborate.html#qed",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "qed",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:qed"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "qshow",
          "package": "idris",
          "signature": "Fails -\u003e String",
          "source": "src/Idris-Core-Elaborate.html#qshow",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "qshow",
          "normalized": "Fails-\u003eString",
          "package": "idris",
          "signature": "Fails-\u003eString",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:qshow"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "regret",
          "package": "idris",
          "signature": "Elab' aux ()",
          "source": "src/Idris-Core-Elaborate.html#regret",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "regret",
          "normalized": "Elab' a()",
          "package": "idris",
          "signature": "Elab' aux()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:regret"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "reorder_claims",
          "package": "idris",
          "signature": "Name -\u003e Elab' aux ()",
          "source": "src/Idris-Core-Elaborate.html#reorder_claims",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "reorder_claims",
          "normalized": "Name-\u003eElab' a()",
          "package": "idris",
          "signature": "Name-\u003eElab' aux()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:reorder_claims"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "rewrite",
          "package": "idris",
          "signature": "Raw -\u003e Elab' aux ()",
          "source": "src/Idris-Core-Elaborate.html#rewrite",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "rewrite",
          "normalized": "Raw-\u003eElab' a()",
          "package": "idris",
          "signature": "Raw-\u003eElab' aux()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:rewrite"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "runElab",
          "package": "idris",
          "signature": "aux -\u003e Elab' aux a -\u003e ProofState -\u003e TC (a, ElabState aux)",
          "source": "src/Idris-Core-Elaborate.html#runElab",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "runElab",
          "normalized": "a-\u003eElab' a b-\u003eProofState-\u003eTC(b,ElabState a)",
          "package": "idris",
          "partial": "Elab",
          "signature": "aux-\u003eElab' aux a-\u003eProofState-\u003eTC(a,ElabState aux)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:runElab"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "saveState",
          "package": "idris",
          "signature": "Elab' aux ()",
          "source": "src/Idris-Core-Elaborate.html#saveState",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "saveState",
          "normalized": "Elab' a()",
          "package": "idris",
          "partial": "State",
          "signature": "Elab' aux()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:saveState"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "setNextName",
          "package": "idris",
          "signature": "Elab' aux ()",
          "source": "src/Idris-Core-Elaborate.html#setNextName",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "setNextName",
          "normalized": "Elab' a()",
          "package": "idris",
          "partial": "Next Name",
          "signature": "Elab' aux()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:setNextName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "set_context",
          "package": "idris",
          "signature": "Context -\u003e Elab' aux ()",
          "source": "src/Idris-Core-Elaborate.html#set_context",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "set_context",
          "normalized": "Context-\u003eElab' a()",
          "package": "idris",
          "signature": "Context-\u003eElab' aux()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:set_context"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "setinj",
          "package": "idris",
          "signature": "Name -\u003e Elab' aux ()",
          "source": "src/Idris-Core-Elaborate.html#setinj",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "setinj",
          "normalized": "Name-\u003eElab' a()",
          "package": "idris",
          "signature": "Name-\u003eElab' aux()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:setinj"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "simple_app",
          "package": "idris",
          "signature": "Elab' aux () -\u003e Elab' aux () -\u003e String -\u003e Elab' aux ()",
          "source": "src/Idris-Core-Elaborate.html#simple_app",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "simple_app",
          "normalized": "Elab' a()-\u003eElab' a()-\u003eString-\u003eElab' a()",
          "package": "idris",
          "signature": "Elab' aux()-\u003eElab' aux()-\u003eString-\u003eElab' aux()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:simple_app"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "simplify",
          "package": "idris",
          "signature": "Elab' aux ()",
          "source": "src/Idris-Core-Elaborate.html#simplify",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "simplify",
          "normalized": "Elab' a()",
          "package": "idris",
          "signature": "Elab' aux()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:simplify"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "solve",
          "package": "idris",
          "signature": "Elab' aux ()",
          "source": "src/Idris-Core-Elaborate.html#solve",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "solve",
          "normalized": "Elab' a()",
          "package": "idris",
          "signature": "Elab' aux()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:solve"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "start_unify",
          "package": "idris",
          "signature": "Name -\u003e Elab' aux ()",
          "source": "src/Idris-Core-Elaborate.html#start_unify",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "start_unify",
          "normalized": "Name-\u003eElab' a()",
          "package": "idris",
          "signature": "Name-\u003eElab' aux()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:start_unify"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "try",
          "package": "idris",
          "signature": "Elab' aux a -\u003e Elab' aux a -\u003e Elab' aux a",
          "source": "src/Idris-Core-Elaborate.html#try",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "try",
          "normalized": "Elab' a b-\u003eElab' a b-\u003eElab' a b",
          "package": "idris",
          "signature": "Elab' aux a-\u003eElab' aux a-\u003eElab' aux a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:try"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "try'",
          "package": "idris",
          "signature": "Elab' aux a -\u003e Elab' aux a -\u003e Bool -\u003e Elab' aux a",
          "source": "src/Idris-Core-Elaborate.html#try%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "try'",
          "normalized": "Elab' a b-\u003eElab' a b-\u003eBool-\u003eElab' a b",
          "package": "idris",
          "signature": "Elab' aux a-\u003eElab' aux a-\u003eBool-\u003eElab' aux a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:try-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "tryAll",
          "package": "idris",
          "signature": "[(Elab' aux a, String)] -\u003e Elab' aux a",
          "source": "src/Idris-Core-Elaborate.html#tryAll",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "tryAll",
          "normalized": "[(Elab' a b,String)]-\u003eElab' a b",
          "package": "idris",
          "partial": "All",
          "signature": "[(Elab' aux a,String)]-\u003eElab' aux a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:tryAll"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "tryWhen",
          "package": "idris",
          "signature": "Bool -\u003e Elab' aux a -\u003e Elab' aux a -\u003e Elab' aux a",
          "source": "src/Idris-Core-Elaborate.html#tryWhen",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "tryWhen",
          "normalized": "Bool-\u003eElab' a b-\u003eElab' a b-\u003eElab' a b",
          "package": "idris",
          "partial": "When",
          "signature": "Bool-\u003eElab' aux a-\u003eElab' aux a-\u003eElab' aux a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:tryWhen"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "undo",
          "package": "idris",
          "signature": "Elab' aux ()",
          "source": "src/Idris-Core-Elaborate.html#undo",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "undo",
          "normalized": "Elab' a()",
          "package": "idris",
          "signature": "Elab' aux()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:undo"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "unifyLog",
          "package": "idris",
          "signature": "Bool -\u003e Elab' aux ()",
          "source": "src/Idris-Core-Elaborate.html#unifyLog",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "unifyLog",
          "normalized": "Bool-\u003eElab' a()",
          "package": "idris",
          "partial": "Log",
          "signature": "Bool-\u003eElab' aux()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:unifyLog"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "unifyProblems",
          "package": "idris",
          "signature": "Elab' aux ()",
          "source": "src/Idris-Core-Elaborate.html#unifyProblems",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "unifyProblems",
          "normalized": "Elab' a()",
          "package": "idris",
          "partial": "Problems",
          "signature": "Elab' aux()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:unifyProblems"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "unique_hole",
          "package": "idris",
          "signature": "Name -\u003e Elab' aux Name",
          "source": "src/Idris-Core-Elaborate.html#unique_hole",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "unique_hole",
          "normalized": "Name-\u003eElab' a Name",
          "package": "idris",
          "signature": "Name-\u003eElab' aux Name",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:unique_hole"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "unique_hole'",
          "package": "idris",
          "signature": "Bool -\u003e Name -\u003e Elab' aux Name",
          "source": "src/Idris-Core-Elaborate.html#unique_hole%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "unique_hole'",
          "normalized": "Bool-\u003eName-\u003eElab' a Name",
          "package": "idris",
          "signature": "Bool-\u003eName-\u003eElab' aux Name",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:unique_hole-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "updateAux",
          "package": "idris",
          "signature": "(aux -\u003e aux) -\u003e Elab' aux ()",
          "source": "src/Idris-Core-Elaborate.html#updateAux",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "updateAux",
          "normalized": "(a-\u003ea)-\u003eElab' a()",
          "package": "idris",
          "partial": "Aux",
          "signature": "(aux-\u003eaux)-\u003eElab' aux()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:updateAux"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Elaborate",
          "name": "update_term",
          "package": "idris",
          "signature": "(Term -\u003e Term) -\u003e Elab' aux ()",
          "source": "src/Idris-Core-Elaborate.html#update_term",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Elaborate",
          "module": "Idris.Core.Elaborate",
          "name": "update_term",
          "normalized": "(Term-\u003eTerm)-\u003eElab' a()",
          "package": "idris",
          "signature": "(Term-\u003eTerm)-\u003eElab' aux()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Elaborate.html#v:update_term"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "Evaluate",
          "package": "idris",
          "source": "src/Idris-Core-Evaluate.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "Evaluate",
          "package": "idris",
          "partial": "Evaluate",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "Accessibility",
          "package": "idris",
          "source": "src/Idris-Core-Evaluate.html#Accessibility",
          "type": "data"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "Accessibility",
          "package": "idris",
          "partial": "Accessibility",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#t:Accessibility"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "CaseDefs",
          "package": "idris",
          "source": "src/Idris-Core-Evaluate.html#CaseDefs",
          "type": "data"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "CaseDefs",
          "package": "idris",
          "partial": "Case Defs",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#t:CaseDefs"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "CaseInfo",
          "package": "idris",
          "source": "src/Idris-Core-Evaluate.html#CaseInfo",
          "type": "data"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "CaseInfo",
          "package": "idris",
          "partial": "Case Info",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#t:CaseInfo"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eContexts used for global definitions and for proof state. They contain\n universe constraints and existing definitions.\n\u003c/p\u003e",
          "module": "Idris.Core.Evaluate",
          "name": "Context",
          "package": "idris",
          "source": "src/Idris-Core-Evaluate.html#Context",
          "type": "data"
        },
        "index": {
          "description": "Contexts used for global definitions and for proof state They contain universe constraints and existing definitions",
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "Context",
          "package": "idris",
          "partial": "Context",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#t:Context"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eA definition is either a simple function (just an expression with a type),\n   a constant, which could be a data or type constructor, an axiom or as an\n   yet undefined function, or an Operator.\n   An Operator is a function which explains how to reduce.\n   A CaseOp is a function defined by a simple case tree \n\u003c/p\u003e",
          "module": "Idris.Core.Evaluate",
          "name": "Def",
          "package": "idris",
          "source": "src/Idris-Core-Evaluate.html#Def",
          "type": "data"
        },
        "index": {
          "description": "definition is either simple function just an expression with type constant which could be data or type constructor an axiom or as an yet undefined function or an Operator An Operator is function which explains how to reduce CaseOp is function defined by simple case tree",
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "Def",
          "package": "idris",
          "partial": "Def",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#t:Def"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "MetaInformation",
          "package": "idris",
          "source": "src/Idris-Core-Evaluate.html#MetaInformation",
          "type": "data"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "MetaInformation",
          "package": "idris",
          "partial": "Meta Information",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#t:MetaInformation"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eReasons why a function may not be total\n\u003c/p\u003e",
          "module": "Idris.Core.Evaluate",
          "name": "PReason",
          "package": "idris",
          "source": "src/Idris-Core-Evaluate.html#PReason",
          "type": "data"
        },
        "index": {
          "description": "Reasons why function may not be total",
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "PReason",
          "package": "idris",
          "partial": "PReason",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#t:PReason"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "Quote",
          "package": "idris",
          "source": "src/Idris-Core-Evaluate.html#Quote",
          "type": "class"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "Quote",
          "package": "idris",
          "partial": "Quote",
          "type": "class"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#t:Quote"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eThe result of totality checking\n\u003c/p\u003e",
          "module": "Idris.Core.Evaluate",
          "name": "Totality",
          "package": "idris",
          "source": "src/Idris-Core-Evaluate.html#Totality",
          "type": "data"
        },
        "index": {
          "description": "The result of totality checking",
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "Totality",
          "package": "idris",
          "partial": "Totality",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#t:Totality"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eA HOAS representation of values\n\u003c/p\u003e",
          "module": "Idris.Core.Evaluate",
          "name": "Value",
          "package": "idris",
          "source": "src/Idris-Core-Evaluate.html#Value",
          "type": "data"
        },
        "index": {
          "description": "HOAS representation of values",
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "Value",
          "package": "idris",
          "partial": "Value",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#t:Value"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "BelieveMe",
          "package": "idris",
          "signature": "BelieveMe",
          "source": "src/Idris-Core-Evaluate.html#PReason",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "BelieveMe",
          "package": "idris",
          "partial": "Believe Me",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:BelieveMe"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "CaseDefs",
          "package": "idris",
          "signature": "CaseDefs",
          "source": "src/Idris-Core-Evaluate.html#CaseDefs",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "CaseDefs",
          "package": "idris",
          "partial": "Case Defs",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:CaseDefs"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "CaseInfo",
          "package": "idris",
          "signature": "CaseInfo",
          "source": "src/Idris-Core-Evaluate.html#CaseInfo",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "CaseInfo",
          "package": "idris",
          "partial": "Case Info",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:CaseInfo"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "CaseOp",
          "package": "idris",
          "signature": "CaseOp CaseInfo !Type ![Type] ![Either Term (Term, Term)] ![([Name], Term, Term)] !CaseDefs",
          "source": "src/Idris-Core-Evaluate.html#Def",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "CaseOp",
          "normalized": "CaseOp CaseInfo Type[Type][Either Term(Term,Term)][([Name],Term,Term)]CaseDefs",
          "package": "idris",
          "partial": "Case Op",
          "signature": "CaseOp CaseInfo Type[Type][Either Term(Term,Term)][([Name],Term,Term)]CaseDefs",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:CaseOp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eMeta information for a data declaration with position of parameters\n\u003c/p\u003e",
          "module": "Idris.Core.Evaluate",
          "name": "DataMI",
          "package": "idris",
          "signature": "DataMI [Int]",
          "source": "src/Idris-Core-Evaluate.html#MetaInformation",
          "type": "function"
        },
        "index": {
          "description": "Meta information for data declaration with position of parameters",
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "DataMI",
          "normalized": "DataMI[Int]",
          "package": "idris",
          "partial": "Data MI",
          "signature": "DataMI[Int]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:DataMI"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eNo meta-information\n\u003c/p\u003e",
          "module": "Idris.Core.Evaluate",
          "name": "EmptyMI",
          "package": "idris",
          "signature": "EmptyMI",
          "source": "src/Idris-Core-Evaluate.html#MetaInformation",
          "type": "function"
        },
        "index": {
          "description": "No meta-information",
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "EmptyMI",
          "package": "idris",
          "partial": "Empty MI",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:EmptyMI"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "Frozen",
          "package": "idris",
          "signature": "Frozen",
          "source": "src/Idris-Core-Evaluate.html#Accessibility",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "Frozen",
          "package": "idris",
          "partial": "Frozen",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:Frozen"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "Function",
          "package": "idris",
          "signature": "Function !Type !Term",
          "source": "src/Idris-Core-Evaluate.html#Def",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "Function",
          "package": "idris",
          "partial": "Function",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:Function"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "Hidden",
          "package": "idris",
          "signature": "Hidden",
          "source": "src/Idris-Core-Evaluate.html#Accessibility",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "Hidden",
          "package": "idris",
          "partial": "Hidden",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:Hidden"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "Itself",
          "package": "idris",
          "signature": "Itself",
          "source": "src/Idris-Core-Evaluate.html#PReason",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "Itself",
          "package": "idris",
          "partial": "Itself",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:Itself"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "Mutual",
          "package": "idris",
          "signature": "Mutual [Name]",
          "source": "src/Idris-Core-Evaluate.html#PReason",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "Mutual",
          "normalized": "Mutual[Name]",
          "package": "idris",
          "partial": "Mutual",
          "signature": "Mutual[Name]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:Mutual"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "NotCovering",
          "package": "idris",
          "signature": "NotCovering",
          "source": "src/Idris-Core-Evaluate.html#PReason",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "NotCovering",
          "package": "idris",
          "partial": "Not Covering",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:NotCovering"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "NotPositive",
          "package": "idris",
          "signature": "NotPositive",
          "source": "src/Idris-Core-Evaluate.html#PReason",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "NotPositive",
          "package": "idris",
          "partial": "Not Positive",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:NotPositive"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "NotProductive",
          "package": "idris",
          "signature": "NotProductive",
          "source": "src/Idris-Core-Evaluate.html#PReason",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "NotProductive",
          "package": "idris",
          "partial": "Not Productive",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:NotProductive"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "Operator",
          "package": "idris",
          "signature": "Operator Type Int ([Value] -\u003e Maybe Value)",
          "source": "src/Idris-Core-Evaluate.html#Def",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "Operator",
          "normalized": "Operator Type Int([Value]-\u003eMaybe Value)",
          "package": "idris",
          "partial": "Operator",
          "signature": "Operator Type Int([Value]-\u003eMaybe Value)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:Operator"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "Other",
          "package": "idris",
          "signature": "Other [Name]",
          "source": "src/Idris-Core-Evaluate.html#PReason",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "Other",
          "normalized": "Other[Name]",
          "package": "idris",
          "partial": "Other",
          "signature": "Other[Name]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:Other"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "Partial",
          "package": "idris",
          "signature": "Partial PReason",
          "source": "src/Idris-Core-Evaluate.html#Totality",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "Partial",
          "package": "idris",
          "partial": "Partial",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:Partial"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eproductive\n\u003c/p\u003e",
          "module": "Idris.Core.Evaluate",
          "name": "Productive",
          "package": "idris",
          "signature": "Productive",
          "source": "src/Idris-Core-Evaluate.html#Totality",
          "type": "function"
        },
        "index": {
          "description": "productive",
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "Productive",
          "package": "idris",
          "partial": "Productive",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:Productive"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "Public",
          "package": "idris",
          "signature": "Public",
          "source": "src/Idris-Core-Evaluate.html#Accessibility",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "Public",
          "package": "idris",
          "partial": "Public",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:Public"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003ewell-founded arguments\n\u003c/p\u003e",
          "module": "Idris.Core.Evaluate",
          "name": "Total",
          "package": "idris",
          "signature": "Total [Int]",
          "source": "src/Idris-Core-Evaluate.html#Totality",
          "type": "function"
        },
        "index": {
          "description": "well-founded arguments",
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "Total",
          "normalized": "Total[Int]",
          "package": "idris",
          "partial": "Total",
          "signature": "Total[Int]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:Total"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "TyDecl",
          "package": "idris",
          "signature": "TyDecl NameType !Type",
          "source": "src/Idris-Core-Evaluate.html#Def",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "TyDecl",
          "package": "idris",
          "partial": "Ty Decl",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:TyDecl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "Unchecked",
          "package": "idris",
          "signature": "Unchecked",
          "source": "src/Idris-Core-Evaluate.html#Totality",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "Unchecked",
          "package": "idris",
          "partial": "Unchecked",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:Unchecked"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "UseUndef",
          "package": "idris",
          "signature": "UseUndef Name",
          "source": "src/Idris-Core-Evaluate.html#PReason",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "UseUndef",
          "package": "idris",
          "partial": "Use Undef",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:UseUndef"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "VApp",
          "package": "idris",
          "signature": "VApp Value Value",
          "source": "src/Idris-Core-Evaluate.html#Value",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "VApp",
          "package": "idris",
          "partial": "VApp",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:VApp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "VBLet",
          "package": "idris",
          "signature": "VBLet Int Name Value Value Value",
          "source": "src/Idris-Core-Evaluate.html#Value",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "VBLet",
          "package": "idris",
          "partial": "VBLet",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:VBLet"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "VBind",
          "package": "idris",
          "signature": "VBind Bool Name (Binder Value) (Value -\u003e Eval Value)",
          "source": "src/Idris-Core-Evaluate.html#Value",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "VBind",
          "normalized": "VBind Bool Name(Binder Value)(Value-\u003eEval Value)",
          "package": "idris",
          "partial": "VBind",
          "signature": "VBind Bool Name(Binder Value)(Value-\u003eEval Value)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:VBind"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "VConstant",
          "package": "idris",
          "signature": "VConstant Const",
          "source": "src/Idris-Core-Evaluate.html#Value",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "VConstant",
          "package": "idris",
          "partial": "VConstant",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:VConstant"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "VErased",
          "package": "idris",
          "signature": "VErased",
          "source": "src/Idris-Core-Evaluate.html#Value",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "VErased",
          "package": "idris",
          "partial": "VErased",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:VErased"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "VImpossible",
          "package": "idris",
          "signature": "VImpossible",
          "source": "src/Idris-Core-Evaluate.html#Value",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "VImpossible",
          "package": "idris",
          "partial": "VImpossible",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:VImpossible"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "VP",
          "package": "idris",
          "signature": "VP NameType Name Value",
          "source": "src/Idris-Core-Evaluate.html#Value",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "VP",
          "package": "idris",
          "partial": "VP",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:VP"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "VProj",
          "package": "idris",
          "signature": "VProj Value Int",
          "source": "src/Idris-Core-Evaluate.html#Value",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "VProj",
          "package": "idris",
          "partial": "VProj",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:VProj"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "VTmp",
          "package": "idris",
          "signature": "VTmp Int",
          "source": "src/Idris-Core-Evaluate.html#Value",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "VTmp",
          "package": "idris",
          "partial": "VTmp",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:VTmp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "VType",
          "package": "idris",
          "signature": "VType UExp",
          "source": "src/Idris-Core-Evaluate.html#Value",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "VType",
          "package": "idris",
          "partial": "VType",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:VType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "VV",
          "package": "idris",
          "signature": "VV Int",
          "source": "src/Idris-Core-Evaluate.html#Value",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "VV",
          "package": "idris",
          "partial": "VV",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:VV"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "addCasedef",
          "package": "idris",
          "signature": "Name -\u003e CaseInfo -\u003e Bool -\u003e Bool -\u003e Bool -\u003e Bool -\u003e [Type] -\u003e [Either Term (Term, Term)] -\u003e [([Name], Term, Term)] -\u003e [([Name], Term, Term)] -\u003e [([Name], Term, Term)] -\u003e [([Name], Term, Term)] -\u003e Type -\u003e Context -\u003e Context",
          "source": "src/Idris-Core-Evaluate.html#addCasedef",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "addCasedef",
          "normalized": "Name-\u003eCaseInfo-\u003eBool-\u003eBool-\u003eBool-\u003eBool-\u003e[Type]-\u003e[Either Term(Term,Term)]-\u003e[([Name],Term,Term)]-\u003e[([Name],Term,Term)]-\u003e[([Name],Term,Term)]-\u003e[([Name],Term,Term)]-\u003eType-\u003eContext-\u003eContext",
          "package": "idris",
          "partial": "Casedef",
          "signature": "Name-\u003eCaseInfo-\u003eBool-\u003eBool-\u003eBool-\u003eBool-\u003e[Type]-\u003e[Either Term(Term,Term)]-\u003e[([Name],Term,Term)]-\u003e[([Name],Term,Term)]-\u003e[([Name],Term,Term)]-\u003e[([Name],Term,Term)]-\u003eType-\u003eContext-\u003eContext",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:addCasedef"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "addCtxtDef",
          "package": "idris",
          "signature": "Name -\u003e Def -\u003e Context -\u003e Context",
          "source": "src/Idris-Core-Evaluate.html#addCtxtDef",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "addCtxtDef",
          "normalized": "Name-\u003eDef-\u003eContext-\u003eContext",
          "package": "idris",
          "partial": "Ctxt Def",
          "signature": "Name-\u003eDef-\u003eContext-\u003eContext",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:addCtxtDef"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "addDatatype",
          "package": "idris",
          "signature": "Datatype Name -\u003e Context -\u003e Context",
          "source": "src/Idris-Core-Evaluate.html#addDatatype",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "addDatatype",
          "normalized": "Datatype Name-\u003eContext-\u003eContext",
          "package": "idris",
          "partial": "Datatype",
          "signature": "Datatype Name-\u003eContext-\u003eContext",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:addDatatype"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "addOperator",
          "package": "idris",
          "signature": "Name -\u003e Type -\u003e Int -\u003e ([Value] -\u003e Maybe Value) -\u003e Context -\u003e Context",
          "source": "src/Idris-Core-Evaluate.html#addOperator",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "addOperator",
          "normalized": "Name-\u003eType-\u003eInt-\u003e([Value]-\u003eMaybe Value)-\u003eContext-\u003eContext",
          "package": "idris",
          "partial": "Operator",
          "signature": "Name-\u003eType-\u003eInt-\u003e([Value]-\u003eMaybe Value)-\u003eContext-\u003eContext",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:addOperator"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "addToCtxt",
          "package": "idris",
          "signature": "Name -\u003e Term -\u003e Type -\u003e Context -\u003e Context",
          "source": "src/Idris-Core-Evaluate.html#addToCtxt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "addToCtxt",
          "normalized": "Name-\u003eTerm-\u003eType-\u003eContext-\u003eContext",
          "package": "idris",
          "partial": "To Ctxt",
          "signature": "Name-\u003eTerm-\u003eType-\u003eContext-\u003eContext",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:addToCtxt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "addTyDecl",
          "package": "idris",
          "signature": "Name -\u003e NameType -\u003e Type -\u003e Context -\u003e Context",
          "source": "src/Idris-Core-Evaluate.html#addTyDecl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "addTyDecl",
          "normalized": "Name-\u003eNameType-\u003eType-\u003eContext-\u003eContext",
          "package": "idris",
          "partial": "Ty Decl",
          "signature": "Name-\u003eNameType-\u003eType-\u003eContext-\u003eContext",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:addTyDecl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "case_inlinable",
          "package": "idris",
          "signature": "Bool",
          "source": "src/Idris-Core-Evaluate.html#CaseInfo",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "case_inlinable",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:case_inlinable"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "cases_compiletime",
          "package": "idris",
          "signature": "([Name], SC)",
          "source": "src/Idris-Core-Evaluate.html#CaseDefs",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "cases_compiletime",
          "normalized": "([Name],SC)",
          "package": "idris",
          "signature": "([Name],SC)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:cases_compiletime"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "cases_inlined",
          "package": "idris",
          "signature": "([Name], SC)",
          "source": "src/Idris-Core-Evaluate.html#CaseDefs",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "cases_inlined",
          "normalized": "([Name],SC)",
          "package": "idris",
          "signature": "([Name],SC)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:cases_inlined"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "cases_runtime",
          "package": "idris",
          "signature": "([Name], SC)",
          "source": "src/Idris-Core-Evaluate.html#CaseDefs",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "cases_runtime",
          "normalized": "([Name],SC)",
          "package": "idris",
          "signature": "([Name],SC)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:cases_runtime"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "cases_totcheck",
          "package": "idris",
          "signature": "([Name], SC)",
          "source": "src/Idris-Core-Evaluate.html#CaseDefs",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "cases_totcheck",
          "normalized": "([Name],SC)",
          "package": "idris",
          "signature": "([Name],SC)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:cases_totcheck"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "convEq",
          "package": "idris",
          "signature": "Context -\u003e TT Name -\u003e TT Name -\u003e StateT UCs (TC' Err) Bool",
          "source": "src/Idris-Core-Evaluate.html#convEq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "convEq",
          "normalized": "Context-\u003eTT Name-\u003eTT Name-\u003eStateT UCs(TC' Err)Bool",
          "package": "idris",
          "partial": "Eq",
          "signature": "Context-\u003eTT Name-\u003eTT Name-\u003eStateT UCs(TC' Err)Bool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:convEq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "convEq'",
          "package": "idris",
          "signature": "Context -\u003e TT Name -\u003e TT Name -\u003e TC' Err Bool",
          "source": "src/Idris-Core-Evaluate.html#convEq%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "convEq'",
          "normalized": "Context-\u003eTT Name-\u003eTT Name-\u003eTC' Err Bool",
          "package": "idris",
          "partial": "Eq'",
          "signature": "Context-\u003eTT Name-\u003eTT Name-\u003eTC' Err Bool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:convEq-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eGet the definitions from a context\n\u003c/p\u003e",
          "module": "Idris.Core.Evaluate",
          "name": "ctxtAlist",
          "package": "idris",
          "signature": "Context -\u003e [(Name, Def)]",
          "source": "src/Idris-Core-Evaluate.html#ctxtAlist",
          "type": "function"
        },
        "index": {
          "description": "Get the definitions from context",
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "ctxtAlist",
          "normalized": "Context-\u003e[(Name,Def)]",
          "package": "idris",
          "partial": "Alist",
          "signature": "Context-\u003e[(Name,Def)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:ctxtAlist"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eReduce a term to head normal form\n\u003c/p\u003e",
          "module": "Idris.Core.Evaluate",
          "name": "hnf",
          "package": "idris",
          "signature": "Context -\u003e Env -\u003e TT Name -\u003e TT Name",
          "source": "src/Idris-Core-Evaluate.html#hnf",
          "type": "function"
        },
        "index": {
          "description": "Reduce term to head normal form",
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "hnf",
          "normalized": "Context-\u003eEnv-\u003eTT Name-\u003eTT Name",
          "package": "idris",
          "signature": "Context-\u003eEnv-\u003eTT Name-\u003eTT Name",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:hnf"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eThe initial empty context\n\u003c/p\u003e",
          "module": "Idris.Core.Evaluate",
          "name": "initContext",
          "package": "idris",
          "signature": "Context",
          "source": "src/Idris-Core-Evaluate.html#initContext",
          "type": "function"
        },
        "index": {
          "description": "The initial empty context",
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "initContext",
          "package": "idris",
          "partial": "Context",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:initContext"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "initEval",
          "package": "idris",
          "signature": "EvalState",
          "source": "src/Idris-Core-Evaluate.html#initEval",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "initEval",
          "package": "idris",
          "partial": "Eval",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:initEval"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "isConName",
          "package": "idris",
          "signature": "Name -\u003e Context -\u003e Bool",
          "source": "src/Idris-Core-Evaluate.html#isConName",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "isConName",
          "normalized": "Name-\u003eContext-\u003eBool",
          "package": "idris",
          "partial": "Con Name",
          "signature": "Name-\u003eContext-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:isConName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "isDConName",
          "package": "idris",
          "signature": "Name -\u003e Context -\u003e Bool",
          "source": "src/Idris-Core-Evaluate.html#isDConName",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "isDConName",
          "normalized": "Name-\u003eContext-\u003eBool",
          "package": "idris",
          "partial": "DCon Name",
          "signature": "Name-\u003eContext-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:isDConName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "isFnName",
          "package": "idris",
          "signature": "Name -\u003e Context -\u003e Bool",
          "source": "src/Idris-Core-Evaluate.html#isFnName",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "isFnName",
          "normalized": "Name-\u003eContext-\u003eBool",
          "package": "idris",
          "partial": "Fn Name",
          "signature": "Name-\u003eContext-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:isFnName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "isTConName",
          "package": "idris",
          "signature": "Name -\u003e Context -\u003e Bool",
          "source": "src/Idris-Core-Evaluate.html#isTConName",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "isTConName",
          "normalized": "Name-\u003eContext-\u003eBool",
          "package": "idris",
          "partial": "TCon Name",
          "signature": "Name-\u003eContext-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:isTConName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "lookupDef",
          "package": "idris",
          "signature": "Name -\u003e Context -\u003e [Def]",
          "source": "src/Idris-Core-Evaluate.html#lookupDef",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "lookupDef",
          "normalized": "Name-\u003eContext-\u003e[Def]",
          "package": "idris",
          "partial": "Def",
          "signature": "Name-\u003eContext-\u003e[Def]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:lookupDef"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "lookupDefAcc",
          "package": "idris",
          "signature": "Name -\u003e Bool -\u003e Context -\u003e [(Def, Accessibility)]",
          "source": "src/Idris-Core-Evaluate.html#lookupDefAcc",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "lookupDefAcc",
          "normalized": "Name-\u003eBool-\u003eContext-\u003e[(Def,Accessibility)]",
          "package": "idris",
          "partial": "Def Acc",
          "signature": "Name-\u003eBool-\u003eContext-\u003e[(Def,Accessibility)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:lookupDefAcc"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "lookupMetaInformation",
          "package": "idris",
          "signature": "Name -\u003e Context -\u003e [MetaInformation]",
          "source": "src/Idris-Core-Evaluate.html#lookupMetaInformation",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "lookupMetaInformation",
          "normalized": "Name-\u003eContext-\u003e[MetaInformation]",
          "package": "idris",
          "partial": "Meta Information",
          "signature": "Name-\u003eContext-\u003e[MetaInformation]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:lookupMetaInformation"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "lookupNameTotal",
          "package": "idris",
          "signature": "Name -\u003e Context -\u003e [(Name, Totality)]",
          "source": "src/Idris-Core-Evaluate.html#lookupNameTotal",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "lookupNameTotal",
          "normalized": "Name-\u003eContext-\u003e[(Name,Totality)]",
          "package": "idris",
          "partial": "Name Total",
          "signature": "Name-\u003eContext-\u003e[(Name,Totality)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:lookupNameTotal"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "lookupNames",
          "package": "idris",
          "signature": "Name -\u003e Context -\u003e [Name]",
          "source": "src/Idris-Core-Evaluate.html#lookupNames",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "lookupNames",
          "normalized": "Name-\u003eContext-\u003e[Name]",
          "package": "idris",
          "partial": "Names",
          "signature": "Name-\u003eContext-\u003e[Name]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:lookupNames"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "lookupP",
          "package": "idris",
          "signature": "Name -\u003e Context -\u003e [Term]",
          "source": "src/Idris-Core-Evaluate.html#lookupP",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "lookupP",
          "normalized": "Name-\u003eContext-\u003e[Term]",
          "package": "idris",
          "signature": "Name-\u003eContext-\u003e[Term]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:lookupP"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "lookupTotal",
          "package": "idris",
          "signature": "Name -\u003e Context -\u003e [Totality]",
          "source": "src/Idris-Core-Evaluate.html#lookupTotal",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "lookupTotal",
          "normalized": "Name-\u003eContext-\u003e[Totality]",
          "package": "idris",
          "partial": "Total",
          "signature": "Name-\u003eContext-\u003e[Totality]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:lookupTotal"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "lookupTy",
          "package": "idris",
          "signature": "Name -\u003e Context -\u003e [Type]",
          "source": "src/Idris-Core-Evaluate.html#lookupTy",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "lookupTy",
          "normalized": "Name-\u003eContext-\u003e[Type]",
          "package": "idris",
          "partial": "Ty",
          "signature": "Name-\u003eContext-\u003e[Type]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:lookupTy"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "lookupTyEnv",
          "package": "idris",
          "signature": "Name -\u003e Env -\u003e Maybe (Int, Type)",
          "source": "src/Idris-Core-Evaluate.html#lookupTyEnv",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "lookupTyEnv",
          "normalized": "Name-\u003eEnv-\u003eMaybe(Int,Type)",
          "package": "idris",
          "partial": "Ty Env",
          "signature": "Name-\u003eEnv-\u003eMaybe(Int,Type)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:lookupTyEnv"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "lookupVal",
          "package": "idris",
          "signature": "Name -\u003e Context -\u003e [Value]",
          "source": "src/Idris-Core-Evaluate.html#lookupVal",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "lookupVal",
          "normalized": "Name-\u003eContext-\u003e[Value]",
          "package": "idris",
          "partial": "Val",
          "signature": "Name-\u003eContext-\u003e[Value]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:lookupVal"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "mapDefCtxt",
          "package": "idris",
          "signature": "(Def -\u003e Def) -\u003e Context -\u003e Context",
          "source": "src/Idris-Core-Evaluate.html#mapDefCtxt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "mapDefCtxt",
          "normalized": "(Def-\u003eDef)-\u003eContext-\u003eContext",
          "package": "idris",
          "partial": "Def Ctxt",
          "signature": "(Def-\u003eDef)-\u003eContext-\u003eContext",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:mapDefCtxt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "next_tvar",
          "package": "idris",
          "signature": "Context -\u003e Int",
          "source": "src/Idris-Core-Evaluate.html#next_tvar",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "next_tvar",
          "normalized": "Context-\u003eInt",
          "package": "idris",
          "signature": "Context-\u003eInt",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:next_tvar"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "normalise",
          "package": "idris",
          "signature": "Context -\u003e Env -\u003e TT Name -\u003e TT Name",
          "source": "src/Idris-Core-Evaluate.html#normalise",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "normalise",
          "normalized": "Context-\u003eEnv-\u003eTT Name-\u003eTT Name",
          "package": "idris",
          "signature": "Context-\u003eEnv-\u003eTT Name-\u003eTT Name",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:normalise"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "normaliseAll",
          "package": "idris",
          "signature": "Context -\u003e Env -\u003e TT Name -\u003e TT Name",
          "source": "src/Idris-Core-Evaluate.html#normaliseAll",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "normaliseAll",
          "normalized": "Context-\u003eEnv-\u003eTT Name-\u003eTT Name",
          "package": "idris",
          "partial": "All",
          "signature": "Context-\u003eEnv-\u003eTT Name-\u003eTT Name",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:normaliseAll"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eNormalise fully type checked terms (so, assume all names/let bindings resolved)\n\u003c/p\u003e",
          "module": "Idris.Core.Evaluate",
          "name": "normaliseC",
          "package": "idris",
          "signature": "Context -\u003e Env -\u003e TT Name -\u003e TT Name",
          "source": "src/Idris-Core-Evaluate.html#normaliseC",
          "type": "function"
        },
        "index": {
          "description": "Normalise fully type checked terms so assume all names let bindings resolved",
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "normaliseC",
          "normalized": "Context-\u003eEnv-\u003eTT Name-\u003eTT Name",
          "package": "idris",
          "signature": "Context-\u003eEnv-\u003eTT Name-\u003eTT Name",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:normaliseC"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "normaliseTrace",
          "package": "idris",
          "signature": "Bool -\u003e Context -\u003e Env -\u003e TT Name -\u003e TT Name",
          "source": "src/Idris-Core-Evaluate.html#normaliseTrace",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "normaliseTrace",
          "normalized": "Bool-\u003eContext-\u003eEnv-\u003eTT Name-\u003eTT Name",
          "package": "idris",
          "partial": "Trace",
          "signature": "Bool-\u003eContext-\u003eEnv-\u003eTT Name-\u003eTT Name",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:normaliseTrace"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "quote",
          "package": "idris",
          "signature": "Int -\u003e a -\u003e Eval (TT Name)",
          "source": "src/Idris-Core-Evaluate.html#quote",
          "type": "method"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "quote",
          "normalized": "Int-\u003ea-\u003eEval(TT Name)",
          "package": "idris",
          "signature": "Int-\u003ea-\u003eEval(TT Name)",
          "type": "method"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:quote"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eSimplify for run-time (i.e. basic inlining)\n\u003c/p\u003e",
          "module": "Idris.Core.Evaluate",
          "name": "rt_simplify",
          "package": "idris",
          "signature": "Context -\u003e Env -\u003e TT Name -\u003e TT Name",
          "source": "src/Idris-Core-Evaluate.html#rt_simplify",
          "type": "function"
        },
        "index": {
          "description": "Simplify for run-time i.e basic inlining",
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "rt_simplify",
          "normalized": "Context-\u003eEnv-\u003eTT Name-\u003eTT Name",
          "package": "idris",
          "signature": "Context-\u003eEnv-\u003eTT Name-\u003eTT Name",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:rt_simplify"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "setAccess",
          "package": "idris",
          "signature": "Name -\u003e Accessibility -\u003e Context -\u003e Context",
          "source": "src/Idris-Core-Evaluate.html#setAccess",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "setAccess",
          "normalized": "Name-\u003eAccessibility-\u003eContext-\u003eContext",
          "package": "idris",
          "partial": "Access",
          "signature": "Name-\u003eAccessibility-\u003eContext-\u003eContext",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:setAccess"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "setMetaInformation",
          "package": "idris",
          "signature": "Name -\u003e MetaInformation -\u003e Context -\u003e Context",
          "source": "src/Idris-Core-Evaluate.html#setMetaInformation",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "setMetaInformation",
          "normalized": "Name-\u003eMetaInformation-\u003eContext-\u003eContext",
          "package": "idris",
          "partial": "Meta Information",
          "signature": "Name-\u003eMetaInformation-\u003eContext-\u003eContext",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:setMetaInformation"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "setTotal",
          "package": "idris",
          "signature": "Name -\u003e Totality -\u003e Context -\u003e Context",
          "source": "src/Idris-Core-Evaluate.html#setTotal",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "setTotal",
          "normalized": "Name-\u003eTotality-\u003eContext-\u003eContext",
          "package": "idris",
          "partial": "Total",
          "signature": "Name-\u003eTotality-\u003eContext-\u003eContext",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:setTotal"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eLike normalise, but we only reduce functions that are marked as okay to\n inline (and probably shouldn't reduce lets?)\n 20130908: now only used to reduce for totality checking. Inlining should\n be done elsewhere.\n\u003c/p\u003e",
          "module": "Idris.Core.Evaluate",
          "name": "simplify",
          "package": "idris",
          "signature": "Context -\u003e Env -\u003e TT Name -\u003e TT Name",
          "source": "src/Idris-Core-Evaluate.html#simplify",
          "type": "function"
        },
        "index": {
          "description": "Like normalise but we only reduce functions that are marked as okay to inline and probably shouldn reduce lets now only used to reduce for totality checking Inlining should be done elsewhere",
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "simplify",
          "normalized": "Context-\u003eEnv-\u003eTT Name-\u003eTT Name",
          "package": "idris",
          "signature": "Context-\u003eEnv-\u003eTT Name-\u003eTT Name",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:simplify"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "simplifyCasedef",
          "package": "idris",
          "signature": "Name -\u003e Context -\u003e Context",
          "source": "src/Idris-Core-Evaluate.html#simplifyCasedef",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "simplifyCasedef",
          "normalized": "Name-\u003eContext-\u003eContext",
          "package": "idris",
          "partial": "Casedef",
          "signature": "Name-\u003eContext-\u003eContext",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:simplifyCasedef"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "specialise",
          "package": "idris",
          "signature": "Context -\u003e Env -\u003e [(Name, Int)] -\u003e TT Name -\u003e TT Name",
          "source": "src/Idris-Core-Evaluate.html#specialise",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "specialise",
          "normalized": "Context-\u003eEnv-\u003e[(Name,Int)]-\u003eTT Name-\u003eTT Name",
          "package": "idris",
          "signature": "Context-\u003eEnv-\u003e[(Name,Int)]-\u003eTT Name-\u003eTT Name",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:specialise"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "tc_dictionary",
          "package": "idris",
          "signature": "Bool",
          "source": "src/Idris-Core-Evaluate.html#CaseInfo",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "tc_dictionary",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:tc_dictionary"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Evaluate",
          "name": "uconstraints",
          "package": "idris",
          "signature": "Context -\u003e [UConstraint]",
          "source": "src/Idris-Core-Evaluate.html#uconstraints",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "uconstraints",
          "normalized": "Context-\u003e[UConstraint]",
          "package": "idris",
          "signature": "Context-\u003e[UConstraint]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:uconstraints"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eCreate a unique name given context and other existing names\n\u003c/p\u003e",
          "module": "Idris.Core.Evaluate",
          "name": "uniqueNameCtxt",
          "package": "idris",
          "signature": "Context -\u003e Name -\u003e [Name] -\u003e Name",
          "source": "src/Idris-Core-Evaluate.html#uniqueNameCtxt",
          "type": "function"
        },
        "index": {
          "description": "Create unique name given context and other existing names",
          "hierarchy": "Idris Core Evaluate",
          "module": "Idris.Core.Evaluate",
          "name": "uniqueNameCtxt",
          "normalized": "Context-\u003eName-\u003e[Name]-\u003eName",
          "package": "idris",
          "partial": "Name Ctxt",
          "signature": "Context-\u003eName-\u003e[Name]-\u003eName",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Evaluate.html#v:uniqueNameCtxt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Execute",
          "name": "Execute",
          "package": "idris",
          "source": "src/Idris-Core-Execute.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "Idris Core Execute",
          "module": "Idris.Core.Execute",
          "name": "Execute",
          "package": "idris",
          "partial": "Execute",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Execute.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Execute",
          "name": "execute",
          "package": "idris",
          "signature": "Term -\u003e Idris Term",
          "source": "src/Idris-Core-Execute.html#execute",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Execute",
          "module": "Idris.Core.Execute",
          "name": "execute",
          "normalized": "Term-\u003eIdris Term",
          "package": "idris",
          "signature": "Term-\u003eIdris Term",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Execute.html#v:execute"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.ProofState",
          "name": "ProofState",
          "package": "idris",
          "source": "src/Idris-Core-ProofState.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "Idris Core ProofState",
          "module": "Idris.Core.ProofState",
          "name": "ProofState",
          "package": "idris",
          "partial": "Proof State",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-ProofState.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.ProofState",
          "name": "Goal",
          "package": "idris",
          "source": "src/Idris-Core-ProofState.html#Goal",
          "type": "data"
        },
        "index": {
          "hierarchy": "Idris Core ProofState",
          "module": "Idris.Core.ProofState",
          "name": "Goal",
          "package": "idris",
          "partial": "Goal",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-ProofState.html#t:Goal"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.ProofState",
          "name": "ProofState",
          "package": "idris",
          "source": "src/Idris-Core-ProofState.html#ProofState",
          "type": "data"
        },
        "index": {
          "hierarchy": "Idris Core ProofState",
          "module": "Idris.Core.ProofState",
          "name": "ProofState",
          "package": "idris",
          "partial": "Proof State",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-ProofState.html#t:ProofState"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.ProofState",
          "name": "Tactic",
          "package": "idris",
          "source": "src/Idris-Core-ProofState.html#Tactic",
          "type": "data"
        },
        "index": {
          "hierarchy": "Idris Core ProofState",
          "module": "Idris.Core.ProofState",
          "name": "Tactic",
          "package": "idris",
          "partial": "Tactic",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-ProofState.html#t:Tactic"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.ProofState",
          "name": "Attack",
          "package": "idris",
          "signature": "Attack",
          "source": "src/Idris-Core-ProofState.html#Tactic",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core ProofState",
          "module": "Idris.Core.ProofState",
          "name": "Attack",
          "package": "idris",
          "partial": "Attack",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-ProofState.html#v:Attack"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.ProofState",
          "name": "CheckIn",
          "package": "idris",
          "signature": "CheckIn Raw",
          "source": "src/Idris-Core-ProofState.html#Tactic",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core ProofState",
          "module": "Idris.Core.ProofState",
          "name": "CheckIn",
          "package": "idris",
          "partial": "Check In",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-ProofState.html#v:CheckIn"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.ProofState",
          "name": "Claim",
          "package": "idris",
          "signature": "Claim Name Raw",
          "source": "src/Idris-Core-ProofState.html#Tactic",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core ProofState",
          "module": "Idris.Core.ProofState",
          "name": "Claim",
          "package": "idris",
          "partial": "Claim",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-ProofState.html#v:Claim"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.ProofState",
          "name": "CompleteFill",
          "package": "idris",
          "signature": "CompleteFill",
          "source": "src/Idris-Core-ProofState.html#Tactic",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core ProofState",
          "module": "Idris.Core.ProofState",
          "name": "CompleteFill",
          "package": "idris",
          "partial": "Complete Fill",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-ProofState.html#v:CompleteFill"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.ProofState",
          "name": "Compute",
          "package": "idris",
          "signature": "Compute",
          "source": "src/Idris-Core-ProofState.html#Tactic",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core ProofState",
          "module": "Idris.Core.ProofState",
          "name": "Compute",
          "package": "idris",
          "partial": "Compute",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-ProofState.html#v:Compute"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.ProofState",
          "name": "ComputeLet",
          "package": "idris",
          "signature": "ComputeLet Name",
          "source": "src/Idris-Core-ProofState.html#Tactic",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core ProofState",
          "module": "Idris.Core.ProofState",
          "name": "ComputeLet",
          "package": "idris",
          "partial": "Compute Let",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-ProofState.html#v:ComputeLet"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.ProofState",
          "name": "Defer",
          "package": "idris",
          "signature": "Defer Name",
          "source": "src/Idris-Core-ProofState.html#Tactic",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core ProofState",
          "module": "Idris.Core.ProofState",
          "name": "Defer",
          "package": "idris",
          "partial": "Defer",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-ProofState.html#v:Defer"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.ProofState",
          "name": "DeferType",
          "package": "idris",
          "signature": "DeferType Name Raw [Name]",
          "source": "src/Idris-Core-ProofState.html#Tactic",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core ProofState",
          "module": "Idris.Core.ProofState",
          "name": "DeferType",
          "normalized": "DeferType Name Raw[Name]",
          "package": "idris",
          "partial": "Defer Type",
          "signature": "DeferType Name Raw[Name]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-ProofState.html#v:DeferType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.ProofState",
          "name": "EndUnify",
          "package": "idris",
          "signature": "EndUnify",
          "source": "src/Idris-Core-ProofState.html#Tactic",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core ProofState",
          "module": "Idris.Core.ProofState",
          "name": "EndUnify",
          "package": "idris",
          "partial": "End Unify",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-ProofState.html#v:EndUnify"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.ProofState",
          "name": "Equiv",
          "package": "idris",
          "signature": "Equiv Raw",
          "source": "src/Idris-Core-ProofState.html#Tactic",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core ProofState",
          "module": "Idris.Core.ProofState",
          "name": "Equiv",
          "package": "idris",
          "partial": "Equiv",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-ProofState.html#v:Equiv"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.ProofState",
          "name": "EvalIn",
          "package": "idris",
          "signature": "EvalIn Raw",
          "source": "src/Idris-Core-ProofState.html#Tactic",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core ProofState",
          "module": "Idris.Core.ProofState",
          "name": "EvalIn",
          "package": "idris",
          "partial": "Eval In",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-ProofState.html#v:EvalIn"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.ProofState",
          "name": "Exact",
          "package": "idris",
          "signature": "Exact Raw",
          "source": "src/Idris-Core-ProofState.html#Tactic",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core ProofState",
          "module": "Idris.Core.ProofState",
          "name": "Exact",
          "package": "idris",
          "partial": "Exact",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-ProofState.html#v:Exact"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.ProofState",
          "name": "ExpandLet",
          "package": "idris",
          "signature": "ExpandLet Name Term",
          "source": "src/Idris-Core-ProofState.html#Tactic",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core ProofState",
          "module": "Idris.Core.ProofState",
          "name": "ExpandLet",
          "package": "idris",
          "partial": "Expand Let",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-ProofState.html#v:ExpandLet"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.ProofState",
          "name": "Fill",
          "package": "idris",
          "signature": "Fill Raw",
          "source": "src/Idris-Core-ProofState.html#Tactic",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core ProofState",
          "module": "Idris.Core.ProofState",
          "name": "Fill",
          "package": "idris",
          "partial": "Fill",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-ProofState.html#v:Fill"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.ProofState",
          "name": "Focus",
          "package": "idris",
          "signature": "Focus Name",
          "source": "src/Idris-Core-ProofState.html#Tactic",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core ProofState",
          "module": "Idris.Core.ProofState",
          "name": "Focus",
          "package": "idris",
          "partial": "Focus",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-ProofState.html#v:Focus"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.ProofState",
          "name": "Forall",
          "package": "idris",
          "signature": "Forall Name Raw",
          "source": "src/Idris-Core-ProofState.html#Tactic",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core ProofState",
          "module": "Idris.Core.ProofState",
          "name": "Forall",
          "package": "idris",
          "partial": "Forall",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-ProofState.html#v:Forall"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.ProofState",
          "name": "GD",
          "package": "idris",
          "signature": "GD",
          "source": "src/Idris-Core-ProofState.html#Goal",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core ProofState",
          "module": "Idris.Core.ProofState",
          "name": "GD",
          "package": "idris",
          "partial": "GD",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-ProofState.html#v:GD"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.ProofState",
          "name": "HNF_Compute",
          "package": "idris",
          "signature": "HNF_Compute",
          "source": "src/Idris-Core-ProofState.html#Tactic",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core ProofState",
          "module": "Idris.Core.ProofState",
          "name": "HNF_Compute",
          "package": "idris",
          "partial": "HNF Compute",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-ProofState.html#v:HNF_Compute"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.ProofState",
          "name": "Induction",
          "package": "idris",
          "signature": "Induction Name",
          "source": "src/Idris-Core-ProofState.html#Tactic",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core ProofState",
          "module": "Idris.Core.ProofState",
          "name": "Induction",
          "package": "idris",
          "partial": "Induction",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-ProofState.html#v:Induction"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.ProofState",
          "name": "Instance",
          "package": "idris",
          "signature": "Instance Name",
          "source": "src/Idris-Core-ProofState.html#Tactic",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core ProofState",
          "module": "Idris.Core.ProofState",
          "name": "Instance",
          "package": "idris",
          "partial": "Instance",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-ProofState.html#v:Instance"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.ProofState",
          "name": "Intro",
          "package": "idris",
          "signature": "Intro (Maybe Name)",
          "source": "src/Idris-Core-ProofState.html#Tactic",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core ProofState",
          "module": "Idris.Core.ProofState",
          "name": "Intro",
          "package": "idris",
          "partial": "Intro",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-ProofState.html#v:Intro"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.ProofState",
          "name": "IntroTy",
          "package": "idris",
          "signature": "IntroTy Raw (Maybe Name)",
          "source": "src/Idris-Core-ProofState.html#Tactic",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core ProofState",
          "module": "Idris.Core.ProofState",
          "name": "IntroTy",
          "package": "idris",
          "partial": "Intro Ty",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-ProofState.html#v:IntroTy"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.ProofState",
          "name": "LetBind",
          "package": "idris",
          "signature": "LetBind Name Raw Raw",
          "source": "src/Idris-Core-ProofState.html#Tactic",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core ProofState",
          "module": "Idris.Core.ProofState",
          "name": "LetBind",
          "package": "idris",
          "partial": "Let Bind",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-ProofState.html#v:LetBind"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.ProofState",
          "name": "MatchFill",
          "package": "idris",
          "signature": "MatchFill Raw",
          "source": "src/Idris-Core-ProofState.html#Tactic",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core ProofState",
          "module": "Idris.Core.ProofState",
          "name": "MatchFill",
          "package": "idris",
          "partial": "Match Fill",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-ProofState.html#v:MatchFill"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.ProofState",
          "name": "MatchProblems",
          "package": "idris",
          "signature": "MatchProblems",
          "source": "src/Idris-Core-ProofState.html#Tactic",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core ProofState",
          "module": "Idris.Core.ProofState",
          "name": "MatchProblems",
          "package": "idris",
          "partial": "Match Problems",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-ProofState.html#v:MatchProblems"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.ProofState",
          "name": "MoveLast",
          "package": "idris",
          "signature": "MoveLast Name",
          "source": "src/Idris-Core-ProofState.html#Tactic",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core ProofState",
          "module": "Idris.Core.ProofState",
          "name": "MoveLast",
          "package": "idris",
          "partial": "Move Last",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-ProofState.html#v:MoveLast"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.ProofState",
          "name": "PS",
          "package": "idris",
          "signature": "PS",
          "source": "src/Idris-Core-ProofState.html#ProofState",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core ProofState",
          "module": "Idris.Core.ProofState",
          "name": "PS",
          "package": "idris",
          "partial": "PS",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-ProofState.html#v:PS"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.ProofState",
          "name": "PatBind",
          "package": "idris",
          "signature": "PatBind Name",
          "source": "src/Idris-Core-ProofState.html#Tactic",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core ProofState",
          "module": "Idris.Core.ProofState",
          "name": "PatBind",
          "package": "idris",
          "partial": "Pat Bind",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-ProofState.html#v:PatBind"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.ProofState",
          "name": "PatVar",
          "package": "idris",
          "signature": "PatVar Name",
          "source": "src/Idris-Core-ProofState.html#Tactic",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core ProofState",
          "module": "Idris.Core.ProofState",
          "name": "PatVar",
          "package": "idris",
          "partial": "Pat Var",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-ProofState.html#v:PatVar"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.ProofState",
          "name": "PrepFill",
          "package": "idris",
          "signature": "PrepFill Name [Name]",
          "source": "src/Idris-Core-ProofState.html#Tactic",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core ProofState",
          "module": "Idris.Core.ProofState",
          "name": "PrepFill",
          "normalized": "PrepFill Name[Name]",
          "package": "idris",
          "partial": "Prep Fill",
          "signature": "PrepFill Name[Name]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-ProofState.html#v:PrepFill"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.ProofState",
          "name": "ProofState",
          "package": "idris",
          "signature": "ProofState",
          "source": "src/Idris-Core-ProofState.html#Tactic",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core ProofState",
          "module": "Idris.Core.ProofState",
          "name": "ProofState",
          "package": "idris",
          "partial": "Proof State",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-ProofState.html#v:ProofState"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.ProofState",
          "name": "QED",
          "package": "idris",
          "signature": "QED",
          "source": "src/Idris-Core-ProofState.html#Tactic",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core ProofState",
          "module": "Idris.Core.ProofState",
          "name": "QED",
          "package": "idris",
          "partial": "QED",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-ProofState.html#v:QED"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.ProofState",
          "name": "Regret",
          "package": "idris",
          "signature": "Regret",
          "source": "src/Idris-Core-ProofState.html#Tactic",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core ProofState",
          "module": "Idris.Core.ProofState",
          "name": "Regret",
          "package": "idris",
          "partial": "Regret",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-ProofState.html#v:Regret"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.ProofState",
          "name": "Reorder",
          "package": "idris",
          "signature": "Reorder Name",
          "source": "src/Idris-Core-ProofState.html#Tactic",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core ProofState",
          "module": "Idris.Core.ProofState",
          "name": "Reorder",
          "package": "idris",
          "partial": "Reorder",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-ProofState.html#v:Reorder"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.ProofState",
          "name": "Rewrite",
          "package": "idris",
          "signature": "Rewrite Raw",
          "source": "src/Idris-Core-ProofState.html#Tactic",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core ProofState",
          "module": "Idris.Core.ProofState",
          "name": "Rewrite",
          "package": "idris",
          "partial": "Rewrite",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-ProofState.html#v:Rewrite"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.ProofState",
          "name": "SetInjective",
          "package": "idris",
          "signature": "SetInjective Name",
          "source": "src/Idris-Core-ProofState.html#Tactic",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core ProofState",
          "module": "Idris.Core.ProofState",
          "name": "SetInjective",
          "package": "idris",
          "partial": "Set Injective",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-ProofState.html#v:SetInjective"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.ProofState",
          "name": "Simplify",
          "package": "idris",
          "signature": "Simplify",
          "source": "src/Idris-Core-ProofState.html#Tactic",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core ProofState",
          "module": "Idris.Core.ProofState",
          "name": "Simplify",
          "package": "idris",
          "partial": "Simplify",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-ProofState.html#v:Simplify"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.ProofState",
          "name": "Solve",
          "package": "idris",
          "signature": "Solve",
          "source": "src/Idris-Core-ProofState.html#Tactic",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core ProofState",
          "module": "Idris.Core.ProofState",
          "name": "Solve",
          "package": "idris",
          "partial": "Solve",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-ProofState.html#v:Solve"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.ProofState",
          "name": "StartUnify",
          "package": "idris",
          "signature": "StartUnify Name",
          "source": "src/Idris-Core-ProofState.html#Tactic",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core ProofState",
          "module": "Idris.Core.ProofState",
          "name": "StartUnify",
          "package": "idris",
          "partial": "Start Unify",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-ProofState.html#v:StartUnify"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.ProofState",
          "name": "Undo",
          "package": "idris",
          "signature": "Undo",
          "source": "src/Idris-Core-ProofState.html#Tactic",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core ProofState",
          "module": "Idris.Core.ProofState",
          "name": "Undo",
          "package": "idris",
          "partial": "Undo",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-ProofState.html#v:Undo"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.ProofState",
          "name": "UnifyProblems",
          "package": "idris",
          "signature": "UnifyProblems",
          "source": "src/Idris-Core-ProofState.html#Tactic",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core ProofState",
          "module": "Idris.Core.ProofState",
          "name": "UnifyProblems",
          "package": "idris",
          "partial": "Unify Problems",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-ProofState.html#v:UnifyProblems"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.ProofState",
          "name": "context",
          "package": "idris",
          "signature": "Context",
          "source": "src/Idris-Core-ProofState.html#ProofState",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core ProofState",
          "module": "Idris.Core.ProofState",
          "name": "context",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-ProofState.html#v:context"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.ProofState",
          "name": "deferred",
          "package": "idris",
          "signature": "[Name]",
          "source": "src/Idris-Core-ProofState.html#ProofState",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core ProofState",
          "module": "Idris.Core.ProofState",
          "name": "deferred",
          "normalized": "[Name]",
          "package": "idris",
          "signature": "[Name]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-ProofState.html#v:deferred"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.ProofState",
          "name": "done",
          "package": "idris",
          "signature": "Bool",
          "source": "src/Idris-Core-ProofState.html#ProofState",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core ProofState",
          "module": "Idris.Core.ProofState",
          "name": "done",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-ProofState.html#v:done"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.ProofState",
          "name": "dontunify",
          "package": "idris",
          "signature": "[Name]",
          "source": "src/Idris-Core-ProofState.html#ProofState",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core ProofState",
          "module": "Idris.Core.ProofState",
          "name": "dontunify",
          "normalized": "[Name]",
          "package": "idris",
          "signature": "[Name]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-ProofState.html#v:dontunify"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.ProofState",
          "name": "dropGiven",
          "package": "idris",
          "signature": "[a] -\u003e [(a, TT a)] -\u003e [a] -\u003e [(a, TT a)]",
          "source": "src/Idris-Core-ProofState.html#dropGiven",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core ProofState",
          "module": "Idris.Core.ProofState",
          "name": "dropGiven",
          "normalized": "[a]-\u003e[(a,TT a)]-\u003e[a]-\u003e[(a,TT a)]",
          "package": "idris",
          "partial": "Given",
          "signature": "[a]-\u003e[(a,TT a)]-\u003e[a]-\u003e[(a,TT a)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-ProofState.html#v:dropGiven"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.ProofState",
          "name": "envAtFocus",
          "package": "idris",
          "signature": "ProofState -\u003e TC Env",
          "source": "src/Idris-Core-ProofState.html#envAtFocus",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core ProofState",
          "module": "Idris.Core.ProofState",
          "name": "envAtFocus",
          "normalized": "ProofState-\u003eTC Env",
          "package": "idris",
          "partial": "At Focus",
          "signature": "ProofState-\u003eTC Env",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-ProofState.html#v:envAtFocus"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.ProofState",
          "name": "goalAtFocus",
          "package": "idris",
          "signature": "ProofState -\u003e TC (Binder Type)",
          "source": "src/Idris-Core-ProofState.html#goalAtFocus",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core ProofState",
          "module": "Idris.Core.ProofState",
          "name": "goalAtFocus",
          "normalized": "ProofState-\u003eTC(Binder Type)",
          "package": "idris",
          "partial": "At Focus",
          "signature": "ProofState-\u003eTC(Binder Type)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-ProofState.html#v:goalAtFocus"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.ProofState",
          "name": "goalType",
          "package": "idris",
          "signature": "Binder Term",
          "source": "src/Idris-Core-ProofState.html#Goal",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core ProofState",
          "module": "Idris.Core.ProofState",
          "name": "goalType",
          "package": "idris",
          "partial": "Type",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-ProofState.html#v:goalType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.ProofState",
          "name": "holes",
          "package": "idris",
          "signature": "[Name]",
          "source": "src/Idris-Core-ProofState.html#ProofState",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core ProofState",
          "module": "Idris.Core.ProofState",
          "name": "holes",
          "normalized": "[Name]",
          "package": "idris",
          "signature": "[Name]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-ProofState.html#v:holes"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.ProofState",
          "name": "injective",
          "package": "idris",
          "signature": "[Name]",
          "source": "src/Idris-Core-ProofState.html#ProofState",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core ProofState",
          "module": "Idris.Core.ProofState",
          "name": "injective",
          "normalized": "[Name]",
          "package": "idris",
          "signature": "[Name]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-ProofState.html#v:injective"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.ProofState",
          "name": "instances",
          "package": "idris",
          "signature": "[Name]",
          "source": "src/Idris-Core-ProofState.html#ProofState",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core ProofState",
          "module": "Idris.Core.ProofState",
          "name": "instances",
          "normalized": "[Name]",
          "package": "idris",
          "signature": "[Name]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-ProofState.html#v:instances"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.ProofState",
          "name": "keepGiven",
          "package": "idris",
          "signature": "[a] -\u003e [(a, TT a)] -\u003e [a] -\u003e [(a, TT a)]",
          "source": "src/Idris-Core-ProofState.html#keepGiven",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core ProofState",
          "module": "Idris.Core.ProofState",
          "name": "keepGiven",
          "normalized": "[a]-\u003e[(a,TT a)]-\u003e[a]-\u003e[(a,TT a)]",
          "package": "idris",
          "partial": "Given",
          "signature": "[a]-\u003e[(a,TT a)]-\u003e[a]-\u003e[(a,TT a)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-ProofState.html#v:keepGiven"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.ProofState",
          "name": "newProof",
          "package": "idris",
          "signature": "Name -\u003e Context -\u003e Type -\u003e ProofState",
          "source": "src/Idris-Core-ProofState.html#newProof",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core ProofState",
          "module": "Idris.Core.ProofState",
          "name": "newProof",
          "normalized": "Name-\u003eContext-\u003eType-\u003eProofState",
          "package": "idris",
          "partial": "Proof",
          "signature": "Name-\u003eContext-\u003eType-\u003eProofState",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-ProofState.html#v:newProof"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.ProofState",
          "name": "nextname",
          "package": "idris",
          "signature": "Int",
          "source": "src/Idris-Core-ProofState.html#ProofState",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core ProofState",
          "module": "Idris.Core.ProofState",
          "name": "nextname",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-ProofState.html#v:nextname"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.ProofState",
          "name": "notunified",
          "package": "idris",
          "signature": "[(Name, Term)]",
          "source": "src/Idris-Core-ProofState.html#ProofState",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core ProofState",
          "module": "Idris.Core.ProofState",
          "name": "notunified",
          "normalized": "[(Name,Term)]",
          "package": "idris",
          "signature": "[(Name,Term)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-ProofState.html#v:notunified"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.ProofState",
          "name": "plog",
          "package": "idris",
          "signature": "String",
          "source": "src/Idris-Core-ProofState.html#ProofState",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core ProofState",
          "module": "Idris.Core.ProofState",
          "name": "plog",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-ProofState.html#v:plog"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.ProofState",
          "name": "premises",
          "package": "idris",
          "signature": "Env",
          "source": "src/Idris-Core-ProofState.html#Goal",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core ProofState",
          "module": "Idris.Core.ProofState",
          "name": "premises",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-ProofState.html#v:premises"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.ProofState",
          "name": "previous",
          "package": "idris",
          "signature": "Maybe ProofState",
          "source": "src/Idris-Core-ProofState.html#ProofState",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core ProofState",
          "module": "Idris.Core.ProofState",
          "name": "previous",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-ProofState.html#v:previous"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.ProofState",
          "name": "problems",
          "package": "idris",
          "signature": "Fails",
          "source": "src/Idris-Core-ProofState.html#ProofState",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core ProofState",
          "module": "Idris.Core.ProofState",
          "name": "problems",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-ProofState.html#v:problems"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.ProofState",
          "name": "processTactic",
          "package": "idris",
          "signature": "Tactic -\u003e ProofState -\u003e TC (ProofState, String)",
          "source": "src/Idris-Core-ProofState.html#processTactic",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core ProofState",
          "module": "Idris.Core.ProofState",
          "name": "processTactic",
          "normalized": "Tactic-\u003eProofState-\u003eTC(ProofState,String)",
          "package": "idris",
          "partial": "Tactic",
          "signature": "Tactic-\u003eProofState-\u003eTC(ProofState,String)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-ProofState.html#v:processTactic"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.ProofState",
          "name": "pterm",
          "package": "idris",
          "signature": "Term",
          "source": "src/Idris-Core-ProofState.html#ProofState",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core ProofState",
          "module": "Idris.Core.ProofState",
          "name": "pterm",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-ProofState.html#v:pterm"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.ProofState",
          "name": "ptype",
          "package": "idris",
          "signature": "Type",
          "source": "src/Idris-Core-ProofState.html#ProofState",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core ProofState",
          "module": "Idris.Core.ProofState",
          "name": "ptype",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-ProofState.html#v:ptype"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.ProofState",
          "name": "solved",
          "package": "idris",
          "signature": "Maybe (Name, Term)",
          "source": "src/Idris-Core-ProofState.html#ProofState",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core ProofState",
          "module": "Idris.Core.ProofState",
          "name": "solved",
          "normalized": "Maybe(Name,Term)",
          "package": "idris",
          "signature": "Maybe(Name,Term)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-ProofState.html#v:solved"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.ProofState",
          "name": "thname",
          "package": "idris",
          "signature": "Name",
          "source": "src/Idris-Core-ProofState.html#ProofState",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core ProofState",
          "module": "Idris.Core.ProofState",
          "name": "thname",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-ProofState.html#v:thname"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.ProofState",
          "name": "unified",
          "package": "idris",
          "signature": "(Name, [(Name, Term)])",
          "source": "src/Idris-Core-ProofState.html#ProofState",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core ProofState",
          "module": "Idris.Core.ProofState",
          "name": "unified",
          "normalized": "(Name,[(Name,Term)])",
          "package": "idris",
          "signature": "(Name,[(Name,Term)])",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-ProofState.html#v:unified"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.ProofState",
          "name": "unifylog",
          "package": "idris",
          "signature": "Bool",
          "source": "src/Idris-Core-ProofState.html#ProofState",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core ProofState",
          "module": "Idris.Core.ProofState",
          "name": "unifylog",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-ProofState.html#v:unifylog"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.ProofState",
          "name": "usedns",
          "package": "idris",
          "signature": "[Name]",
          "source": "src/Idris-Core-ProofState.html#ProofState",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core ProofState",
          "module": "Idris.Core.ProofState",
          "name": "usedns",
          "normalized": "[Name]",
          "package": "idris",
          "signature": "[Name]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-ProofState.html#v:usedns"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TC",
          "name": "TC",
          "package": "idris",
          "source": "src/Idris-Core-TC.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "Idris Core TC",
          "module": "Idris.Core.TC",
          "name": "TC",
          "package": "idris",
          "partial": "TC",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TC.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TC",
          "name": "TC'",
          "package": "idris",
          "source": "src/Idris-Core-TC.html#TC%27",
          "type": "data"
        },
        "index": {
          "hierarchy": "Idris Core TC",
          "module": "Idris.Core.TC",
          "name": "TC'",
          "package": "idris",
          "partial": "TC'",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TC.html#t:TC-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TC",
          "name": "Error",
          "package": "idris",
          "signature": "Error e",
          "source": "src/Idris-Core-TC.html#TC%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TC",
          "module": "Idris.Core.TC",
          "name": "Error",
          "package": "idris",
          "partial": "Error",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TC.html#v:Error"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TC",
          "name": "OK",
          "package": "idris",
          "signature": "OK !a",
          "source": "src/Idris-Core-TC.html#TC%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TC",
          "module": "Idris.Core.TC",
          "name": "OK",
          "package": "idris",
          "partial": "OK",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TC.html#v:OK"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cdiv class=\"doc\"\u003e\u003cp\u003eTT is the core language of Idris. The language has:\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e Full dependent types\n\u003c/li\u003e\u003cli\u003e A hierarchy of universes, with cumulativity: Type : Type1, Type1 : Type2, ...\n\u003c/li\u003e\u003cli\u003e Pattern matching letrec binding\n\u003c/li\u003e\u003cli\u003e (primitive types defined externally)\n\u003c/li\u003e\u003c/ul\u003e\u003cp\u003eSome technical stuff:\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e Typechecker is kept as simple as possible - no unification, just a checker for incomplete terms.\n\u003c/li\u003e\u003cli\u003e We have a simple collection of tactics which we use to elaborate source\n     programs with implicit syntax into fully explicit terms.\n\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e",
          "module": "Idris.Core.TT",
          "name": "TT",
          "package": "idris",
          "source": "src/Idris-Core-TT.html",
          "type": "module"
        },
        "index": {
          "description": "TT is the core language of Idris The language has Full dependent types hierarchy of universes with cumulativity Type Type1 Type1 Type2 Pattern matching letrec binding primitive types defined externally Some technical stuff Typechecker is kept as simple as possible no unification just checker for incomplete terms We have simple collection of tactics which we use to elaborate source programs with implicit syntax into fully explicit terms",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "TT",
          "package": "idris",
          "partial": "TT",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "ArithTy",
          "package": "idris",
          "source": "src/Idris-Core-TT.html#ArithTy",
          "type": "data"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "ArithTy",
          "package": "idris",
          "partial": "Arith Ty",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#t:ArithTy"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eAll binding forms are represented in a uniform fashion. This type only represents\n the types of bindings (and their values, if any); the attached identifiers are part\n of the \u003ccode\u003e\u003ca\u003eBind\u003c/a\u003e\u003c/code\u003e constructor for the \u003ccode\u003e\u003ca\u003eTT\u003c/a\u003e\u003c/code\u003e type.\n\u003c/p\u003e",
          "module": "Idris.Core.TT",
          "name": "Binder",
          "package": "idris",
          "source": "src/Idris-Core-TT.html#Binder",
          "type": "data"
        },
        "index": {
          "description": "All binding forms are represented in uniform fashion This type only represents the types of bindings and their values if any the attached identifiers are part of the Bind constructor for the TT type",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "Binder",
          "package": "idris",
          "partial": "Binder",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#t:Binder"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "Const",
          "package": "idris",
          "source": "src/Idris-Core-TT.html#Const",
          "type": "data"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "Const",
          "package": "idris",
          "partial": "Const",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#t:Const"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eContexts allow us to map names to things. A root name maps to a collection\n of things in different namespaces with that name.\n\u003c/p\u003e",
          "module": "Idris.Core.TT",
          "name": "Ctxt",
          "package": "idris",
          "source": "src/Idris-Core-TT.html#Ctxt",
          "type": "type"
        },
        "index": {
          "description": "Contexts allow us to map names to things root name maps to collection of things in different namespaces with that name",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "Ctxt",
          "package": "idris",
          "partial": "Ctxt",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#t:Ctxt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "Datatype",
          "package": "idris",
          "source": "src/Idris-Core-TT.html#Datatype",
          "type": "data"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "Datatype",
          "package": "idris",
          "partial": "Datatype",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#t:Datatype"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "Env",
          "package": "idris",
          "source": "src/Idris-Core-TT.html#Env",
          "type": "type"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "Env",
          "package": "idris",
          "partial": "Env",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#t:Env"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "EnvTT",
          "package": "idris",
          "source": "src/Idris-Core-TT.html#EnvTT",
          "type": "type"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "EnvTT",
          "package": "idris",
          "partial": "Env TT",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#t:EnvTT"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "Err",
          "package": "idris",
          "source": "src/Idris-Core-TT.html#Err",
          "type": "type"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "Err",
          "package": "idris",
          "partial": "Err",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#t:Err"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eIdris errors. Used as exceptions in the compiler, but reported to users\n if they reach the top level.\n\u003c/p\u003e",
          "module": "Idris.Core.TT",
          "name": "Err'",
          "package": "idris",
          "source": "src/Idris-Core-TT.html#Err%27",
          "type": "data"
        },
        "index": {
          "description": "Idris errors Used as exceptions in the compiler but reported to users if they reach the top level",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "Err'",
          "package": "idris",
          "partial": "Err'",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#t:Err-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eUsed for error reflection\n\u003c/p\u003e",
          "module": "Idris.Core.TT",
          "name": "ErrorReportPart",
          "package": "idris",
          "source": "src/Idris-Core-TT.html#ErrorReportPart",
          "type": "data"
        },
        "index": {
          "description": "Used for error reflection",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "ErrorReportPart",
          "package": "idris",
          "partial": "Error Report Part",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#t:ErrorReportPart"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eSource location. These are typically produced by the parser \u003ccode\u003e\u003ca\u003egetFC\u003c/a\u003e\u003c/code\u003e\n\u003c/p\u003e",
          "module": "Idris.Core.TT",
          "name": "FC",
          "package": "idris",
          "source": "src/Idris-Core-TT.html#FC",
          "type": "data"
        },
        "index": {
          "description": "Source location These are typically produced by the parser getFC",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "FC",
          "package": "idris",
          "partial": "FC",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#t:FC"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eFC with equality\n\u003c/p\u003e",
          "module": "Idris.Core.TT",
          "name": "FC'",
          "package": "idris",
          "source": "src/Idris-Core-TT.html#FC%27",
          "type": "newtype"
        },
        "index": {
          "description": "FC with equality",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "FC'",
          "package": "idris",
          "partial": "FC'",
          "type": "newtype"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#t:FC-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "IntTy",
          "package": "idris",
          "source": "src/Idris-Core-TT.html#IntTy",
          "type": "data"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "IntTy",
          "package": "idris",
          "partial": "Int Ty",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#t:IntTy"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eNames are hierarchies of strings, describing scope (so no danger of\n duplicate names, but need to be careful on lookup).\n\u003c/p\u003e",
          "module": "Idris.Core.TT",
          "name": "Name",
          "package": "idris",
          "source": "src/Idris-Core-TT.html#Name",
          "type": "data"
        },
        "index": {
          "description": "Names are hierarchies of strings describing scope so no danger of duplicate names but need to be careful on lookup",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "Name",
          "package": "idris",
          "partial": "Name",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#t:Name"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eOutput annotation for pretty-printed name - decides colour\n\u003c/p\u003e",
          "module": "Idris.Core.TT",
          "name": "NameOutput",
          "package": "idris",
          "source": "src/Idris-Core-TT.html#NameOutput",
          "type": "data"
        },
        "index": {
          "description": "Output annotation for pretty-printed name decides colour",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "NameOutput",
          "package": "idris",
          "partial": "Name Output",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#t:NameOutput"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "NameType",
          "package": "idris",
          "source": "src/Idris-Core-TT.html#NameType",
          "type": "data"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "NameType",
          "package": "idris",
          "partial": "Name Type",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#t:NameType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "NativeTy",
          "package": "idris",
          "source": "src/Idris-Core-TT.html#NativeTy",
          "type": "data"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "NativeTy",
          "package": "idris",
          "partial": "Native Ty",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#t:NativeTy"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "Option",
          "package": "idris",
          "source": "src/Idris-Core-TT.html#Option",
          "type": "data"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "Option",
          "package": "idris",
          "partial": "Option",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#t:Option"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eOutput annotations for pretty-printing\n\u003c/p\u003e",
          "module": "Idris.Core.TT",
          "name": "OutputAnnotation",
          "package": "idris",
          "source": "src/Idris-Core-TT.html#OutputAnnotation",
          "type": "data"
        },
        "index": {
          "description": "Output annotations for pretty-printing",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "OutputAnnotation",
          "package": "idris",
          "partial": "Output Annotation",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#t:OutputAnnotation"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "Raw",
          "package": "idris",
          "source": "src/Idris-Core-TT.html#Raw",
          "type": "data"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "Raw",
          "package": "idris",
          "partial": "Raw",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#t:Raw"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "SpecialName",
          "package": "idris",
          "source": "src/Idris-Core-TT.html#SpecialName",
          "type": "data"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "SpecialName",
          "package": "idris",
          "partial": "Special Name",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#t:SpecialName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "TC",
          "package": "idris",
          "source": "src/Idris-Core-TT.html#TC",
          "type": "type"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "TC",
          "package": "idris",
          "partial": "TC",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#t:TC"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eTerms in the core language. The type parameter is the type of\n identifiers used for bindings and explicit named references;\n usually we use \u003ccode\u003eTT \u003ccode\u003e\u003ca\u003eName\u003c/a\u003e\u003c/code\u003e\u003c/code\u003e.\n\u003c/p\u003e",
          "module": "Idris.Core.TT",
          "name": "TT",
          "package": "idris",
          "source": "src/Idris-Core-TT.html#TT",
          "type": "data"
        },
        "index": {
          "description": "Terms in the core language The type parameter is the type of identifiers used for bindings and explicit named references usually we use TT Name",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "TT",
          "package": "idris",
          "partial": "TT",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#t:TT"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "Term",
          "package": "idris",
          "source": "src/Idris-Core-TT.html#Term",
          "type": "type"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "Term",
          "package": "idris",
          "partial": "Term",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#t:Term"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "TermSize",
          "package": "idris",
          "source": "src/Idris-Core-TT.html#TermSize",
          "type": "class"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "TermSize",
          "package": "idris",
          "partial": "Term Size",
          "type": "class"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#t:TermSize"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "Type",
          "package": "idris",
          "source": "src/Idris-Core-TT.html#Type",
          "type": "type"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "Type",
          "package": "idris",
          "partial": "Type",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#t:Type"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eUniverse constraints\n\u003c/p\u003e",
          "module": "Idris.Core.TT",
          "name": "UConstraint",
          "package": "idris",
          "source": "src/Idris-Core-TT.html#UConstraint",
          "type": "data"
        },
        "index": {
          "description": "Universe constraints",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "UConstraint",
          "package": "idris",
          "partial": "UConstraint",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#t:UConstraint"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "UCs",
          "package": "idris",
          "source": "src/Idris-Core-TT.html#UCs",
          "type": "type"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "UCs",
          "package": "idris",
          "partial": "UCs",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#t:UCs"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eUniverse expressions for universe checking\n\u003c/p\u003e",
          "module": "Idris.Core.TT",
          "name": "UExp",
          "package": "idris",
          "source": "src/Idris-Core-TT.html#UExp",
          "type": "data"
        },
        "index": {
          "description": "Universe expressions for universe checking",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "UExp",
          "package": "idris",
          "partial": "UExp",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#t:UExp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "WkEnv",
          "package": "idris",
          "source": "src/Idris-Core-TT.html#WkEnv",
          "type": "type"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "WkEnv",
          "package": "idris",
          "partial": "Wk Env",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#t:WkEnv"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003ean environment with de Bruijn indices \u003ccode\u003enormalised\u003c/code\u003e so that they all refer to\n this environment\n\u003c/p\u003e",
          "module": "Idris.Core.TT",
          "name": "WkEnvTT",
          "package": "idris",
          "source": "src/Idris-Core-TT.html#WkEnvTT",
          "type": "newtype"
        },
        "index": {
          "description": "an environment with de Bruijn indices normalised so that they all refer to this environment",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "WkEnvTT",
          "package": "idris",
          "partial": "Wk Env TT",
          "type": "newtype"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#t:WkEnvTT"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "ATFloat",
          "package": "idris",
          "signature": "ATFloat",
          "source": "src/Idris-Core-TT.html#ArithTy",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "ATFloat",
          "package": "idris",
          "partial": "ATFloat",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:ATFloat"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "ATInt",
          "package": "idris",
          "signature": "ATInt IntTy",
          "source": "src/Idris-Core-TT.html#ArithTy",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "ATInt",
          "package": "idris",
          "partial": "ATInt",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:ATInt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "AType",
          "package": "idris",
          "signature": "AType ArithTy",
          "source": "src/Idris-Core-TT.html#Const",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "AType",
          "package": "idris",
          "partial": "AType",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:AType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "AlreadyDefined",
          "package": "idris",
          "signature": "AlreadyDefined Name",
          "source": "src/Idris-Core-TT.html#Err%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "AlreadyDefined",
          "package": "idris",
          "partial": "Already Defined",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:AlreadyDefined"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "AnnBoundName",
          "package": "idris",
          "signature": "AnnBoundName Name Bool",
          "source": "src/Idris-Core-TT.html#OutputAnnotation",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "AnnBoundName",
          "package": "idris",
          "partial": "Ann Bound Name",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:AnnBoundName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "AnnConstData",
          "package": "idris",
          "signature": "AnnConstData",
          "source": "src/Idris-Core-TT.html#OutputAnnotation",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "AnnConstData",
          "package": "idris",
          "partial": "Ann Const Data",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:AnnConstData"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "AnnConstType",
          "package": "idris",
          "signature": "AnnConstType",
          "source": "src/Idris-Core-TT.html#OutputAnnotation",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "AnnConstType",
          "package": "idris",
          "partial": "Ann Const Type",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:AnnConstType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "AnnFC",
          "package": "idris",
          "signature": "AnnFC FC",
          "source": "src/Idris-Core-TT.html#OutputAnnotation",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "AnnFC",
          "package": "idris",
          "partial": "Ann FC",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:AnnFC"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "AnnName",
          "package": "idris",
          "signature": "AnnName Name (Maybe NameOutput) (Maybe Type)",
          "source": "src/Idris-Core-TT.html#OutputAnnotation",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "AnnName",
          "package": "idris",
          "partial": "Ann Name",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:AnnName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003efunction, function type, arg\n\u003c/p\u003e",
          "module": "Idris.Core.TT",
          "name": "App",
          "package": "idris",
          "signature": "App !(TT n) (TT n)",
          "source": "src/Idris-Core-TT.html#TT",
          "type": "function"
        },
        "index": {
          "description": "function function type arg",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "App",
          "package": "idris",
          "partial": "App",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:App"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "At",
          "package": "idris",
          "signature": "At FC (Err' t)",
          "source": "src/Idris-Core-TT.html#Err%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "At",
          "package": "idris",
          "partial": "At",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:At"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "B16",
          "package": "idris",
          "signature": "B16 Word16",
          "source": "src/Idris-Core-TT.html#Const",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "B16",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:B16"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "B16V",
          "package": "idris",
          "signature": "B16V (Vector Word16)",
          "source": "src/Idris-Core-TT.html#Const",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "B16V",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:B16V"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "B32",
          "package": "idris",
          "signature": "B32 Word32",
          "source": "src/Idris-Core-TT.html#Const",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "B32",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:B32"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "B32V",
          "package": "idris",
          "signature": "B32V (Vector Word32)",
          "source": "src/Idris-Core-TT.html#Const",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "B32V",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:B32V"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "B64",
          "package": "idris",
          "signature": "B64 Word64",
          "source": "src/Idris-Core-TT.html#Const",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "B64",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:B64"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "B64V",
          "package": "idris",
          "signature": "B64V (Vector Word64)",
          "source": "src/Idris-Core-TT.html#Const",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "B64V",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:B64V"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "B8",
          "package": "idris",
          "signature": "B8 Word8",
          "source": "src/Idris-Core-TT.html#Const",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "B8",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:B8"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "B8V",
          "package": "idris",
          "signature": "B8V (Vector Word8)",
          "source": "src/Idris-Core-TT.html#Const",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "B8V",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:B8V"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "BI",
          "package": "idris",
          "signature": "BI Integer",
          "source": "src/Idris-Core-TT.html#Const",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "BI",
          "package": "idris",
          "partial": "BI",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:BI"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003ea binding\n\u003c/p\u003e",
          "module": "Idris.Core.TT",
          "name": "Bind",
          "package": "idris",
          "signature": "Bind n !(Binder (TT n)) (TT n)",
          "source": "src/Idris-Core-TT.html#TT",
          "type": "function"
        },
        "index": {
          "description": "binding",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "Bind",
          "package": "idris",
          "partial": "Bind",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:Bind"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "Bound",
          "package": "idris",
          "signature": "Bound",
          "source": "src/Idris-Core-TT.html#NameType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "Bound",
          "package": "idris",
          "partial": "Bound",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:Bound"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "BufferType",
          "package": "idris",
          "signature": "BufferType",
          "source": "src/Idris-Core-TT.html#Const",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "BufferType",
          "package": "idris",
          "partial": "Buffer Type",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:BufferType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "CantConvert",
          "package": "idris",
          "signature": "CantConvert t t [(Name, t)]",
          "source": "src/Idris-Core-TT.html#Err%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "CantConvert",
          "normalized": "CantConvert a a[(Name,a)]",
          "package": "idris",
          "partial": "Cant Convert",
          "signature": "CantConvert t t[(Name,t)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:CantConvert"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "CantInferType",
          "package": "idris",
          "signature": "CantInferType String",
          "source": "src/Idris-Core-TT.html#Err%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "CantInferType",
          "package": "idris",
          "partial": "Cant Infer Type",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:CantInferType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "CantIntroduce",
          "package": "idris",
          "signature": "CantIntroduce t",
          "source": "src/Idris-Core-TT.html#Err%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "CantIntroduce",
          "package": "idris",
          "partial": "Cant Introduce",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:CantIntroduce"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "CantResolve",
          "package": "idris",
          "signature": "CantResolve t",
          "source": "src/Idris-Core-TT.html#Err%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "CantResolve",
          "package": "idris",
          "partial": "Cant Resolve",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:CantResolve"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "CantResolveAlts",
          "package": "idris",
          "signature": "CantResolveAlts [String]",
          "source": "src/Idris-Core-TT.html#Err%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "CantResolveAlts",
          "normalized": "CantResolveAlts[String]",
          "package": "idris",
          "partial": "Cant Resolve Alts",
          "signature": "CantResolveAlts[String]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:CantResolveAlts"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "CantSolveGoal",
          "package": "idris",
          "signature": "CantSolveGoal t [(Name, t)]",
          "source": "src/Idris-Core-TT.html#Err%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "CantSolveGoal",
          "normalized": "CantSolveGoal a[(Name,a)]",
          "package": "idris",
          "partial": "Cant Solve Goal",
          "signature": "CantSolveGoal t[(Name,t)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:CantSolveGoal"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "CantUnify",
          "package": "idris",
          "signature": "CantUnify Bool t t (Err' t) [(Name, t)] Int",
          "source": "src/Idris-Core-TT.html#Err%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "CantUnify",
          "normalized": "CantUnify Bool a a(Err' a)[(Name,a)]Int",
          "package": "idris",
          "partial": "Cant Unify",
          "signature": "CantUnify Bool t t(Err' t)[(Name,t)]Int",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:CantUnify"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "CaseN",
          "package": "idris",
          "signature": "CaseN Name",
          "source": "src/Idris-Core-TT.html#SpecialName",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "CaseN",
          "package": "idris",
          "partial": "Case",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:CaseN"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "Ch",
          "package": "idris",
          "signature": "Ch Char",
          "source": "src/Idris-Core-TT.html#Const",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "Ch",
          "package": "idris",
          "partial": "Ch",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:Ch"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "CheckConv",
          "package": "idris",
          "signature": "CheckConv",
          "source": "src/Idris-Core-TT.html#Option",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "CheckConv",
          "package": "idris",
          "partial": "Check Conv",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:CheckConv"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003econstant\n\u003c/p\u003e",
          "module": "Idris.Core.TT",
          "name": "Constant",
          "package": "idris",
          "signature": "Constant Const",
          "source": "src/Idris-Core-TT.html#TT",
          "type": "function"
        },
        "index": {
          "description": "constant",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "Constant",
          "package": "idris",
          "partial": "Constant",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:Constant"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eData constructor\n\u003c/p\u003e",
          "module": "Idris.Core.TT",
          "name": "DCon",
          "package": "idris",
          "signature": "DCon",
          "source": "src/Idris-Core-TT.html#NameType",
          "type": "function"
        },
        "index": {
          "description": "Data constructor",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "DCon",
          "package": "idris",
          "partial": "DCon",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:DCon"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "Data",
          "package": "idris",
          "signature": "Data",
          "source": "src/Idris-Core-TT.html#Datatype",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "Data",
          "package": "idris",
          "partial": "Data",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:Data"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "DataOutput",
          "package": "idris",
          "signature": "DataOutput",
          "source": "src/Idris-Core-TT.html#NameOutput",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "DataOutput",
          "package": "idris",
          "partial": "Data Output",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:DataOutput"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "Elaborating",
          "package": "idris",
          "signature": "Elaborating String Name (Err' t)",
          "source": "src/Idris-Core-TT.html#Err%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "Elaborating",
          "package": "idris",
          "partial": "Elaborating",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:Elaborating"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "ElimN",
          "package": "idris",
          "signature": "ElimN Name",
          "source": "src/Idris-Core-TT.html#SpecialName",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "ElimN",
          "package": "idris",
          "partial": "Elim",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:ElimN"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003ean erased term\n\u003c/p\u003e",
          "module": "Idris.Core.TT",
          "name": "Erased",
          "package": "idris",
          "signature": "Erased",
          "source": "src/Idris-Core-TT.html#TT",
          "type": "function"
        },
        "index": {
          "description": "an erased term",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "Erased",
          "package": "idris",
          "partial": "Erased",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:Erased"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "FC",
          "package": "idris",
          "signature": "FC",
          "source": "src/Idris-Core-TT.html#FC",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "FC",
          "package": "idris",
          "partial": "FC",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:FC"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "FC'",
          "package": "idris",
          "signature": "FC'",
          "source": "src/Idris-Core-TT.html#FC%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "FC'",
          "package": "idris",
          "partial": "FC'",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:FC-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "Fl",
          "package": "idris",
          "signature": "Fl Double",
          "source": "src/Idris-Core-TT.html#Const",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "Fl",
          "package": "idris",
          "partial": "Fl",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:Fl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "Forgot",
          "package": "idris",
          "signature": "Forgot",
          "source": "src/Idris-Core-TT.html#Const",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "Forgot",
          "package": "idris",
          "partial": "Forgot",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:Forgot"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "FunOutput",
          "package": "idris",
          "signature": "FunOutput",
          "source": "src/Idris-Core-TT.html#NameOutput",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "FunOutput",
          "package": "idris",
          "partial": "Fun Output",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:FunOutput"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "GHole",
          "package": "idris",
          "signature": "GHole",
          "source": "src/Idris-Core-TT.html#Binder",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "GHole",
          "package": "idris",
          "partial": "GHole",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:GHole"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "Guess",
          "package": "idris",
          "signature": "Guess",
          "source": "src/Idris-Core-TT.html#Binder",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "Guess",
          "package": "idris",
          "partial": "Guess",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:Guess"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "Hole",
          "package": "idris",
          "signature": "Hole",
          "source": "src/Idris-Core-TT.html#Binder",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "Hole",
          "package": "idris",
          "partial": "Hole",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:Hole"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "I",
          "package": "idris",
          "signature": "I Int",
          "source": "src/Idris-Core-TT.html#Const",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "I",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:I"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "IT16",
          "package": "idris",
          "signature": "IT16",
          "source": "src/Idris-Core-TT.html#NativeTy",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "IT16",
          "package": "idris",
          "partial": "IT",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:IT16"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "IT32",
          "package": "idris",
          "signature": "IT32",
          "source": "src/Idris-Core-TT.html#NativeTy",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "IT32",
          "package": "idris",
          "partial": "IT",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:IT32"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "IT64",
          "package": "idris",
          "signature": "IT64",
          "source": "src/Idris-Core-TT.html#NativeTy",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "IT64",
          "package": "idris",
          "partial": "IT",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:IT64"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "IT8",
          "package": "idris",
          "signature": "IT8",
          "source": "src/Idris-Core-TT.html#NativeTy",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "IT8",
          "package": "idris",
          "partial": "IT",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:IT8"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "ITBig",
          "package": "idris",
          "signature": "ITBig",
          "source": "src/Idris-Core-TT.html#IntTy",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "ITBig",
          "package": "idris",
          "partial": "ITBig",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:ITBig"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "ITChar",
          "package": "idris",
          "signature": "ITChar",
          "source": "src/Idris-Core-TT.html#IntTy",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "ITChar",
          "package": "idris",
          "partial": "ITChar",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:ITChar"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "ITFixed",
          "package": "idris",
          "signature": "ITFixed NativeTy",
          "source": "src/Idris-Core-TT.html#IntTy",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "ITFixed",
          "package": "idris",
          "partial": "ITFixed",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:ITFixed"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "ITNative",
          "package": "idris",
          "signature": "ITNative",
          "source": "src/Idris-Core-TT.html#IntTy",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "ITNative",
          "package": "idris",
          "partial": "ITNative",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:ITNative"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "ITVec",
          "package": "idris",
          "signature": "ITVec NativeTy Int",
          "source": "src/Idris-Core-TT.html#IntTy",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "ITVec",
          "package": "idris",
          "partial": "ITVec",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:ITVec"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003especial case for totality checking\n\u003c/p\u003e",
          "module": "Idris.Core.TT",
          "name": "Impossible",
          "package": "idris",
          "signature": "Impossible",
          "source": "src/Idris-Core-TT.html#TT",
          "type": "function"
        },
        "index": {
          "description": "special case for totality checking",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "Impossible",
          "package": "idris",
          "partial": "Impossible",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:Impossible"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "Inaccessible",
          "package": "idris",
          "signature": "Inaccessible Name",
          "source": "src/Idris-Core-TT.html#Err%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "Inaccessible",
          "package": "idris",
          "partial": "Inaccessible",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:Inaccessible"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "IncompleteTerm",
          "package": "idris",
          "signature": "IncompleteTerm t",
          "source": "src/Idris-Core-TT.html#Err%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "IncompleteTerm",
          "package": "idris",
          "partial": "Incomplete Term",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:IncompleteTerm"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "InfiniteUnify",
          "package": "idris",
          "signature": "InfiniteUnify Name t [(Name, t)]",
          "source": "src/Idris-Core-TT.html#Err%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "InfiniteUnify",
          "normalized": "InfiniteUnify Name a[(Name,a)]",
          "package": "idris",
          "partial": "Infinite Unify",
          "signature": "InfiniteUnify Name t[(Name,t)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:InfiniteUnify"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "InstanceN",
          "package": "idris",
          "signature": "InstanceN Name [Text]",
          "source": "src/Idris-Core-TT.html#SpecialName",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "InstanceN",
          "normalized": "InstanceN Name[Text]",
          "package": "idris",
          "partial": "Instance",
          "signature": "InstanceN Name[Text]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:InstanceN"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "InternalMsg",
          "package": "idris",
          "signature": "InternalMsg String",
          "source": "src/Idris-Core-TT.html#Err%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "InternalMsg",
          "package": "idris",
          "partial": "Internal Msg",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:InternalMsg"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "Lam",
          "package": "idris",
          "signature": "Lam",
          "source": "src/Idris-Core-TT.html#Binder",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "Lam",
          "package": "idris",
          "partial": "Lam",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:Lam"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eA binding that occurs in a \u003ccode\u003elet\u003c/code\u003e expression\n\u003c/p\u003e",
          "module": "Idris.Core.TT",
          "name": "Let",
          "package": "idris",
          "signature": "Let",
          "source": "src/Idris-Core-TT.html#Binder",
          "type": "function"
        },
        "index": {
          "description": "binding that occurs in let expression",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "Let",
          "package": "idris",
          "partial": "Let",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:Let"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "LoadingFailed",
          "package": "idris",
          "signature": "LoadingFailed String (Err' t)",
          "source": "src/Idris-Core-TT.html#Err%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "LoadingFailed",
          "package": "idris",
          "partial": "Loading Failed",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:LoadingFailed"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eMachine chosen names\n\u003c/p\u003e",
          "module": "Idris.Core.TT",
          "name": "MN",
          "package": "idris",
          "signature": "MN Int Text",
          "source": "src/Idris-Core-TT.html#Name",
          "type": "function"
        },
        "index": {
          "description": "Machine chosen names",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "MN",
          "package": "idris",
          "partial": "MN",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:MN"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "MethodN",
          "package": "idris",
          "signature": "MethodN Name",
          "source": "src/Idris-Core-TT.html#SpecialName",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "MethodN",
          "package": "idris",
          "partial": "Method",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:MethodN"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "Msg",
          "package": "idris",
          "signature": "Msg String",
          "source": "src/Idris-Core-TT.html#Err%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "Msg",
          "package": "idris",
          "partial": "Msg",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:Msg"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eName of somethng which is never used in scope\n\u003c/p\u003e",
          "module": "Idris.Core.TT",
          "name": "NErased",
          "package": "idris",
          "signature": "NErased",
          "source": "src/Idris-Core-TT.html#Name",
          "type": "function"
        },
        "index": {
          "description": "Name of somethng which is never used in scope",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "NErased",
          "package": "idris",
          "partial": "NErased",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:NErased"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "NLet",
          "package": "idris",
          "signature": "NLet",
          "source": "src/Idris-Core-TT.html#Binder",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "NLet",
          "package": "idris",
          "partial": "NLet",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:NLet"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eRoot, namespaces\n\u003c/p\u003e",
          "module": "Idris.Core.TT",
          "name": "NS",
          "package": "idris",
          "signature": "NS Name [Text]",
          "source": "src/Idris-Core-TT.html#Name",
          "type": "function"
        },
        "index": {
          "description": "Root namespaces",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "NS",
          "normalized": "NS Name[Text]",
          "package": "idris",
          "partial": "NS",
          "signature": "NS Name[Text]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:NS"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "NamePart",
          "package": "idris",
          "signature": "NamePart Name",
          "source": "src/Idris-Core-TT.html#ErrorReportPart",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "NamePart",
          "package": "idris",
          "partial": "Name Part",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:NamePart"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "NoRewriting",
          "package": "idris",
          "signature": "NoRewriting t",
          "source": "src/Idris-Core-TT.html#Err%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "NoRewriting",
          "package": "idris",
          "partial": "No Rewriting",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:NoRewriting"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "NoSuchVariable",
          "package": "idris",
          "signature": "NoSuchVariable Name",
          "source": "src/Idris-Core-TT.html#Err%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "NoSuchVariable",
          "package": "idris",
          "partial": "No Such Variable",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:NoSuchVariable"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "NoTypeDecl",
          "package": "idris",
          "signature": "NoTypeDecl Name",
          "source": "src/Idris-Core-TT.html#Err%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "NoTypeDecl",
          "package": "idris",
          "partial": "No Type Decl",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:NoTypeDecl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "NonCollapsiblePostulate",
          "package": "idris",
          "signature": "NonCollapsiblePostulate Name",
          "source": "src/Idris-Core-TT.html#Err%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "NonCollapsiblePostulate",
          "package": "idris",
          "partial": "Non Collapsible Postulate",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:NonCollapsiblePostulate"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "NonFunctionType",
          "package": "idris",
          "signature": "NonFunctionType t t",
          "source": "src/Idris-Core-TT.html#Err%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "NonFunctionType",
          "package": "idris",
          "partial": "Non Function Type",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:NonFunctionType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "NotEquality",
          "package": "idris",
          "signature": "NotEquality t t",
          "source": "src/Idris-Core-TT.html#Err%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "NotEquality",
          "package": "idris",
          "partial": "Not Equality",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:NotEquality"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "NotInjective",
          "package": "idris",
          "signature": "NotInjective t t t",
          "source": "src/Idris-Core-TT.html#Err%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "NotInjective",
          "package": "idris",
          "partial": "Not Injective",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:NotInjective"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003enamed references with type\n (P for \u003ca\u003eParameter\u003c/a\u003e, motivated by McKinna and Pollack's\n Pure Type Systems Formalized)\n\u003c/p\u003e",
          "module": "Idris.Core.TT",
          "name": "P",
          "package": "idris",
          "signature": "P NameType n (TT n)",
          "source": "src/Idris-Core-TT.html#TT",
          "type": "function"
        },
        "index": {
          "description": "named references with type for Parameter motivated by McKinna and Pollack Pure Type Systems Formalized",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "P",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:P"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "PVTy",
          "package": "idris",
          "signature": "PVTy",
          "source": "src/Idris-Core-TT.html#Binder",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "PVTy",
          "package": "idris",
          "partial": "PVTy",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:PVTy"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eA pattern variable\n\u003c/p\u003e",
          "module": "Idris.Core.TT",
          "name": "PVar",
          "package": "idris",
          "signature": "PVar",
          "source": "src/Idris-Core-TT.html#Binder",
          "type": "function"
        },
        "index": {
          "description": "pattern variable",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "PVar",
          "package": "idris",
          "partial": "PVar",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:PVar"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "ParentN",
          "package": "idris",
          "signature": "ParentN Name Text",
          "source": "src/Idris-Core-TT.html#SpecialName",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "ParentN",
          "package": "idris",
          "partial": "Parent",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:ParentN"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eA binding that occurs in a function type expression, e.g. \u003ccode\u003e(x:Int) -\u003e ...\u003c/code\u003e \n\u003c/p\u003e",
          "module": "Idris.Core.TT",
          "name": "Pi",
          "package": "idris",
          "signature": "Pi",
          "source": "src/Idris-Core-TT.html#Binder",
          "type": "function"
        },
        "index": {
          "description": "binding that occurs in function type expression e.g Int",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "Pi",
          "package": "idris",
          "partial": "Pi",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:Pi"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "ProgramLineComment",
          "package": "idris",
          "signature": "ProgramLineComment",
          "source": "src/Idris-Core-TT.html#Err%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "ProgramLineComment",
          "package": "idris",
          "partial": "Program Line Comment",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:ProgramLineComment"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eargument projection; runtime only\n (-1) is a special case for 'subtract one from BI'\n\u003c/p\u003e",
          "module": "Idris.Core.TT",
          "name": "Proj",
          "package": "idris",
          "signature": "Proj (TT n) !Int",
          "source": "src/Idris-Core-TT.html#TT",
          "type": "function"
        },
        "index": {
          "description": "argument projection runtime only is special case for subtract one from BI",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "Proj",
          "package": "idris",
          "partial": "Proj",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:Proj"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "ProofSearchFail",
          "package": "idris",
          "signature": "ProofSearchFail (Err' t)",
          "source": "src/Idris-Core-TT.html#Err%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "ProofSearchFail",
          "package": "idris",
          "partial": "Proof Search Fail",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:ProofSearchFail"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "ProviderError",
          "package": "idris",
          "signature": "ProviderError String",
          "source": "src/Idris-Core-TT.html#Err%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "ProviderError",
          "package": "idris",
          "partial": "Provider Error",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:ProviderError"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "PtrType",
          "package": "idris",
          "signature": "PtrType",
          "source": "src/Idris-Core-TT.html#Const",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "PtrType",
          "package": "idris",
          "partial": "Ptr Type",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:PtrType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "RApp",
          "package": "idris",
          "signature": "RApp Raw Raw",
          "source": "src/Idris-Core-TT.html#Raw",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "RApp",
          "package": "idris",
          "partial": "RApp",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:RApp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "RBind",
          "package": "idris",
          "signature": "RBind Name (Binder Raw) Raw",
          "source": "src/Idris-Core-TT.html#Raw",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "RBind",
          "package": "idris",
          "partial": "RBind",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:RBind"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "RConstant",
          "package": "idris",
          "signature": "RConstant Const",
          "source": "src/Idris-Core-TT.html#Raw",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "RConstant",
          "package": "idris",
          "partial": "RConstant",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:RConstant"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "RForce",
          "package": "idris",
          "signature": "RForce Raw",
          "source": "src/Idris-Core-TT.html#Raw",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "RForce",
          "package": "idris",
          "partial": "RForce",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:RForce"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "RType",
          "package": "idris",
          "signature": "RType",
          "source": "src/Idris-Core-TT.html#Raw",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "RType",
          "package": "idris",
          "partial": "RType",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:RType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "Ref",
          "package": "idris",
          "signature": "Ref",
          "source": "src/Idris-Core-TT.html#NameType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "Ref",
          "package": "idris",
          "partial": "Ref",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:Ref"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "ReflectionError",
          "package": "idris",
          "signature": "ReflectionError [[ErrorReportPart]] (Err' t)",
          "source": "src/Idris-Core-TT.html#Err%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "ReflectionError",
          "normalized": "ReflectionError[[ErrorReportPart]](Err' a)",
          "package": "idris",
          "partial": "Reflection Error",
          "signature": "ReflectionError[[ErrorReportPart]](Err' t)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:ReflectionError"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "ReflectionFailed",
          "package": "idris",
          "signature": "ReflectionFailed String (Err' t)",
          "source": "src/Idris-Core-TT.html#Err%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "ReflectionFailed",
          "package": "idris",
          "partial": "Reflection Failed",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:ReflectionFailed"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eDecorated function names\n\u003c/p\u003e",
          "module": "Idris.Core.TT",
          "name": "SN",
          "package": "idris",
          "signature": "SN SpecialName",
          "source": "src/Idris-Core-TT.html#Name",
          "type": "function"
        },
        "index": {
          "description": "Decorated function names",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "SN",
          "package": "idris",
          "partial": "SN",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:SN"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "Str",
          "package": "idris",
          "signature": "Str String",
          "source": "src/Idris-Core-TT.html#Const",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "Str",
          "package": "idris",
          "partial": "Str",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:Str"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "StrType",
          "package": "idris",
          "signature": "StrType",
          "source": "src/Idris-Core-TT.html#Const",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "StrType",
          "package": "idris",
          "partial": "Str Type",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:StrType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "SubReport",
          "package": "idris",
          "signature": "SubReport [ErrorReportPart]",
          "source": "src/Idris-Core-TT.html#ErrorReportPart",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "SubReport",
          "normalized": "SubReport[ErrorReportPart]",
          "package": "idris",
          "partial": "Sub Report",
          "signature": "SubReport[ErrorReportPart]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:SubReport"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eReference to IBC file symbol table (used during serialisation)\n\u003c/p\u003e",
          "module": "Idris.Core.TT",
          "name": "SymRef",
          "package": "idris",
          "signature": "SymRef Int",
          "source": "src/Idris-Core-TT.html#Name",
          "type": "function"
        },
        "index": {
          "description": "Reference to IBC file symbol table used during serialisation",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "SymRef",
          "package": "idris",
          "partial": "Sym Ref",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:SymRef"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eType constructor\n\u003c/p\u003e",
          "module": "Idris.Core.TT",
          "name": "TCon",
          "package": "idris",
          "signature": "TCon",
          "source": "src/Idris-Core-TT.html#NameType",
          "type": "function"
        },
        "index": {
          "description": "Type constructor",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "TCon",
          "package": "idris",
          "partial": "TCon",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:TCon"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003ethe type of types at some level\n\u003c/p\u003e",
          "module": "Idris.Core.TT",
          "name": "TType",
          "package": "idris",
          "signature": "TType UExp",
          "source": "src/Idris-Core-TT.html#TT",
          "type": "function"
        },
        "index": {
          "description": "the type of types at some level",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "TType",
          "package": "idris",
          "partial": "TType",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:TType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "TTypeInTType",
          "package": "idris",
          "signature": "TTypeInTType",
          "source": "src/Idris-Core-TT.html#Option",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "TTypeInTType",
          "package": "idris",
          "partial": "TType In TType",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:TTypeInTType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "TermPart",
          "package": "idris",
          "signature": "TermPart Term",
          "source": "src/Idris-Core-TT.html#ErrorReportPart",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "TermPart",
          "package": "idris",
          "partial": "Term Part",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:TermPart"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "TextPart",
          "package": "idris",
          "signature": "TextPart String",
          "source": "src/Idris-Core-TT.html#ErrorReportPart",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "TextPart",
          "package": "idris",
          "partial": "Text Part",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:TextPart"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "TooManyArguments",
          "package": "idris",
          "signature": "TooManyArguments Name",
          "source": "src/Idris-Core-TT.html#Err%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "TooManyArguments",
          "package": "idris",
          "partial": "Too Many Arguments",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:TooManyArguments"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "TypeOutput",
          "package": "idris",
          "signature": "TypeOutput",
          "source": "src/Idris-Core-TT.html#NameOutput",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "TypeOutput",
          "package": "idris",
          "partial": "Type Output",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:TypeOutput"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eLess than or equal to\n\u003c/p\u003e",
          "module": "Idris.Core.TT",
          "name": "ULE",
          "package": "idris",
          "signature": "ULE UExp UExp",
          "source": "src/Idris-Core-TT.html#UConstraint",
          "type": "function"
        },
        "index": {
          "description": "Less than or equal to",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "ULE",
          "package": "idris",
          "partial": "ULE",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:ULE"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eStrictly less than\n\u003c/p\u003e",
          "module": "Idris.Core.TT",
          "name": "ULT",
          "package": "idris",
          "signature": "ULT UExp UExp",
          "source": "src/Idris-Core-TT.html#UConstraint",
          "type": "function"
        },
        "index": {
          "description": "Strictly less than",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "ULT",
          "package": "idris",
          "partial": "ULT",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:ULT"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eUser-provided name\n\u003c/p\u003e",
          "module": "Idris.Core.TT",
          "name": "UN",
          "package": "idris",
          "signature": "UN Text",
          "source": "src/Idris-Core-TT.html#Name",
          "type": "function"
        },
        "index": {
          "description": "User-provided name",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "UN",
          "package": "idris",
          "partial": "UN",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:UN"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eexplicit universe level\n\u003c/p\u003e",
          "module": "Idris.Core.TT",
          "name": "UVal",
          "package": "idris",
          "signature": "UVal Int",
          "source": "src/Idris-Core-TT.html#UExp",
          "type": "function"
        },
        "index": {
          "description": "explicit universe level",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "UVal",
          "package": "idris",
          "partial": "UVal",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:UVal"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003euniverse variable\n\u003c/p\u003e",
          "module": "Idris.Core.TT",
          "name": "UVar",
          "package": "idris",
          "signature": "UVar Int",
          "source": "src/Idris-Core-TT.html#UExp",
          "type": "function"
        },
        "index": {
          "description": "universe variable",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "UVar",
          "package": "idris",
          "partial": "UVar",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:UVar"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "UnifyScope",
          "package": "idris",
          "signature": "UnifyScope Name Name t [(Name, t)]",
          "source": "src/Idris-Core-TT.html#Err%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "UnifyScope",
          "normalized": "UnifyScope Name Name a[(Name,a)]",
          "package": "idris",
          "partial": "Unify Scope",
          "signature": "UnifyScope Name Name t[(Name,t)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:UnifyScope"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "UniverseError",
          "package": "idris",
          "signature": "UniverseError",
          "source": "src/Idris-Core-TT.html#Err%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "UniverseError",
          "package": "idris",
          "partial": "Universe Error",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:UniverseError"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003ea resolved de Bruijn-indexed variable\n\u003c/p\u003e",
          "module": "Idris.Core.TT",
          "name": "V",
          "package": "idris",
          "signature": "V !Int",
          "source": "src/Idris-Core-TT.html#TT",
          "type": "function"
        },
        "index": {
          "description": "resolved de Bruijn-indexed variable",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "V",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:V"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "Var",
          "package": "idris",
          "signature": "Var Name",
          "source": "src/Idris-Core-TT.html#Raw",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "Var",
          "package": "idris",
          "partial": "Var",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:Var"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "VoidType",
          "package": "idris",
          "signature": "VoidType",
          "source": "src/Idris-Core-TT.html#Const",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "VoidType",
          "package": "idris",
          "partial": "Void Type",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:VoidType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "WhereN",
          "package": "idris",
          "signature": "WhereN Int Name Name",
          "source": "src/Idris-Core-TT.html#SpecialName",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "WhereN",
          "package": "idris",
          "partial": "Where",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:WhereN"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "Wk",
          "package": "idris",
          "signature": "Wk (EnvTT n)",
          "source": "src/Idris-Core-TT.html#WkEnvTT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "Wk",
          "package": "idris",
          "partial": "Wk",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:Wk"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "addAlist",
          "package": "idris",
          "signature": "[(Name, a)] -\u003e Ctxt a -\u003e Ctxt a",
          "source": "src/Idris-Core-TT.html#addAlist",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "addAlist",
          "normalized": "[(Name,a)]-\u003eCtxt a-\u003eCtxt a",
          "package": "idris",
          "partial": "Alist",
          "signature": "[(Name,a)]-\u003eCtxt a-\u003eCtxt a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:addAlist"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "addBinder",
          "package": "idris",
          "signature": "TT n -\u003e TT n",
          "source": "src/Idris-Core-TT.html#addBinder",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "addBinder",
          "normalized": "TT a-\u003eTT a",
          "package": "idris",
          "partial": "Binder",
          "signature": "TT n-\u003eTT n",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:addBinder"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "addDef",
          "package": "idris",
          "signature": "Name -\u003e a -\u003e Ctxt a -\u003e Ctxt a",
          "source": "src/Idris-Core-TT.html#addDef",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "addDef",
          "normalized": "Name-\u003ea-\u003eCtxt a-\u003eCtxt a",
          "package": "idris",
          "partial": "Def",
          "signature": "Name-\u003ea-\u003eCtxt a-\u003eCtxt a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:addDef"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eReturn the arity of a (normalised) type\n\u003c/p\u003e",
          "module": "Idris.Core.TT",
          "name": "arity",
          "package": "idris",
          "signature": "TT n -\u003e Int",
          "source": "src/Idris-Core-TT.html#arity",
          "type": "function"
        },
        "index": {
          "description": "Return the arity of normalised type",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "arity",
          "normalized": "TT a-\u003eInt",
          "package": "idris",
          "signature": "TT n-\u003eInt",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:arity"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eIntroduce a \u003ccode\u003e\u003ca\u003eBind\u003c/a\u003e\u003c/code\u003e into the given term for each element of the\n given list of (name, binder) pairs.\n\u003c/p\u003e",
          "module": "Idris.Core.TT",
          "name": "bindAll",
          "package": "idris",
          "signature": "[(n, Binder (TT n))] -\u003e TT n -\u003e TT n",
          "source": "src/Idris-Core-TT.html#bindAll",
          "type": "function"
        },
        "index": {
          "description": "Introduce Bind into the given term for each element of the given list of name binder pairs",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "bindAll",
          "normalized": "[(a,Binder(TT a))]-\u003eTT a-\u003eTT a",
          "package": "idris",
          "partial": "All",
          "signature": "[(n,Binder(TT n))]-\u003eTT n-\u003eTT n",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:bindAll"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eLike \u003ccode\u003e\u003ca\u003ebindAll\u003c/a\u003e\u003c/code\u003e, but the \u003ccode\u003e\u003ca\u003eBinder\u003c/a\u003e\u003c/code\u003es are \u003ccode\u003e\u003ca\u003eTT\u003c/a\u003e\u003c/code\u003e terms instead.\n The first argument is a function to map \u003ccode\u003eTT\u003c/code\u003e terms to \u003ccode\u003eBinder\u003c/code\u003es.\n This function might often be something like \u003ccode\u003e\u003ca\u003eLam\u003c/a\u003e\u003c/code\u003e, which directly\n constructs a \u003ccode\u003eBinder\u003c/code\u003e from a \u003ccode\u003eTT\u003c/code\u003e term.\n\u003c/p\u003e",
          "module": "Idris.Core.TT",
          "name": "bindTyArgs",
          "package": "idris",
          "signature": "(TT n -\u003e Binder (TT n)) -\u003e [(n, TT n)] -\u003e TT n -\u003e TT n",
          "source": "src/Idris-Core-TT.html#bindTyArgs",
          "type": "function"
        },
        "index": {
          "description": "Like bindAll but the Binder are TT terms instead The first argument is function to map TT terms to Binder This function might often be something like Lam which directly constructs Binder from TT term",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "bindTyArgs",
          "normalized": "(TT a-\u003eBinder(TT a))-\u003e[(a,TT a)]-\u003eTT a-\u003eTT a",
          "package": "idris",
          "partial": "Ty Args",
          "signature": "(TT n-\u003eBinder(TT n))-\u003e[(n,TT n)]-\u003eTT n-\u003eTT n",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:bindTyArgs"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003etype annotation for bound variable\n\u003c/p\u003e",
          "module": "Idris.Core.TT",
          "name": "binderTy",
          "package": "idris",
          "signature": "b",
          "source": "src/Idris-Core-TT.html#Binder",
          "type": "function"
        },
        "index": {
          "description": "type annotation for bound variable",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "binderTy",
          "package": "idris",
          "partial": "Ty",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:binderTy"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003evalue for bound variable\n\u003c/p\u003e",
          "module": "Idris.Core.TT",
          "name": "binderVal",
          "package": "idris",
          "signature": "b",
          "source": "src/Idris-Core-TT.html#Binder",
          "type": "function"
        },
        "index": {
          "description": "value for bound variable",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "binderVal",
          "package": "idris",
          "partial": "Val",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:binderVal"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "d_cons",
          "package": "idris",
          "signature": "[(n, TT n)]",
          "source": "src/Idris-Core-TT.html#Datatype",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "d_cons",
          "normalized": "[(a,TT a)]",
          "package": "idris",
          "signature": "[(n,TT n)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:d_cons"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "d_type",
          "package": "idris",
          "signature": "TT n",
          "source": "src/Idris-Core-TT.html#Datatype",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "d_type",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:d_type"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "d_typename",
          "package": "idris",
          "signature": "n",
          "source": "src/Idris-Core-TT.html#Datatype",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "d_typename",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:d_typename"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "d_typetag",
          "package": "idris",
          "signature": "Int",
          "source": "src/Idris-Core-TT.html#Datatype",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "d_typetag",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:d_typetag"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "discard",
          "package": "idris",
          "signature": "m a -\u003e m ()",
          "source": "src/Idris-Core-TT.html#discard",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "discard",
          "normalized": "a b-\u003ea()",
          "package": "idris",
          "signature": "m a-\u003em()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:discard"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "emptyContext",
          "package": "idris",
          "signature": "Map k a",
          "source": "src/Idris-Core-TT.html#emptyContext",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "emptyContext",
          "package": "idris",
          "partial": "Context",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:emptyContext"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eEmpty source location\n\u003c/p\u003e",
          "module": "Idris.Core.TT",
          "name": "emptyFC",
          "package": "idris",
          "signature": "FC",
          "source": "src/Idris-Core-TT.html#emptyFC",
          "type": "function"
        },
        "index": {
          "description": "Empty source location",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "emptyFC",
          "package": "idris",
          "partial": "FC",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:emptyFC"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "envlen",
          "package": "idris",
          "signature": "Int",
          "source": "src/Idris-Core-TT.html#Binder",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "envlen",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:envlen"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eReplace all non-free de Bruijn references in the given term with references\n to the name of their binding.\n\u003c/p\u003e",
          "module": "Idris.Core.TT",
          "name": "explicitNames",
          "package": "idris",
          "signature": "TT n -\u003e TT n",
          "source": "src/Idris-Core-TT.html#explicitNames",
          "type": "function"
        },
        "index": {
          "description": "Replace all non-free de Bruijn references in the given term with references to the name of their binding",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "explicitNames",
          "normalized": "TT a-\u003eTT a",
          "package": "idris",
          "partial": "Names",
          "signature": "TT n-\u003eTT n",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:explicitNames"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "failMsg",
          "package": "idris",
          "signature": "String -\u003e TC a",
          "source": "src/Idris-Core-TT.html#failMsg",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "failMsg",
          "normalized": "String-\u003eTC a",
          "package": "idris",
          "partial": "Msg",
          "signature": "String-\u003eTC a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:failMsg"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eColumn number\n\u003c/p\u003e",
          "module": "Idris.Core.TT",
          "name": "fc_column",
          "package": "idris",
          "signature": "Int",
          "source": "src/Idris-Core-TT.html#FC",
          "type": "function"
        },
        "index": {
          "description": "Column number",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "fc_column",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:fc_column"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eFilename\n\u003c/p\u003e",
          "module": "Idris.Core.TT",
          "name": "fc_fname",
          "package": "idris",
          "signature": "String",
          "source": "src/Idris-Core-TT.html#FC",
          "type": "function"
        },
        "index": {
          "description": "Filename",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "fc_fname",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:fc_fname"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eLine number\n\u003c/p\u003e",
          "module": "Idris.Core.TT",
          "name": "fc_line",
          "package": "idris",
          "signature": "Int",
          "source": "src/Idris-Core-TT.html#FC",
          "type": "function"
        },
        "index": {
          "description": "Line number",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "fc_line",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:fc_line"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e&#160;Source location with file only\u003c/p\u003e",
          "module": "Idris.Core.TT",
          "name": "fileFC",
          "package": "idris",
          "signature": "String -\u003e FC",
          "source": "src/Idris-Core-TT.html#fileFC",
          "type": "function"
        },
        "index": {
          "description": "Source location with file only",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "fileFC",
          "normalized": "String-\u003eFC",
          "package": "idris",
          "partial": "FC",
          "signature": "String-\u003eFC",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:fileFC"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eReplace every non-free reference to the name of a binding in\n the given term with a de Bruijn index.\n\u003c/p\u003e",
          "module": "Idris.Core.TT",
          "name": "finalise",
          "package": "idris",
          "signature": "TT n -\u003e TT n",
          "source": "src/Idris-Core-TT.html#finalise",
          "type": "function"
        },
        "index": {
          "description": "Replace every non-free reference to the name of binding in the given term with de Bruijn index",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "finalise",
          "normalized": "TT a-\u003eTT a",
          "package": "idris",
          "signature": "TT n-\u003eTT n",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:finalise"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "fmapMB",
          "package": "idris",
          "signature": "(a -\u003e m b) -\u003e Binder a -\u003e m (Binder b)",
          "source": "src/Idris-Core-TT.html#fmapMB",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "fmapMB",
          "normalized": "(a-\u003eb c)-\u003eBinder a-\u003eb(Binder c)",
          "package": "idris",
          "partial": "MB",
          "signature": "(a-\u003em b)-\u003eBinder a-\u003em(Binder b)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:fmapMB"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eCast a \u003ccode\u003e\u003ca\u003eTT\u003c/a\u003e\u003c/code\u003e term to a \u003ccode\u003e\u003ca\u003eRaw\u003c/a\u003e\u003c/code\u003e value, discarding universe information and\n the types of named references and replacing all de Bruijn indices\n with the corresponding name. It is an error if there are free de\n Bruijn indices.\n\u003c/p\u003e",
          "module": "Idris.Core.TT",
          "name": "forget",
          "package": "idris",
          "signature": "TT Name -\u003e Raw",
          "source": "src/Idris-Core-TT.html#forget",
          "type": "function"
        },
        "index": {
          "description": "Cast TT term to Raw value discarding universe information and the types of named references and replacing all de Bruijn indices with the corresponding name It is an error if there are free de Bruijn indices",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "forget",
          "normalized": "TT Name-\u003eRaw",
          "package": "idris",
          "signature": "TT Name-\u003eRaw",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:forget"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eReturns all names used free in the term\n\u003c/p\u003e",
          "module": "Idris.Core.TT",
          "name": "freeNames",
          "package": "idris",
          "signature": "TT n -\u003e [n]",
          "source": "src/Idris-Core-TT.html#freeNames",
          "type": "function"
        },
        "index": {
          "description": "Returns all names used free in the term",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "freeNames",
          "normalized": "TT a-\u003e[a]",
          "package": "idris",
          "partial": "Names",
          "signature": "TT n-\u003e[n]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:freeNames"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eReturn a list of pairs of the names of the outermost \u003ccode\u003e\u003ca\u003ePi\u003c/a\u003e\u003c/code\u003e-bound\n variables in the given term, together with their types.\n\u003c/p\u003e",
          "module": "Idris.Core.TT",
          "name": "getArgTys",
          "package": "idris",
          "signature": "TT n -\u003e [(n, TT n)]",
          "source": "src/Idris-Core-TT.html#getArgTys",
          "type": "function"
        },
        "index": {
          "description": "Return list of pairs of the names of the outermost Pi bound variables in the given term together with their types",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "getArgTys",
          "normalized": "TT a-\u003e[(a,TT a)]",
          "package": "idris",
          "partial": "Arg Tys",
          "signature": "TT n-\u003e[(n,TT n)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:getArgTys"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "getRetTy",
          "package": "idris",
          "signature": "TT n -\u003e TT n",
          "source": "src/Idris-Core-TT.html#getRetTy",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "getRetTy",
          "normalized": "TT a-\u003eTT a",
          "package": "idris",
          "partial": "Ret Ty",
          "signature": "TT n-\u003eTT n",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:getRetTy"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "implicitable",
          "package": "idris",
          "signature": "Name -\u003e Bool",
          "source": "src/Idris-Core-TT.html#implicitable",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "implicitable",
          "normalized": "Name-\u003eBool",
          "package": "idris",
          "signature": "Name-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:implicitable"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eReplace the outermost (index 0) de Bruijn variable with the given term\n\u003c/p\u003e",
          "module": "Idris.Core.TT",
          "name": "instantiate",
          "package": "idris",
          "signature": "TT n -\u003e TT n -\u003e TT n",
          "source": "src/Idris-Core-TT.html#instantiate",
          "type": "function"
        },
        "index": {
          "description": "Replace the outermost index de Bruijn variable with the given term",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "instantiate",
          "normalized": "TT a-\u003eTT a-\u003eTT a",
          "package": "idris",
          "signature": "TT n-\u003eTT n-\u003eTT n",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:instantiate"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "intTyName",
          "package": "idris",
          "signature": "IntTy -\u003e String",
          "source": "src/Idris-Core-TT.html#intTyName",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "intTyName",
          "normalized": "IntTy-\u003eString",
          "package": "idris",
          "partial": "Ty Name",
          "signature": "IntTy-\u003eString",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:intTyName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cdiv class=\"warning\"\u003e\u003cp\u003eDeprecated: Non-total function, use nativeTyWidth and appropriate casing\n\u003c/p\u003e\u003c/div\u003e",
          "module": "Idris.Core.TT",
          "name": "intTyWidth",
          "package": "idris",
          "signature": "IntTy -\u003e Int",
          "source": "src/Idris-Core-TT.html#intTyWidth",
          "type": "function"
        },
        "index": {
          "description": "Deprecated Non-total function use nativeTyWidth and appropriate casing",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "intTyWidth",
          "normalized": "IntTy-\u003eInt",
          "package": "idris",
          "partial": "Ty Width",
          "signature": "IntTy-\u003eInt",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:intTyWidth"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eA term is injective iff it is a data constructor, type constructor,\n constant, the type Type, pi-binding, or an application of an injective\n term.\n\u003c/p\u003e",
          "module": "Idris.Core.TT",
          "name": "isInjective",
          "package": "idris",
          "signature": "TT n -\u003e Bool",
          "source": "src/Idris-Core-TT.html#isInjective",
          "type": "function"
        },
        "index": {
          "description": "term is injective iff it is data constructor type constructor constant the type Type pi-binding or an application of an injective term",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "isInjective",
          "normalized": "TT a-\u003eBool",
          "package": "idris",
          "partial": "Injective",
          "signature": "TT n-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:isInjective"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "itBitsName",
          "package": "idris",
          "signature": "NativeTy -\u003e [Char]",
          "source": "src/Idris-Core-TT.html#itBitsName",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "itBitsName",
          "normalized": "NativeTy-\u003e[Char]",
          "package": "idris",
          "partial": "Bits Name",
          "signature": "NativeTy-\u003e[Char]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:itBitsName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "lookupCtxt",
          "package": "idris",
          "signature": "Name -\u003e Ctxt a -\u003e [a]",
          "source": "src/Idris-Core-TT.html#lookupCtxt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "lookupCtxt",
          "normalized": "Name-\u003eCtxt a-\u003e[a]",
          "package": "idris",
          "partial": "Ctxt",
          "signature": "Name-\u003eCtxt a-\u003e[a]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:lookupCtxt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "lookupCtxtExact",
          "package": "idris",
          "signature": "Name -\u003e Ctxt a -\u003e Maybe a",
          "source": "src/Idris-Core-TT.html#lookupCtxtExact",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "lookupCtxtExact",
          "normalized": "Name-\u003eCtxt a-\u003eMaybe a",
          "package": "idris",
          "partial": "Ctxt Exact",
          "signature": "Name-\u003eCtxt a-\u003eMaybe a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:lookupCtxtExact"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eLook up a name in the context, given an optional namespace.\n   The name (n) may itself have a (partial) namespace given.\n\u003c/p\u003e\u003cp\u003eRules for resolution:\n\u003c/p\u003e\u003cul\u003e\u003cli\u003e if an explicit namespace is given, return the names which match it. If none\n      match, return all names.\n\u003c/li\u003e\u003cli\u003e if the name has has explicit namespace given, return the names which match it\n      and ignore the given namespace.\n\u003c/li\u003e\u003cli\u003e otherwise, return all names.\n\u003c/li\u003e\u003c/ul\u003e",
          "module": "Idris.Core.TT",
          "name": "lookupCtxtName",
          "package": "idris",
          "signature": "Name -\u003e Ctxt a -\u003e [(Name, a)]",
          "source": "src/Idris-Core-TT.html#lookupCtxtName",
          "type": "function"
        },
        "index": {
          "description": "Look up name in the context given an optional namespace The name may itself have partial namespace given Rules for resolution if an explicit namespace is given return the names which match it If none match return all names if the name has has explicit namespace given return the names which match it and ignore the given namespace otherwise return all names",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "lookupCtxtName",
          "normalized": "Name-\u003eCtxt a-\u003e[(Name,a)]",
          "package": "idris",
          "partial": "Ctxt Name",
          "signature": "Name-\u003eCtxt a-\u003e[(Name,a)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:lookupCtxtName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "mapCtxt",
          "package": "idris",
          "signature": "(a -\u003e b) -\u003e Ctxt a -\u003e Ctxt b",
          "source": "src/Idris-Core-TT.html#mapCtxt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "mapCtxt",
          "normalized": "(a-\u003eb)-\u003eCtxt a-\u003eCtxt b",
          "package": "idris",
          "partial": "Ctxt",
          "signature": "(a-\u003eb)-\u003eCtxt a-\u003eCtxt b",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:mapCtxt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eReturns a term representing the application of the first argument\n (a function) to every element of the second argument.\n\u003c/p\u003e",
          "module": "Idris.Core.TT",
          "name": "mkApp",
          "package": "idris",
          "signature": "TT n -\u003e [TT n] -\u003e TT n",
          "source": "src/Idris-Core-TT.html#mkApp",
          "type": "function"
        },
        "index": {
          "description": "Returns term representing the application of the first argument function to every element of the second argument",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "mkApp",
          "normalized": "TT a-\u003e[TT a]-\u003eTT a",
          "package": "idris",
          "partial": "App",
          "signature": "TT n-\u003e[TT n]-\u003eTT n",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:mkApp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "nativeTyWidth",
          "package": "idris",
          "signature": "NativeTy -\u003e Int",
          "source": "src/Idris-Core-TT.html#nativeTyWidth",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "nativeTyWidth",
          "normalized": "NativeTy-\u003eInt",
          "package": "idris",
          "partial": "Ty Width",
          "signature": "NativeTy-\u003eInt",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:nativeTyWidth"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "nextName",
          "package": "idris",
          "signature": "Name -\u003e Name",
          "source": "src/Idris-Core-TT.html#nextName",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "nextName",
          "normalized": "Name-\u003eName",
          "package": "idris",
          "partial": "Name",
          "signature": "Name-\u003eName",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:nextName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eReturns true if V 0 and bound name n do not occur in the term\n\u003c/p\u003e",
          "module": "Idris.Core.TT",
          "name": "noOccurrence",
          "package": "idris",
          "signature": "n -\u003e TT n -\u003e Bool",
          "source": "src/Idris-Core-TT.html#noOccurrence",
          "type": "function"
        },
        "index": {
          "description": "Returns true if and bound name do not occur in the term",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "noOccurrence",
          "normalized": "a-\u003eTT a-\u003eBool",
          "package": "idris",
          "partial": "Occurrence",
          "signature": "n-\u003eTT n-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:noOccurrence"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "nsroot",
          "package": "idris",
          "signature": "Name -\u003e Name",
          "source": "src/Idris-Core-TT.html#nsroot",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "nsroot",
          "normalized": "Name-\u003eName",
          "package": "idris",
          "signature": "Name-\u003eName",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:nsroot"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "nt_arity",
          "package": "idris",
          "signature": "Int",
          "source": "src/Idris-Core-TT.html#NameType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "nt_arity",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:nt_arity"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "nt_tag",
          "package": "idris",
          "signature": "Int",
          "source": "src/Idris-Core-TT.html#NameType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "nt_tag",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:nt_tag"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eGather up all the outer \u003ccode\u003e\u003ca\u003ePVar\u003c/a\u003e\u003c/code\u003es and \u003ccode\u003e\u003ca\u003eHole\u003c/a\u003e\u003c/code\u003es in an expression and reintroduce\n them in a canonical order\n\u003c/p\u003e",
          "module": "Idris.Core.TT",
          "name": "orderPats",
          "package": "idris",
          "signature": "Term -\u003e Term",
          "source": "src/Idris-Core-TT.html#orderPats",
          "type": "function"
        },
        "index": {
          "description": "Gather up all the outer PVar and Hole in an expression and reintroduce them in canonical order",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "orderPats",
          "normalized": "Term-\u003eTerm",
          "package": "idris",
          "partial": "Pats",
          "signature": "Term-\u003eTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:orderPats"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "pEraseType",
          "package": "idris",
          "signature": "TT n -\u003e TT n",
          "source": "src/Idris-Core-TT.html#pEraseType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "pEraseType",
          "normalized": "TT a-\u003eTT a",
          "package": "idris",
          "partial": "Erase Type",
          "signature": "TT n-\u003eTT n",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:pEraseType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eReplace references to the given \u003ccode\u003e\u003ca\u003eName\u003c/a\u003e\u003c/code\u003e-like id with references to\n de Bruijn index 0.\n\u003c/p\u003e",
          "module": "Idris.Core.TT",
          "name": "pToV",
          "package": "idris",
          "signature": "n -\u003e TT n -\u003e TT n",
          "source": "src/Idris-Core-TT.html#pToV",
          "type": "function"
        },
        "index": {
          "description": "Replace references to the given Name like id with references to de Bruijn index",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "pToV",
          "normalized": "a-\u003eTT a-\u003eTT a",
          "package": "idris",
          "partial": "To",
          "signature": "n-\u003eTT n-\u003eTT n",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:pToV"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "pToV'",
          "package": "idris",
          "signature": "n -\u003e Int -\u003e TT n -\u003e TT n",
          "source": "src/Idris-Core-TT.html#pToV%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "pToV'",
          "normalized": "a-\u003eInt-\u003eTT a-\u003eTT a",
          "package": "idris",
          "partial": "To V'",
          "signature": "n-\u003eInt-\u003eTT n-\u003eTT n",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:pToV-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eConvert several names. First in the list comes out as V 0\n\u003c/p\u003e",
          "module": "Idris.Core.TT",
          "name": "pToVs",
          "package": "idris",
          "signature": "[n] -\u003e TT n -\u003e TT n",
          "source": "src/Idris-Core-TT.html#pToVs",
          "type": "function"
        },
        "index": {
          "description": "Convert several names First in the list comes out as",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "pToVs",
          "normalized": "[a]-\u003eTT a-\u003eTT a",
          "package": "idris",
          "partial": "To Vs",
          "signature": "[n]-\u003eTT n-\u003eTT n",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:pToVs"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "pmap",
          "package": "idris",
          "signature": "(t -\u003e t1) -\u003e (t, t) -\u003e (t1, t1)",
          "source": "src/Idris-Core-TT.html#pmap",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "pmap",
          "normalized": "(a-\u003ea)-\u003e(a,a)-\u003e(a,a)",
          "package": "idris",
          "signature": "(t-\u003et)-\u003e(t,t)-\u003e(t,t)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:pmap"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "prettyEnv",
          "package": "idris",
          "signature": "[(a1, Binder (TT a1))] -\u003e TT a1 -\u003e Doc a",
          "source": "src/Idris-Core-TT.html#prettyEnv",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "prettyEnv",
          "normalized": "[(a,Binder(TT a))]-\u003eTT a-\u003eDoc a",
          "package": "idris",
          "partial": "Env",
          "signature": "[(a,Binder(TT a))]-\u003eTT a-\u003eDoc a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:prettyEnv"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "psubst",
          "package": "idris",
          "signature": "n -\u003e TT n -\u003e TT n -\u003e TT n",
          "source": "src/Idris-Core-TT.html#psubst",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "psubst",
          "normalized": "a-\u003eTT a-\u003eTT a-\u003eTT a",
          "package": "idris",
          "signature": "n-\u003eTT n-\u003eTT n-\u003eTT n",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:psubst"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eCheck whether a term has any holes in it - impure if so\n\u003c/p\u003e",
          "module": "Idris.Core.TT",
          "name": "pureTerm",
          "package": "idris",
          "signature": "TT Name -\u003e Bool",
          "source": "src/Idris-Core-TT.html#pureTerm",
          "type": "function"
        },
        "index": {
          "description": "Check whether term has any holes in it impure if so",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "pureTerm",
          "normalized": "TT Name-\u003eBool",
          "package": "idris",
          "partial": "Term",
          "signature": "TT Name-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:pureTerm"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "raw_apply",
          "package": "idris",
          "signature": "Raw -\u003e [Raw] -\u003e Raw",
          "source": "src/Idris-Core-TT.html#raw_apply",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "raw_apply",
          "normalized": "Raw-\u003e[Raw]-\u003eRaw",
          "package": "idris",
          "signature": "Raw-\u003e[Raw]-\u003eRaw",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:raw_apply"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "raw_unapply",
          "package": "idris",
          "signature": "Raw -\u003e (Raw, [Raw])",
          "source": "src/Idris-Core-TT.html#raw_unapply",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "raw_unapply",
          "normalized": "Raw-\u003e(Raw,[Raw])",
          "package": "idris",
          "signature": "Raw-\u003e(Raw,[Raw])",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:raw_unapply"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "sInstanceN",
          "package": "idris",
          "signature": "Name -\u003e [String] -\u003e SpecialName",
          "source": "src/Idris-Core-TT.html#sInstanceN",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "sInstanceN",
          "normalized": "Name-\u003e[String]-\u003eSpecialName",
          "package": "idris",
          "partial": "Instance",
          "signature": "Name-\u003e[String]-\u003eSpecialName",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:sInstanceN"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "sMN",
          "package": "idris",
          "signature": "Int -\u003e String -\u003e Name",
          "source": "src/Idris-Core-TT.html#sMN",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "sMN",
          "normalized": "Int-\u003eString-\u003eName",
          "package": "idris",
          "partial": "MN",
          "signature": "Int-\u003eString-\u003eName",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:sMN"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "sNS",
          "package": "idris",
          "signature": "Name -\u003e [String] -\u003e Name",
          "source": "src/Idris-Core-TT.html#sNS",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "sNS",
          "normalized": "Name-\u003e[String]-\u003eName",
          "package": "idris",
          "partial": "NS",
          "signature": "Name-\u003e[String]-\u003eName",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:sNS"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "sParentN",
          "package": "idris",
          "signature": "Name -\u003e String -\u003e SpecialName",
          "source": "src/Idris-Core-TT.html#sParentN",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "sParentN",
          "normalized": "Name-\u003eString-\u003eSpecialName",
          "package": "idris",
          "partial": "Parent",
          "signature": "Name-\u003eString-\u003eSpecialName",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:sParentN"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "sUN",
          "package": "idris",
          "signature": "String -\u003e Name",
          "source": "src/Idris-Core-TT.html#sUN",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "sUN",
          "normalized": "String-\u003eName",
          "package": "idris",
          "partial": "UN",
          "signature": "String-\u003eName",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:sUN"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "score",
          "package": "idris",
          "signature": "Err -\u003e Int",
          "source": "src/Idris-Core-TT.html#score",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "score",
          "normalized": "Err-\u003eInt",
          "package": "idris",
          "signature": "Err-\u003eInt",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:score"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "showCG",
          "package": "idris",
          "signature": "Name -\u003e String",
          "source": "src/Idris-Core-TT.html#showCG",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "showCG",
          "normalized": "Name-\u003eString",
          "package": "idris",
          "partial": "CG",
          "signature": "Name-\u003eString",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:showCG"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "showEnv",
          "package": "idris",
          "signature": "EnvTT n -\u003e TT n -\u003e String",
          "source": "src/Idris-Core-TT.html#showEnv",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "showEnv",
          "normalized": "EnvTT a-\u003eTT a-\u003eString",
          "package": "idris",
          "partial": "Env",
          "signature": "EnvTT n-\u003eTT n-\u003eString",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:showEnv"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "showEnv'",
          "package": "idris",
          "signature": "[(a, Binder (TT a))] -\u003e TT a -\u003e Bool -\u003e [Char]",
          "source": "src/Idris-Core-TT.html#showEnv%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "showEnv'",
          "normalized": "[(a,Binder(TT a))]-\u003eTT a-\u003eBool-\u003e[Char]",
          "package": "idris",
          "partial": "Env'",
          "signature": "[(a,Binder(TT a))]-\u003eTT a-\u003eBool-\u003e[Char]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:showEnv-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "showEnvDbg",
          "package": "idris",
          "signature": "[(a, Binder (TT a))] -\u003e TT a -\u003e [Char]",
          "source": "src/Idris-Core-TT.html#showEnvDbg",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "showEnvDbg",
          "normalized": "[(a,Binder(TT a))]-\u003eTT a-\u003e[Char]",
          "package": "idris",
          "partial": "Env Dbg",
          "signature": "[(a,Binder(TT a))]-\u003eTT a-\u003e[Char]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:showEnvDbg"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "showSep",
          "package": "idris",
          "signature": "String -\u003e [String] -\u003e String",
          "source": "src/Idris-Core-TT.html#showSep",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "showSep",
          "normalized": "String-\u003e[String]-\u003eString",
          "package": "idris",
          "partial": "Sep",
          "signature": "String-\u003e[String]-\u003eString",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:showSep"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "str",
          "package": "idris",
          "signature": "Text -\u003e String",
          "source": "src/Idris-Core-TT.html#str",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "str",
          "normalized": "Text-\u003eString",
          "package": "idris",
          "signature": "Text-\u003eString",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:str"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eAs \u003ccode\u003e\u003ca\u003einstantiate\u003c/a\u003e\u003c/code\u003e, but in addition to replacing \u003ccode\u003e\u003ccode\u003e\u003ca\u003eV\u003c/a\u003e\u003c/code\u003e 0\u003c/code\u003e,\n replace references to the given \u003ccode\u003e\u003ca\u003eName\u003c/a\u003e\u003c/code\u003e-like id.\n\u003c/p\u003e",
          "module": "Idris.Core.TT",
          "name": "subst",
          "package": "idris",
          "signature": "n-\u003e TT n-\u003e TT n-\u003e TT n",
          "type": "function"
        },
        "index": {
          "description": "As instantiate but in addition to replacing replace references to the given Name like id",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "subst",
          "normalized": "a-\u003eTT a-\u003eTT a-\u003eTT a",
          "package": "idris",
          "signature": "n-\u003eTT n-\u003eTT n-\u003eTT n",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:subst"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eAs \u003ccode\u003e\u003ca\u003esubst\u003c/a\u003e\u003c/code\u003e, but takes a list of (name, substitution) pairs instead\n of a single name and substitution\n\u003c/p\u003e",
          "module": "Idris.Core.TT",
          "name": "substNames",
          "package": "idris",
          "signature": "[(n, TT n)] -\u003e TT n -\u003e TT n",
          "source": "src/Idris-Core-TT.html#substNames",
          "type": "function"
        },
        "index": {
          "description": "As subst but takes list of name substitution pairs instead of single name and substitution",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "substNames",
          "normalized": "[(a,TT a)]-\u003eTT a-\u003eTT a",
          "package": "idris",
          "partial": "Names",
          "signature": "[(n,TT n)]-\u003eTT n-\u003eTT n",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:substNames"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eReplaces all terms equal (in the sense of \u003ccode\u003e(==)\u003c/code\u003e) to\n the old term with the new term.\n\u003c/p\u003e",
          "module": "Idris.Core.TT",
          "name": "substTerm",
          "package": "idris",
          "signature": "TT n-\u003e TT n-\u003e TT n-\u003e TT n",
          "type": "function"
        },
        "index": {
          "description": "Replaces all terms equal in the sense of to the old term with the new term",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "substTerm",
          "normalized": "TT a-\u003eTT a-\u003eTT a-\u003eTT a",
          "package": "idris",
          "partial": "Term",
          "signature": "TT n-\u003eTT n-\u003eTT n-\u003eTT n",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:substTerm"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eAs \u003ccode\u003e\u003ca\u003einstantiate\u003c/a\u003e\u003c/code\u003e, but also decrement the indices of all de Bruijn variables\n remaining in the term, so that there are no more references to the variable\n that has been substituted.\n\u003c/p\u003e",
          "module": "Idris.Core.TT",
          "name": "substV",
          "package": "idris",
          "signature": "TT n -\u003e TT n -\u003e TT n",
          "source": "src/Idris-Core-TT.html#substV",
          "type": "function"
        },
        "index": {
          "description": "As instantiate but also decrement the indices of all de Bruijn variables remaining in the term so that there are no more references to the variable that has been substituted",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "substV",
          "normalized": "TT a-\u003eTT a-\u003eTT a",
          "package": "idris",
          "signature": "TT n-\u003eTT n-\u003eTT n",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:substV"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eReturn True if the argument \u003ccode\u003e\u003ca\u003eName\u003c/a\u003e\u003c/code\u003e should be interpreted as the name of a\n typeclass.\n\u003c/p\u003e",
          "module": "Idris.Core.TT",
          "name": "tcname",
          "package": "idris",
          "signature": "Name -\u003e Bool",
          "source": "src/Idris-Core-TT.html#tcname",
          "type": "function"
        },
        "index": {
          "description": "Return True if the argument Name should be interpreted as the name of typeclass",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "tcname",
          "normalized": "Name-\u003eBool",
          "package": "idris",
          "signature": "Name-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:tcname"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "termsize",
          "package": "idris",
          "signature": "Name -\u003e a -\u003e Int",
          "source": "src/Idris-Core-TT.html#termsize",
          "type": "method"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "termsize",
          "normalized": "Name-\u003ea-\u003eInt",
          "package": "idris",
          "signature": "Name-\u003ea-\u003eInt",
          "type": "method"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:termsize"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "tfail",
          "package": "idris",
          "signature": "Err -\u003e TC a",
          "source": "src/Idris-Core-TT.html#tfail",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "tfail",
          "normalized": "Err-\u003eTC a",
          "package": "idris",
          "signature": "Err-\u003eTC a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:tfail"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "thead",
          "package": "idris",
          "signature": "Text -\u003e Char",
          "source": "src/Idris-Core-TT.html#thead",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "thead",
          "normalized": "Text-\u003eChar",
          "package": "idris",
          "signature": "Text-\u003eChar",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:thead"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "tnull",
          "package": "idris",
          "signature": "Text -\u003e Bool",
          "source": "src/Idris-Core-TT.html#tnull",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "tnull",
          "normalized": "Text-\u003eBool",
          "package": "idris",
          "signature": "Text-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:tnull"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "toAlist",
          "package": "idris",
          "signature": "Ctxt a -\u003e [(Name, a)]",
          "source": "src/Idris-Core-TT.html#toAlist",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "toAlist",
          "normalized": "Ctxt a-\u003e[(Name,a)]",
          "package": "idris",
          "partial": "Alist",
          "signature": "Ctxt a-\u003e[(Name,a)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:toAlist"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "traceWhen",
          "package": "idris",
          "signature": "Bool -\u003e String -\u003e a -\u003e a",
          "source": "src/Idris-Core-TT.html#traceWhen",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "traceWhen",
          "normalized": "Bool-\u003eString-\u003ea-\u003ea",
          "package": "idris",
          "partial": "When",
          "signature": "Bool-\u003eString-\u003ea-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:traceWhen"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "trun",
          "package": "idris",
          "signature": "FC -\u003e TC a -\u003e TC a",
          "source": "src/Idris-Core-TT.html#trun",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "trun",
          "normalized": "FC-\u003eTC a-\u003eTC a",
          "package": "idris",
          "signature": "FC-\u003eTC a-\u003eTC a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:trun"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "txt",
          "package": "idris",
          "signature": "String -\u003e Text",
          "source": "src/Idris-Core-TT.html#txt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "txt",
          "normalized": "String-\u003eText",
          "package": "idris",
          "signature": "String-\u003eText",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:txt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eDeconstruct an application; returns the function and a list of arguments\n\u003c/p\u003e",
          "module": "Idris.Core.TT",
          "name": "unApply",
          "package": "idris",
          "signature": "TT n -\u003e (TT n, [TT n])",
          "source": "src/Idris-Core-TT.html#unApply",
          "type": "function"
        },
        "index": {
          "description": "Deconstruct an application returns the function and list of arguments",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "unApply",
          "normalized": "TT a-\u003e(TT a,[TT a])",
          "package": "idris",
          "partial": "Apply",
          "signature": "TT n-\u003e(TT n,[TT n])",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:unApply"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "unList",
          "package": "idris",
          "signature": "Term -\u003e Maybe [Term]",
          "source": "src/Idris-Core-TT.html#unList",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "unList",
          "normalized": "Term-\u003eMaybe[Term]",
          "package": "idris",
          "partial": "List",
          "signature": "Term-\u003eMaybe[Term]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:unList"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "uniqueBinders",
          "package": "idris",
          "signature": "[Name] -\u003e TT Name -\u003e TT Name",
          "source": "src/Idris-Core-TT.html#uniqueBinders",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "uniqueBinders",
          "normalized": "[Name]-\u003eTT Name-\u003eTT Name",
          "package": "idris",
          "partial": "Binders",
          "signature": "[Name]-\u003eTT Name-\u003eTT Name",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:uniqueBinders"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "uniqueName",
          "package": "idris",
          "signature": "Name -\u003e [Name] -\u003e Name",
          "source": "src/Idris-Core-TT.html#uniqueName",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "uniqueName",
          "normalized": "Name-\u003e[Name]-\u003eName",
          "package": "idris",
          "partial": "Name",
          "signature": "Name-\u003e[Name]-\u003eName",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:uniqueName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "uniqueNameFrom",
          "package": "idris",
          "signature": "[Name] -\u003e [Name] -\u003e Name",
          "source": "src/Idris-Core-TT.html#uniqueNameFrom",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "uniqueNameFrom",
          "normalized": "[Name]-\u003e[Name]-\u003eName",
          "package": "idris",
          "partial": "Name From",
          "signature": "[Name]-\u003e[Name]-\u003eName",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:uniqueNameFrom"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "unwrapFC",
          "package": "idris",
          "signature": "FC",
          "source": "src/Idris-Core-TT.html#FC%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "unwrapFC",
          "package": "idris",
          "partial": "FC",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:unwrapFC"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.TT",
          "name": "updateDef",
          "package": "idris",
          "signature": "Name -\u003e (a -\u003e a) -\u003e Ctxt a -\u003e Ctxt a",
          "source": "src/Idris-Core-TT.html#updateDef",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "updateDef",
          "normalized": "Name-\u003e(a-\u003ea)-\u003eCtxt a-\u003eCtxt a",
          "package": "idris",
          "partial": "Def",
          "signature": "Name-\u003e(a-\u003ea)-\u003eCtxt a-\u003eCtxt a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:updateDef"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eReplace de Bruijn indices in the given term with explicit references to\n the names of the bindings they refer to. It is an error if the given term\n contains free de Bruijn indices.\n\u003c/p\u003e",
          "module": "Idris.Core.TT",
          "name": "vToP",
          "package": "idris",
          "signature": "TT n -\u003e TT n",
          "source": "src/Idris-Core-TT.html#vToP",
          "type": "function"
        },
        "index": {
          "description": "Replace de Bruijn indices in the given term with explicit references to the names of the bindings they refer to It is an error if the given term contains free de Bruijn indices",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "vToP",
          "normalized": "TT a-\u003eTT a",
          "package": "idris",
          "partial": "To",
          "signature": "TT n-\u003eTT n",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:vToP"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eCount the number of instances of a de Bruijn index in a term\n\u003c/p\u003e",
          "module": "Idris.Core.TT",
          "name": "vinstances",
          "package": "idris",
          "signature": "Int -\u003e TT n -\u003e Int",
          "source": "src/Idris-Core-TT.html#vinstances",
          "type": "function"
        },
        "index": {
          "description": "Count the number of instances of de Bruijn index in term",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "vinstances",
          "normalized": "Int-\u003eTT a-\u003eInt",
          "package": "idris",
          "signature": "Int-\u003eTT n-\u003eInt",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:vinstances"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eWeaken an environment so that all the de Bruijn indices are correct according\n to the latest bound variable\n\u003c/p\u003e",
          "module": "Idris.Core.TT",
          "name": "weakenEnv",
          "package": "idris",
          "signature": "EnvTT n -\u003e EnvTT n",
          "source": "src/Idris-Core-TT.html#weakenEnv",
          "type": "function"
        },
        "index": {
          "description": "Weaken an environment so that all the de Bruijn indices are correct according to the latest bound variable",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "weakenEnv",
          "normalized": "EnvTT a-\u003eEnvTT a",
          "package": "idris",
          "partial": "Env",
          "signature": "EnvTT n-\u003eEnvTT n",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:weakenEnv"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eWeaken a term by adding i to each de Bruijn index (i.e. lift it over i bindings)\n\u003c/p\u003e",
          "module": "Idris.Core.TT",
          "name": "weakenTm",
          "package": "idris",
          "signature": "Int -\u003e TT n -\u003e TT n",
          "source": "src/Idris-Core-TT.html#weakenTm",
          "type": "function"
        },
        "index": {
          "description": "Weaken term by adding to each de Bruijn index i.e lift it over bindings",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "weakenTm",
          "normalized": "Int-\u003eTT a-\u003eTT a",
          "package": "idris",
          "partial": "Tm",
          "signature": "Int-\u003eTT n-\u003eTT n",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:weakenTm"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eWeaken every term in the environment by the given amount\n\u003c/p\u003e",
          "module": "Idris.Core.TT",
          "name": "weakenTmEnv",
          "package": "idris",
          "signature": "Int -\u003e EnvTT n -\u003e EnvTT n",
          "source": "src/Idris-Core-TT.html#weakenTmEnv",
          "type": "function"
        },
        "index": {
          "description": "Weaken every term in the environment by the given amount",
          "hierarchy": "Idris Core TT",
          "module": "Idris.Core.TT",
          "name": "weakenTmEnv",
          "normalized": "Int-\u003eEnvTT a-\u003eEnvTT a",
          "package": "idris",
          "partial": "Tm Env",
          "signature": "Int-\u003eEnvTT n-\u003eEnvTT n",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-TT.html#v:weakenTmEnv"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Typecheck",
          "name": "Typecheck",
          "package": "idris",
          "source": "src/Idris-Core-Typecheck.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "Idris Core Typecheck",
          "module": "Idris.Core.Typecheck",
          "name": "Typecheck",
          "package": "idris",
          "partial": "Typecheck",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Typecheck.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Typecheck",
          "name": "check",
          "package": "idris",
          "signature": "Context -\u003e Env -\u003e Raw -\u003e TC (Term, Type)",
          "source": "src/Idris-Core-Typecheck.html#check",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Typecheck",
          "module": "Idris.Core.Typecheck",
          "name": "check",
          "normalized": "Context-\u003eEnv-\u003eRaw-\u003eTC(Term,Type)",
          "package": "idris",
          "signature": "Context-\u003eEnv-\u003eRaw-\u003eTC(Term,Type)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Typecheck.html#v:check"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Typecheck",
          "name": "check'",
          "package": "idris",
          "signature": "Bool -\u003e Context -\u003e Env -\u003e Raw -\u003e StateT UCs TC (Term, Type)",
          "source": "src/Idris-Core-Typecheck.html#check%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Typecheck",
          "module": "Idris.Core.Typecheck",
          "name": "check'",
          "normalized": "Bool-\u003eContext-\u003eEnv-\u003eRaw-\u003eStateT UCs TC(Term,Type)",
          "package": "idris",
          "signature": "Bool-\u003eContext-\u003eEnv-\u003eRaw-\u003eStateT UCs TC(Term,Type)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Typecheck.html#v:check-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Typecheck",
          "name": "converts",
          "package": "idris",
          "signature": "Context -\u003e Env -\u003e Term -\u003e Term -\u003e TC ()",
          "source": "src/Idris-Core-Typecheck.html#converts",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Typecheck",
          "module": "Idris.Core.Typecheck",
          "name": "converts",
          "normalized": "Context-\u003eEnv-\u003eTerm-\u003eTerm-\u003eTC()",
          "package": "idris",
          "signature": "Context-\u003eEnv-\u003eTerm-\u003eTerm-\u003eTC()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Typecheck.html#v:converts"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Typecheck",
          "name": "convertsC",
          "package": "idris",
          "signature": "Context -\u003e Env -\u003e Term -\u003e Term -\u003e StateT UCs TC ()",
          "source": "src/Idris-Core-Typecheck.html#convertsC",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Typecheck",
          "module": "Idris.Core.Typecheck",
          "name": "convertsC",
          "normalized": "Context-\u003eEnv-\u003eTerm-\u003eTerm-\u003eStateT UCs TC()",
          "package": "idris",
          "signature": "Context-\u003eEnv-\u003eTerm-\u003eTerm-\u003eStateT UCs TC()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Typecheck.html#v:convertsC"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Typecheck",
          "name": "errEnv",
          "package": "idris",
          "signature": "[(t, Binder t1)] -\u003e [(t, t1)]",
          "source": "src/Idris-Core-Typecheck.html#errEnv",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Typecheck",
          "module": "Idris.Core.Typecheck",
          "name": "errEnv",
          "normalized": "[(a,Binder a)]-\u003e[(a,a)]",
          "package": "idris",
          "partial": "Env",
          "signature": "[(t,Binder t)]-\u003e[(t,t)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Typecheck.html#v:errEnv"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Typecheck",
          "name": "isType",
          "package": "idris",
          "signature": "Context -\u003e Env -\u003e Term -\u003e TC ()",
          "source": "src/Idris-Core-Typecheck.html#isType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Typecheck",
          "module": "Idris.Core.Typecheck",
          "name": "isType",
          "normalized": "Context-\u003eEnv-\u003eTerm-\u003eTC()",
          "package": "idris",
          "partial": "Type",
          "signature": "Context-\u003eEnv-\u003eTerm-\u003eTC()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Typecheck.html#v:isType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Typecheck",
          "name": "recheck",
          "package": "idris",
          "signature": "Context -\u003e Env -\u003e Raw -\u003e Term -\u003e TC (Term, Type, UCs)",
          "source": "src/Idris-Core-Typecheck.html#recheck",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Typecheck",
          "module": "Idris.Core.Typecheck",
          "name": "recheck",
          "normalized": "Context-\u003eEnv-\u003eRaw-\u003eTerm-\u003eTC(Term,Type,UCs)",
          "package": "idris",
          "signature": "Context-\u003eEnv-\u003eRaw-\u003eTerm-\u003eTC(Term,Type,UCs)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Typecheck.html#v:recheck"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Unify",
          "name": "Unify",
          "package": "idris",
          "source": "src/Idris-Core-Unify.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "Idris Core Unify",
          "module": "Idris.Core.Unify",
          "name": "Unify",
          "package": "idris",
          "partial": "Unify",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Unify.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Unify",
          "name": "Fails",
          "package": "idris",
          "source": "src/Idris-Core-Unify.html#Fails",
          "type": "type"
        },
        "index": {
          "hierarchy": "Idris Core Unify",
          "module": "Idris.Core.Unify",
          "name": "Fails",
          "package": "idris",
          "partial": "Fails",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Unify.html#t:Fails"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Unify",
          "name": "match_unify",
          "package": "idris",
          "signature": "Context -\u003e Env -\u003e TT Name -\u003e TT Name -\u003e [Name] -\u003e [Name] -\u003e TC [(Name, TT Name)]",
          "source": "src/Idris-Core-Unify.html#match_unify",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Unify",
          "module": "Idris.Core.Unify",
          "name": "match_unify",
          "normalized": "Context-\u003eEnv-\u003eTT Name-\u003eTT Name-\u003e[Name]-\u003e[Name]-\u003eTC[(Name,TT Name)]",
          "package": "idris",
          "signature": "Context-\u003eEnv-\u003eTT Name-\u003eTT Name-\u003e[Name]-\u003e[Name]-\u003eTC[(Name,TT Name)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Unify.html#v:match_unify"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Core.Unify",
          "name": "unify",
          "package": "idris",
          "signature": "Context -\u003e Env -\u003e TT Name -\u003e TT Name -\u003e [Name] -\u003e [Name] -\u003e TC ([(Name, TT Name)], Fails)",
          "source": "src/Idris-Core-Unify.html#unify",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Core Unify",
          "module": "Idris.Core.Unify",
          "name": "unify",
          "normalized": "Context-\u003eEnv-\u003eTT Name-\u003eTT Name-\u003e[Name]-\u003e[Name]-\u003eTC([(Name,TT Name)],Fails)",
          "package": "idris",
          "signature": "Context-\u003eEnv-\u003eTT Name-\u003eTT Name-\u003e[Name]-\u003e[Name]-\u003eTC([(Name,TT Name)],Fails)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Core-Unify.html#v:unify"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Coverage",
          "name": "Coverage",
          "package": "idris",
          "source": "src/Idris-Coverage.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "Idris Coverage",
          "module": "Idris.Coverage",
          "name": "Coverage",
          "package": "idris",
          "partial": "Coverage",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Coverage.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Coverage",
          "name": "MultiPath",
          "package": "idris",
          "source": "src/Idris-Coverage.html#MultiPath",
          "type": "type"
        },
        "index": {
          "hierarchy": "Idris Coverage",
          "module": "Idris.Coverage",
          "name": "MultiPath",
          "package": "idris",
          "partial": "Multi Path",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Coverage.html#t:MultiPath"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Coverage",
          "name": "allNothing",
          "package": "idris",
          "signature": "[Maybe t] -\u003e Bool",
          "source": "src/Idris-Coverage.html#allNothing",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Coverage",
          "module": "Idris.Coverage",
          "name": "allNothing",
          "normalized": "[Maybe a]-\u003eBool",
          "package": "idris",
          "partial": "Nothing",
          "signature": "[Maybe t]-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Coverage.html#v:allNothing"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Coverage",
          "name": "buildSCG",
          "package": "idris",
          "signature": "(FC, Name) -\u003e Idris ()",
          "source": "src/Idris-Coverage.html#buildSCG",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Coverage",
          "module": "Idris.Coverage",
          "name": "buildSCG",
          "normalized": "(FC,Name)-\u003eIdris()",
          "package": "idris",
          "partial": "SCG",
          "signature": "(FC,Name)-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Coverage.html#v:buildSCG"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Coverage",
          "name": "buildSCG'",
          "package": "idris",
          "signature": "IState -\u003e [(Term, Term)] -\u003e [Name] -\u003e [SCGEntry]",
          "source": "src/Idris-Coverage.html#buildSCG%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Coverage",
          "module": "Idris.Coverage",
          "name": "buildSCG'",
          "normalized": "IState-\u003e[(Term,Term)]-\u003e[Name]-\u003e[SCGEntry]",
          "package": "idris",
          "partial": "SCG'",
          "signature": "IState-\u003e[(Term,Term)]-\u003e[Name]-\u003e[SCGEntry]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Coverage.html#v:buildSCG-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Coverage",
          "name": "calcProd",
          "package": "idris",
          "signature": "IState -\u003e FC -\u003e Name -\u003e [([Name], Term, Term)] -\u003e Idris Totality",
          "source": "src/Idris-Coverage.html#calcProd",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Coverage",
          "module": "Idris.Coverage",
          "name": "calcProd",
          "normalized": "IState-\u003eFC-\u003eName-\u003e[([Name],Term,Term)]-\u003eIdris Totality",
          "package": "idris",
          "partial": "Prod",
          "signature": "IState-\u003eFC-\u003eName-\u003e[([Name],Term,Term)]-\u003eIdris Totality",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Coverage.html#v:calcProd"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Coverage",
          "name": "calcTotality",
          "package": "idris",
          "signature": "[Name] -\u003e FC -\u003e Name -\u003e [([Name], Term, Term)] -\u003e Idris Totality",
          "source": "src/Idris-Coverage.html#calcTotality",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Coverage",
          "module": "Idris.Coverage",
          "name": "calcTotality",
          "normalized": "[Name]-\u003eFC-\u003eName-\u003e[([Name],Term,Term)]-\u003eIdris Totality",
          "package": "idris",
          "partial": "Totality",
          "signature": "[Name]-\u003eFC-\u003eName-\u003e[([Name],Term,Term)]-\u003eIdris Totality",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Coverage.html#v:calcTotality"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Coverage",
          "name": "checkDeclTotality",
          "package": "idris",
          "signature": "(FC, Name) -\u003e Idris Totality",
          "source": "src/Idris-Coverage.html#checkDeclTotality",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Coverage",
          "module": "Idris.Coverage",
          "name": "checkDeclTotality",
          "normalized": "(FC,Name)-\u003eIdris Totality",
          "package": "idris",
          "partial": "Decl Totality",
          "signature": "(FC,Name)-\u003eIdris Totality",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Coverage.html#v:checkDeclTotality"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Coverage",
          "name": "checkMP",
          "package": "idris",
          "signature": "IState -\u003e Int -\u003e MultiPath -\u003e Totality",
          "source": "src/Idris-Coverage.html#checkMP",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Coverage",
          "module": "Idris.Coverage",
          "name": "checkMP",
          "normalized": "IState-\u003eInt-\u003eMultiPath-\u003eTotality",
          "package": "idris",
          "partial": "MP",
          "signature": "IState-\u003eInt-\u003eMultiPath-\u003eTotality",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Coverage.html#v:checkMP"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Coverage",
          "name": "checkPositive",
          "package": "idris",
          "signature": "Name -\u003e (Name, Type) -\u003e Idris ()",
          "source": "src/Idris-Coverage.html#checkPositive",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Coverage",
          "module": "Idris.Coverage",
          "name": "checkPositive",
          "normalized": "Name-\u003e(Name,Type)-\u003eIdris()",
          "package": "idris",
          "partial": "Positive",
          "signature": "Name-\u003e(Name,Type)-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Coverage.html#v:checkPositive"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Coverage",
          "name": "checkSizeChange",
          "package": "idris",
          "signature": "Name -\u003e Idris Totality",
          "source": "src/Idris-Coverage.html#checkSizeChange",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Coverage",
          "module": "Idris.Coverage",
          "name": "checkSizeChange",
          "normalized": "Name-\u003eIdris Totality",
          "package": "idris",
          "partial": "Size Change",
          "signature": "Name-\u003eIdris Totality",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Coverage.html#v:checkSizeChange"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Coverage",
          "name": "checkTotality",
          "package": "idris",
          "signature": "[Name] -\u003e FC -\u003e Name -\u003e Idris Totality",
          "source": "src/Idris-Coverage.html#checkTotality",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Coverage",
          "module": "Idris.Coverage",
          "name": "checkTotality",
          "normalized": "[Name]-\u003eFC-\u003eName-\u003eIdris Totality",
          "package": "idris",
          "partial": "Totality",
          "signature": "[Name]-\u003eFC-\u003eName-\u003eIdris Totality",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Coverage.html#v:checkTotality"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Coverage",
          "name": "collapse",
          "package": "idris",
          "signature": "[Totality] -\u003e Totality",
          "source": "src/Idris-Coverage.html#collapse",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Coverage",
          "module": "Idris.Coverage",
          "name": "collapse",
          "normalized": "[Totality]-\u003eTotality",
          "package": "idris",
          "signature": "[Totality]-\u003eTotality",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Coverage.html#v:collapse"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Coverage",
          "name": "collapse'",
          "package": "idris",
          "signature": "Totality -\u003e [Totality] -\u003e Totality",
          "source": "src/Idris-Coverage.html#collapse%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Coverage",
          "module": "Idris.Coverage",
          "name": "collapse'",
          "normalized": "Totality-\u003e[Totality]-\u003eTotality",
          "package": "idris",
          "signature": "Totality-\u003e[Totality]-\u003eTotality",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Coverage.html#v:collapse-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Coverage",
          "name": "collapseNothing",
          "package": "idris",
          "signature": "[(Maybe t1, t)] -\u003e [(Maybe t1, t)]",
          "source": "src/Idris-Coverage.html#collapseNothing",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Coverage",
          "module": "Idris.Coverage",
          "name": "collapseNothing",
          "normalized": "[(Maybe a,a)]-\u003e[(Maybe a,a)]",
          "package": "idris",
          "partial": "Nothing",
          "signature": "[(Maybe t,t)]-\u003e[(Maybe t,t)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Coverage.html#v:collapseNothing"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Coverage",
          "name": "fnub",
          "package": "idris",
          "signature": "[PTerm] -\u003e [PTerm]",
          "source": "src/Idris-Coverage.html#fnub",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Coverage",
          "module": "Idris.Coverage",
          "name": "fnub",
          "normalized": "[PTerm]-\u003e[PTerm]",
          "package": "idris",
          "signature": "[PTerm]-\u003e[PTerm]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Coverage.html#v:fnub"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Coverage",
          "name": "fnub'",
          "package": "idris",
          "signature": "[PTerm] -\u003e [PTerm] -\u003e [PTerm]",
          "source": "src/Idris-Coverage.html#fnub%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Coverage",
          "module": "Idris.Coverage",
          "name": "fnub'",
          "normalized": "[PTerm]-\u003e[PTerm]-\u003e[PTerm]",
          "package": "idris",
          "signature": "[PTerm]-\u003e[PTerm]-\u003e[PTerm]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Coverage.html#v:fnub-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Coverage",
          "name": "genAll",
          "package": "idris",
          "signature": "IState -\u003e [PTerm] -\u003e [PTerm]",
          "source": "src/Idris-Coverage.html#genAll",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Coverage",
          "module": "Idris.Coverage",
          "name": "genAll",
          "normalized": "IState-\u003e[PTerm]-\u003e[PTerm]",
          "package": "idris",
          "partial": "All",
          "signature": "IState-\u003e[PTerm]-\u003e[PTerm]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Coverage.html#v:genAll"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Coverage",
          "name": "genClauses",
          "package": "idris",
          "signature": "FC -\u003e Name -\u003e [Term] -\u003e [PClause] -\u003e Idris [PTerm]",
          "source": "src/Idris-Coverage.html#genClauses",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Coverage",
          "module": "Idris.Coverage",
          "name": "genClauses",
          "normalized": "FC-\u003eName-\u003e[Term]-\u003e[PClause]-\u003eIdris[PTerm]",
          "package": "idris",
          "partial": "Clauses",
          "signature": "FC-\u003eName-\u003e[Term]-\u003e[PClause]-\u003eIdris[PTerm]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Coverage.html#v:genClauses"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Coverage",
          "name": "mkMultiPaths",
          "package": "idris",
          "signature": "IState -\u003e MultiPath -\u003e [SCGEntry] -\u003e [MultiPath]",
          "source": "src/Idris-Coverage.html#mkMultiPaths",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Coverage",
          "module": "Idris.Coverage",
          "name": "mkMultiPaths",
          "normalized": "IState-\u003eMultiPath-\u003e[SCGEntry]-\u003e[MultiPath]",
          "package": "idris",
          "partial": "Multi Paths",
          "signature": "IState-\u003eMultiPath-\u003e[SCGEntry]-\u003e[MultiPath]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Coverage.html#v:mkMultiPaths"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Coverage",
          "name": "mkPatTm",
          "package": "idris",
          "signature": "PTerm -\u003e Idris Term",
          "source": "src/Idris-Coverage.html#mkPatTm",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Coverage",
          "module": "Idris.Coverage",
          "name": "mkPatTm",
          "normalized": "PTerm-\u003eIdris Term",
          "package": "idris",
          "partial": "Pat Tm",
          "signature": "PTerm-\u003eIdris Term",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Coverage.html#v:mkPatTm"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Coverage",
          "name": "noPartial",
          "package": "idris",
          "signature": "[Totality] -\u003e Totality",
          "source": "src/Idris-Coverage.html#noPartial",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Coverage",
          "module": "Idris.Coverage",
          "name": "noPartial",
          "normalized": "[Totality]-\u003eTotality",
          "package": "idris",
          "partial": "Partial",
          "signature": "[Totality]-\u003eTotality",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Coverage.html#v:noPartial"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Coverage",
          "name": "qelem",
          "package": "idris",
          "signature": "PTerm -\u003e [PTerm] -\u003e Bool",
          "source": "src/Idris-Coverage.html#qelem",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Coverage",
          "module": "Idris.Coverage",
          "name": "qelem",
          "normalized": "PTerm-\u003e[PTerm]-\u003eBool",
          "package": "idris",
          "signature": "PTerm-\u003e[PTerm]-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Coverage.html#v:qelem"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Coverage",
          "name": "quickEq",
          "package": "idris",
          "signature": "PTerm -\u003e PTerm -\u003e Bool",
          "source": "src/Idris-Coverage.html#quickEq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Coverage",
          "module": "Idris.Coverage",
          "name": "quickEq",
          "normalized": "PTerm-\u003ePTerm-\u003eBool",
          "package": "idris",
          "partial": "Eq",
          "signature": "PTerm-\u003ePTerm-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Coverage.html#v:quickEq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Coverage",
          "name": "upd",
          "package": "idris",
          "signature": "t -\u003e PArg' t -\u003e PArg' t",
          "source": "src/Idris-Coverage.html#upd",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Coverage",
          "module": "Idris.Coverage",
          "name": "upd",
          "normalized": "a-\u003ePArg' a-\u003ePArg' a",
          "package": "idris",
          "signature": "t-\u003ePArg' t-\u003ePArg' t",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Coverage.html#v:upd"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.DSL",
          "name": "DSL",
          "package": "idris",
          "source": "src/Idris-DSL.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "Idris DSL",
          "module": "Idris.DSL",
          "name": "DSL",
          "package": "idris",
          "partial": "DSL",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-DSL.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.DSL",
          "name": "debind",
          "package": "idris",
          "signature": "PTerm -\u003e PTerm -\u003e PTerm",
          "source": "src/Idris-DSL.html#debind",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris DSL",
          "module": "Idris.DSL",
          "name": "debind",
          "normalized": "PTerm-\u003ePTerm-\u003ePTerm",
          "package": "idris",
          "signature": "PTerm-\u003ePTerm-\u003ePTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-DSL.html#v:debind"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.DSL",
          "name": "debindApp",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e PTerm -\u003e PTerm",
          "source": "src/Idris-DSL.html#debindApp",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris DSL",
          "module": "Idris.DSL",
          "name": "debindApp",
          "normalized": "SyntaxInfo-\u003ePTerm-\u003ePTerm",
          "package": "idris",
          "partial": "App",
          "signature": "SyntaxInfo-\u003ePTerm-\u003ePTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-DSL.html#v:debindApp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.DSL",
          "name": "desugar",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IState -\u003e PTerm -\u003e PTerm",
          "source": "src/Idris-DSL.html#desugar",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris DSL",
          "module": "Idris.DSL",
          "name": "desugar",
          "normalized": "SyntaxInfo-\u003eIState-\u003ePTerm-\u003ePTerm",
          "package": "idris",
          "signature": "SyntaxInfo-\u003eIState-\u003ePTerm-\u003ePTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-DSL.html#v:desugar"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.DSL",
          "name": "expandDo",
          "package": "idris",
          "signature": "DSL -\u003e PTerm -\u003e PTerm",
          "source": "src/Idris-DSL.html#expandDo",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris DSL",
          "module": "Idris.DSL",
          "name": "expandDo",
          "normalized": "DSL-\u003ePTerm-\u003ePTerm",
          "package": "idris",
          "partial": "Do",
          "signature": "DSL-\u003ePTerm-\u003ePTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-DSL.html#v:expandDo"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.DSL",
          "name": "unIdiom",
          "package": "idris",
          "signature": "PTerm -\u003e PTerm -\u003e FC -\u003e PTerm -\u003e PTerm",
          "source": "src/Idris-DSL.html#unIdiom",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris DSL",
          "module": "Idris.DSL",
          "name": "unIdiom",
          "normalized": "PTerm-\u003ePTerm-\u003eFC-\u003ePTerm-\u003ePTerm",
          "package": "idris",
          "partial": "Idiom",
          "signature": "PTerm-\u003ePTerm-\u003eFC-\u003ePTerm-\u003ePTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-DSL.html#v:unIdiom"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.DSL",
          "name": "var",
          "package": "idris",
          "signature": "DSL -\u003e Name -\u003e PTerm -\u003e Int -\u003e PTerm",
          "source": "src/Idris-DSL.html#var",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris DSL",
          "module": "Idris.DSL",
          "name": "var",
          "normalized": "DSL-\u003eName-\u003ePTerm-\u003eInt-\u003ePTerm",
          "package": "idris",
          "signature": "DSL-\u003eName-\u003ePTerm-\u003eInt-\u003ePTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-DSL.html#v:var"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.DataOpts",
          "name": "DataOpts",
          "package": "idris",
          "source": "src/Idris-DataOpts.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "Idris DataOpts",
          "module": "Idris.DataOpts",
          "name": "DataOpts",
          "package": "idris",
          "partial": "Data Opts",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-DataOpts.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.DataOpts",
          "name": "ForceMap",
          "package": "idris",
          "source": "src/Idris-DataOpts.html#ForceMap",
          "type": "type"
        },
        "index": {
          "hierarchy": "Idris DataOpts",
          "module": "Idris.DataOpts",
          "name": "ForceMap",
          "package": "idris",
          "partial": "Force Map",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-DataOpts.html#t:ForceMap"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.DataOpts",
          "name": "Optimisable",
          "package": "idris",
          "source": "src/Idris-DataOpts.html#Optimisable",
          "type": "class"
        },
        "index": {
          "hierarchy": "Idris DataOpts",
          "module": "Idris.DataOpts",
          "name": "Optimisable",
          "package": "idris",
          "partial": "Optimisable",
          "type": "class"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-DataOpts.html#t:Optimisable"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.DataOpts",
          "name": "applyDataOpt",
          "package": "idris",
          "signature": "OptInfo -\u003e Name -\u003e [Raw] -\u003e Raw",
          "source": "src/Idris-DataOpts.html#applyDataOpt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris DataOpts",
          "module": "Idris.DataOpts",
          "name": "applyDataOpt",
          "normalized": "OptInfo-\u003eName-\u003e[Raw]-\u003eRaw",
          "package": "idris",
          "partial": "Data Opt",
          "signature": "OptInfo-\u003eName-\u003e[Raw]-\u003eRaw",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-DataOpts.html#v:applyDataOpt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.DataOpts",
          "name": "applyDataOptRT",
          "package": "idris",
          "signature": "OptInfo -\u003e Name -\u003e Int -\u003e Int -\u003e [Term] -\u003e Term",
          "source": "src/Idris-DataOpts.html#applyDataOptRT",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris DataOpts",
          "module": "Idris.DataOpts",
          "name": "applyDataOptRT",
          "normalized": "OptInfo-\u003eName-\u003eInt-\u003eInt-\u003e[Term]-\u003eTerm",
          "package": "idris",
          "partial": "Data Opt RT",
          "signature": "OptInfo-\u003eName-\u003eInt-\u003eInt-\u003e[Term]-\u003eTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-DataOpts.html#v:applyDataOptRT"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.DataOpts",
          "name": "applyOpts",
          "package": "idris",
          "signature": "term -\u003e Idris term",
          "source": "src/Idris-DataOpts.html#applyOpts",
          "type": "method"
        },
        "index": {
          "hierarchy": "Idris DataOpts",
          "module": "Idris.DataOpts",
          "name": "applyOpts",
          "normalized": "a-\u003eIdris a",
          "package": "idris",
          "partial": "Opts",
          "signature": "term-\u003eIdris term",
          "type": "method"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-DataOpts.html#v:applyOpts"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.DataOpts",
          "name": "collapseCons",
          "package": "idris",
          "signature": "Name -\u003e [(Name, Type)] -\u003e Idris ()",
          "source": "src/Idris-DataOpts.html#collapseCons",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris DataOpts",
          "module": "Idris.DataOpts",
          "name": "collapseCons",
          "normalized": "Name-\u003e[(Name,Type)]-\u003eIdris()",
          "package": "idris",
          "partial": "Cons",
          "signature": "Name-\u003e[(Name,Type)]-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-DataOpts.html#v:collapseCons"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.DataOpts",
          "name": "forceArgs",
          "package": "idris",
          "signature": "Name -\u003e Name -\u003e [Int] -\u003e Type -\u003e Idris ()",
          "source": "src/Idris-DataOpts.html#forceArgs",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris DataOpts",
          "module": "Idris.DataOpts",
          "name": "forceArgs",
          "normalized": "Name-\u003eName-\u003e[Int]-\u003eType-\u003eIdris()",
          "package": "idris",
          "partial": "Args",
          "signature": "Name-\u003eName-\u003e[Int]-\u003eType-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-DataOpts.html#v:forceArgs"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.DataOpts",
          "name": "forcedArgSeq",
          "package": "idris",
          "signature": "OptInfo -\u003e [Maybe Forceability]",
          "source": "src/Idris-DataOpts.html#forcedArgSeq",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris DataOpts",
          "module": "Idris.DataOpts",
          "name": "forcedArgSeq",
          "normalized": "OptInfo-\u003e[Maybe Forceability]",
          "package": "idris",
          "partial": "Arg Seq",
          "signature": "OptInfo-\u003e[Maybe Forceability]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-DataOpts.html#v:forcedArgSeq"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.DataOpts",
          "name": "forcedCnt",
          "package": "idris",
          "signature": "ForceMap -\u003e Int",
          "source": "src/Idris-DataOpts.html#forcedCnt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris DataOpts",
          "module": "Idris.DataOpts",
          "name": "forcedCnt",
          "normalized": "ForceMap-\u003eInt",
          "package": "idris",
          "partial": "Cnt",
          "signature": "ForceMap-\u003eInt",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-DataOpts.html#v:forcedCnt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.DataOpts",
          "name": "getForcedArgs",
          "package": "idris",
          "signature": "IState -\u003e Name -\u003e Type -\u003e ForceMap",
          "source": "src/Idris-DataOpts.html#getForcedArgs",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris DataOpts",
          "module": "Idris.DataOpts",
          "name": "getForcedArgs",
          "normalized": "IState-\u003eName-\u003eType-\u003eForceMap",
          "package": "idris",
          "partial": "Forced Args",
          "signature": "IState-\u003eName-\u003eType-\u003eForceMap",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-DataOpts.html#v:getForcedArgs"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.DataOpts",
          "name": "prel",
          "package": "idris",
          "signature": "[Text]",
          "source": "src/Idris-DataOpts.html#prel",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris DataOpts",
          "module": "Idris.DataOpts",
          "name": "prel",
          "normalized": "[Text]",
          "package": "idris",
          "signature": "[Text]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-DataOpts.html#v:prel"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.DataOpts",
          "name": "stripCollapsed",
          "package": "idris",
          "signature": "term -\u003e Idris term",
          "source": "src/Idris-DataOpts.html#stripCollapsed",
          "type": "method"
        },
        "index": {
          "hierarchy": "Idris DataOpts",
          "module": "Idris.DataOpts",
          "name": "stripCollapsed",
          "normalized": "a-\u003eIdris a",
          "package": "idris",
          "partial": "Collapsed",
          "signature": "term-\u003eIdris term",
          "type": "method"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-DataOpts.html#v:stripCollapsed"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.DeepSeq",
          "name": "DeepSeq",
          "package": "idris",
          "source": "src/Idris-DeepSeq.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "Idris DeepSeq",
          "module": "Idris.DeepSeq",
          "name": "DeepSeq",
          "package": "idris",
          "partial": "Deep Seq",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-DeepSeq.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Delaborate",
          "name": "Delaborate",
          "package": "idris",
          "source": "src/Idris-Delaborate.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "Idris Delaborate",
          "module": "Idris.Delaborate",
          "name": "Delaborate",
          "package": "idris",
          "partial": "Delaborate",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Delaborate.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Delaborate",
          "name": "bugaddr",
          "package": "idris",
          "signature": "[Char]",
          "source": "src/Idris-Delaborate.html#bugaddr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Delaborate",
          "module": "Idris.Delaborate",
          "name": "bugaddr",
          "normalized": "[Char]",
          "package": "idris",
          "signature": "[Char]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Delaborate.html#v:bugaddr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Delaborate",
          "name": "delab",
          "package": "idris",
          "signature": "IState -\u003e Term -\u003e PTerm",
          "source": "src/Idris-Delaborate.html#delab",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Delaborate",
          "module": "Idris.Delaborate",
          "name": "delab",
          "normalized": "IState-\u003eTerm-\u003ePTerm",
          "package": "idris",
          "signature": "IState-\u003eTerm-\u003ePTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Delaborate.html#v:delab"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Delaborate",
          "name": "delab'",
          "package": "idris",
          "signature": "IState -\u003e Term -\u003e Bool -\u003e Bool -\u003e PTerm",
          "source": "src/Idris-Delaborate.html#delab%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Delaborate",
          "module": "Idris.Delaborate",
          "name": "delab'",
          "normalized": "IState-\u003eTerm-\u003eBool-\u003eBool-\u003ePTerm",
          "package": "idris",
          "signature": "IState-\u003eTerm-\u003eBool-\u003eBool-\u003ePTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Delaborate.html#v:delab-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Delaborate",
          "name": "delabMV",
          "package": "idris",
          "signature": "IState -\u003e Term -\u003e PTerm",
          "source": "src/Idris-Delaborate.html#delabMV",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Delaborate",
          "module": "Idris.Delaborate",
          "name": "delabMV",
          "normalized": "IState-\u003eTerm-\u003ePTerm",
          "package": "idris",
          "partial": "MV",
          "signature": "IState-\u003eTerm-\u003ePTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Delaborate.html#v:delabMV"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Delaborate",
          "name": "delabTy",
          "package": "idris",
          "signature": "IState -\u003e Name -\u003e PTerm",
          "source": "src/Idris-Delaborate.html#delabTy",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Delaborate",
          "module": "Idris.Delaborate",
          "name": "delabTy",
          "normalized": "IState-\u003eName-\u003ePTerm",
          "package": "idris",
          "partial": "Ty",
          "signature": "IState-\u003eName-\u003ePTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Delaborate.html#v:delabTy"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Delaborate",
          "name": "delabTy'",
          "package": "idris",
          "signature": "IState-\u003e [PArg]-\u003e Term-\u003e Bool-\u003e Bool-\u003e PTerm",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Delaborate",
          "module": "Idris.Delaborate",
          "name": "delabTy'",
          "normalized": "IState-\u003e[PArg]-\u003eTerm-\u003eBool-\u003eBool-\u003ePTerm",
          "package": "idris",
          "partial": "Ty'",
          "signature": "IState-\u003e[PArg]-\u003eTerm-\u003eBool-\u003eBool-\u003ePTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Delaborate.html#v:delabTy-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Delaborate",
          "name": "pprintErr",
          "package": "idris",
          "signature": "IState -\u003e Err -\u003e Doc OutputAnnotation",
          "source": "src/Idris-Delaborate.html#pprintErr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Delaborate",
          "module": "Idris.Delaborate",
          "name": "pprintErr",
          "normalized": "IState-\u003eErr-\u003eDoc OutputAnnotation",
          "package": "idris",
          "partial": "Err",
          "signature": "IState-\u003eErr-\u003eDoc OutputAnnotation",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Delaborate.html#v:pprintErr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Delaborate",
          "name": "pshow",
          "package": "idris",
          "signature": "IState -\u003e Err -\u003e String",
          "source": "src/Idris-Delaborate.html#pshow",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Delaborate",
          "module": "Idris.Delaborate",
          "name": "pshow",
          "normalized": "IState-\u003eErr-\u003eString",
          "package": "idris",
          "signature": "IState-\u003eErr-\u003eString",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Delaborate.html#v:pshow"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Docs",
          "name": "Docs",
          "package": "idris",
          "source": "src/Idris-Docs.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "Idris Docs",
          "module": "Idris.Docs",
          "name": "Docs",
          "package": "idris",
          "partial": "Docs",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Docs.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Docs",
          "name": "Doc",
          "package": "idris",
          "source": "src/Idris-Docs.html#Doc",
          "type": "data"
        },
        "index": {
          "hierarchy": "Idris Docs",
          "module": "Idris.Docs",
          "name": "Doc",
          "package": "idris",
          "partial": "Doc",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Docs.html#t:Doc"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Docs",
          "name": "FunDoc",
          "package": "idris",
          "source": "src/Idris-Docs.html#FunDoc",
          "type": "data"
        },
        "index": {
          "hierarchy": "Idris Docs",
          "module": "Idris.Docs",
          "name": "FunDoc",
          "package": "idris",
          "partial": "Fun Doc",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Docs.html#t:FunDoc"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Docs",
          "name": "ClassDoc",
          "package": "idris",
          "signature": "ClassDoc Name String [FunDoc]",
          "source": "src/Idris-Docs.html#Doc",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Docs",
          "module": "Idris.Docs",
          "name": "ClassDoc",
          "normalized": "ClassDoc Name String[FunDoc]",
          "package": "idris",
          "partial": "Class Doc",
          "signature": "ClassDoc Name String[FunDoc]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Docs.html#v:ClassDoc"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Docs",
          "name": "DataDoc",
          "package": "idris",
          "signature": "DataDoc FunDoc [FunDoc]",
          "source": "src/Idris-Docs.html#Doc",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Docs",
          "module": "Idris.Docs",
          "name": "DataDoc",
          "normalized": "DataDoc FunDoc[FunDoc]",
          "package": "idris",
          "partial": "Data Doc",
          "signature": "DataDoc FunDoc[FunDoc]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Docs.html#v:DataDoc"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Docs",
          "name": "Doc",
          "package": "idris",
          "signature": "Doc Name String [(Name, PArg)] PTerm (Maybe Fixity)",
          "source": "src/Idris-Docs.html#FunDoc",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Docs",
          "module": "Idris.Docs",
          "name": "Doc",
          "normalized": "Doc Name String[(Name,PArg)]PTerm(Maybe Fixity)",
          "package": "idris",
          "partial": "Doc",
          "signature": "Doc Name String[(Name,PArg)]PTerm(Maybe Fixity)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Docs.html#v:Doc"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Docs",
          "name": "FunDoc",
          "package": "idris",
          "signature": "FunDoc FunDoc",
          "source": "src/Idris-Docs.html#Doc",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Docs",
          "module": "Idris.Docs",
          "name": "FunDoc",
          "package": "idris",
          "partial": "Fun Doc",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Docs.html#v:FunDoc"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Docs",
          "name": "docClass",
          "package": "idris",
          "signature": "Name -\u003e ClassInfo -\u003e Idris Doc",
          "source": "src/Idris-Docs.html#docClass",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Docs",
          "module": "Idris.Docs",
          "name": "docClass",
          "normalized": "Name-\u003eClassInfo-\u003eIdris Doc",
          "package": "idris",
          "partial": "Class",
          "signature": "Name-\u003eClassInfo-\u003eIdris Doc",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Docs.html#v:docClass"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Docs",
          "name": "docData",
          "package": "idris",
          "signature": "Name -\u003e TypeInfo -\u003e Idris Doc",
          "source": "src/Idris-Docs.html#docData",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Docs",
          "module": "Idris.Docs",
          "name": "docData",
          "normalized": "Name-\u003eTypeInfo-\u003eIdris Doc",
          "package": "idris",
          "partial": "Data",
          "signature": "Name-\u003eTypeInfo-\u003eIdris Doc",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Docs.html#v:docData"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Docs",
          "name": "docFun",
          "package": "idris",
          "signature": "Name -\u003e Idris FunDoc",
          "source": "src/Idris-Docs.html#docFun",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Docs",
          "module": "Idris.Docs",
          "name": "docFun",
          "normalized": "Name-\u003eIdris FunDoc",
          "package": "idris",
          "partial": "Fun",
          "signature": "Name-\u003eIdris FunDoc",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Docs.html#v:docFun"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Docs",
          "name": "getDocs",
          "package": "idris",
          "signature": "Name -\u003e Idris Doc",
          "source": "src/Idris-Docs.html#getDocs",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Docs",
          "module": "Idris.Docs",
          "name": "getDocs",
          "normalized": "Name-\u003eIdris Doc",
          "package": "idris",
          "partial": "Docs",
          "signature": "Name-\u003eIdris Doc",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Docs.html#v:getDocs"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Docs",
          "name": "showDoc",
          "package": "idris",
          "signature": "[Char] -\u003e [Char]",
          "source": "src/Idris-Docs.html#showDoc",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Docs",
          "module": "Idris.Docs",
          "name": "showDoc",
          "normalized": "[Char]-\u003e[Char]",
          "package": "idris",
          "partial": "Doc",
          "signature": "[Char]-\u003e[Char]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Docs.html#v:showDoc"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabDecls",
          "name": "ElabDecls",
          "package": "idris",
          "source": "src/Idris-ElabDecls.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "Idris ElabDecls",
          "module": "Idris.ElabDecls",
          "name": "ElabDecls",
          "package": "idris",
          "partial": "Elab Decls",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabDecls.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabDecls",
          "name": "ElabWhat",
          "package": "idris",
          "source": "src/Idris-ElabDecls.html#ElabWhat",
          "type": "data"
        },
        "index": {
          "hierarchy": "Idris ElabDecls",
          "module": "Idris.ElabDecls",
          "name": "ElabWhat",
          "package": "idris",
          "partial": "Elab What",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabDecls.html#t:ElabWhat"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabDecls",
          "name": "EliminatorState",
          "package": "idris",
          "source": "src/Idris-ElabDecls.html#EliminatorState",
          "type": "type"
        },
        "index": {
          "hierarchy": "Idris ElabDecls",
          "module": "Idris.ElabDecls",
          "name": "EliminatorState",
          "package": "idris",
          "partial": "Eliminator State",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabDecls.html#t:EliminatorState"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabDecls",
          "name": "MArgTy",
          "package": "idris",
          "source": "src/Idris-ElabDecls.html#MArgTy",
          "type": "data"
        },
        "index": {
          "hierarchy": "Idris ElabDecls",
          "module": "Idris.ElabDecls",
          "name": "MArgTy",
          "package": "idris",
          "partial": "MArg Ty",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabDecls.html#t:MArgTy"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabDecls",
          "name": "CA",
          "package": "idris",
          "signature": "CA",
          "source": "src/Idris-ElabDecls.html#MArgTy",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabDecls",
          "module": "Idris.ElabDecls",
          "name": "CA",
          "package": "idris",
          "partial": "CA",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabDecls.html#v:CA"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabDecls",
          "name": "EA",
          "package": "idris",
          "signature": "EA",
          "source": "src/Idris-ElabDecls.html#MArgTy",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabDecls",
          "module": "Idris.ElabDecls",
          "name": "EA",
          "package": "idris",
          "partial": "EA",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabDecls.html#v:EA"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabDecls",
          "name": "EAll",
          "package": "idris",
          "signature": "EAll",
          "source": "src/Idris-ElabDecls.html#ElabWhat",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabDecls",
          "module": "Idris.ElabDecls",
          "name": "EAll",
          "package": "idris",
          "partial": "EAll",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabDecls.html#v:EAll"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabDecls",
          "name": "EDefns",
          "package": "idris",
          "signature": "EDefns",
          "source": "src/Idris-ElabDecls.html#ElabWhat",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabDecls",
          "module": "Idris.ElabDecls",
          "name": "EDefns",
          "package": "idris",
          "partial": "EDefns",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabDecls.html#v:EDefns"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabDecls",
          "name": "ETypes",
          "package": "idris",
          "signature": "ETypes",
          "source": "src/Idris-ElabDecls.html#ElabWhat",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabDecls",
          "module": "Idris.ElabDecls",
          "name": "ETypes",
          "package": "idris",
          "partial": "ETypes",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabDecls.html#v:ETypes"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabDecls",
          "name": "IA",
          "package": "idris",
          "signature": "IA",
          "source": "src/Idris-ElabDecls.html#MArgTy",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabDecls",
          "module": "Idris.ElabDecls",
          "name": "IA",
          "package": "idris",
          "partial": "IA",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabDecls.html#v:IA"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabDecls",
          "name": "checkAddDef",
          "package": "idris",
          "signature": "Bool -\u003e Bool -\u003e FC -\u003e [(Name, (Int, Maybe Name, TT Name))] -\u003e StateT IState (ErrorT Err IO) [(Name, (Int, Maybe Name, Term))]",
          "source": "src/Idris-ElabDecls.html#checkAddDef",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabDecls",
          "module": "Idris.ElabDecls",
          "name": "checkAddDef",
          "normalized": "Bool-\u003eBool-\u003eFC-\u003e[(Name,(Int,Maybe Name,TT Name))]-\u003eStateT IState(ErrorT Err IO)[(Name,(Int,Maybe Name,Term))]",
          "package": "idris",
          "partial": "Add Def",
          "signature": "Bool-\u003eBool-\u003eFC-\u003e[(Name,(Int,Maybe Name,TT Name))]-\u003eStateT IState(ErrorT Err IO)[(Name,(Int,Maybe Name,Term))]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabDecls.html#v:checkAddDef"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabDecls",
          "name": "checkDef",
          "package": "idris",
          "signature": "FC -\u003e [(Name, (Int, Maybe Name, TT Name))] -\u003e StateT IState (ErrorT Err IO) [(Name, (Int, Maybe Name, Term))]",
          "source": "src/Idris-ElabDecls.html#checkDef",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabDecls",
          "module": "Idris.ElabDecls",
          "name": "checkDef",
          "normalized": "FC-\u003e[(Name,(Int,Maybe Name,TT Name))]-\u003eStateT IState(ErrorT Err IO)[(Name,(Int,Maybe Name,Term))]",
          "package": "idris",
          "partial": "Def",
          "signature": "FC-\u003e[(Name,(Int,Maybe Name,TT Name))]-\u003eStateT IState(ErrorT Err IO)[(Name,(Int,Maybe Name,Term))]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabDecls.html#v:checkDef"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabDecls",
          "name": "checkInferred",
          "package": "idris",
          "signature": "FC -\u003e PTerm -\u003e PTerm -\u003e Idris ()",
          "source": "src/Idris-ElabDecls.html#checkInferred",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabDecls",
          "module": "Idris.ElabDecls",
          "name": "checkInferred",
          "normalized": "FC-\u003ePTerm-\u003ePTerm-\u003eIdris()",
          "package": "idris",
          "partial": "Inferred",
          "signature": "FC-\u003ePTerm-\u003ePTerm-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabDecls.html#v:checkInferred"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabDecls",
          "name": "checkPossible",
          "package": "idris",
          "signature": "ElabInfo -\u003e FC -\u003e Bool -\u003e Name -\u003e PTerm -\u003e Idris Bool",
          "source": "src/Idris-ElabDecls.html#checkPossible",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabDecls",
          "module": "Idris.ElabDecls",
          "name": "checkPossible",
          "normalized": "ElabInfo-\u003eFC-\u003eBool-\u003eName-\u003ePTerm-\u003eIdris Bool",
          "package": "idris",
          "partial": "Possible",
          "signature": "ElabInfo-\u003eFC-\u003eBool-\u003eName-\u003ePTerm-\u003eIdris Bool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabDecls.html#v:checkPossible"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabDecls",
          "name": "decorateid",
          "package": "idris",
          "signature": "(Name -\u003e Name) -\u003e PDecl' PTerm -\u003e PDecl' PTerm",
          "source": "src/Idris-ElabDecls.html#decorateid",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabDecls",
          "module": "Idris.ElabDecls",
          "name": "decorateid",
          "normalized": "(Name-\u003eName)-\u003ePDecl' PTerm-\u003ePDecl' PTerm",
          "package": "idris",
          "signature": "(Name-\u003eName)-\u003ePDecl' PTerm-\u003ePDecl' PTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabDecls.html#v:decorateid"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabDecls",
          "name": "elabCaseBlock",
          "package": "idris",
          "signature": "ElabInfo -\u003e [FnOpt] -\u003e PDecl' PTerm -\u003e StateT IState (ErrorT Err IO) ()",
          "source": "src/Idris-ElabDecls.html#elabCaseBlock",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabDecls",
          "module": "Idris.ElabDecls",
          "name": "elabCaseBlock",
          "normalized": "ElabInfo-\u003e[FnOpt]-\u003ePDecl' PTerm-\u003eStateT IState(ErrorT Err IO)()",
          "package": "idris",
          "partial": "Case Block",
          "signature": "ElabInfo-\u003e[FnOpt]-\u003ePDecl' PTerm-\u003eStateT IState(ErrorT Err IO)()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabDecls.html#v:elabCaseBlock"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabDecls",
          "name": "elabClass",
          "package": "idris",
          "signature": "ElabInfo -\u003e SyntaxInfo -\u003e String -\u003e FC -\u003e [PTerm] -\u003e Name -\u003e [(Name, PTerm)] -\u003e [PDecl] -\u003e Idris ()",
          "source": "src/Idris-ElabDecls.html#elabClass",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabDecls",
          "module": "Idris.ElabDecls",
          "name": "elabClass",
          "normalized": "ElabInfo-\u003eSyntaxInfo-\u003eString-\u003eFC-\u003e[PTerm]-\u003eName-\u003e[(Name,PTerm)]-\u003e[PDecl]-\u003eIdris()",
          "package": "idris",
          "partial": "Class",
          "signature": "ElabInfo-\u003eSyntaxInfo-\u003eString-\u003eFC-\u003e[PTerm]-\u003eName-\u003e[(Name,PTerm)]-\u003e[PDecl]-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabDecls.html#v:elabClass"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabDecls",
          "name": "elabClause",
          "package": "idris",
          "signature": "ElabInfo -\u003e FnOpts -\u003e (Int, PClause) -\u003e Idris (Either Term (Term, Term))",
          "source": "src/Idris-ElabDecls.html#elabClause",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabDecls",
          "module": "Idris.ElabDecls",
          "name": "elabClause",
          "normalized": "ElabInfo-\u003eFnOpts-\u003e(Int,PClause)-\u003eIdris(Either Term(Term,Term))",
          "package": "idris",
          "partial": "Clause",
          "signature": "ElabInfo-\u003eFnOpts-\u003e(Int,PClause)-\u003eIdris(Either Term(Term,Term))",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabDecls.html#v:elabClause"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eElaborate a collection of left-hand and right-hand pairs - that is, a\n top-level definition.\n\u003c/p\u003e",
          "module": "Idris.ElabDecls",
          "name": "elabClauses",
          "package": "idris",
          "signature": "ElabInfo -\u003e FC -\u003e FnOpts -\u003e Name -\u003e [PClause] -\u003e Idris ()",
          "source": "src/Idris-ElabDecls.html#elabClauses",
          "type": "function"
        },
        "index": {
          "description": "Elaborate collection of left-hand and right-hand pairs that is top-level definition",
          "hierarchy": "Idris ElabDecls",
          "module": "Idris.ElabDecls",
          "name": "elabClauses",
          "normalized": "ElabInfo-\u003eFC-\u003eFnOpts-\u003eName-\u003e[PClause]-\u003eIdris()",
          "package": "idris",
          "partial": "Clauses",
          "signature": "ElabInfo-\u003eFC-\u003eFnOpts-\u003eName-\u003e[PClause]-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabDecls.html#v:elabClauses"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabDecls",
          "name": "elabCon",
          "package": "idris",
          "signature": "ElabInfo -\u003e SyntaxInfo -\u003e Name -\u003e Bool -\u003e (String, Name, PTerm, FC, [Name]) -\u003e Idris (Name, Type)",
          "source": "src/Idris-ElabDecls.html#elabCon",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabDecls",
          "module": "Idris.ElabDecls",
          "name": "elabCon",
          "normalized": "ElabInfo-\u003eSyntaxInfo-\u003eName-\u003eBool-\u003e(String,Name,PTerm,FC,[Name])-\u003eIdris(Name,Type)",
          "package": "idris",
          "partial": "Con",
          "signature": "ElabInfo-\u003eSyntaxInfo-\u003eName-\u003eBool-\u003e(String,Name,PTerm,FC,[Name])-\u003eIdris(Name,Type)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabDecls.html#v:elabCon"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabDecls",
          "name": "elabData",
          "package": "idris",
          "signature": "ElabInfo -\u003e SyntaxInfo -\u003e String -\u003e FC -\u003e DataOpts -\u003e PData -\u003e Idris ()",
          "source": "src/Idris-ElabDecls.html#elabData",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabDecls",
          "module": "Idris.ElabDecls",
          "name": "elabData",
          "normalized": "ElabInfo-\u003eSyntaxInfo-\u003eString-\u003eFC-\u003eDataOpts-\u003ePData-\u003eIdris()",
          "package": "idris",
          "partial": "Data",
          "signature": "ElabInfo-\u003eSyntaxInfo-\u003eString-\u003eFC-\u003eDataOpts-\u003ePData-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabDecls.html#v:elabData"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabDecls",
          "name": "elabDecl",
          "package": "idris",
          "signature": "ElabWhat -\u003e ElabInfo -\u003e PDecl -\u003e Idris ()",
          "source": "src/Idris-ElabDecls.html#elabDecl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabDecls",
          "module": "Idris.ElabDecls",
          "name": "elabDecl",
          "normalized": "ElabWhat-\u003eElabInfo-\u003ePDecl-\u003eIdris()",
          "package": "idris",
          "partial": "Decl",
          "signature": "ElabWhat-\u003eElabInfo-\u003ePDecl-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabDecls.html#v:elabDecl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabDecls",
          "name": "elabDecl'",
          "package": "idris",
          "signature": "ElabWhat -\u003e ElabInfo -\u003e PDecl' PTerm -\u003e StateT IState (ErrorT Err IO) ()",
          "source": "src/Idris-ElabDecls.html#elabDecl%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabDecls",
          "module": "Idris.ElabDecls",
          "name": "elabDecl'",
          "normalized": "ElabWhat-\u003eElabInfo-\u003ePDecl' PTerm-\u003eStateT IState(ErrorT Err IO)()",
          "package": "idris",
          "partial": "Decl'",
          "signature": "ElabWhat-\u003eElabInfo-\u003ePDecl' PTerm-\u003eStateT IState(ErrorT Err IO)()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabDecls.html#v:elabDecl-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabDecls",
          "name": "elabDecls",
          "package": "idris",
          "signature": "ElabInfo -\u003e [PDecl] -\u003e Idris ()",
          "source": "src/Idris-ElabDecls.html#elabDecls",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabDecls",
          "module": "Idris.ElabDecls",
          "name": "elabDecls",
          "normalized": "ElabInfo-\u003e[PDecl]-\u003eIdris()",
          "package": "idris",
          "partial": "Decls",
          "signature": "ElabInfo-\u003e[PDecl]-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabDecls.html#v:elabDecls"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabDecls",
          "name": "elabEliminator",
          "package": "idris",
          "signature": "[Int] -\u003e Name -\u003e PTerm -\u003e [(String, Name, PTerm, FC, [Name])] -\u003e ElabInfo -\u003e EliminatorState ()",
          "source": "src/Idris-ElabDecls.html#elabEliminator",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabDecls",
          "module": "Idris.ElabDecls",
          "name": "elabEliminator",
          "normalized": "[Int]-\u003eName-\u003ePTerm-\u003e[(String,Name,PTerm,FC,[Name])]-\u003eElabInfo-\u003eEliminatorState()",
          "package": "idris",
          "partial": "Eliminator",
          "signature": "[Int]-\u003eName-\u003ePTerm-\u003e[(String,Name,PTerm,FC,[Name])]-\u003eElabInfo-\u003eEliminatorState()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabDecls.html#v:elabEliminator"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabDecls",
          "name": "elabInstance",
          "package": "idris",
          "signature": "ElabInfo -\u003e SyntaxInfo -\u003e ElabWhat -\u003e FC -\u003e [PTerm] -\u003e Name -\u003e [PTerm] -\u003e PTerm -\u003e Maybe Name -\u003e [PDecl] -\u003e Idris ()",
          "source": "src/Idris-ElabDecls.html#elabInstance",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabDecls",
          "module": "Idris.ElabDecls",
          "name": "elabInstance",
          "normalized": "ElabInfo-\u003eSyntaxInfo-\u003eElabWhat-\u003eFC-\u003e[PTerm]-\u003eName-\u003e[PTerm]-\u003ePTerm-\u003eMaybe Name-\u003e[PDecl]-\u003eIdris()",
          "package": "idris",
          "partial": "Instance",
          "signature": "ElabInfo-\u003eSyntaxInfo-\u003eElabWhat-\u003eFC-\u003e[PTerm]-\u003eName-\u003e[PTerm]-\u003ePTerm-\u003eMaybe Name-\u003e[PDecl]-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabDecls.html#v:elabInstance"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabDecls",
          "name": "elabPE",
          "package": "idris",
          "signature": "ElabInfo -\u003e FC -\u003e Name -\u003e Term -\u003e Idris ()",
          "source": "src/Idris-ElabDecls.html#elabPE",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabDecls",
          "module": "Idris.ElabDecls",
          "name": "elabPE",
          "normalized": "ElabInfo-\u003eFC-\u003eName-\u003eTerm-\u003eIdris()",
          "package": "idris",
          "partial": "PE",
          "signature": "ElabInfo-\u003eFC-\u003eName-\u003eTerm-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabDecls.html#v:elabPE"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabDecls",
          "name": "elabPostulate",
          "package": "idris",
          "signature": "ElabInfo -\u003e SyntaxInfo -\u003e String -\u003e FC -\u003e FnOpts -\u003e Name -\u003e PTerm -\u003e Idris ()",
          "source": "src/Idris-ElabDecls.html#elabPostulate",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabDecls",
          "module": "Idris.ElabDecls",
          "name": "elabPostulate",
          "normalized": "ElabInfo-\u003eSyntaxInfo-\u003eString-\u003eFC-\u003eFnOpts-\u003eName-\u003ePTerm-\u003eIdris()",
          "package": "idris",
          "partial": "Postulate",
          "signature": "ElabInfo-\u003eSyntaxInfo-\u003eString-\u003eFC-\u003eFnOpts-\u003eName-\u003ePTerm-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabDecls.html#v:elabPostulate"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eElaborate primitives\n\u003c/p\u003e",
          "module": "Idris.ElabDecls",
          "name": "elabPrims",
          "package": "idris",
          "signature": "Idris ()",
          "source": "src/Idris-ElabDecls.html#elabPrims",
          "type": "function"
        },
        "index": {
          "description": "Elaborate primitives",
          "hierarchy": "Idris ElabDecls",
          "module": "Idris.ElabDecls",
          "name": "elabPrims",
          "normalized": "Idris()",
          "package": "idris",
          "partial": "Prims",
          "signature": "Idris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabDecls.html#v:elabPrims"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eElaborate a type provider\n\u003c/p\u003e",
          "module": "Idris.ElabDecls",
          "name": "elabProvider",
          "package": "idris",
          "signature": "ElabInfo -\u003e SyntaxInfo -\u003e FC -\u003e Name -\u003e PTerm -\u003e PTerm -\u003e Idris ()",
          "source": "src/Idris-ElabDecls.html#elabProvider",
          "type": "function"
        },
        "index": {
          "description": "Elaborate type provider",
          "hierarchy": "Idris ElabDecls",
          "module": "Idris.ElabDecls",
          "name": "elabProvider",
          "normalized": "ElabInfo-\u003eSyntaxInfo-\u003eFC-\u003eName-\u003ePTerm-\u003ePTerm-\u003eIdris()",
          "package": "idris",
          "partial": "Provider",
          "signature": "ElabInfo-\u003eSyntaxInfo-\u003eFC-\u003eName-\u003ePTerm-\u003ePTerm-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabDecls.html#v:elabProvider"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabDecls",
          "name": "elabRecord",
          "package": "idris",
          "signature": "ElabInfo -\u003e SyntaxInfo -\u003e String -\u003e FC -\u003e Name -\u003e PTerm -\u003e String -\u003e Name -\u003e PTerm -\u003e Idris ()",
          "source": "src/Idris-ElabDecls.html#elabRecord",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabDecls",
          "module": "Idris.ElabDecls",
          "name": "elabRecord",
          "normalized": "ElabInfo-\u003eSyntaxInfo-\u003eString-\u003eFC-\u003eName-\u003ePTerm-\u003eString-\u003eName-\u003ePTerm-\u003eIdris()",
          "package": "idris",
          "partial": "Record",
          "signature": "ElabInfo-\u003eSyntaxInfo-\u003eString-\u003eFC-\u003eName-\u003ePTerm-\u003eString-\u003eName-\u003ePTerm-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabDecls.html#v:elabRecord"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eElaborate a type provider\n\u003c/p\u003e",
          "module": "Idris.ElabDecls",
          "name": "elabTransform",
          "package": "idris",
          "signature": "ElabInfo -\u003e FC -\u003e Bool -\u003e PTerm -\u003e PTerm -\u003e Idris ()",
          "source": "src/Idris-ElabDecls.html#elabTransform",
          "type": "function"
        },
        "index": {
          "description": "Elaborate type provider",
          "hierarchy": "Idris ElabDecls",
          "module": "Idris.ElabDecls",
          "name": "elabTransform",
          "normalized": "ElabInfo-\u003eFC-\u003eBool-\u003ePTerm-\u003ePTerm-\u003eIdris()",
          "package": "idris",
          "partial": "Transform",
          "signature": "ElabInfo-\u003eFC-\u003eBool-\u003ePTerm-\u003ePTerm-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabDecls.html#v:elabTransform"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eElaborate a top-level type declaration - for example, \u003ca\u003efoo : Int -\u003e Int\u003c/a\u003e.\n\u003c/p\u003e",
          "module": "Idris.ElabDecls",
          "name": "elabType",
          "package": "idris",
          "signature": "ElabInfo -\u003e SyntaxInfo -\u003e String -\u003e FC -\u003e FnOpts -\u003e Name -\u003e PTerm -\u003e Idris Type",
          "source": "src/Idris-ElabDecls.html#elabType",
          "type": "function"
        },
        "index": {
          "description": "Elaborate top-level type declaration for example foo Int Int",
          "hierarchy": "Idris ElabDecls",
          "module": "Idris.ElabDecls",
          "name": "elabType",
          "normalized": "ElabInfo-\u003eSyntaxInfo-\u003eString-\u003eFC-\u003eFnOpts-\u003eName-\u003ePTerm-\u003eIdris Type",
          "package": "idris",
          "partial": "Type",
          "signature": "ElabInfo-\u003eSyntaxInfo-\u003eString-\u003eFC-\u003eFnOpts-\u003eName-\u003ePTerm-\u003eIdris Type",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabDecls.html#v:elabType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabDecls",
          "name": "elabType'",
          "package": "idris",
          "signature": "Bool -\u003e ElabInfo -\u003e SyntaxInfo -\u003e String -\u003e FC -\u003e FnOpts -\u003e Name -\u003e PTerm -\u003e Idris Type",
          "source": "src/Idris-ElabDecls.html#elabType%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabDecls",
          "module": "Idris.ElabDecls",
          "name": "elabType'",
          "normalized": "Bool-\u003eElabInfo-\u003eSyntaxInfo-\u003eString-\u003eFC-\u003eFnOpts-\u003eName-\u003ePTerm-\u003eIdris Type",
          "package": "idris",
          "partial": "Type'",
          "signature": "Bool-\u003eElabInfo-\u003eSyntaxInfo-\u003eString-\u003eFC-\u003eFnOpts-\u003eName-\u003ePTerm-\u003eIdris Type",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabDecls.html#v:elabType-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabDecls",
          "name": "elabVal",
          "package": "idris",
          "signature": "ElabInfo -\u003e Bool -\u003e PTerm -\u003e Idris (Term, Type)",
          "source": "src/Idris-ElabDecls.html#elabVal",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabDecls",
          "module": "Idris.ElabDecls",
          "name": "elabVal",
          "normalized": "ElabInfo-\u003eBool-\u003ePTerm-\u003eIdris(Term,Type)",
          "package": "idris",
          "partial": "Val",
          "signature": "ElabInfo-\u003eBool-\u003ePTerm-\u003eIdris(Term,Type)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabDecls.html#v:elabVal"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabDecls",
          "name": "elabValBind",
          "package": "idris",
          "signature": "ElabInfo -\u003e Bool -\u003e PTerm -\u003e Idris (Term, Type, [(Name, Type)])",
          "source": "src/Idris-ElabDecls.html#elabValBind",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabDecls",
          "module": "Idris.ElabDecls",
          "name": "elabValBind",
          "normalized": "ElabInfo-\u003eBool-\u003ePTerm-\u003eIdris(Term,Type,[(Name,Type)])",
          "package": "idris",
          "partial": "Val Bind",
          "signature": "ElabInfo-\u003eBool-\u003ePTerm-\u003eIdris(Term,Type,[(Name,Type)])",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabDecls.html#v:elabValBind"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabDecls",
          "name": "getPBtys",
          "package": "idris",
          "signature": "TT t -\u003e [(t, TT t)]",
          "source": "src/Idris-ElabDecls.html#getPBtys",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabDecls",
          "module": "Idris.ElabDecls",
          "name": "getPBtys",
          "normalized": "TT a-\u003e[(a,TT a)]",
          "package": "idris",
          "partial": "PBtys",
          "signature": "TT t-\u003e[(t,TT t)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabDecls.html#v:getPBtys"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabDecls",
          "name": "inferredDiff",
          "package": "idris",
          "signature": "FC -\u003e PTerm -\u003e PTerm -\u003e Idris Bool",
          "source": "src/Idris-ElabDecls.html#inferredDiff",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabDecls",
          "module": "Idris.ElabDecls",
          "name": "inferredDiff",
          "normalized": "FC-\u003ePTerm-\u003ePTerm-\u003eIdris Bool",
          "package": "idris",
          "partial": "Diff",
          "signature": "FC-\u003ePTerm-\u003ePTerm-\u003eIdris Bool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabDecls.html#v:inferredDiff"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabDecls",
          "name": "pbinds",
          "package": "idris",
          "signature": "TT Name -\u003e StateT (ElabState aux) TC ()",
          "source": "src/Idris-ElabDecls.html#pbinds",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabDecls",
          "module": "Idris.ElabDecls",
          "name": "pbinds",
          "normalized": "TT Name-\u003eStateT(ElabState a)TC()",
          "package": "idris",
          "signature": "TT Name-\u003eStateT(ElabState aux)TC()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabDecls.html#v:pbinds"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabDecls",
          "name": "pbty",
          "package": "idris",
          "signature": "TT n -\u003e TT n -\u003e TT n",
          "source": "src/Idris-ElabDecls.html#pbty",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabDecls",
          "module": "Idris.ElabDecls",
          "name": "pbty",
          "normalized": "TT a-\u003eTT a-\u003eTT a",
          "package": "idris",
          "signature": "TT n-\u003eTT n-\u003eTT n",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabDecls.html#v:pbty"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabDecls",
          "name": "psolve",
          "package": "idris",
          "signature": "TT t -\u003e StateT (ElabState aux) TC ()",
          "source": "src/Idris-ElabDecls.html#psolve",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabDecls",
          "module": "Idris.ElabDecls",
          "name": "psolve",
          "normalized": "TT a-\u003eStateT(ElabState b)TC()",
          "package": "idris",
          "signature": "TT t-\u003eStateT(ElabState aux)TC()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabDecls.html#v:psolve"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabDecls",
          "name": "pvars",
          "package": "idris",
          "signature": "IState -\u003e TT Name -\u003e [(Name, PTerm)]",
          "source": "src/Idris-ElabDecls.html#pvars",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabDecls",
          "module": "Idris.ElabDecls",
          "name": "pvars",
          "normalized": "IState-\u003eTT Name-\u003e[(Name,PTerm)]",
          "package": "idris",
          "signature": "IState-\u003eTT Name-\u003e[(Name,PTerm)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabDecls.html#v:pvars"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabDecls",
          "name": "recheckC",
          "package": "idris",
          "signature": "FC -\u003e Env -\u003e TT Name -\u003e StateT IState (ErrorT Err IO) (Term, Type)",
          "source": "src/Idris-ElabDecls.html#recheckC",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabDecls",
          "module": "Idris.ElabDecls",
          "name": "recheckC",
          "normalized": "FC-\u003eEnv-\u003eTT Name-\u003eStateT IState(ErrorT Err IO)(Term,Type)",
          "package": "idris",
          "signature": "FC-\u003eEnv-\u003eTT Name-\u003eStateT IState(ErrorT Err IO)(Term,Type)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabDecls.html#v:recheckC"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabTerm",
          "name": "ElabTerm",
          "package": "idris",
          "source": "src/Idris-ElabTerm.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "Idris ElabTerm",
          "module": "Idris.ElabTerm",
          "name": "ElabTerm",
          "package": "idris",
          "partial": "Elab Term",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabTerm.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabTerm",
          "name": "ElabInfo",
          "package": "idris",
          "source": "src/Idris-ElabTerm.html#ElabInfo",
          "type": "data"
        },
        "index": {
          "hierarchy": "Idris ElabTerm",
          "module": "Idris.ElabTerm",
          "name": "ElabInfo",
          "package": "idris",
          "partial": "Elab Info",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabTerm.html#t:ElabInfo"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabTerm",
          "name": "EInfo",
          "package": "idris",
          "signature": "EInfo",
          "source": "src/Idris-ElabTerm.html#ElabInfo",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabTerm",
          "module": "Idris.ElabTerm",
          "name": "EInfo",
          "package": "idris",
          "partial": "EInfo",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabTerm.html#v:EInfo"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabTerm",
          "name": "build",
          "package": "idris",
          "signature": "IState -\u003e ElabInfo -\u003e Bool -\u003e FnOpts -\u003e Name -\u003e PTerm -\u003e ElabD (Term, [(Name, (Int, Maybe Name, Type))], [PDecl])",
          "source": "src/Idris-ElabTerm.html#build",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabTerm",
          "module": "Idris.ElabTerm",
          "name": "build",
          "normalized": "IState-\u003eElabInfo-\u003eBool-\u003eFnOpts-\u003eName-\u003ePTerm-\u003eElabD(Term,[(Name,(Int,Maybe Name,Type))],[PDecl])",
          "package": "idris",
          "signature": "IState-\u003eElabInfo-\u003eBool-\u003eFnOpts-\u003eName-\u003ePTerm-\u003eElabD(Term,[(Name,(Int,Maybe Name,Type))],[PDecl])",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabTerm.html#v:build"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabTerm",
          "name": "buildTC",
          "package": "idris",
          "signature": "IState -\u003e ElabInfo -\u003e Bool -\u003e FnOpts -\u003e Name -\u003e PTerm -\u003e ElabD (Term, [(Name, (Int, Maybe Name, Type))], [PDecl])",
          "source": "src/Idris-ElabTerm.html#buildTC",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabTerm",
          "module": "Idris.ElabTerm",
          "name": "buildTC",
          "normalized": "IState-\u003eElabInfo-\u003eBool-\u003eFnOpts-\u003eName-\u003ePTerm-\u003eElabD(Term,[(Name,(Int,Maybe Name,Type))],[PDecl])",
          "package": "idris",
          "partial": "TC",
          "signature": "IState-\u003eElabInfo-\u003eBool-\u003eFnOpts-\u003eName-\u003ePTerm-\u003eElabD(Term,[(Name,(Int,Maybe Name,Type))],[PDecl])",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabTerm.html#v:buildTC"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabTerm",
          "name": "collectDeferred",
          "package": "idris",
          "signature": "Maybe Name -\u003e Term -\u003e State [(Name, (Int, Maybe Name, Type))] Term",
          "source": "src/Idris-ElabTerm.html#collectDeferred",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabTerm",
          "module": "Idris.ElabTerm",
          "name": "collectDeferred",
          "normalized": "Maybe Name-\u003eTerm-\u003eState[(Name,(Int,Maybe Name,Type))]Term",
          "package": "idris",
          "partial": "Deferred",
          "signature": "Maybe Name-\u003eTerm-\u003eState[(Name,(Int,Maybe Name,Type))]Term",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabTerm.html#v:collectDeferred"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabTerm",
          "name": "elab",
          "package": "idris",
          "signature": "IState -\u003e ElabInfo -\u003e Bool -\u003e FnOpts -\u003e Name -\u003e PTerm -\u003e ElabD ()",
          "source": "src/Idris-ElabTerm.html#elab",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabTerm",
          "module": "Idris.ElabTerm",
          "name": "elab",
          "normalized": "IState-\u003eElabInfo-\u003eBool-\u003eFnOpts-\u003eName-\u003ePTerm-\u003eElabD()",
          "package": "idris",
          "signature": "IState-\u003eElabInfo-\u003eBool-\u003eFnOpts-\u003eName-\u003ePTerm-\u003eElabD()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabTerm.html#v:elab"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabTerm",
          "name": "envTupleType",
          "package": "idris",
          "signature": "Raw",
          "source": "src/Idris-ElabTerm.html#envTupleType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabTerm",
          "module": "Idris.ElabTerm",
          "name": "envTupleType",
          "package": "idris",
          "partial": "Tuple Type",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabTerm.html#v:envTupleType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabTerm",
          "name": "findInstances",
          "package": "idris",
          "signature": "IState -\u003e Term -\u003e [Name]",
          "source": "src/Idris-ElabTerm.html#findInstances",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabTerm",
          "module": "Idris.ElabTerm",
          "name": "findInstances",
          "normalized": "IState-\u003eTerm-\u003e[Name]",
          "package": "idris",
          "partial": "Instances",
          "signature": "IState-\u003eTerm-\u003e[Name]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabTerm.html#v:findInstances"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabTerm",
          "name": "fromTTMaybe",
          "package": "idris",
          "signature": "Term -\u003e Maybe Term",
          "source": "src/Idris-ElabTerm.html#fromTTMaybe",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabTerm",
          "module": "Idris.ElabTerm",
          "name": "fromTTMaybe",
          "normalized": "Term-\u003eMaybe Term",
          "package": "idris",
          "partial": "TTMaybe",
          "signature": "Term-\u003eMaybe Term",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabTerm.html#v:fromTTMaybe"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabTerm",
          "name": "inblock",
          "package": "idris",
          "signature": "Ctxt [Name]",
          "source": "src/Idris-ElabTerm.html#ElabInfo",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabTerm",
          "module": "Idris.ElabTerm",
          "name": "inblock",
          "normalized": "Ctxt[Name]",
          "package": "idris",
          "signature": "Ctxt[Name]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabTerm.html#v:inblock"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabTerm",
          "name": "liftname",
          "package": "idris",
          "signature": "Name -\u003e Name",
          "source": "src/Idris-ElabTerm.html#ElabInfo",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabTerm",
          "module": "Idris.ElabTerm",
          "name": "liftname",
          "normalized": "Name-\u003eName",
          "package": "idris",
          "signature": "Name-\u003eName",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabTerm.html#v:liftname"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabTerm",
          "name": "namespace",
          "package": "idris",
          "signature": "Maybe [String]",
          "source": "src/Idris-ElabTerm.html#ElabInfo",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabTerm",
          "module": "Idris.ElabTerm",
          "name": "namespace",
          "normalized": "Maybe[String]",
          "package": "idris",
          "signature": "Maybe[String]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabTerm.html#v:namespace"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabTerm",
          "name": "params",
          "package": "idris",
          "signature": "[(Name, PTerm)]",
          "source": "src/Idris-ElabTerm.html#ElabInfo",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabTerm",
          "module": "Idris.ElabTerm",
          "name": "params",
          "normalized": "[(Name,PTerm)]",
          "package": "idris",
          "signature": "[(Name,PTerm)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabTerm.html#v:params"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabTerm",
          "name": "proofSearch'",
          "package": "idris",
          "signature": "IState -\u003e Maybe Name -\u003e Name -\u003e [Name] -\u003e ElabD ()",
          "source": "src/Idris-ElabTerm.html#proofSearch%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabTerm",
          "module": "Idris.ElabTerm",
          "name": "proofSearch'",
          "normalized": "IState-\u003eMaybe Name-\u003eName-\u003e[Name]-\u003eElabD()",
          "package": "idris",
          "partial": "Search'",
          "signature": "IState-\u003eMaybe Name-\u003eName-\u003e[Name]-\u003eElabD()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabTerm.html#v:proofSearch-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabTerm",
          "name": "pruneAlt",
          "package": "idris",
          "signature": "[PTerm] -\u003e [PTerm]",
          "source": "src/Idris-ElabTerm.html#pruneAlt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabTerm",
          "module": "Idris.ElabTerm",
          "name": "pruneAlt",
          "normalized": "[PTerm]-\u003e[PTerm]",
          "package": "idris",
          "partial": "Alt",
          "signature": "[PTerm]-\u003e[PTerm]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabTerm.html#v:pruneAlt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabTerm",
          "name": "pruneByType",
          "package": "idris",
          "signature": "Term -\u003e Context -\u003e [PTerm] -\u003e [PTerm]",
          "source": "src/Idris-ElabTerm.html#pruneByType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabTerm",
          "module": "Idris.ElabTerm",
          "name": "pruneByType",
          "normalized": "Term-\u003eContext-\u003e[PTerm]-\u003e[PTerm]",
          "package": "idris",
          "partial": "By Type",
          "signature": "Term-\u003eContext-\u003e[PTerm]-\u003e[PTerm]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabTerm.html#v:pruneByType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eReflect an error into the internal datatype of Idris -- TODO\n\u003c/p\u003e",
          "module": "Idris.ElabTerm",
          "name": "rawBool",
          "package": "idris",
          "signature": "Bool -\u003e Raw",
          "source": "src/Idris-ElabTerm.html#rawBool",
          "type": "function"
        },
        "index": {
          "description": "Reflect an error into the internal datatype of Idris TODO",
          "hierarchy": "Idris ElabTerm",
          "module": "Idris.ElabTerm",
          "name": "rawBool",
          "normalized": "Bool-\u003eRaw",
          "package": "idris",
          "partial": "Bool",
          "signature": "Bool-\u003eRaw",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabTerm.html#v:rawBool"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabTerm",
          "name": "rawCons",
          "package": "idris",
          "signature": "Raw -\u003e Raw -\u003e Raw -\u003e Raw",
          "source": "src/Idris-ElabTerm.html#rawCons",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabTerm",
          "module": "Idris.ElabTerm",
          "name": "rawCons",
          "normalized": "Raw-\u003eRaw-\u003eRaw-\u003eRaw",
          "package": "idris",
          "partial": "Cons",
          "signature": "Raw-\u003eRaw-\u003eRaw-\u003eRaw",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabTerm.html#v:rawCons"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabTerm",
          "name": "rawList",
          "package": "idris",
          "signature": "Raw -\u003e [Raw] -\u003e Raw",
          "source": "src/Idris-ElabTerm.html#rawList",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabTerm",
          "module": "Idris.ElabTerm",
          "name": "rawList",
          "normalized": "Raw-\u003e[Raw]-\u003eRaw",
          "package": "idris",
          "partial": "List",
          "signature": "Raw-\u003e[Raw]-\u003eRaw",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabTerm.html#v:rawList"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabTerm",
          "name": "rawNil",
          "package": "idris",
          "signature": "Raw -\u003e Raw",
          "source": "src/Idris-ElabTerm.html#rawNil",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabTerm",
          "module": "Idris.ElabTerm",
          "name": "rawNil",
          "normalized": "Raw-\u003eRaw",
          "package": "idris",
          "partial": "Nil",
          "signature": "Raw-\u003eRaw",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabTerm.html#v:rawNil"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabTerm",
          "name": "rawPair",
          "package": "idris",
          "signature": "(Raw, Raw) -\u003e (Raw, Raw) -\u003e Raw",
          "source": "src/Idris-ElabTerm.html#rawPair",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabTerm",
          "module": "Idris.ElabTerm",
          "name": "rawPair",
          "normalized": "(Raw,Raw)-\u003e(Raw,Raw)-\u003eRaw",
          "package": "idris",
          "partial": "Pair",
          "signature": "(Raw,Raw)-\u003e(Raw,Raw)-\u003eRaw",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabTerm.html#v:rawPair"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabTerm",
          "name": "rawPairTy",
          "package": "idris",
          "signature": "Raw -\u003e Raw -\u003e Raw",
          "source": "src/Idris-ElabTerm.html#rawPairTy",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabTerm",
          "module": "Idris.ElabTerm",
          "name": "rawPairTy",
          "normalized": "Raw-\u003eRaw-\u003eRaw",
          "package": "idris",
          "partial": "Pair Ty",
          "signature": "Raw-\u003eRaw-\u003eRaw",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabTerm.html#v:rawPairTy"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eCreate a reflected call to a named function/constructor\n\u003c/p\u003e",
          "module": "Idris.ElabTerm",
          "name": "reflCall",
          "package": "idris",
          "signature": "String -\u003e [Raw] -\u003e Raw",
          "source": "src/Idris-ElabTerm.html#reflCall",
          "type": "function"
        },
        "index": {
          "description": "Create reflected call to named function constructor",
          "hierarchy": "Idris ElabTerm",
          "module": "Idris.ElabTerm",
          "name": "reflCall",
          "normalized": "String-\u003e[Raw]-\u003eRaw",
          "package": "idris",
          "partial": "Call",
          "signature": "String-\u003e[Raw]-\u003eRaw",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabTerm.html#v:reflCall"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabTerm",
          "name": "reflErrName",
          "package": "idris",
          "signature": "String -\u003e Name",
          "source": "src/Idris-ElabTerm.html#reflErrName",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabTerm",
          "module": "Idris.ElabTerm",
          "name": "reflErrName",
          "normalized": "String-\u003eName",
          "package": "idris",
          "partial": "Err Name",
          "signature": "String-\u003eName",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabTerm.html#v:reflErrName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eLift a term into its Language.Reflection.TT representation\n\u003c/p\u003e",
          "module": "Idris.ElabTerm",
          "name": "reflect",
          "package": "idris",
          "signature": "Term -\u003e Raw",
          "source": "src/Idris-ElabTerm.html#reflect",
          "type": "function"
        },
        "index": {
          "description": "Lift term into its Language.Reflection.TT representation",
          "hierarchy": "Idris ElabTerm",
          "module": "Idris.ElabTerm",
          "name": "reflect",
          "normalized": "Term-\u003eRaw",
          "package": "idris",
          "signature": "Term-\u003eRaw",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabTerm.html#v:reflect"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabTerm",
          "name": "reflectBinder",
          "package": "idris",
          "signature": "Binder Term -\u003e Raw",
          "source": "src/Idris-ElabTerm.html#reflectBinder",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabTerm",
          "module": "Idris.ElabTerm",
          "name": "reflectBinder",
          "normalized": "Binder Term-\u003eRaw",
          "package": "idris",
          "partial": "Binder",
          "signature": "Binder Term-\u003eRaw",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabTerm.html#v:reflectBinder"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabTerm",
          "name": "reflectConstant",
          "package": "idris",
          "signature": "Const -\u003e Raw",
          "source": "src/Idris-ElabTerm.html#reflectConstant",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabTerm",
          "module": "Idris.ElabTerm",
          "name": "reflectConstant",
          "normalized": "Const-\u003eRaw",
          "package": "idris",
          "partial": "Constant",
          "signature": "Const-\u003eRaw",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabTerm.html#v:reflectConstant"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabTerm",
          "name": "reflectCtxt",
          "package": "idris",
          "signature": "[(Name, Type)] -\u003e Raw",
          "source": "src/Idris-ElabTerm.html#reflectCtxt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabTerm",
          "module": "Idris.ElabTerm",
          "name": "reflectCtxt",
          "normalized": "[(Name,Type)]-\u003eRaw",
          "package": "idris",
          "partial": "Ctxt",
          "signature": "[(Name,Type)]-\u003eRaw",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabTerm.html#v:reflectCtxt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eReflect the environment of a proof into a List (TTName, Binder TT)\n\u003c/p\u003e",
          "module": "Idris.ElabTerm",
          "name": "reflectEnv",
          "package": "idris",
          "signature": "Env -\u003e Raw",
          "source": "src/Idris-ElabTerm.html#reflectEnv",
          "type": "function"
        },
        "index": {
          "description": "Reflect the environment of proof into List TTName Binder TT",
          "hierarchy": "Idris ElabTerm",
          "module": "Idris.ElabTerm",
          "name": "reflectEnv",
          "normalized": "Env-\u003eRaw",
          "package": "idris",
          "partial": "Env",
          "signature": "Env-\u003eRaw",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabTerm.html#v:reflectEnv"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabTerm",
          "name": "reflectErr",
          "package": "idris",
          "signature": "Err -\u003e Raw",
          "source": "src/Idris-ElabTerm.html#reflectErr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabTerm",
          "module": "Idris.ElabTerm",
          "name": "reflectErr",
          "normalized": "Err-\u003eRaw",
          "package": "idris",
          "partial": "Err",
          "signature": "Err-\u003eRaw",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabTerm.html#v:reflectErr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003ePerform error reflection for function applicaitons with specific error handlers\n\u003c/p\u003e",
          "module": "Idris.ElabTerm",
          "name": "reflectFunctionErrors",
          "package": "idris",
          "signature": "IState -\u003e Name -\u003e Name -\u003e ElabD a -\u003e ElabD a",
          "source": "src/Idris-ElabTerm.html#reflectFunctionErrors",
          "type": "function"
        },
        "index": {
          "description": "Perform error reflection for function applicaitons with specific error handlers",
          "hierarchy": "Idris ElabTerm",
          "module": "Idris.ElabTerm",
          "name": "reflectFunctionErrors",
          "normalized": "IState-\u003eName-\u003eName-\u003eElabD a-\u003eElabD a",
          "package": "idris",
          "partial": "Function Errors",
          "signature": "IState-\u003eName-\u003eName-\u003eElabD a-\u003eElabD a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabTerm.html#v:reflectFunctionErrors"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabTerm",
          "name": "reflectName",
          "package": "idris",
          "signature": "Name -\u003e Raw",
          "source": "src/Idris-ElabTerm.html#reflectName",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabTerm",
          "module": "Idris.ElabTerm",
          "name": "reflectName",
          "normalized": "Name-\u003eRaw",
          "package": "idris",
          "partial": "Name",
          "signature": "Name-\u003eRaw",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabTerm.html#v:reflectName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabTerm",
          "name": "reflectNameType",
          "package": "idris",
          "signature": "NameType -\u003e Raw",
          "source": "src/Idris-ElabTerm.html#reflectNameType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabTerm",
          "module": "Idris.ElabTerm",
          "name": "reflectNameType",
          "normalized": "NameType-\u003eRaw",
          "package": "idris",
          "partial": "Name Type",
          "signature": "NameType-\u003eRaw",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabTerm.html#v:reflectNameType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabTerm",
          "name": "reflectUExp",
          "package": "idris",
          "signature": "UExp -\u003e Raw",
          "source": "src/Idris-ElabTerm.html#reflectUExp",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabTerm",
          "module": "Idris.ElabTerm",
          "name": "reflectUExp",
          "normalized": "UExp-\u003eRaw",
          "package": "idris",
          "partial": "UExp",
          "signature": "UExp-\u003eRaw",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabTerm.html#v:reflectUExp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003ePrefix a name with the \u003ca\u003eLanguage.Reflection\u003c/a\u003e namespace\n\u003c/p\u003e",
          "module": "Idris.ElabTerm",
          "name": "reflm",
          "package": "idris",
          "signature": "String -\u003e Name",
          "source": "src/Idris-ElabTerm.html#reflm",
          "type": "function"
        },
        "index": {
          "description": "Prefix name with the Language.Reflection namespace",
          "hierarchy": "Idris ElabTerm",
          "module": "Idris.ElabTerm",
          "name": "reflm",
          "normalized": "String-\u003eName",
          "package": "idris",
          "signature": "String-\u003eName",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabTerm.html#v:reflm"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eReify tactics from their reflected representation\n\u003c/p\u003e",
          "module": "Idris.ElabTerm",
          "name": "reify",
          "package": "idris",
          "signature": "IState -\u003e Term -\u003e ElabD PTactic",
          "source": "src/Idris-ElabTerm.html#reify",
          "type": "function"
        },
        "index": {
          "description": "Reify tactics from their reflected representation",
          "hierarchy": "Idris ElabTerm",
          "module": "Idris.ElabTerm",
          "name": "reify",
          "normalized": "IState-\u003eTerm-\u003eElabD PTactic",
          "package": "idris",
          "signature": "IState-\u003eTerm-\u003eElabD PTactic",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabTerm.html#v:reify"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabTerm",
          "name": "reifyApp",
          "package": "idris",
          "signature": "IState -\u003e Name -\u003e [Term] -\u003e ElabD PTactic",
          "source": "src/Idris-ElabTerm.html#reifyApp",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabTerm",
          "module": "Idris.ElabTerm",
          "name": "reifyApp",
          "normalized": "IState-\u003eName-\u003e[Term]-\u003eElabD PTactic",
          "package": "idris",
          "partial": "App",
          "signature": "IState-\u003eName-\u003e[Term]-\u003eElabD PTactic",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabTerm.html#v:reifyApp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eReify raw terms from their reflected representation\n\u003c/p\u003e",
          "module": "Idris.ElabTerm",
          "name": "reifyRaw",
          "package": "idris",
          "signature": "Term -\u003e ElabD Raw",
          "source": "src/Idris-ElabTerm.html#reifyRaw",
          "type": "function"
        },
        "index": {
          "description": "Reify raw terms from their reflected representation",
          "hierarchy": "Idris ElabTerm",
          "module": "Idris.ElabTerm",
          "name": "reifyRaw",
          "normalized": "Term-\u003eElabD Raw",
          "package": "idris",
          "partial": "Raw",
          "signature": "Term-\u003eElabD Raw",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabTerm.html#v:reifyRaw"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabTerm",
          "name": "reifyRawApp",
          "package": "idris",
          "signature": "Name -\u003e [Term] -\u003e ElabD Raw",
          "source": "src/Idris-ElabTerm.html#reifyRawApp",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabTerm",
          "module": "Idris.ElabTerm",
          "name": "reifyRawApp",
          "normalized": "Name-\u003e[Term]-\u003eElabD Raw",
          "package": "idris",
          "partial": "Raw App",
          "signature": "Name-\u003e[Term]-\u003eElabD Raw",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabTerm.html#v:reifyRawApp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eAttempt to reify a report part from TT to the internal\n representation. Not in Idris or ElabD monads because it should be usable\n from either.\n\u003c/p\u003e",
          "module": "Idris.ElabTerm",
          "name": "reifyReportPart",
          "package": "idris",
          "signature": "Term -\u003e Either Err ErrorReportPart",
          "source": "src/Idris-ElabTerm.html#reifyReportPart",
          "type": "function"
        },
        "index": {
          "description": "Attempt to reify report part from TT to the internal representation Not in Idris or ElabD monads because it should be usable from either",
          "hierarchy": "Idris ElabTerm",
          "module": "Idris.ElabTerm",
          "name": "reifyReportPart",
          "normalized": "Term-\u003eEither Err ErrorReportPart",
          "package": "idris",
          "partial": "Report Part",
          "signature": "Term-\u003eEither Err ErrorReportPart",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabTerm.html#v:reifyReportPart"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eReify terms from their reflected representation\n\u003c/p\u003e",
          "module": "Idris.ElabTerm",
          "name": "reifyTT",
          "package": "idris",
          "signature": "Term -\u003e ElabD Term",
          "source": "src/Idris-ElabTerm.html#reifyTT",
          "type": "function"
        },
        "index": {
          "description": "Reify terms from their reflected representation",
          "hierarchy": "Idris ElabTerm",
          "module": "Idris.ElabTerm",
          "name": "reifyTT",
          "normalized": "Term-\u003eElabD Term",
          "package": "idris",
          "partial": "TT",
          "signature": "Term-\u003eElabD Term",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabTerm.html#v:reifyTT"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabTerm",
          "name": "reifyTTApp",
          "package": "idris",
          "signature": "Name -\u003e [Term] -\u003e ElabD Term",
          "source": "src/Idris-ElabTerm.html#reifyTTApp",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabTerm",
          "module": "Idris.ElabTerm",
          "name": "reifyTTApp",
          "normalized": "Name-\u003e[Term]-\u003eElabD Term",
          "package": "idris",
          "partial": "TTApp",
          "signature": "Name-\u003e[Term]-\u003eElabD Term",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabTerm.html#v:reifyTTApp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabTerm",
          "name": "reifyTTBinder",
          "package": "idris",
          "signature": "(Term -\u003e ElabD a) -\u003e Name -\u003e Term -\u003e ElabD (Binder a)",
          "source": "src/Idris-ElabTerm.html#reifyTTBinder",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabTerm",
          "module": "Idris.ElabTerm",
          "name": "reifyTTBinder",
          "normalized": "(Term-\u003eElabD a)-\u003eName-\u003eTerm-\u003eElabD(Binder a)",
          "package": "idris",
          "partial": "TTBinder",
          "signature": "(Term-\u003eElabD a)-\u003eName-\u003eTerm-\u003eElabD(Binder a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabTerm.html#v:reifyTTBinder"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabTerm",
          "name": "reifyTTBinderApp",
          "package": "idris",
          "signature": "(Term -\u003e ElabD a) -\u003e Name -\u003e [Term] -\u003e ElabD (Binder a)",
          "source": "src/Idris-ElabTerm.html#reifyTTBinderApp",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabTerm",
          "module": "Idris.ElabTerm",
          "name": "reifyTTBinderApp",
          "normalized": "(Term-\u003eElabD a)-\u003eName-\u003e[Term]-\u003eElabD(Binder a)",
          "package": "idris",
          "partial": "TTBinder App",
          "signature": "(Term-\u003eElabD a)-\u003eName-\u003e[Term]-\u003eElabD(Binder a)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabTerm.html#v:reifyTTBinderApp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabTerm",
          "name": "reifyTTConst",
          "package": "idris",
          "signature": "Term -\u003e ElabD Const",
          "source": "src/Idris-ElabTerm.html#reifyTTConst",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabTerm",
          "module": "Idris.ElabTerm",
          "name": "reifyTTConst",
          "normalized": "Term-\u003eElabD Const",
          "package": "idris",
          "partial": "TTConst",
          "signature": "Term-\u003eElabD Const",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabTerm.html#v:reifyTTConst"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabTerm",
          "name": "reifyTTConstApp",
          "package": "idris",
          "signature": "Name -\u003e Term -\u003e ElabD Const",
          "source": "src/Idris-ElabTerm.html#reifyTTConstApp",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabTerm",
          "module": "Idris.ElabTerm",
          "name": "reifyTTConstApp",
          "normalized": "Name-\u003eTerm-\u003eElabD Const",
          "package": "idris",
          "partial": "TTConst App",
          "signature": "Name-\u003eTerm-\u003eElabD Const",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabTerm.html#v:reifyTTConstApp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabTerm",
          "name": "reifyTTName",
          "package": "idris",
          "signature": "Term -\u003e ElabD Name",
          "source": "src/Idris-ElabTerm.html#reifyTTName",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabTerm",
          "module": "Idris.ElabTerm",
          "name": "reifyTTName",
          "normalized": "Term-\u003eElabD Name",
          "package": "idris",
          "partial": "TTName",
          "signature": "Term-\u003eElabD Name",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabTerm.html#v:reifyTTName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabTerm",
          "name": "reifyTTNameApp",
          "package": "idris",
          "signature": "Name -\u003e [Term] -\u003e ElabD Name",
          "source": "src/Idris-ElabTerm.html#reifyTTNameApp",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabTerm",
          "module": "Idris.ElabTerm",
          "name": "reifyTTNameApp",
          "normalized": "Name-\u003e[Term]-\u003eElabD Name",
          "package": "idris",
          "partial": "TTName App",
          "signature": "Name-\u003e[Term]-\u003eElabD Name",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabTerm.html#v:reifyTTNameApp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabTerm",
          "name": "reifyTTNameType",
          "package": "idris",
          "signature": "Term -\u003e ElabD NameType",
          "source": "src/Idris-ElabTerm.html#reifyTTNameType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabTerm",
          "module": "Idris.ElabTerm",
          "name": "reifyTTNameType",
          "normalized": "Term-\u003eElabD NameType",
          "package": "idris",
          "partial": "TTName Type",
          "signature": "Term-\u003eElabD NameType",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabTerm.html#v:reifyTTNameType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabTerm",
          "name": "reifyTTNamespace",
          "package": "idris",
          "signature": "Term -\u003e ElabD [String]",
          "source": "src/Idris-ElabTerm.html#reifyTTNamespace",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabTerm",
          "module": "Idris.ElabTerm",
          "name": "reifyTTNamespace",
          "normalized": "Term-\u003eElabD[String]",
          "package": "idris",
          "partial": "TTNamespace",
          "signature": "Term-\u003eElabD[String]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabTerm.html#v:reifyTTNamespace"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabTerm",
          "name": "reifyTTUExp",
          "package": "idris",
          "signature": "Term -\u003e ElabD UExp",
          "source": "src/Idris-ElabTerm.html#reifyTTUExp",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabTerm",
          "module": "Idris.ElabTerm",
          "name": "reifyTTUExp",
          "normalized": "Term-\u003eElabD UExp",
          "package": "idris",
          "partial": "TTUExp",
          "signature": "Term-\u003eElabD UExp",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabTerm.html#v:reifyTTUExp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabTerm",
          "name": "resolveTC",
          "package": "idris",
          "signature": "Int -\u003e Term -\u003e Name -\u003e IState -\u003e ElabD ()",
          "source": "src/Idris-ElabTerm.html#resolveTC",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabTerm",
          "module": "Idris.ElabTerm",
          "name": "resolveTC",
          "normalized": "Int-\u003eTerm-\u003eName-\u003eIState-\u003eElabD()",
          "package": "idris",
          "partial": "TC",
          "signature": "Int-\u003eTerm-\u003eName-\u003eIState-\u003eElabD()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabTerm.html#v:resolveTC"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabTerm",
          "name": "runTac",
          "package": "idris",
          "signature": "Bool -\u003e IState -\u003e PTactic -\u003e ElabD ()",
          "source": "src/Idris-ElabTerm.html#runTac",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabTerm",
          "module": "Idris.ElabTerm",
          "name": "runTac",
          "normalized": "Bool-\u003eIState-\u003ePTactic-\u003eElabD()",
          "package": "idris",
          "partial": "Tac",
          "signature": "Bool-\u003eIState-\u003ePTactic-\u003eElabD()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabTerm.html#v:runTac"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabTerm",
          "name": "solveAll",
          "package": "idris",
          "signature": "Elab' aux ()",
          "source": "src/Idris-ElabTerm.html#solveAll",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabTerm",
          "module": "Idris.ElabTerm",
          "name": "solveAll",
          "normalized": "Elab' a()",
          "package": "idris",
          "partial": "All",
          "signature": "Elab' aux()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabTerm.html#v:solveAll"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabTerm",
          "name": "toplevel",
          "package": "idris",
          "signature": "ElabInfo",
          "source": "src/Idris-ElabTerm.html#toplevel",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabTerm",
          "module": "Idris.ElabTerm",
          "name": "toplevel",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabTerm.html#v:toplevel"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabTerm",
          "name": "trivial'",
          "package": "idris",
          "signature": "IState -\u003e ElabD ()",
          "source": "src/Idris-ElabTerm.html#trivial%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabTerm",
          "module": "Idris.ElabTerm",
          "name": "trivial'",
          "normalized": "IState-\u003eElabD()",
          "package": "idris",
          "signature": "IState-\u003eElabD()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabTerm.html#v:trivial-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ElabTerm",
          "name": "withErrorReflection",
          "package": "idris",
          "signature": "Idris a -\u003e Idris a",
          "source": "src/Idris-ElabTerm.html#withErrorReflection",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ElabTerm",
          "module": "Idris.ElabTerm",
          "name": "withErrorReflection",
          "normalized": "Idris a-\u003eIdris a",
          "package": "idris",
          "partial": "Error Reflection",
          "signature": "Idris a-\u003eIdris a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ElabTerm.html#v:withErrorReflection"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ErrReverse",
          "name": "ErrReverse",
          "package": "idris",
          "source": "src/Idris-ErrReverse.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "Idris ErrReverse",
          "module": "Idris.ErrReverse",
          "name": "ErrReverse",
          "package": "idris",
          "partial": "Err Reverse",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ErrReverse.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ErrReverse",
          "name": "errReverse",
          "package": "idris",
          "signature": "IState -\u003e Term -\u003e Term",
          "source": "src/Idris-ErrReverse.html#errReverse",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ErrReverse",
          "module": "Idris.ErrReverse",
          "name": "errReverse",
          "normalized": "IState-\u003eTerm-\u003eTerm",
          "package": "idris",
          "partial": "Reverse",
          "signature": "IState-\u003eTerm-\u003eTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ErrReverse.html#v:errReverse"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Error",
          "name": "Error",
          "package": "idris",
          "source": "src/Idris-Error.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "Idris Error",
          "module": "Idris.Error",
          "name": "Error",
          "package": "idris",
          "partial": "Error",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Error.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Error",
          "name": "getErrColumn",
          "package": "idris",
          "signature": "Err -\u003e Int",
          "source": "src/Idris-Error.html#getErrColumn",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Error",
          "module": "Idris.Error",
          "name": "getErrColumn",
          "normalized": "Err-\u003eInt",
          "package": "idris",
          "partial": "Err Column",
          "signature": "Err-\u003eInt",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Error.html#v:getErrColumn"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Error",
          "name": "getErrLine",
          "package": "idris",
          "signature": "Err -\u003e Int",
          "source": "src/Idris-Error.html#getErrLine",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Error",
          "module": "Idris.Error",
          "name": "getErrLine",
          "normalized": "Err-\u003eInt",
          "package": "idris",
          "partial": "Err Line",
          "signature": "Err-\u003eInt",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Error.html#v:getErrLine"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Error",
          "name": "idrisCatch",
          "package": "idris",
          "signature": "Idris a -\u003e (Err -\u003e Idris a) -\u003e Idris a",
          "source": "src/Idris-Error.html#idrisCatch",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Error",
          "module": "Idris.Error",
          "name": "idrisCatch",
          "normalized": "Idris a-\u003e(Err-\u003eIdris a)-\u003eIdris a",
          "package": "idris",
          "partial": "Catch",
          "signature": "Idris a-\u003e(Err-\u003eIdris a)-\u003eIdris a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Error.html#v:idrisCatch"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Error",
          "name": "ierror",
          "package": "idris",
          "signature": "Err -\u003e Idris a",
          "source": "src/Idris-Error.html#ierror",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Error",
          "module": "Idris.Error",
          "name": "ierror",
          "normalized": "Err-\u003eIdris a",
          "package": "idris",
          "signature": "Err-\u003eIdris a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Error.html#v:ierror"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Error",
          "name": "ifail",
          "package": "idris",
          "signature": "String -\u003e Idris a",
          "source": "src/Idris-Error.html#ifail",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Error",
          "module": "Idris.Error",
          "name": "ifail",
          "normalized": "String-\u003eIdris a",
          "package": "idris",
          "signature": "String-\u003eIdris a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Error.html#v:ifail"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Error",
          "name": "iucheck",
          "package": "idris",
          "signature": "Idris ()",
          "source": "src/Idris-Error.html#iucheck",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Error",
          "module": "Idris.Error",
          "name": "iucheck",
          "normalized": "Idris()",
          "package": "idris",
          "signature": "Idris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Error.html#v:iucheck"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Error",
          "name": "report",
          "package": "idris",
          "signature": "IOError -\u003e String",
          "source": "src/Idris-Error.html#report",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Error",
          "module": "Idris.Error",
          "name": "report",
          "normalized": "IOError-\u003eString",
          "package": "idris",
          "signature": "IOError-\u003eString",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Error.html#v:report"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Error",
          "name": "setAndReport",
          "package": "idris",
          "signature": "Err -\u003e Idris ()",
          "source": "src/Idris-Error.html#setAndReport",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Error",
          "module": "Idris.Error",
          "name": "setAndReport",
          "normalized": "Err-\u003eIdris()",
          "package": "idris",
          "partial": "And Report",
          "signature": "Err-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Error.html#v:setAndReport"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Error",
          "name": "showErr",
          "package": "idris",
          "signature": "Err -\u003e Idris String",
          "source": "src/Idris-Error.html#showErr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Error",
          "module": "Idris.Error",
          "name": "showErr",
          "normalized": "Err-\u003eIdris String",
          "package": "idris",
          "partial": "Err",
          "signature": "Err-\u003eIdris String",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Error.html#v:showErr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Error",
          "name": "tclift",
          "package": "idris",
          "signature": "TC a -\u003e Idris a",
          "source": "src/Idris-Error.html#tclift",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Error",
          "module": "Idris.Error",
          "name": "tclift",
          "normalized": "TC a-\u003eIdris a",
          "package": "idris",
          "signature": "TC a-\u003eIdris a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Error.html#v:tclift"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Error",
          "name": "tctry",
          "package": "idris",
          "signature": "TC a -\u003e TC a -\u003e Idris a",
          "source": "src/Idris-Error.html#tctry",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Error",
          "module": "Idris.Error",
          "name": "tctry",
          "normalized": "TC a-\u003eTC a-\u003eIdris a",
          "package": "idris",
          "signature": "TC a-\u003eTC a-\u003eIdris a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Error.html#v:tctry"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Help",
          "name": "Help",
          "package": "idris",
          "source": "src/Idris-Help.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "Idris Help",
          "module": "Idris.Help",
          "name": "Help",
          "package": "idris",
          "partial": "Help",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Help.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Help",
          "name": "CmdArg",
          "package": "idris",
          "source": "src/Idris-Help.html#CmdArg",
          "type": "data"
        },
        "index": {
          "hierarchy": "Idris Help",
          "module": "Idris.Help",
          "name": "CmdArg",
          "package": "idris",
          "partial": "Cmd Arg",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Help.html#t:CmdArg"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eThe command is the colour-setting command\n\u003c/p\u003e",
          "module": "Idris.Help",
          "name": "ColourArg",
          "package": "idris",
          "signature": "ColourArg",
          "source": "src/Idris-Help.html#CmdArg",
          "type": "function"
        },
        "index": {
          "description": "The command is the colour-setting command",
          "hierarchy": "Idris Help",
          "module": "Idris.Help",
          "name": "ColourArg",
          "package": "idris",
          "partial": "Colour Arg",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Help.html#v:ColourArg"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eThe width of the console\n\u003c/p\u003e",
          "module": "Idris.Help",
          "name": "ConsoleWidthArg",
          "package": "idris",
          "signature": "ConsoleWidthArg",
          "source": "src/Idris-Help.html#CmdArg",
          "type": "function"
        },
        "index": {
          "description": "The width of the console",
          "hierarchy": "Idris Help",
          "module": "Idris.Help",
          "name": "ConsoleWidthArg",
          "package": "idris",
          "partial": "Console Width Arg",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Help.html#v:ConsoleWidthArg"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eThe command takes an expression\n\u003c/p\u003e",
          "module": "Idris.Help",
          "name": "ExprArg",
          "package": "idris",
          "signature": "ExprArg",
          "source": "src/Idris-Help.html#CmdArg",
          "type": "function"
        },
        "index": {
          "description": "The command takes an expression",
          "hierarchy": "Idris Help",
          "module": "Idris.Help",
          "name": "ExprArg",
          "package": "idris",
          "partial": "Expr Arg",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Help.html#v:ExprArg"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eThe command takes a file\n\u003c/p\u003e",
          "module": "Idris.Help",
          "name": "FileArg",
          "package": "idris",
          "signature": "FileArg",
          "source": "src/Idris-Help.html#CmdArg",
          "type": "function"
        },
        "index": {
          "description": "The command takes file",
          "hierarchy": "Idris Help",
          "module": "Idris.Help",
          "name": "FileArg",
          "package": "idris",
          "partial": "File Arg",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Help.html#v:FileArg"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eThe command takes a metavariable\n\u003c/p\u003e",
          "module": "Idris.Help",
          "name": "MetaVarArg",
          "package": "idris",
          "signature": "MetaVarArg",
          "source": "src/Idris-Help.html#CmdArg",
          "type": "function"
        },
        "index": {
          "description": "The command takes metavariable",
          "hierarchy": "Idris Help",
          "module": "Idris.Help",
          "name": "MetaVarArg",
          "package": "idris",
          "partial": "Meta Var Arg",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Help.html#v:MetaVarArg"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eThe command takes a module name\n\u003c/p\u003e",
          "module": "Idris.Help",
          "name": "ModuleArg",
          "package": "idris",
          "signature": "ModuleArg",
          "source": "src/Idris-Help.html#CmdArg",
          "type": "function"
        },
        "index": {
          "description": "The command takes module name",
          "hierarchy": "Idris Help",
          "module": "Idris.Help",
          "name": "ModuleArg",
          "package": "idris",
          "partial": "Module Arg",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Help.html#v:ModuleArg"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eThe command takes a name\n\u003c/p\u003e",
          "module": "Idris.Help",
          "name": "NameArg",
          "package": "idris",
          "signature": "NameArg",
          "source": "src/Idris-Help.html#CmdArg",
          "type": "function"
        },
        "index": {
          "description": "The command takes name",
          "hierarchy": "Idris Help",
          "module": "Idris.Help",
          "name": "NameArg",
          "package": "idris",
          "partial": "Name Arg",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Help.html#v:NameArg"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eNo completion (yet!?)\n\u003c/p\u003e",
          "module": "Idris.Help",
          "name": "NoArg",
          "package": "idris",
          "signature": "NoArg",
          "source": "src/Idris-Help.html#CmdArg",
          "type": "function"
        },
        "index": {
          "description": "No completion yet",
          "hierarchy": "Idris Help",
          "module": "Idris.Help",
          "name": "NoArg",
          "package": "idris",
          "partial": "No Arg",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Help.html#v:NoArg"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eThe command takes an option\n\u003c/p\u003e",
          "module": "Idris.Help",
          "name": "OptionArg",
          "package": "idris",
          "signature": "OptionArg",
          "source": "src/Idris-Help.html#CmdArg",
          "type": "function"
        },
        "index": {
          "description": "The command takes an option",
          "hierarchy": "Idris Help",
          "module": "Idris.Help",
          "name": "OptionArg",
          "package": "idris",
          "partial": "Option Arg",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Help.html#v:OptionArg"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003edo not use\n\u003c/p\u003e",
          "module": "Idris.Help",
          "name": "SpecialHeaderArg",
          "package": "idris",
          "signature": "SpecialHeaderArg",
          "source": "src/Idris-Help.html#CmdArg",
          "type": "function"
        },
        "index": {
          "description": "do not use",
          "hierarchy": "Idris Help",
          "module": "Idris.Help",
          "name": "SpecialHeaderArg",
          "package": "idris",
          "partial": "Special Header Arg",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Help.html#v:SpecialHeaderArg"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eUse these for completion, but don't show them in :help\n\u003c/p\u003e",
          "module": "Idris.Help",
          "name": "extraHelp",
          "package": "idris",
          "signature": "[([String], CmdArg, String)]",
          "source": "src/Idris-Help.html#extraHelp",
          "type": "function"
        },
        "index": {
          "description": "Use these for completion but don show them in help",
          "hierarchy": "Idris Help",
          "module": "Idris.Help",
          "name": "extraHelp",
          "normalized": "[([String],CmdArg,String)]",
          "package": "idris",
          "partial": "Help",
          "signature": "[([String],CmdArg,String)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Help.html#v:extraHelp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Help",
          "name": "help",
          "package": "idris",
          "signature": "[([String], CmdArg, String)]",
          "source": "src/Idris-Help.html#help",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Help",
          "module": "Idris.Help",
          "name": "help",
          "normalized": "[([String],CmdArg,String)]",
          "package": "idris",
          "signature": "[([String],CmdArg,String)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Help.html#v:help"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "IBC",
          "package": "idris",
          "source": "src/Idris-IBC.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "IBC",
          "package": "idris",
          "partial": "IBC",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "IBCFile",
          "package": "idris",
          "source": "src/Idris-IBC.html#IBCFile",
          "type": "data"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "IBCFile",
          "package": "idris",
          "partial": "IBCFile",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#t:IBCFile"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "IBCFile",
          "package": "idris",
          "signature": "IBCFile",
          "source": "src/Idris-IBC.html#IBCFile",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "IBCFile",
          "package": "idris",
          "partial": "IBCFile",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:IBCFile"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "bdecode",
          "package": "idris",
          "signature": "FilePath -\u003e IO b",
          "source": "src/Idris-IBC.html#bdecode",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "bdecode",
          "normalized": "FilePath-\u003eIO a",
          "package": "idris",
          "signature": "FilePath-\u003eIO b",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:bdecode"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "bencode",
          "package": "idris",
          "signature": "FilePath -\u003e a -\u003e IO ()",
          "source": "src/Idris-IBC.html#bencode",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "bencode",
          "normalized": "FilePath-\u003ea-\u003eIO()",
          "package": "idris",
          "signature": "FilePath-\u003ea-\u003eIO()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:bencode"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "ibc",
          "package": "idris",
          "signature": "IState -\u003e IBCWrite -\u003e IBCFile -\u003e Idris IBCFile",
          "source": "src/Idris-IBC.html#ibc",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "ibc",
          "normalized": "IState-\u003eIBCWrite-\u003eIBCFile-\u003eIdris IBCFile",
          "package": "idris",
          "signature": "IState-\u003eIBCWrite-\u003eIBCFile-\u003eIdris IBCFile",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:ibc"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "ibcVersion",
          "package": "idris",
          "signature": "Word8",
          "source": "src/Idris-IBC.html#ibcVersion",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "ibcVersion",
          "package": "idris",
          "partial": "Version",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:ibcVersion"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "ibc_access",
          "package": "idris",
          "signature": "[(Name, Accessibility)]",
          "source": "src/Idris-IBC.html#IBCFile",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "ibc_access",
          "normalized": "[(Name,Accessibility)]",
          "package": "idris",
          "signature": "[(Name,Accessibility)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:ibc_access"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "ibc_cg",
          "package": "idris",
          "signature": "[(Name, CGInfo)]",
          "source": "src/Idris-IBC.html#IBCFile",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "ibc_cg",
          "normalized": "[(Name,CGInfo)]",
          "package": "idris",
          "signature": "[(Name,CGInfo)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:ibc_cg"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "ibc_cgflags",
          "package": "idris",
          "signature": "[(Codegen, String)]",
          "source": "src/Idris-IBC.html#IBCFile",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "ibc_cgflags",
          "normalized": "[(Codegen,String)]",
          "package": "idris",
          "signature": "[(Codegen,String)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:ibc_cgflags"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "ibc_classes",
          "package": "idris",
          "signature": "[(Name, ClassInfo)]",
          "source": "src/Idris-IBC.html#IBCFile",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "ibc_classes",
          "normalized": "[(Name,ClassInfo)]",
          "package": "idris",
          "signature": "[(Name,ClassInfo)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:ibc_classes"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "ibc_coercions",
          "package": "idris",
          "signature": "[Name]",
          "source": "src/Idris-IBC.html#IBCFile",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "ibc_coercions",
          "normalized": "[Name]",
          "package": "idris",
          "signature": "[Name]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:ibc_coercions"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "ibc_datatypes",
          "package": "idris",
          "signature": "[(Name, TypeInfo)]",
          "source": "src/Idris-IBC.html#IBCFile",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "ibc_datatypes",
          "normalized": "[(Name,TypeInfo)]",
          "package": "idris",
          "signature": "[(Name,TypeInfo)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:ibc_datatypes"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "ibc_defs",
          "package": "idris",
          "signature": "[(Name, Def)]",
          "source": "src/Idris-IBC.html#IBCFile",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "ibc_defs",
          "normalized": "[(Name,Def)]",
          "package": "idris",
          "signature": "[(Name,Def)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:ibc_defs"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "ibc_docstrings",
          "package": "idris",
          "signature": "[(Name, String)]",
          "source": "src/Idris-IBC.html#IBCFile",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "ibc_docstrings",
          "normalized": "[(Name,String)]",
          "package": "idris",
          "signature": "[(Name,String)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:ibc_docstrings"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "ibc_dsls",
          "package": "idris",
          "signature": "[(Name, DSL)]",
          "source": "src/Idris-IBC.html#IBCFile",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "ibc_dsls",
          "normalized": "[(Name,DSL)]",
          "package": "idris",
          "signature": "[(Name,DSL)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:ibc_dsls"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "ibc_dynamic_libs",
          "package": "idris",
          "signature": "[String]",
          "source": "src/Idris-IBC.html#IBCFile",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "ibc_dynamic_libs",
          "normalized": "[String]",
          "package": "idris",
          "signature": "[String]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:ibc_dynamic_libs"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "ibc_errRev",
          "package": "idris",
          "signature": "[(Term, Term)]",
          "source": "src/Idris-IBC.html#IBCFile",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "ibc_errRev",
          "normalized": "[(Term,Term)]",
          "package": "idris",
          "partial": "Rev",
          "signature": "[(Term,Term)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:ibc_errRev"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "ibc_errorhandlers",
          "package": "idris",
          "signature": "[Name]",
          "source": "src/Idris-IBC.html#IBCFile",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "ibc_errorhandlers",
          "normalized": "[Name]",
          "package": "idris",
          "signature": "[Name]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:ibc_errorhandlers"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "ibc_fixes",
          "package": "idris",
          "signature": "[FixDecl]",
          "source": "src/Idris-IBC.html#IBCFile",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "ibc_fixes",
          "normalized": "[FixDecl]",
          "package": "idris",
          "signature": "[FixDecl]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:ibc_fixes"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "ibc_flags",
          "package": "idris",
          "signature": "[(Name, [FnOpt])]",
          "source": "src/Idris-IBC.html#IBCFile",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "ibc_flags",
          "normalized": "[(Name,[FnOpt])]",
          "package": "idris",
          "signature": "[(Name,[FnOpt])]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:ibc_flags"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "ibc_function_errorhandlers",
          "package": "idris",
          "signature": "[(Name, Name, Name)]",
          "source": "src/Idris-IBC.html#IBCFile",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "ibc_function_errorhandlers",
          "normalized": "[(Name,Name,Name)]",
          "package": "idris",
          "signature": "[(Name,Name,Name)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:ibc_function_errorhandlers"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "ibc_hdrs",
          "package": "idris",
          "signature": "[(Codegen, String)]",
          "source": "src/Idris-IBC.html#IBCFile",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "ibc_hdrs",
          "normalized": "[(Codegen,String)]",
          "package": "idris",
          "signature": "[(Codegen,String)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:ibc_hdrs"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "ibc_implicits",
          "package": "idris",
          "signature": "[(Name, [PArg])]",
          "source": "src/Idris-IBC.html#IBCFile",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "ibc_implicits",
          "normalized": "[(Name,[PArg])]",
          "package": "idris",
          "signature": "[(Name,[PArg])]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:ibc_implicits"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "ibc_imports",
          "package": "idris",
          "signature": "[FilePath]",
          "source": "src/Idris-IBC.html#IBCFile",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "ibc_imports",
          "normalized": "[FilePath]",
          "package": "idris",
          "signature": "[FilePath]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:ibc_imports"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "ibc_instances",
          "package": "idris",
          "signature": "[(Bool, Name, Name)]",
          "source": "src/Idris-IBC.html#IBCFile",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "ibc_instances",
          "normalized": "[(Bool,Name,Name)]",
          "package": "idris",
          "signature": "[(Bool,Name,Name)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:ibc_instances"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "ibc_keywords",
          "package": "idris",
          "signature": "[String]",
          "source": "src/Idris-IBC.html#IBCFile",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "ibc_keywords",
          "normalized": "[String]",
          "package": "idris",
          "signature": "[String]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:ibc_keywords"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "ibc_libs",
          "package": "idris",
          "signature": "[(Codegen, String)]",
          "source": "src/Idris-IBC.html#IBCFile",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "ibc_libs",
          "normalized": "[(Codegen,String)]",
          "package": "idris",
          "signature": "[(Codegen,String)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:ibc_libs"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "ibc_lineapps",
          "package": "idris",
          "signature": "[(FilePath, Int, PTerm)]",
          "source": "src/Idris-IBC.html#IBCFile",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "ibc_lineapps",
          "normalized": "[(FilePath,Int,PTerm)]",
          "package": "idris",
          "signature": "[(FilePath,Int,PTerm)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:ibc_lineapps"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "ibc_metainformation",
          "package": "idris",
          "signature": "[(Name, MetaInformation)]",
          "source": "src/Idris-IBC.html#IBCFile",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "ibc_metainformation",
          "normalized": "[(Name,MetaInformation)]",
          "package": "idris",
          "signature": "[(Name,MetaInformation)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:ibc_metainformation"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "ibc_namehints",
          "package": "idris",
          "signature": "[(Name, Name)]",
          "source": "src/Idris-IBC.html#IBCFile",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "ibc_namehints",
          "normalized": "[(Name,Name)]",
          "package": "idris",
          "signature": "[(Name,Name)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:ibc_namehints"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "ibc_objs",
          "package": "idris",
          "signature": "[(Codegen, FilePath)]",
          "source": "src/Idris-IBC.html#IBCFile",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "ibc_objs",
          "normalized": "[(Codegen,FilePath)]",
          "package": "idris",
          "signature": "[(Codegen,FilePath)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:ibc_objs"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "ibc_optimise",
          "package": "idris",
          "signature": "[(Name, OptInfo)]",
          "source": "src/Idris-IBC.html#IBCFile",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "ibc_optimise",
          "normalized": "[(Name,OptInfo)]",
          "package": "idris",
          "signature": "[(Name,OptInfo)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:ibc_optimise"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "ibc_statics",
          "package": "idris",
          "signature": "[(Name, [Bool])]",
          "source": "src/Idris-IBC.html#IBCFile",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "ibc_statics",
          "normalized": "[(Name,[Bool])]",
          "package": "idris",
          "signature": "[(Name,[Bool])]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:ibc_statics"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "ibc_syntax",
          "package": "idris",
          "signature": "[Syntax]",
          "source": "src/Idris-IBC.html#IBCFile",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "ibc_syntax",
          "normalized": "[Syntax]",
          "package": "idris",
          "signature": "[Syntax]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:ibc_syntax"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "ibc_total",
          "package": "idris",
          "signature": "[(Name, Totality)]",
          "source": "src/Idris-IBC.html#IBCFile",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "ibc_total",
          "normalized": "[(Name,Totality)]",
          "package": "idris",
          "signature": "[(Name,Totality)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:ibc_total"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "ibc_transforms",
          "package": "idris",
          "signature": "[(Term, Term)]",
          "source": "src/Idris-IBC.html#IBCFile",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "ibc_transforms",
          "normalized": "[(Term,Term)]",
          "package": "idris",
          "signature": "[(Term,Term)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:ibc_transforms"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "initIBC",
          "package": "idris",
          "signature": "IBCFile",
          "source": "src/Idris-IBC.html#initIBC",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "initIBC",
          "package": "idris",
          "partial": "IBC",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:initIBC"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "loadIBC",
          "package": "idris",
          "signature": "FilePath -\u003e Idris ()",
          "source": "src/Idris-IBC.html#loadIBC",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "loadIBC",
          "normalized": "FilePath-\u003eIdris()",
          "package": "idris",
          "partial": "IBC",
          "signature": "FilePath-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:loadIBC"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "mkIBC",
          "package": "idris",
          "signature": "[IBCWrite] -\u003e IBCFile -\u003e Idris IBCFile",
          "source": "src/Idris-IBC.html#mkIBC",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "mkIBC",
          "normalized": "[IBCWrite]-\u003eIBCFile-\u003eIdris IBCFile",
          "package": "idris",
          "partial": "IBC",
          "signature": "[IBCWrite]-\u003eIBCFile-\u003eIdris IBCFile",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:mkIBC"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "pAccess",
          "package": "idris",
          "signature": "[(Name, Accessibility)] -\u003e Idris ()",
          "source": "src/Idris-IBC.html#pAccess",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "pAccess",
          "normalized": "[(Name,Accessibility)]-\u003eIdris()",
          "package": "idris",
          "partial": "Access",
          "signature": "[(Name,Accessibility)]-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:pAccess"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "pCG",
          "package": "idris",
          "signature": "[(Name, CGInfo)] -\u003e Idris ()",
          "source": "src/Idris-IBC.html#pCG",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "pCG",
          "normalized": "[(Name,CGInfo)]-\u003eIdris()",
          "package": "idris",
          "partial": "CG",
          "signature": "[(Name,CGInfo)]-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:pCG"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "pCGFlags",
          "package": "idris",
          "signature": "[(Codegen, String)] -\u003e Idris ()",
          "source": "src/Idris-IBC.html#pCGFlags",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "pCGFlags",
          "normalized": "[(Codegen,String)]-\u003eIdris()",
          "package": "idris",
          "partial": "CGFlags",
          "signature": "[(Codegen,String)]-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:pCGFlags"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "pClasses",
          "package": "idris",
          "signature": "[(Name, ClassInfo)] -\u003e Idris ()",
          "source": "src/Idris-IBC.html#pClasses",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "pClasses",
          "normalized": "[(Name,ClassInfo)]-\u003eIdris()",
          "package": "idris",
          "partial": "Classes",
          "signature": "[(Name,ClassInfo)]-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:pClasses"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "pCoercions",
          "package": "idris",
          "signature": "[Name] -\u003e Idris ()",
          "source": "src/Idris-IBC.html#pCoercions",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "pCoercions",
          "normalized": "[Name]-\u003eIdris()",
          "package": "idris",
          "partial": "Coercions",
          "signature": "[Name]-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:pCoercions"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "pDSLs",
          "package": "idris",
          "signature": "[(Name, DSL)] -\u003e Idris ()",
          "source": "src/Idris-IBC.html#pDSLs",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "pDSLs",
          "normalized": "[(Name,DSL)]-\u003eIdris()",
          "package": "idris",
          "partial": "DSLs",
          "signature": "[(Name,DSL)]-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:pDSLs"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "pDatatypes",
          "package": "idris",
          "signature": "[(Name, TypeInfo)] -\u003e Idris ()",
          "source": "src/Idris-IBC.html#pDatatypes",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "pDatatypes",
          "normalized": "[(Name,TypeInfo)]-\u003eIdris()",
          "package": "idris",
          "partial": "Datatypes",
          "signature": "[(Name,TypeInfo)]-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:pDatatypes"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "pDefs",
          "package": "idris",
          "signature": "[Name] -\u003e [(Name, Def)] -\u003e Idris ()",
          "source": "src/Idris-IBC.html#pDefs",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "pDefs",
          "normalized": "[Name]-\u003e[(Name,Def)]-\u003eIdris()",
          "package": "idris",
          "partial": "Defs",
          "signature": "[Name]-\u003e[(Name,Def)]-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:pDefs"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "pDocs",
          "package": "idris",
          "signature": "[(Name, String)] -\u003e Idris ()",
          "source": "src/Idris-IBC.html#pDocs",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "pDocs",
          "normalized": "[(Name,String)]-\u003eIdris()",
          "package": "idris",
          "partial": "Docs",
          "signature": "[(Name,String)]-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:pDocs"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "pDyLibs",
          "package": "idris",
          "signature": "[String] -\u003e Idris ()",
          "source": "src/Idris-IBC.html#pDyLibs",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "pDyLibs",
          "normalized": "[String]-\u003eIdris()",
          "package": "idris",
          "partial": "Dy Libs",
          "signature": "[String]-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:pDyLibs"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "pErrRev",
          "package": "idris",
          "signature": "[(Term, Term)] -\u003e Idris ()",
          "source": "src/Idris-IBC.html#pErrRev",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "pErrRev",
          "normalized": "[(Term,Term)]-\u003eIdris()",
          "package": "idris",
          "partial": "Err Rev",
          "signature": "[(Term,Term)]-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:pErrRev"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "pErrorHandlers",
          "package": "idris",
          "signature": "[Name] -\u003e Idris ()",
          "source": "src/Idris-IBC.html#pErrorHandlers",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "pErrorHandlers",
          "normalized": "[Name]-\u003eIdris()",
          "package": "idris",
          "partial": "Error Handlers",
          "signature": "[Name]-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:pErrorHandlers"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "pFixes",
          "package": "idris",
          "signature": "[FixDecl] -\u003e Idris ()",
          "source": "src/Idris-IBC.html#pFixes",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "pFixes",
          "normalized": "[FixDecl]-\u003eIdris()",
          "package": "idris",
          "partial": "Fixes",
          "signature": "[FixDecl]-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:pFixes"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "pFlags",
          "package": "idris",
          "signature": "[(Name, [FnOpt])] -\u003e Idris ()",
          "source": "src/Idris-IBC.html#pFlags",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "pFlags",
          "normalized": "[(Name,[FnOpt])]-\u003eIdris()",
          "package": "idris",
          "partial": "Flags",
          "signature": "[(Name,[FnOpt])]-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:pFlags"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "pFunctionErrorHandlers",
          "package": "idris",
          "signature": "[(Name, Name, Name)] -\u003e Idris ()",
          "source": "src/Idris-IBC.html#pFunctionErrorHandlers",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "pFunctionErrorHandlers",
          "normalized": "[(Name,Name,Name)]-\u003eIdris()",
          "package": "idris",
          "partial": "Function Error Handlers",
          "signature": "[(Name,Name,Name)]-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:pFunctionErrorHandlers"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "pHdrs",
          "package": "idris",
          "signature": "[(Codegen, String)] -\u003e Idris ()",
          "source": "src/Idris-IBC.html#pHdrs",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "pHdrs",
          "normalized": "[(Codegen,String)]-\u003eIdris()",
          "package": "idris",
          "partial": "Hdrs",
          "signature": "[(Codegen,String)]-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:pHdrs"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "pImports",
          "package": "idris",
          "signature": "[FilePath] -\u003e Idris ()",
          "source": "src/Idris-IBC.html#pImports",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "pImports",
          "normalized": "[FilePath]-\u003eIdris()",
          "package": "idris",
          "partial": "Imports",
          "signature": "[FilePath]-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:pImports"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "pImps",
          "package": "idris",
          "signature": "[(Name, [PArg])] -\u003e Idris ()",
          "source": "src/Idris-IBC.html#pImps",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "pImps",
          "normalized": "[(Name,[PArg])]-\u003eIdris()",
          "package": "idris",
          "partial": "Imps",
          "signature": "[(Name,[PArg])]-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:pImps"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "pInstances",
          "package": "idris",
          "signature": "[(Bool, Name, Name)] -\u003e Idris ()",
          "source": "src/Idris-IBC.html#pInstances",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "pInstances",
          "normalized": "[(Bool,Name,Name)]-\u003eIdris()",
          "package": "idris",
          "partial": "Instances",
          "signature": "[(Bool,Name,Name)]-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:pInstances"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "pKeywords",
          "package": "idris",
          "signature": "[String] -\u003e Idris ()",
          "source": "src/Idris-IBC.html#pKeywords",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "pKeywords",
          "normalized": "[String]-\u003eIdris()",
          "package": "idris",
          "partial": "Keywords",
          "signature": "[String]-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:pKeywords"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "pLibs",
          "package": "idris",
          "signature": "[(Codegen, String)] -\u003e Idris ()",
          "source": "src/Idris-IBC.html#pLibs",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "pLibs",
          "normalized": "[(Codegen,String)]-\u003eIdris()",
          "package": "idris",
          "partial": "Libs",
          "signature": "[(Codegen,String)]-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:pLibs"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "pLineApps",
          "package": "idris",
          "signature": "[(FilePath, Int, PTerm)] -\u003e Idris ()",
          "source": "src/Idris-IBC.html#pLineApps",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "pLineApps",
          "normalized": "[(FilePath,Int,PTerm)]-\u003eIdris()",
          "package": "idris",
          "partial": "Line Apps",
          "signature": "[(FilePath,Int,PTerm)]-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:pLineApps"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "pMetaInformation",
          "package": "idris",
          "signature": "[(Name, MetaInformation)] -\u003e Idris ()",
          "source": "src/Idris-IBC.html#pMetaInformation",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "pMetaInformation",
          "normalized": "[(Name,MetaInformation)]-\u003eIdris()",
          "package": "idris",
          "partial": "Meta Information",
          "signature": "[(Name,MetaInformation)]-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:pMetaInformation"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "pNameHints",
          "package": "idris",
          "signature": "[(Name, Name)] -\u003e Idris ()",
          "source": "src/Idris-IBC.html#pNameHints",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "pNameHints",
          "normalized": "[(Name,Name)]-\u003eIdris()",
          "package": "idris",
          "partial": "Name Hints",
          "signature": "[(Name,Name)]-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:pNameHints"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "pObjs",
          "package": "idris",
          "signature": "[(Codegen, FilePath)] -\u003e Idris ()",
          "source": "src/Idris-IBC.html#pObjs",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "pObjs",
          "normalized": "[(Codegen,FilePath)]-\u003eIdris()",
          "package": "idris",
          "partial": "Objs",
          "signature": "[(Codegen,FilePath)]-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:pObjs"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "pOptimise",
          "package": "idris",
          "signature": "[(Name, OptInfo)] -\u003e Idris ()",
          "source": "src/Idris-IBC.html#pOptimise",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "pOptimise",
          "normalized": "[(Name,OptInfo)]-\u003eIdris()",
          "package": "idris",
          "partial": "Optimise",
          "signature": "[(Name,OptInfo)]-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:pOptimise"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "pStatics",
          "package": "idris",
          "signature": "[(Name, [Bool])] -\u003e Idris ()",
          "source": "src/Idris-IBC.html#pStatics",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "pStatics",
          "normalized": "[(Name,[Bool])]-\u003eIdris()",
          "package": "idris",
          "partial": "Statics",
          "signature": "[(Name,[Bool])]-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:pStatics"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "pSyntax",
          "package": "idris",
          "signature": "[Syntax] -\u003e Idris ()",
          "source": "src/Idris-IBC.html#pSyntax",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "pSyntax",
          "normalized": "[Syntax]-\u003eIdris()",
          "package": "idris",
          "partial": "Syntax",
          "signature": "[Syntax]-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:pSyntax"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "pTotal",
          "package": "idris",
          "signature": "[(Name, Totality)] -\u003e Idris ()",
          "source": "src/Idris-IBC.html#pTotal",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "pTotal",
          "normalized": "[(Name,Totality)]-\u003eIdris()",
          "package": "idris",
          "partial": "Total",
          "signature": "[(Name,Totality)]-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:pTotal"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "pTrans",
          "package": "idris",
          "signature": "[(Term, Term)] -\u003e Idris ()",
          "source": "src/Idris-IBC.html#pTrans",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "pTrans",
          "normalized": "[(Term,Term)]-\u003eIdris()",
          "package": "idris",
          "partial": "Trans",
          "signature": "[(Term,Term)]-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:pTrans"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "process",
          "package": "idris",
          "signature": "IBCFile -\u003e FilePath -\u003e Idris ()",
          "source": "src/Idris-IBC.html#process",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "process",
          "normalized": "IBCFile-\u003eFilePath-\u003eIdris()",
          "package": "idris",
          "signature": "IBCFile-\u003eFilePath-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:process"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "safeToEnum",
          "package": "idris",
          "signature": "String -\u003e int -\u003e a",
          "source": "src/Idris-IBC.html#safeToEnum",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "safeToEnum",
          "normalized": "String-\u003ea-\u003eb",
          "package": "idris",
          "partial": "To Enum",
          "signature": "String-\u003eint-\u003ea",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:safeToEnum"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "sourcefile",
          "package": "idris",
          "signature": "FilePath",
          "source": "src/Idris-IBC.html#IBCFile",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "sourcefile",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:sourcefile"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "symbols",
          "package": "idris",
          "signature": "[Name]",
          "source": "src/Idris-IBC.html#IBCFile",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "symbols",
          "normalized": "[Name]",
          "package": "idris",
          "signature": "[Name]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:symbols"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "timestampOlder",
          "package": "idris",
          "signature": "FilePath -\u003e FilePath -\u003e IO ()",
          "source": "src/Idris-IBC.html#timestampOlder",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "timestampOlder",
          "normalized": "FilePath-\u003eFilePath-\u003eIO()",
          "package": "idris",
          "partial": "Older",
          "signature": "FilePath-\u003eFilePath-\u003eIO()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:timestampOlder"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "ver",
          "package": "idris",
          "signature": "Word8",
          "source": "src/Idris-IBC.html#IBCFile",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "ver",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:ver"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IBC",
          "name": "writeIBC",
          "package": "idris",
          "signature": "FilePath -\u003e FilePath -\u003e Idris ()",
          "source": "src/Idris-IBC.html#writeIBC",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IBC",
          "module": "Idris.IBC",
          "name": "writeIBC",
          "normalized": "FilePath-\u003eFilePath-\u003eIdris()",
          "package": "idris",
          "partial": "IBC",
          "signature": "FilePath-\u003eFilePath-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IBC.html#v:writeIBC"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IdeSlave",
          "name": "IdeSlave",
          "package": "idris",
          "source": "src/Idris-IdeSlave.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "Idris IdeSlave",
          "module": "Idris.IdeSlave",
          "name": "IdeSlave",
          "package": "idris",
          "partial": "Ide Slave",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IdeSlave.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IdeSlave",
          "name": "IdeSlaveCommand",
          "package": "idris",
          "source": "src/Idris-IdeSlave.html#IdeSlaveCommand",
          "type": "data"
        },
        "index": {
          "hierarchy": "Idris IdeSlave",
          "module": "Idris.IdeSlave",
          "name": "IdeSlaveCommand",
          "package": "idris",
          "partial": "Ide Slave Command",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IdeSlave.html#t:IdeSlaveCommand"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IdeSlave",
          "name": "SExp",
          "package": "idris",
          "source": "src/Idris-IdeSlave.html#SExp",
          "type": "data"
        },
        "index": {
          "hierarchy": "Idris IdeSlave",
          "module": "Idris.IdeSlave",
          "name": "SExp",
          "package": "idris",
          "partial": "SExp",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IdeSlave.html#t:SExp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IdeSlave",
          "name": "SExpable",
          "package": "idris",
          "source": "src/Idris-IdeSlave.html#SExpable",
          "type": "class"
        },
        "index": {
          "hierarchy": "Idris IdeSlave",
          "module": "Idris.IdeSlave",
          "name": "SExpable",
          "package": "idris",
          "partial": "SExpable",
          "type": "class"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IdeSlave.html#t:SExpable"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IdeSlave",
          "name": "AddClause",
          "package": "idris",
          "signature": "AddClause Int String",
          "source": "src/Idris-IdeSlave.html#IdeSlaveCommand",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IdeSlave",
          "module": "Idris.IdeSlave",
          "name": "AddClause",
          "package": "idris",
          "partial": "Add Clause",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IdeSlave.html#v:AddClause"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IdeSlave",
          "name": "AddMissing",
          "package": "idris",
          "signature": "AddMissing Int String",
          "source": "src/Idris-IdeSlave.html#IdeSlaveCommand",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IdeSlave",
          "module": "Idris.IdeSlave",
          "name": "AddMissing",
          "package": "idris",
          "partial": "Add Missing",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IdeSlave.html#v:AddMissing"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IdeSlave",
          "name": "AddProofClause",
          "package": "idris",
          "signature": "AddProofClause Int String",
          "source": "src/Idris-IdeSlave.html#IdeSlaveCommand",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IdeSlave",
          "module": "Idris.IdeSlave",
          "name": "AddProofClause",
          "package": "idris",
          "partial": "Add Proof Clause",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IdeSlave.html#v:AddProofClause"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IdeSlave",
          "name": "BoolAtom",
          "package": "idris",
          "signature": "BoolAtom Bool",
          "source": "src/Idris-IdeSlave.html#SExp",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IdeSlave",
          "module": "Idris.IdeSlave",
          "name": "BoolAtom",
          "package": "idris",
          "partial": "Bool Atom",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IdeSlave.html#v:BoolAtom"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IdeSlave",
          "name": "CaseSplit",
          "package": "idris",
          "signature": "CaseSplit Int String",
          "source": "src/Idris-IdeSlave.html#IdeSlaveCommand",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IdeSlave",
          "module": "Idris.IdeSlave",
          "name": "CaseSplit",
          "package": "idris",
          "partial": "Case Split",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IdeSlave.html#v:CaseSplit"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IdeSlave",
          "name": "IntegerAtom",
          "package": "idris",
          "signature": "IntegerAtom Integer",
          "source": "src/Idris-IdeSlave.html#SExp",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IdeSlave",
          "module": "Idris.IdeSlave",
          "name": "IntegerAtom",
          "package": "idris",
          "partial": "Integer Atom",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IdeSlave.html#v:IntegerAtom"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IdeSlave",
          "name": "Interpret",
          "package": "idris",
          "signature": "Interpret String",
          "source": "src/Idris-IdeSlave.html#IdeSlaveCommand",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IdeSlave",
          "module": "Idris.IdeSlave",
          "name": "Interpret",
          "package": "idris",
          "partial": "Interpret",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IdeSlave.html#v:Interpret"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IdeSlave",
          "name": "LoadFile",
          "package": "idris",
          "signature": "LoadFile String",
          "source": "src/Idris-IdeSlave.html#IdeSlaveCommand",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IdeSlave",
          "module": "Idris.IdeSlave",
          "name": "LoadFile",
          "package": "idris",
          "partial": "Load File",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IdeSlave.html#v:LoadFile"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IdeSlave",
          "name": "MakeWithBlock",
          "package": "idris",
          "signature": "MakeWithBlock Int String",
          "source": "src/Idris-IdeSlave.html#IdeSlaveCommand",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IdeSlave",
          "module": "Idris.IdeSlave",
          "name": "MakeWithBlock",
          "package": "idris",
          "partial": "Make With Block",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IdeSlave.html#v:MakeWithBlock"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IdeSlave",
          "name": "ProofSearch",
          "package": "idris",
          "signature": "ProofSearch Int String [String]",
          "source": "src/Idris-IdeSlave.html#IdeSlaveCommand",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IdeSlave",
          "module": "Idris.IdeSlave",
          "name": "ProofSearch",
          "normalized": "ProofSearch Int String[String]",
          "package": "idris",
          "partial": "Proof Search",
          "signature": "ProofSearch Int String[String]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IdeSlave.html#v:ProofSearch"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IdeSlave",
          "name": "REPLCompletions",
          "package": "idris",
          "signature": "REPLCompletions String",
          "source": "src/Idris-IdeSlave.html#IdeSlaveCommand",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IdeSlave",
          "module": "Idris.IdeSlave",
          "name": "REPLCompletions",
          "package": "idris",
          "partial": "REPLCompletions",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IdeSlave.html#v:REPLCompletions"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IdeSlave",
          "name": "SexpList",
          "package": "idris",
          "signature": "SexpList [SExp]",
          "source": "src/Idris-IdeSlave.html#SExp",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IdeSlave",
          "module": "Idris.IdeSlave",
          "name": "SexpList",
          "normalized": "SexpList[SExp]",
          "package": "idris",
          "partial": "Sexp List",
          "signature": "SexpList[SExp]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IdeSlave.html#v:SexpList"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IdeSlave",
          "name": "StringAtom",
          "package": "idris",
          "signature": "StringAtom String",
          "source": "src/Idris-IdeSlave.html#SExp",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IdeSlave",
          "module": "Idris.IdeSlave",
          "name": "StringAtom",
          "package": "idris",
          "partial": "String Atom",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IdeSlave.html#v:StringAtom"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IdeSlave",
          "name": "SymbolAtom",
          "package": "idris",
          "signature": "SymbolAtom String",
          "source": "src/Idris-IdeSlave.html#SExp",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IdeSlave",
          "module": "Idris.IdeSlave",
          "name": "SymbolAtom",
          "package": "idris",
          "partial": "Symbol Atom",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IdeSlave.html#v:SymbolAtom"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IdeSlave",
          "name": "TypeOf",
          "package": "idris",
          "signature": "TypeOf String",
          "source": "src/Idris-IdeSlave.html#IdeSlaveCommand",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IdeSlave",
          "module": "Idris.IdeSlave",
          "name": "TypeOf",
          "package": "idris",
          "partial": "Type Of",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IdeSlave.html#v:TypeOf"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IdeSlave",
          "name": "convSExp",
          "package": "idris",
          "signature": "String -\u003e a -\u003e Integer -\u003e String",
          "source": "src/Idris-IdeSlave.html#convSExp",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IdeSlave",
          "module": "Idris.IdeSlave",
          "name": "convSExp",
          "normalized": "String-\u003ea-\u003eInteger-\u003eString",
          "package": "idris",
          "partial": "SExp",
          "signature": "String-\u003ea-\u003eInteger-\u003eString",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IdeSlave.html#v:convSExp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IdeSlave",
          "name": "parseMessage",
          "package": "idris",
          "signature": "String -\u003e Either Err (SExp, Integer)",
          "source": "src/Idris-IdeSlave.html#parseMessage",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IdeSlave",
          "module": "Idris.IdeSlave",
          "name": "parseMessage",
          "normalized": "String-\u003eEither Err(SExp,Integer)",
          "package": "idris",
          "partial": "Message",
          "signature": "String-\u003eEither Err(SExp,Integer)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IdeSlave.html#v:parseMessage"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IdeSlave",
          "name": "sexpToCommand",
          "package": "idris",
          "signature": "SExp -\u003e Maybe IdeSlaveCommand",
          "source": "src/Idris-IdeSlave.html#sexpToCommand",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris IdeSlave",
          "module": "Idris.IdeSlave",
          "name": "sexpToCommand",
          "normalized": "SExp-\u003eMaybe IdeSlaveCommand",
          "package": "idris",
          "partial": "To Command",
          "signature": "SExp-\u003eMaybe IdeSlaveCommand",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IdeSlave.html#v:sexpToCommand"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.IdeSlave",
          "name": "toSExp",
          "package": "idris",
          "signature": "a -\u003e SExp",
          "source": "src/Idris-IdeSlave.html#toSExp",
          "type": "method"
        },
        "index": {
          "hierarchy": "Idris IdeSlave",
          "module": "Idris.IdeSlave",
          "name": "toSExp",
          "normalized": "a-\u003eSExp",
          "package": "idris",
          "partial": "SExp",
          "signature": "a-\u003eSExp",
          "type": "method"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-IdeSlave.html#v:toSExp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Imports",
          "name": "Imports",
          "package": "idris",
          "source": "src/Idris-Imports.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "Idris Imports",
          "module": "Idris.Imports",
          "name": "Imports",
          "package": "idris",
          "partial": "Imports",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Imports.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Imports",
          "name": "IFileType",
          "package": "idris",
          "source": "src/Idris-Imports.html#IFileType",
          "type": "data"
        },
        "index": {
          "hierarchy": "Idris Imports",
          "module": "Idris.Imports",
          "name": "IFileType",
          "package": "idris",
          "partial": "IFile Type",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Imports.html#t:IFileType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Imports",
          "name": "IBC",
          "package": "idris",
          "signature": "IBC FilePath IFileType",
          "source": "src/Idris-Imports.html#IFileType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Imports",
          "module": "Idris.Imports",
          "name": "IBC",
          "package": "idris",
          "partial": "IBC",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Imports.html#v:IBC"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Imports",
          "name": "IDR",
          "package": "idris",
          "signature": "IDR FilePath",
          "source": "src/Idris-Imports.html#IFileType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Imports",
          "module": "Idris.Imports",
          "name": "IDR",
          "package": "idris",
          "partial": "IDR",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Imports.html#v:IDR"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Imports",
          "name": "LIDR",
          "package": "idris",
          "signature": "LIDR FilePath",
          "source": "src/Idris-Imports.html#IFileType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Imports",
          "module": "Idris.Imports",
          "name": "LIDR",
          "package": "idris",
          "partial": "LIDR",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Imports.html#v:LIDR"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Imports",
          "name": "findImport",
          "package": "idris",
          "signature": "[FilePath] -\u003e FilePath -\u003e FilePath -\u003e IO IFileType",
          "source": "src/Idris-Imports.html#findImport",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Imports",
          "module": "Idris.Imports",
          "name": "findImport",
          "normalized": "[FilePath]-\u003eFilePath-\u003eFilePath-\u003eIO IFileType",
          "package": "idris",
          "partial": "Import",
          "signature": "[FilePath]-\u003eFilePath-\u003eFilePath-\u003eIO IFileType",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Imports.html#v:findImport"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Imports",
          "name": "findInPath",
          "package": "idris",
          "signature": "[FilePath] -\u003e FilePath -\u003e IO FilePath",
          "source": "src/Idris-Imports.html#findInPath",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Imports",
          "module": "Idris.Imports",
          "name": "findInPath",
          "normalized": "[FilePath]-\u003eFilePath-\u003eIO FilePath",
          "package": "idris",
          "partial": "In Path",
          "signature": "[FilePath]-\u003eFilePath-\u003eIO FilePath",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Imports.html#v:findInPath"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Imports",
          "name": "ibcPath",
          "package": "idris",
          "signature": "FilePath -\u003e Bool -\u003e FilePath -\u003e FilePath",
          "source": "src/Idris-Imports.html#ibcPath",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Imports",
          "module": "Idris.Imports",
          "name": "ibcPath",
          "normalized": "FilePath-\u003eBool-\u003eFilePath-\u003eFilePath",
          "package": "idris",
          "partial": "Path",
          "signature": "FilePath-\u003eBool-\u003eFilePath-\u003eFilePath",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Imports.html#v:ibcPath"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Imports",
          "name": "ibcPathNoFallback",
          "package": "idris",
          "signature": "FilePath -\u003e FilePath -\u003e FilePath",
          "source": "src/Idris-Imports.html#ibcPathNoFallback",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Imports",
          "module": "Idris.Imports",
          "name": "ibcPathNoFallback",
          "normalized": "FilePath-\u003eFilePath-\u003eFilePath",
          "package": "idris",
          "partial": "Path No Fallback",
          "signature": "FilePath-\u003eFilePath-\u003eFilePath",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Imports.html#v:ibcPathNoFallback"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Imports",
          "name": "ibcPathWithFallback",
          "package": "idris",
          "signature": "FilePath -\u003e FilePath -\u003e IO FilePath",
          "source": "src/Idris-Imports.html#ibcPathWithFallback",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Imports",
          "module": "Idris.Imports",
          "name": "ibcPathWithFallback",
          "normalized": "FilePath-\u003eFilePath-\u003eIO FilePath",
          "package": "idris",
          "partial": "Path With Fallback",
          "signature": "FilePath-\u003eFilePath-\u003eIO FilePath",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Imports.html#v:ibcPathWithFallback"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Imports",
          "name": "lsrcPath",
          "package": "idris",
          "signature": "FilePath -\u003e FilePath",
          "source": "src/Idris-Imports.html#lsrcPath",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Imports",
          "module": "Idris.Imports",
          "name": "lsrcPath",
          "normalized": "FilePath-\u003eFilePath",
          "package": "idris",
          "partial": "Path",
          "signature": "FilePath-\u003eFilePath",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Imports.html#v:lsrcPath"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Imports",
          "name": "srcPath",
          "package": "idris",
          "signature": "FilePath -\u003e FilePath",
          "source": "src/Idris-Imports.html#srcPath",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Imports",
          "module": "Idris.Imports",
          "name": "srcPath",
          "normalized": "FilePath-\u003eFilePath",
          "package": "idris",
          "partial": "Path",
          "signature": "FilePath-\u003eFilePath",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Imports.html#v:srcPath"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Inliner",
          "name": "Inliner",
          "package": "idris",
          "source": "src/Idris-Inliner.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "Idris Inliner",
          "module": "Idris.Inliner",
          "name": "Inliner",
          "package": "idris",
          "partial": "Inliner",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Inliner.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Inliner",
          "name": "inlineDef",
          "package": "idris",
          "signature": "IState -\u003e [([Name], Term, Term)] -\u003e [([Name], Term, Term)]",
          "source": "src/Idris-Inliner.html#inlineDef",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Inliner",
          "module": "Idris.Inliner",
          "name": "inlineDef",
          "normalized": "IState-\u003e[([Name],Term,Term)]-\u003e[([Name],Term,Term)]",
          "package": "idris",
          "partial": "Def",
          "signature": "IState-\u003e[([Name],Term,Term)]-\u003e[([Name],Term,Term)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Inliner.html#v:inlineDef"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Inliner",
          "name": "inlineTerm",
          "package": "idris",
          "signature": "IState -\u003e Term -\u003e Term",
          "source": "src/Idris-Inliner.html#inlineTerm",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Inliner",
          "module": "Idris.Inliner",
          "name": "inlineTerm",
          "normalized": "IState-\u003eTerm-\u003eTerm",
          "package": "idris",
          "partial": "Term",
          "signature": "IState-\u003eTerm-\u003eTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Inliner.html#v:inlineTerm"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ParseData",
          "name": "ParseData",
          "package": "idris",
          "source": "src/Idris-ParseData.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "Idris ParseData",
          "module": "Idris.ParseData",
          "name": "ParseData",
          "package": "idris",
          "partial": "Parse Data",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseData.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eChecks DSL for errors \n\u003c/p\u003e",
          "module": "Idris.ParseData",
          "name": "checkDSL",
          "package": "idris",
          "signature": "DSL -\u003e IdrisParser ()",
          "source": "src/Idris-ParseData.html#checkDSL",
          "type": "function"
        },
        "index": {
          "description": "Checks DSL for errors",
          "hierarchy": "Idris ParseData",
          "module": "Idris.ParseData",
          "name": "checkDSL",
          "normalized": "DSL-\u003eIdrisParser()",
          "package": "idris",
          "partial": "DSL",
          "signature": "DSL-\u003eIdrisParser()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseData.html#v:checkDSL"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a type constructor declaration\n  Constructor ::= DocComment? FnName TypeSig;\n\u003c/p\u003e",
          "module": "Idris.ParseData",
          "name": "constructor",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IdrisParser (String, Name, PTerm, FC, [Name])",
          "source": "src/Idris-ParseData.html#constructor",
          "type": "function"
        },
        "index": {
          "description": "Parses type constructor declaration Constructor DocComment FnName TypeSig",
          "hierarchy": "Idris ParseData",
          "module": "Idris.ParseData",
          "name": "constructor",
          "normalized": "SyntaxInfo-\u003eIdrisParser(String,Name,PTerm,FC,[Name])",
          "package": "idris",
          "signature": "SyntaxInfo-\u003eIdrisParser(String,Name,PTerm,FC,[Name])",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseData.html#v:constructor"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses data declaration type (normal or codata)\nDataI ::= 'data' | \u003ccode\u003e\u003ca\u003ecodata\u003c/a\u003e\u003c/code\u003e;\n\u003c/p\u003e",
          "module": "Idris.ParseData",
          "name": "dataI",
          "package": "idris",
          "signature": "IdrisParser DataOpts",
          "source": "src/Idris-ParseData.html#dataI",
          "type": "function"
        },
        "index": {
          "description": "Parses data declaration type normal or codata DataI data codata",
          "hierarchy": "Idris ParseData",
          "module": "Idris.ParseData",
          "name": "dataI",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseData.html#v:dataI"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses if a data should not have a default eliminator \nDefaultEliminator ::= \u003ccode\u003enoelim\u003c/code\u003e?\n\u003c/p\u003e",
          "module": "Idris.ParseData",
          "name": "dataOpts",
          "package": "idris",
          "signature": "DataOpts -\u003e IdrisParser DataOpts",
          "source": "src/Idris-ParseData.html#dataOpts",
          "type": "function"
        },
        "index": {
          "description": "Parses if data should not have default eliminator DefaultEliminator noelim",
          "hierarchy": "Idris ParseData",
          "module": "Idris.ParseData",
          "name": "dataOpts",
          "normalized": "DataOpts-\u003eIdrisParser DataOpts",
          "package": "idris",
          "partial": "Opts",
          "signature": "DataOpts-\u003eIdrisParser DataOpts",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseData.html#v:dataOpts"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a data type declaration\nData ::= DocComment? Accessibility? DataI DefaultEliminator FnName TypeSig ExplicitTypeDataRest?\n       | DocComment? Accessibility? DataI DefaultEliminator FnName Name*   DataRest?\n       ;\nConstructor' ::= Constructor KeepTerminator;\nExplicitTypeDataRest ::= 'where' OpenBlock Constructor'* CloseBlock;\n\u003c/p\u003e\u003cp\u003eDataRest ::= '=' SimpleConstructorList Terminator\n           &#160;|'where'!\n           ;\nSimpleConstructorList ::=\n    SimpleConstructor\n  | SimpleConstructor '|' SimpleConstructorList\n  ;\n\u003c/p\u003e",
          "module": "Idris.ParseData",
          "name": "data_",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IdrisParser PDecl",
          "source": "src/Idris-ParseData.html#data_",
          "type": "function"
        },
        "index": {
          "description": "Parses data type declaration Data DocComment Accessibility DataI DefaultEliminator FnName TypeSig ExplicitTypeDataRest DocComment Accessibility DataI DefaultEliminator FnName Name DataRest Constructor Constructor KeepTerminator ExplicitTypeDataRest where OpenBlock Constructor CloseBlock DataRest SimpleConstructorList Terminator where SimpleConstructorList SimpleConstructor SimpleConstructor SimpleConstructorList",
          "hierarchy": "Idris ParseData",
          "module": "Idris.ParseData",
          "name": "data_",
          "normalized": "SyntaxInfo-\u003eIdrisParser PDecl",
          "package": "idris",
          "signature": "SyntaxInfo-\u003eIdrisParser PDecl",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseData.html#v:data_"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ParseData",
          "name": "dsl",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IdrisParser PDecl",
          "source": "src/Idris-ParseData.html#dsl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ParseData",
          "module": "Idris.ParseData",
          "name": "dsl",
          "normalized": "SyntaxInfo-\u003eIdrisParser PDecl",
          "package": "idris",
          "signature": "SyntaxInfo-\u003eIdrisParser PDecl",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseData.html#v:dsl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a DSL overload declaration\nOverloadIdentifier ::= 'let' | Identifier;\nOverload ::= OverloadIdentifier '=' Expr;\n\u003c/p\u003e",
          "module": "Idris.ParseData",
          "name": "overload",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IdrisParser (String, PTerm)",
          "source": "src/Idris-ParseData.html#overload",
          "type": "function"
        },
        "index": {
          "description": "Parses DSL overload declaration OverloadIdentifier let Identifier Overload OverloadIdentifier Expr",
          "hierarchy": "Idris ParseData",
          "module": "Idris.ParseData",
          "name": "overload",
          "normalized": "SyntaxInfo-\u003eIdrisParser(String,PTerm)",
          "package": "idris",
          "signature": "SyntaxInfo-\u003eIdrisParser(String,PTerm)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseData.html#v:overload"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a record type declaration\nRecord ::=\n    DocComment Accessibility? \u003ccode\u003e\u003ca\u003erecord\u003c/a\u003e\u003c/code\u003e FnName TypeSig 'where' OpenBlock Constructor KeepTerminator CloseBlock;\n\u003c/p\u003e",
          "module": "Idris.ParseData",
          "name": "record",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IdrisParser PDecl",
          "source": "src/Idris-ParseData.html#record",
          "type": "function"
        },
        "index": {
          "description": "Parses record type declaration Record DocComment Accessibility record FnName TypeSig where OpenBlock Constructor KeepTerminator CloseBlock",
          "hierarchy": "Idris ParseData",
          "module": "Idris.ParseData",
          "name": "record",
          "normalized": "SyntaxInfo-\u003eIdrisParser PDecl",
          "package": "idris",
          "signature": "SyntaxInfo-\u003eIdrisParser PDecl",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseData.html#v:record"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a constructor for simple discriminative union data types\n  SimpleConstructor ::= FnName SimpleExpr* DocComment?\n\u003c/p\u003e",
          "module": "Idris.ParseData",
          "name": "simpleConstructor",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IdrisParser (String, Name, [PTerm], FC, [Name])",
          "source": "src/Idris-ParseData.html#simpleConstructor",
          "type": "function"
        },
        "index": {
          "description": "Parses constructor for simple discriminative union data types SimpleConstructor FnName SimpleExpr DocComment",
          "hierarchy": "Idris ParseData",
          "module": "Idris.ParseData",
          "name": "simpleConstructor",
          "normalized": "SyntaxInfo-\u003eIdrisParser(String,Name,[PTerm],FC,[Name])",
          "package": "idris",
          "partial": "Constructor",
          "signature": "SyntaxInfo-\u003eIdrisParser(String,Name,[PTerm],FC,[Name])",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseData.html#v:simpleConstructor"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ParseExpr",
          "name": "ParseExpr",
          "package": "idris",
          "source": "src/Idris-ParseExpr.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "Idris ParseExpr",
          "module": "Idris.ParseExpr",
          "name": "ParseExpr",
          "package": "idris",
          "partial": "Parse Expr",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseExpr.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ParseExpr",
          "name": "SynMatch",
          "package": "idris",
          "source": "src/Idris-ParseExpr.html#SynMatch",
          "type": "data"
        },
        "index": {
          "hierarchy": "Idris ParseExpr",
          "module": "Idris.ParseExpr",
          "name": "SynMatch",
          "package": "idris",
          "partial": "Syn Match",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseExpr.html#t:SynMatch"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ParseExpr",
          "name": "SynBind",
          "package": "idris",
          "signature": "SynBind Name",
          "source": "src/Idris-ParseExpr.html#SynMatch",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ParseExpr",
          "module": "Idris.ParseExpr",
          "name": "SynBind",
          "package": "idris",
          "partial": "Syn Bind",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseExpr.html#v:SynBind"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ParseExpr",
          "name": "SynTm",
          "package": "idris",
          "signature": "SynTm PTerm",
          "source": "src/Idris-ParseExpr.html#SynMatch",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ParseExpr",
          "module": "Idris.ParseExpr",
          "name": "SynTm",
          "package": "idris",
          "partial": "Syn Tm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseExpr.html#v:SynTm"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eAllow implicit type declarations\n\u003c/p\u003e",
          "module": "Idris.ParseExpr",
          "name": "allowImp",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e SyntaxInfo",
          "source": "src/Idris-ParseExpr.html#allowImp",
          "type": "function"
        },
        "index": {
          "description": "Allow implicit type declarations",
          "hierarchy": "Idris ParseExpr",
          "module": "Idris.ParseExpr",
          "name": "allowImp",
          "normalized": "SyntaxInfo-\u003eSyntaxInfo",
          "package": "idris",
          "partial": "Imp",
          "signature": "SyntaxInfo-\u003eSyntaxInfo",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseExpr.html#v:allowImp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses an alternative expression\n\u003ccode\u003e\n  Alt ::= '(|' Expr_List '|)';\n\nExpr_List ::=\n    Expr'\n    | Expr' ',' Expr_List\n  ;\n\u003c/code\u003e\n\u003c/p\u003e",
          "module": "Idris.ParseExpr",
          "name": "alt",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IdrisParser PTerm",
          "source": "src/Idris-ParseExpr.html#alt",
          "type": "function"
        },
        "index": {
          "description": "Parses an alternative expression Alt Expr List Expr List Expr Expr Expr List",
          "hierarchy": "Idris ParseExpr",
          "module": "Idris.ParseExpr",
          "name": "alt",
          "normalized": "SyntaxInfo-\u003eIdrisParser PTerm",
          "package": "idris",
          "signature": "SyntaxInfo-\u003eIdrisParser PTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseExpr.html#v:alt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a function application expression\n\u003ccode\u003e\nApp ::=\n  \u003ccode\u003emkForeign\u003c/code\u003e Arg Arg*\n  | SimpleExpr Arg+\n  ;\n\u003c/code\u003e\n\u003c/p\u003e",
          "module": "Idris.ParseExpr",
          "name": "app",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IdrisParser PTerm",
          "source": "src/Idris-ParseExpr.html#app",
          "type": "function"
        },
        "index": {
          "description": "Parses function application expression App mkForeign Arg Arg SimpleExpr Arg",
          "hierarchy": "Idris ParseExpr",
          "module": "Idris.ParseExpr",
          "name": "app",
          "normalized": "SyntaxInfo-\u003eIdrisParser PTerm",
          "package": "idris",
          "signature": "SyntaxInfo-\u003eIdrisParser PTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseExpr.html#v:app"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a function argument\n\u003ccode\u003e\nArg ::=\n  ImplicitArg\n  | ConstraintArg\n  | SimpleExpr\n  ;\n\u003c/code\u003e\n\u003c/p\u003e",
          "module": "Idris.ParseExpr",
          "name": "arg",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IdrisParser PArg",
          "source": "src/Idris-ParseExpr.html#arg",
          "type": "function"
        },
        "index": {
          "description": "Parses function argument Arg ImplicitArg ConstraintArg SimpleExpr",
          "hierarchy": "Idris ParseExpr",
          "module": "Idris.ParseExpr",
          "name": "arg",
          "normalized": "SyntaxInfo-\u003eIdrisParser PArg",
          "package": "idris",
          "signature": "SyntaxInfo-\u003eIdrisParser PArg",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseExpr.html#v:arg"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses the rest of an expression in braces\n\u003ccode\u003e\nBracketed ::=\n  ')'\n  | Expr ')'\n  | ExprList ')'\n  | Expr \u003ccode\u003e\u003ca\u003e**\u003c/a\u003e\u003c/code\u003e Expr ')'\n  | Operator Expr ')'\n  | Expr Operator ')'\n  | Name \u003ccode\u003e:\u003c/code\u003e Expr \u003ccode\u003e\u003ca\u003e**\u003c/a\u003e\u003c/code\u003e Expr ')'\n  ;\n\u003c/code\u003e\n\u003c/p\u003e",
          "module": "Idris.ParseExpr",
          "name": "bracketed",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IdrisParser PTerm",
          "source": "src/Idris-ParseExpr.html#bracketed",
          "type": "function"
        },
        "index": {
          "description": "Parses the rest of an expression in braces Bracketed Expr ExprList Expr Expr Operator Expr Expr Operator Name Expr Expr",
          "hierarchy": "Idris ParseExpr",
          "module": "Idris.ParseExpr",
          "name": "bracketed",
          "normalized": "SyntaxInfo-\u003eIdrisParser PTerm",
          "package": "idris",
          "signature": "SyntaxInfo-\u003eIdrisParser PTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseExpr.html#v:bracketed"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ParseExpr",
          "name": "bracketedExpr",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e PTerm -\u003e IdrisParser PTerm",
          "source": "src/Idris-ParseExpr.html#bracketedExpr",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ParseExpr",
          "module": "Idris.ParseExpr",
          "name": "bracketedExpr",
          "normalized": "SyntaxInfo-\u003ePTerm-\u003eIdrisParser PTerm",
          "package": "idris",
          "partial": "Expr",
          "signature": "SyntaxInfo-\u003ePTerm-\u003eIdrisParser PTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseExpr.html#v:bracketedExpr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a case expression\n\u003ccode\u003e\nCaseExpr ::=\n  'case' Expr 'of' OpenBlock CaseOption+ CloseBlock;\n\u003c/code\u003e\n\u003c/p\u003e",
          "module": "Idris.ParseExpr",
          "name": "caseExpr",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IdrisParser PTerm",
          "source": "src/Idris-ParseExpr.html#caseExpr",
          "type": "function"
        },
        "index": {
          "description": "Parses case expression CaseExpr case Expr of OpenBlock CaseOption CloseBlock",
          "hierarchy": "Idris ParseExpr",
          "module": "Idris.ParseExpr",
          "name": "caseExpr",
          "normalized": "SyntaxInfo-\u003eIdrisParser PTerm",
          "package": "idris",
          "partial": "Expr",
          "signature": "SyntaxInfo-\u003eIdrisParser PTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseExpr.html#v:caseExpr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a case in a case expression\n\u003ccode\u003e\nCaseOption ::=\n  Expr '=\u003e' Expr Terminator\n  ;\n\u003c/code\u003e\n\u003c/p\u003e",
          "module": "Idris.ParseExpr",
          "name": "caseOption",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IdrisParser (PTerm, PTerm)",
          "source": "src/Idris-ParseExpr.html#caseOption",
          "type": "function"
        },
        "index": {
          "description": "Parses case in case expression CaseOption Expr Expr Terminator",
          "hierarchy": "Idris ParseExpr",
          "module": "Idris.ParseExpr",
          "name": "caseOption",
          "normalized": "SyntaxInfo-\u003eIdrisParser(PTerm,PTerm)",
          "package": "idris",
          "partial": "Option",
          "signature": "SyntaxInfo-\u003eIdrisParser(PTerm,PTerm)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseExpr.html#v:caseOption"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a list comprehension\n\u003ccode\u003e\nComprehension ::= '[' Expr '|' DoList ']';\n\u003c/code\u003e\n\u003c/p\u003e\u003cpre\u003e\nDoList ::=\n    Do\n  | Do ',' DoList\n  ;\n\u003c/pre\u003e",
          "module": "Idris.ParseExpr",
          "name": "comprehension",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IdrisParser PTerm",
          "source": "src/Idris-ParseExpr.html#comprehension",
          "type": "function"
        },
        "index": {
          "description": "Parses list comprehension Comprehension Expr DoList DoList Do Do DoList",
          "hierarchy": "Idris ParseExpr",
          "module": "Idris.ParseExpr",
          "name": "comprehension",
          "normalized": "SyntaxInfo-\u003eIdrisParser PTerm",
          "package": "idris",
          "signature": "SyntaxInfo-\u003eIdrisParser PTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseExpr.html#v:comprehension"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a constant or literal expression\n\u003c/p\u003e\u003cpre\u003e\nConstant ::=\n    \u003ccode\u003e\u003ca\u003eInteger\u003c/a\u003e\u003c/code\u003e\n  | \u003ccode\u003e\u003ca\u003eInt\u003c/a\u003e\u003c/code\u003e\n  | \u003ccode\u003e\u003ca\u003eChar\u003c/a\u003e\u003c/code\u003e\n  | \u003ccode\u003e\u003ca\u003eFloat\u003c/a\u003e\u003c/code\u003e\n  | \u003ccode\u003e\u003ca\u003eString\u003c/a\u003e\u003c/code\u003e\n  | \u003ccode\u003ePtr\u003c/code\u003e\n  | \u003ccode\u003eprim__UnsafeBuffer\u003c/code\u003e\n  | \u003ccode\u003eBits8\u003c/code\u003e\n  | \u003ccode\u003eBits16\u003c/code\u003e\n  | \u003ccode\u003eBits32\u003c/code\u003e\n  | \u003ccode\u003eBits64\u003c/code\u003e\n  | \u003ccode\u003eBits8x16\u003c/code\u003e\n  | \u003ccode\u003eBits16x8\u003c/code\u003e\n  | \u003ccode\u003eBits32x4\u003c/code\u003e\n  | \u003ccode\u003eBits64x2\u003c/code\u003e\n  | Float_t\n  | Natural_t\n  | VerbatimString_t\n  | String_t\n  | Char_t\n  ;\n\u003c/pre\u003e",
          "module": "Idris.ParseExpr",
          "name": "constant",
          "package": "idris",
          "signature": "IdrisParser Const",
          "source": "src/Idris-ParseExpr.html#constant",
          "type": "function"
        },
        "index": {
          "description": "Parses constant or literal expression Constant Integer Int Char Float String Ptr prim UnsafeBuffer Bits8 Bits16 Bits32 Bits64 Bits8x16 Bits16x8 Bits32x4 Bits64x2 Float Natural VerbatimString String Char",
          "hierarchy": "Idris ParseExpr",
          "module": "Idris.ParseExpr",
          "name": "constant",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseExpr.html#v:constant"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a constraint argument (for selecting a named type class instance)\n\u003c/p\u003e\u003cpre\u003e    ConstraintArg ::=\n      '@{' Expr '}'\n      ;\n\u003c/pre\u003e",
          "module": "Idris.ParseExpr",
          "name": "constraintArg",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IdrisParser PArg",
          "source": "src/Idris-ParseExpr.html#constraintArg",
          "type": "function"
        },
        "index": {
          "description": "Parses constraint argument for selecting named type class instance ConstraintArg Expr",
          "hierarchy": "Idris ParseExpr",
          "module": "Idris.ParseExpr",
          "name": "constraintArg",
          "normalized": "SyntaxInfo-\u003eIdrisParser PArg",
          "package": "idris",
          "partial": "Arg",
          "signature": "SyntaxInfo-\u003eIdrisParser PArg",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseExpr.html#v:constraintArg"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a type constraint list\n\u003c/p\u003e\u003cpre\u003e\nConstraintList ::=\n    '(' Expr_List ')' '=\u003e'\n  | Expr              '=\u003e'\n  ;\n\u003c/pre\u003e",
          "module": "Idris.ParseExpr",
          "name": "constraintList",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IdrisParser [PTerm]",
          "source": "src/Idris-ParseExpr.html#constraintList",
          "type": "function"
        },
        "index": {
          "description": "Parses type constraint list ConstraintList Expr List Expr",
          "hierarchy": "Idris ParseExpr",
          "module": "Idris.ParseExpr",
          "name": "constraintList",
          "normalized": "SyntaxInfo-\u003eIdrisParser[PTerm]",
          "package": "idris",
          "partial": "List",
          "signature": "SyntaxInfo-\u003eIdrisParser[PTerm]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseExpr.html#v:constraintList"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eDisallow implicit type declarations\n\u003c/p\u003e",
          "module": "Idris.ParseExpr",
          "name": "disallowImp",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e SyntaxInfo",
          "source": "src/Idris-ParseExpr.html#disallowImp",
          "type": "function"
        },
        "index": {
          "description": "Disallow implicit type declarations",
          "hierarchy": "Idris ParseExpr",
          "module": "Idris.ParseExpr",
          "name": "disallowImp",
          "normalized": "SyntaxInfo-\u003eSyntaxInfo",
          "package": "idris",
          "partial": "Imp",
          "signature": "SyntaxInfo-\u003eSyntaxInfo",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseExpr.html#v:disallowImp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a disambiguation expression \nDisamb ::=\n  \u003ccode\u003e%\u003c/code\u003e \u003ccode\u003e\u003ca\u003edisamb\u003c/a\u003e\u003c/code\u003e NameList Expr\n  ;\n\u003c/p\u003e",
          "module": "Idris.ParseExpr",
          "name": "disamb",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IdrisParser PTerm",
          "source": "src/Idris-ParseExpr.html#disamb",
          "type": "function"
        },
        "index": {
          "description": "Parses disambiguation expression Disamb disamb NameList Expr",
          "hierarchy": "Idris ParseExpr",
          "module": "Idris.ParseExpr",
          "name": "disamb",
          "normalized": "SyntaxInfo-\u003eIdrisParser PTerm",
          "package": "idris",
          "signature": "SyntaxInfo-\u003eIdrisParser PTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseExpr.html#v:disamb"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a do-block\n\u003ccode\u003e\nDo' ::= Do KeepTerminator;\n\u003c/code\u003e\n\u003c/p\u003e\u003cpre\u003e\nDoBlock ::=\n  'do' OpenBlock Do'+ CloseBlock\n  ;\n\u003c/pre\u003e",
          "module": "Idris.ParseExpr",
          "name": "doBlock",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IdrisParser PTerm",
          "source": "src/Idris-ParseExpr.html#doBlock",
          "type": "function"
        },
        "index": {
          "description": "Parses do-block Do Do KeepTerminator DoBlock do OpenBlock Do CloseBlock",
          "hierarchy": "Idris ParseExpr",
          "module": "Idris.ParseExpr",
          "name": "doBlock",
          "normalized": "SyntaxInfo-\u003eIdrisParser PTerm",
          "package": "idris",
          "partial": "Block",
          "signature": "SyntaxInfo-\u003eIdrisParser PTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseExpr.html#v:doBlock"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses an expression inside a do block\n\u003ccode\u003e\nDo ::=\n    'let' Name  TypeSig'?      '=' Expr\n  | 'let' Expr'                '=' Expr\n  | Name  '\u003c-' Expr\n  | Expr' '\u003c-' Expr\n  | Expr\n  ;\n\u003c/code\u003e\n\u003c/p\u003e",
          "module": "Idris.ParseExpr",
          "name": "do_",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IdrisParser PDo",
          "source": "src/Idris-ParseExpr.html#do_",
          "type": "function"
        },
        "index": {
          "description": "Parses an expression inside do block Do let Name TypeSig Expr let Expr Expr Name Expr Expr Expr Expr",
          "hierarchy": "Idris ParseExpr",
          "module": "Idris.ParseExpr",
          "name": "do_",
          "normalized": "SyntaxInfo-\u003eIdrisParser PDo",
          "package": "idris",
          "signature": "SyntaxInfo-\u003eIdrisParser PDo",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseExpr.html#v:do_"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ParseExpr",
          "name": "doexpr'",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IdrisParser PTerm",
          "source": "src/Idris-ParseExpr.html#doexpr%27",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ParseExpr",
          "module": "Idris.ParseExpr",
          "name": "doexpr'",
          "normalized": "SyntaxInfo-\u003eIdrisParser PTerm",
          "package": "idris",
          "signature": "SyntaxInfo-\u003eIdrisParser PTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseExpr.html#v:doexpr-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses an expression\n\u003ccode\u003e\n  Expr ::= Expr';\n\u003c/code\u003e\n\u003c/p\u003e",
          "module": "Idris.ParseExpr",
          "name": "expr",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IdrisParser PTerm",
          "source": "src/Idris-ParseExpr.html#expr",
          "type": "function"
        },
        "index": {
          "description": "Parses an expression Expr Expr",
          "hierarchy": "Idris ParseExpr",
          "module": "Idris.ParseExpr",
          "name": "expr",
          "normalized": "SyntaxInfo-\u003eIdrisParser PTerm",
          "package": "idris",
          "signature": "SyntaxInfo-\u003eIdrisParser PTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseExpr.html#v:expr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses either an internally defined expression or\n    a user-defined one\n\u003ccode\u003e\nExpr' ::=  \u003ca\u003eExternal (User-defined) Syntax\u003c/a\u003e\n      |   InternalExpr;\n\u003c/code\u003e\n\u003c/p\u003e",
          "module": "Idris.ParseExpr",
          "name": "expr'",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IdrisParser PTerm",
          "source": "src/Idris-ParseExpr.html#expr%27",
          "type": "function"
        },
        "index": {
          "description": "Parses either an internally defined expression or user-defined one Expr External User-defined Syntax InternalExpr",
          "hierarchy": "Idris ParseExpr",
          "module": "Idris.ParseExpr",
          "name": "expr'",
          "normalized": "SyntaxInfo-\u003eIdrisParser PTerm",
          "package": "idris",
          "signature": "SyntaxInfo-\u003eIdrisParser PTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseExpr.html#v:expr-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eTries to parse an expression given a user-defined rule \n\u003c/p\u003e",
          "module": "Idris.ParseExpr",
          "name": "extension",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e Syntax -\u003e IdrisParser PTerm",
          "source": "src/Idris-ParseExpr.html#extension",
          "type": "function"
        },
        "index": {
          "description": "Tries to parse an expression given user-defined rule",
          "hierarchy": "Idris ParseExpr",
          "module": "Idris.ParseExpr",
          "name": "extension",
          "normalized": "SyntaxInfo-\u003eSyntax-\u003eIdrisParser PTerm",
          "package": "idris",
          "signature": "SyntaxInfo-\u003eSyntax-\u003eIdrisParser PTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseExpr.html#v:extension"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eTries to parse a user-defined expression given a list of syntactic extensions \n\u003c/p\u003e",
          "module": "Idris.ParseExpr",
          "name": "extensions",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e [Syntax] -\u003e IdrisParser PTerm",
          "source": "src/Idris-ParseExpr.html#extensions",
          "type": "function"
        },
        "index": {
          "description": "Tries to parse user-defined expression given list of syntactic extensions",
          "hierarchy": "Idris ParseExpr",
          "module": "Idris.ParseExpr",
          "name": "extensions",
          "normalized": "SyntaxInfo-\u003e[Syntax]-\u003eIdrisParser PTerm",
          "package": "idris",
          "signature": "SyntaxInfo-\u003e[Syntax]-\u003eIdrisParser PTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseExpr.html#v:extensions"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a user-defined expression \n\u003c/p\u003e",
          "module": "Idris.ParseExpr",
          "name": "externalExpr",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IdrisParser PTerm",
          "source": "src/Idris-ParseExpr.html#externalExpr",
          "type": "function"
        },
        "index": {
          "description": "Parses user-defined expression",
          "hierarchy": "Idris ParseExpr",
          "module": "Idris.ParseExpr",
          "name": "externalExpr",
          "normalized": "SyntaxInfo-\u003eIdrisParser PTerm",
          "package": "idris",
          "partial": "Expr",
          "signature": "SyntaxInfo-\u003eIdrisParser PTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseExpr.html#v:externalExpr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses an expression as a whole\n\u003ccode\u003e\n  FullExpr ::= Expr EOF_t;\n\u003c/code\u003e\n\u003c/p\u003e",
          "module": "Idris.ParseExpr",
          "name": "fullExpr",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IdrisParser PTerm",
          "source": "src/Idris-ParseExpr.html#fullExpr",
          "type": "function"
        },
        "index": {
          "description": "Parses an expression as whole FullExpr Expr EOF",
          "hierarchy": "Idris ParseExpr",
          "module": "Idris.ParseExpr",
          "name": "fullExpr",
          "normalized": "SyntaxInfo-\u003eIdrisParser PTerm",
          "package": "idris",
          "partial": "Expr",
          "signature": "SyntaxInfo-\u003eIdrisParser PTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseExpr.html#v:fullExpr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a tactic as a whole\n\u003c/p\u003e",
          "module": "Idris.ParseExpr",
          "name": "fullTactic",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IdrisParser PTactic",
          "source": "src/Idris-ParseExpr.html#fullTactic",
          "type": "function"
        },
        "index": {
          "description": "Parses tactic as whole",
          "hierarchy": "Idris ParseExpr",
          "module": "Idris.ParseExpr",
          "name": "fullTactic",
          "normalized": "SyntaxInfo-\u003eIdrisParser PTactic",
          "package": "idris",
          "partial": "Tactic",
          "signature": "SyntaxInfo-\u003eIdrisParser PTactic",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseExpr.html#v:fullTactic"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a possibly hidden simple expression\n\u003ccode\u003e\nHSimpleExpr ::=\n  \u003ccode\u003e\u003ca\u003e.\u003c/a\u003e\u003c/code\u003e SimpleExpr\n  | SimpleExpr\n  ;\n\u003c/code\u003e\n\u003c/p\u003e",
          "module": "Idris.ParseExpr",
          "name": "hsimpleExpr",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IdrisParser PTerm",
          "source": "src/Idris-ParseExpr.html#hsimpleExpr",
          "type": "function"
        },
        "index": {
          "description": "Parses possibly hidden simple expression HSimpleExpr SimpleExpr SimpleExpr",
          "hierarchy": "Idris ParseExpr",
          "module": "Idris.ParseExpr",
          "name": "hsimpleExpr",
          "normalized": "SyntaxInfo-\u003eIdrisParser PTerm",
          "package": "idris",
          "partial": "Expr",
          "signature": "SyntaxInfo-\u003eIdrisParser PTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseExpr.html#v:hsimpleExpr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses an expression in idiom brackets\n\u003ccode\u003e\nIdiom ::= '[|' Expr '|]';\n\u003c/code\u003e\n\u003c/p\u003e",
          "module": "Idris.ParseExpr",
          "name": "idiom",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IdrisParser PTerm",
          "source": "src/Idris-ParseExpr.html#idiom",
          "type": "function"
        },
        "index": {
          "description": "Parses an expression in idiom brackets Idiom Expr",
          "hierarchy": "Idris ParseExpr",
          "module": "Idris.ParseExpr",
          "name": "idiom",
          "normalized": "SyntaxInfo-\u003eIdrisParser PTerm",
          "package": "idris",
          "signature": "SyntaxInfo-\u003eIdrisParser PTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseExpr.html#v:idiom"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses an implicit function argument\n\u003ccode\u003e\nImplicitArg ::=\n  '{' Name ('=' Expr)? '}'\n  ;\n\u003c/code\u003e\n\u003c/p\u003e",
          "module": "Idris.ParseExpr",
          "name": "implicitArg",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IdrisParser PArg",
          "source": "src/Idris-ParseExpr.html#implicitArg",
          "type": "function"
        },
        "index": {
          "description": "Parses an implicit function argument ImplicitArg Name Expr",
          "hierarchy": "Idris ParseExpr",
          "module": "Idris.ParseExpr",
          "name": "implicitArg",
          "normalized": "SyntaxInfo-\u003eIdrisParser PArg",
          "package": "idris",
          "partial": "Arg",
          "signature": "SyntaxInfo-\u003eIdrisParser PArg",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseExpr.html#v:implicitArg"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a (normal) built-in expression\n\u003ccode\u003e\nInternalExpr ::=\n  App\n  | MatchApp\n  | UnifyLog\n  | RecordType\n  | SimpleExpr\n  | Lambda\n  | QuoteGoal\n  | Let\n  | RewriteTerm\n  | Pi\n  | CaseExpr\n  | DoBlock\n  ;\n\u003c/code\u003e\n\u003c/p\u003e",
          "module": "Idris.ParseExpr",
          "name": "internalExpr",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IdrisParser PTerm",
          "source": "src/Idris-ParseExpr.html#internalExpr",
          "type": "function"
        },
        "index": {
          "description": "Parses normal built-in expression InternalExpr App MatchApp UnifyLog RecordType SimpleExpr Lambda QuoteGoal Let RewriteTerm Pi CaseExpr DoBlock",
          "hierarchy": "Idris ParseExpr",
          "module": "Idris.ParseExpr",
          "name": "internalExpr",
          "normalized": "SyntaxInfo-\u003eIdrisParser PTerm",
          "package": "idris",
          "partial": "Expr",
          "signature": "SyntaxInfo-\u003eIdrisParser PTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseExpr.html#v:internalExpr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a lambda expression\n\u003ccode\u003e\nLambda ::=\n    \u003ccode\u003e\u003ca\u003e\\\\\u003c/a\u003e\u003c/code\u003e TypeOptDeclList '=\u003e' Expr\n  | \u003ccode\u003e\u003ca\u003e\\\\\u003c/a\u003e\u003c/code\u003e SimpleExprList  '=\u003e' Expr\n  ;\n\u003c/code\u003e\n\u003ccode\u003e\nSimpleExprList ::=\n  SimpleExpr\n  | SimpleExpr ',' SimpleExprList\n  ;\n\u003c/code\u003e\n\u003c/p\u003e",
          "module": "Idris.ParseExpr",
          "name": "lambda",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IdrisParser PTerm",
          "source": "src/Idris-ParseExpr.html#lambda",
          "type": "function"
        },
        "index": {
          "description": "Parses lambda expression Lambda TypeOptDeclList Expr SimpleExprList Expr SimpleExprList SimpleExpr SimpleExpr SimpleExprList",
          "hierarchy": "Idris ParseExpr",
          "module": "Idris.ParseExpr",
          "name": "lambda",
          "normalized": "SyntaxInfo-\u003eIdrisParser PTerm",
          "package": "idris",
          "signature": "SyntaxInfo-\u003eIdrisParser PTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseExpr.html#v:lambda"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a let binding\n\u003ccode\u003e\nLet ::=\n  'let' Name TypeSig'? '=' Expr  'in' Expr\n| 'let' Expr'          '=' Expr' 'in' Expr\n\nTypeSig' ::=\n  \u003ccode\u003e:\u003c/code\u003e Expr'\n  ;\n\u003c/code\u003e\n\u003c/p\u003e",
          "module": "Idris.ParseExpr",
          "name": "let_",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IdrisParser PTerm",
          "source": "src/Idris-ParseExpr.html#let_",
          "type": "function"
        },
        "index": {
          "description": "Parses let binding Let let Name TypeSig Expr in Expr let Expr Expr in Expr TypeSig Expr",
          "hierarchy": "Idris ParseExpr",
          "module": "Idris.ParseExpr",
          "name": "let_",
          "normalized": "SyntaxInfo-\u003eIdrisParser PTerm",
          "package": "idris",
          "signature": "SyntaxInfo-\u003eIdrisParser PTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseExpr.html#v:let_"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a list literal expression e.g. [1,2,3]\n\u003ccode\u003e\nListExpr ::=\n  '[' ExprList? ']'\n;\n\u003c/code\u003e\n\u003ccode\u003e\nExprList ::=\n  Expr\n  | Expr ',' ExprList\n  ;\n\u003c/code\u003e\n\u003c/p\u003e",
          "module": "Idris.ParseExpr",
          "name": "listExpr",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IdrisParser PTerm",
          "source": "src/Idris-ParseExpr.html#listExpr",
          "type": "function"
        },
        "index": {
          "description": "Parses list literal expression e.g ListExpr ExprList ExprList Expr Expr ExprList",
          "hierarchy": "Idris ParseExpr",
          "module": "Idris.ParseExpr",
          "name": "listExpr",
          "normalized": "SyntaxInfo-\u003eIdrisParser PTerm",
          "package": "idris",
          "partial": "Expr",
          "signature": "SyntaxInfo-\u003eIdrisParser PTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseExpr.html#v:listExpr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a matching application expression\n\u003ccode\u003e\nMatchApp ::=\n  SimpleExpr \u003ccode\u003e\u003c==\u003c/code\u003e FnName\n  ;\n\u003c/code\u003e\n\u003c/p\u003e",
          "module": "Idris.ParseExpr",
          "name": "matchApp",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IdrisParser PTerm",
          "source": "src/Idris-ParseExpr.html#matchApp",
          "type": "function"
        },
        "index": {
          "description": "Parses matching application expression MatchApp SimpleExpr FnName",
          "hierarchy": "Idris ParseExpr",
          "module": "Idris.ParseExpr",
          "name": "matchApp",
          "normalized": "SyntaxInfo-\u003eIdrisParser PTerm",
          "package": "idris",
          "partial": "App",
          "signature": "SyntaxInfo-\u003eIdrisParser PTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseExpr.html#v:matchApp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eCreates setters for record types on necessary functions\n\u003c/p\u003e",
          "module": "Idris.ParseExpr",
          "name": "mkType",
          "package": "idris",
          "signature": "Name -\u003e Name",
          "source": "src/Idris-ParseExpr.html#mkType",
          "type": "function"
        },
        "index": {
          "description": "Creates setters for record types on necessary functions",
          "hierarchy": "Idris ParseExpr",
          "module": "Idris.ParseExpr",
          "name": "mkType",
          "normalized": "Name-\u003eName",
          "package": "idris",
          "partial": "Type",
          "signature": "Name-\u003eName",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseExpr.html#v:mkType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eFinds optimal type for integer constant \n\u003c/p\u003e",
          "module": "Idris.ParseExpr",
          "name": "modifyConst",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e FC -\u003e PTerm -\u003e PTerm",
          "source": "src/Idris-ParseExpr.html#modifyConst",
          "type": "function"
        },
        "index": {
          "description": "Finds optimal type for integer constant",
          "hierarchy": "Idris ParseExpr",
          "module": "Idris.ParseExpr",
          "name": "modifyConst",
          "normalized": "SyntaxInfo-\u003eFC-\u003ePTerm-\u003ePTerm",
          "package": "idris",
          "partial": "Const",
          "signature": "SyntaxInfo-\u003eFC-\u003ePTerm-\u003ePTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseExpr.html#v:modifyConst"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a no implicits expression\n\u003ccode\u003e\nNoImplicits ::=\n  \u003ccode\u003e%\u003c/code\u003e \u003ccode\u003e\u003ca\u003enoImplicits\u003c/a\u003e\u003c/code\u003e SimpleExpr\n  ;\n\u003c/code\u003e\n\u003c/p\u003e",
          "module": "Idris.ParseExpr",
          "name": "noImplicits",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IdrisParser PTerm",
          "source": "src/Idris-ParseExpr.html#noImplicits",
          "type": "function"
        },
        "index": {
          "description": "Parses no implicits expression NoImplicits noImplicits SimpleExpr",
          "hierarchy": "Idris ParseExpr",
          "module": "Idris.ParseExpr",
          "name": "noImplicits",
          "normalized": "SyntaxInfo-\u003eIdrisParser PTerm",
          "package": "idris",
          "partial": "Implicits",
          "signature": "SyntaxInfo-\u003eIdrisParser PTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseExpr.html#v:noImplicits"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a dependent type signature\n\u003c/p\u003e\u003cpre\u003e\nPi ::=\n    '|'? Static? '('           TypeDeclList ')' DocComment '-\u003e' Expr\n  | '|'? Static? '{'           TypeDeclList '}'            '-\u003e' Expr\n  |              '{' \u003ccode\u003eauto\u003c/code\u003e    TypeDeclList '}'            '-\u003e' Expr\n  |              '{' 'default' TypeDeclList '}'            '-\u003e' Expr\n  ;\n\u003c/pre\u003e",
          "module": "Idris.ParseExpr",
          "name": "pi",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IdrisParser PTerm",
          "source": "src/Idris-ParseExpr.html#pi",
          "type": "function"
        },
        "index": {
          "description": "Parses dependent type signature Pi Static TypeDeclList DocComment Expr Static TypeDeclList Expr auto TypeDeclList Expr default TypeDeclList Expr",
          "hierarchy": "Idris ParseExpr",
          "module": "Idris.ParseExpr",
          "name": "pi",
          "normalized": "SyntaxInfo-\u003eIdrisParser PTerm",
          "package": "idris",
          "signature": "SyntaxInfo-\u003eIdrisParser PTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseExpr.html#v:pi"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a proof block\n\u003ccode\u003e\nProofExpr ::=\n  \u003ccode\u003eproof\u003c/code\u003e OpenBlock Tactic'* CloseBlock\n  ;\n\u003c/code\u003e\n\u003c/p\u003e",
          "module": "Idris.ParseExpr",
          "name": "proofExpr",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IdrisParser PTerm",
          "source": "src/Idris-ParseExpr.html#proofExpr",
          "type": "function"
        },
        "index": {
          "description": "Parses proof block ProofExpr proof OpenBlock Tactic CloseBlock",
          "hierarchy": "Idris ParseExpr",
          "module": "Idris.ParseExpr",
          "name": "proofExpr",
          "normalized": "SyntaxInfo-\u003eIdrisParser PTerm",
          "package": "idris",
          "partial": "Expr",
          "signature": "SyntaxInfo-\u003eIdrisParser PTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseExpr.html#v:proofExpr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a quote goal\n\u003c/p\u003e\u003cpre\u003e\nQuoteGoal ::=\n  \u003ccode\u003e\u003ca\u003equoteGoal\u003c/a\u003e\u003c/code\u003e Name \u003ccode\u003eby\u003c/code\u003e Expr 'in' Expr\n  ;\n\u003c/pre\u003e",
          "module": "Idris.ParseExpr",
          "name": "quoteGoal",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IdrisParser PTerm",
          "source": "src/Idris-ParseExpr.html#quoteGoal",
          "type": "function"
        },
        "index": {
          "description": "Parses quote goal QuoteGoal quoteGoal Name by Expr in Expr",
          "hierarchy": "Idris ParseExpr",
          "module": "Idris.ParseExpr",
          "name": "quoteGoal",
          "normalized": "SyntaxInfo-\u003eIdrisParser PTerm",
          "package": "idris",
          "partial": "Goal",
          "signature": "SyntaxInfo-\u003eIdrisParser PTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseExpr.html#v:quoteGoal"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a record field setter expression\n\u003ccode\u003e\nRecordType ::=\n  \u003ccode\u003erecord\u003c/code\u003e '{' FieldTypeList '}';\n\u003c/code\u003e\n\u003ccode\u003e\nFieldTypeList ::=\n  FieldType\n  | FieldType ',' FieldTypeList\n  ;\n\u003c/code\u003e\n\u003ccode\u003e\nFieldType ::=\n  FnName '=' Expr\n  ;\n\u003c/code\u003e\n\u003c/p\u003e",
          "module": "Idris.ParseExpr",
          "name": "recordType",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IdrisParser PTerm",
          "source": "src/Idris-ParseExpr.html#recordType",
          "type": "function"
        },
        "index": {
          "description": "Parses record field setter expression RecordType record FieldTypeList FieldTypeList FieldType FieldType FieldTypeList FieldType FnName Expr",
          "hierarchy": "Idris ParseExpr",
          "module": "Idris.ParseExpr",
          "name": "recordType",
          "normalized": "SyntaxInfo-\u003eIdrisParser PTerm",
          "package": "idris",
          "partial": "Type",
          "signature": "SyntaxInfo-\u003eIdrisParser PTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseExpr.html#v:recordType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a term rewrite expression\n\u003ccode\u003e\nRewriteTerm ::=\n  \u003ccode\u003erewrite\u003c/code\u003e Expr (\u003ccode\u003e==\u003e\u003c/code\u003e Expr)? 'in' Expr\n  ;\n\u003c/code\u003e\n\u003c/p\u003e",
          "module": "Idris.ParseExpr",
          "name": "rewriteTerm",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IdrisParser PTerm",
          "source": "src/Idris-ParseExpr.html#rewriteTerm",
          "type": "function"
        },
        "index": {
          "description": "Parses term rewrite expression RewriteTerm rewrite Expr Expr in Expr",
          "hierarchy": "Idris ParseExpr",
          "module": "Idris.ParseExpr",
          "name": "rewriteTerm",
          "normalized": "SyntaxInfo-\u003eIdrisParser PTerm",
          "package": "idris",
          "partial": "Term",
          "signature": "SyntaxInfo-\u003eIdrisParser PTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseExpr.html#v:rewriteTerm"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a simple expression\n\u003ccode\u003e\nSimpleExpr ::=\n  '![' Term ']'\n  | \u003ccode\u003e?\u003c/code\u003e Name\n  | % 'instance'\n  | \u003ccode\u003erefl\u003c/code\u003e ('{' Expr '}')?\n  | ProofExpr\n  | TacticsExpr\n  | FnName\n  | List\n  | Comprehension\n  | Alt\n  | Idiom\n  | '(' Bracketed\n  | Constant\n  | Type\n  | '_|_'\n  | '_'\n  | \n  ;\n\u003c/code\u003e\n\u003c/p\u003e",
          "module": "Idris.ParseExpr",
          "name": "simpleExpr",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IdrisParser PTerm",
          "source": "src/Idris-ParseExpr.html#simpleExpr",
          "type": "function"
        },
        "index": {
          "description": "Parses simple expression SimpleExpr Term Name instance refl Expr ProofExpr TacticsExpr FnName List Comprehension Alt Idiom Bracketed Constant Type",
          "hierarchy": "Idris ParseExpr",
          "module": "Idris.ParseExpr",
          "name": "simpleExpr",
          "normalized": "SyntaxInfo-\u003eIdrisParser PTerm",
          "package": "idris",
          "partial": "Expr",
          "signature": "SyntaxInfo-\u003eIdrisParser PTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseExpr.html#v:simpleExpr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a simple user-defined expression \n\u003c/p\u003e",
          "module": "Idris.ParseExpr",
          "name": "simpleExternalExpr",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IdrisParser PTerm",
          "source": "src/Idris-ParseExpr.html#simpleExternalExpr",
          "type": "function"
        },
        "index": {
          "description": "Parses simple user-defined expression",
          "hierarchy": "Idris ParseExpr",
          "module": "Idris.ParseExpr",
          "name": "simpleExternalExpr",
          "normalized": "SyntaxInfo-\u003eIdrisParser PTerm",
          "package": "idris",
          "partial": "External Expr",
          "signature": "SyntaxInfo-\u003eIdrisParser PTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseExpr.html#v:simpleExternalExpr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a static modifier\n\u003c/p\u003e\u003cpre\u003e\nStatic ::=\n  '[' static ']'\n;\n\u003c/pre\u003e",
          "module": "Idris.ParseExpr",
          "name": "static",
          "package": "idris",
          "signature": "IdrisParser Static",
          "source": "src/Idris-ParseExpr.html#static",
          "type": "function"
        },
        "index": {
          "description": "Parses static modifier Static static",
          "hierarchy": "Idris ParseExpr",
          "module": "Idris.ParseExpr",
          "name": "static",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseExpr.html#v:static"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a tactic script\n\u003c/p\u003e\u003cpre\u003e\nTactic ::= \u003ccode\u003eintro\u003c/code\u003e NameList?\n       |   \u003ccode\u003eintros\u003c/code\u003e\n       |   \u003ccode\u003erefine\u003c/code\u003e      Name Imp+\n       |   \u003ccode\u003emrefine\u003c/code\u003e     Name\n       |   \u003ccode\u003erewrite\u003c/code\u003e     Expr\n       |   \u003ccode\u003eequiv\u003c/code\u003e       Expr\n       |   'let'         Name \u003ccode\u003e:\u003c/code\u003e Expr' '=' Expr\n       |   'let'         Name           '=' Expr\n       |   \u003ccode\u003efocus\u003c/code\u003e       Name\n       |   \u003ccode\u003eexact\u003c/code\u003e       Expr\n       |   \u003ccode\u003eapplyTactic\u003c/code\u003e Expr\n       |   \u003ccode\u003ereflect\u003c/code\u003e     Expr\n       |   \u003ccode\u003efill\u003c/code\u003e        Expr\n       |   \u003ccode\u003e\u003ca\u003etry\u003c/a\u003e\u003c/code\u003e         Tactic '|' Tactic\n       |   '{' TacticSeq '}'\n       |   \u003ccode\u003ecompute\u003c/code\u003e\n       |   \u003ccode\u003etrivial\u003c/code\u003e\n       |   \u003ccode\u003esolve\u003c/code\u003e\n       |   \u003ccode\u003eattack\u003c/code\u003e\n       |   \u003ccode\u003e\u003ca\u003estate\u003c/a\u003e\u003c/code\u003e\n       |   \u003ccode\u003eterm\u003c/code\u003e\n       |   \u003ccode\u003eundo\u003c/code\u003e\n       |   \u003ccode\u003eqed\u003c/code\u003e\n       |   \u003ccode\u003eabandon\u003c/code\u003e\n       |   \u003ccode\u003e:\u003c/code\u003e \u003ccode\u003eq\u003c/code\u003e\n       ;\n\nImp ::= \u003ccode\u003e?\u003c/code\u003e | '_';\n\nTacticSeq ::=\n    Tactic ';' Tactic\n  | Tactic ';' TacticSeq\n  ;\n\u003c/pre\u003e",
          "module": "Idris.ParseExpr",
          "name": "tactic",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IdrisParser PTactic",
          "source": "src/Idris-ParseExpr.html#tactic",
          "type": "function"
        },
        "index": {
          "description": "Parses tactic script Tactic intro NameList intros refine Name Imp mrefine Name rewrite Expr equiv Expr let Name Expr Expr let Name Expr focus Name exact Expr applyTactic Expr reflect Expr fill Expr try Tactic Tactic TacticSeq compute trivial solve attack state term undo qed abandon Imp TacticSeq Tactic Tactic Tactic TacticSeq",
          "hierarchy": "Idris ParseExpr",
          "module": "Idris.ParseExpr",
          "name": "tactic",
          "normalized": "SyntaxInfo-\u003eIdrisParser PTactic",
          "package": "idris",
          "signature": "SyntaxInfo-\u003eIdrisParser PTactic",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseExpr.html#v:tactic"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a tactics block\n\u003ccode\u003e\nTacticsExpr :=\n  \u003ccode\u003etactics\u003c/code\u003e OpenBlock Tactic'* CloseBlock\n;\n\u003c/code\u003e\n\u003c/p\u003e",
          "module": "Idris.ParseExpr",
          "name": "tacticsExpr",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IdrisParser PTerm",
          "source": "src/Idris-ParseExpr.html#tacticsExpr",
          "type": "function"
        },
        "index": {
          "description": "Parses tactics block TacticsExpr tactics OpenBlock Tactic CloseBlock",
          "hierarchy": "Idris ParseExpr",
          "module": "Idris.ParseExpr",
          "name": "tacticsExpr",
          "normalized": "SyntaxInfo-\u003eIdrisParser PTerm",
          "package": "idris",
          "partial": "Expr",
          "signature": "SyntaxInfo-\u003eIdrisParser PTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseExpr.html#v:tacticsExpr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a type declaration list with optional parameters\n\u003ccode\u003e\nTypeOptDeclList ::=\n    NameOrPlaceholder TypeSig?\n  | NameOrPlaceholder TypeSig? ',' TypeOptDeclList\n  ;\n\u003c/code\u003e\n\u003c/p\u003e\u003cpre\u003e\nNameOrPlaceHolder ::= Name | '_';\n\u003c/pre\u003e",
          "module": "Idris.ParseExpr",
          "name": "tyOptDeclList",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IdrisParser [(Name, PTerm)]",
          "source": "src/Idris-ParseExpr.html#tyOptDeclList",
          "type": "function"
        },
        "index": {
          "description": "Parses type declaration list with optional parameters TypeOptDeclList NameOrPlaceholder TypeSig NameOrPlaceholder TypeSig TypeOptDeclList NameOrPlaceHolder Name",
          "hierarchy": "Idris ParseExpr",
          "module": "Idris.ParseExpr",
          "name": "tyOptDeclList",
          "normalized": "SyntaxInfo-\u003eIdrisParser[(Name,PTerm)]",
          "package": "idris",
          "partial": "Opt Decl List",
          "signature": "SyntaxInfo-\u003eIdrisParser[(Name,PTerm)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseExpr.html#v:tyOptDeclList"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a type declaration list\n\u003ccode\u003e\nTypeDeclList ::=\n    FunctionSignatureList\n  | NameList TypeSig\n  ;\n\u003c/code\u003e\n\u003c/p\u003e\u003cpre\u003e\nFunctionSignatureList ::=\n    Name TypeSig\n  | Name TypeSig ',' FunctionSignatureList\n  ;\n\u003c/pre\u003e",
          "module": "Idris.ParseExpr",
          "name": "typeDeclList",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IdrisParser [(Name, PTerm)]",
          "source": "src/Idris-ParseExpr.html#typeDeclList",
          "type": "function"
        },
        "index": {
          "description": "Parses type declaration list TypeDeclList FunctionSignatureList NameList TypeSig FunctionSignatureList Name TypeSig Name TypeSig FunctionSignatureList",
          "hierarchy": "Idris ParseExpr",
          "module": "Idris.ParseExpr",
          "name": "typeDeclList",
          "normalized": "SyntaxInfo-\u003eIdrisParser[(Name,PTerm)]",
          "package": "idris",
          "partial": "Decl List",
          "signature": "SyntaxInfo-\u003eIdrisParser[(Name,PTerm)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseExpr.html#v:typeDeclList"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a type signature\n\u003ccode\u003e\nTypeSig ::=\n  \u003ccode\u003e:\u003c/code\u003e Expr\n  ;\n\u003c/code\u003e\n\u003ccode\u003e\nTypeExpr ::= ConstraintList? Expr;\n\u003c/code\u003e\n\u003c/p\u003e",
          "module": "Idris.ParseExpr",
          "name": "typeExpr",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IdrisParser PTerm",
          "source": "src/Idris-ParseExpr.html#typeExpr",
          "type": "function"
        },
        "index": {
          "description": "Parses type signature TypeSig Expr TypeExpr ConstraintList Expr",
          "hierarchy": "Idris ParseExpr",
          "module": "Idris.ParseExpr",
          "name": "typeExpr",
          "normalized": "SyntaxInfo-\u003eIdrisParser PTerm",
          "package": "idris",
          "partial": "Expr",
          "signature": "SyntaxInfo-\u003eIdrisParser PTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseExpr.html#v:typeExpr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a unification log expression\nUnifyLog ::=\n  \u003ccode\u003e%\u003c/code\u003e \u003ccode\u003e\u003ca\u003eunifyLog\u003c/a\u003e\u003c/code\u003e SimpleExpr\n  ;\n\u003c/p\u003e",
          "module": "Idris.ParseExpr",
          "name": "unifyLog",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IdrisParser PTerm",
          "source": "src/Idris-ParseExpr.html#unifyLog",
          "type": "function"
        },
        "index": {
          "description": "Parses unification log expression UnifyLog unifyLog SimpleExpr",
          "hierarchy": "Idris ParseExpr",
          "module": "Idris.ParseExpr",
          "name": "unifyLog",
          "normalized": "SyntaxInfo-\u003eIdrisParser PTerm",
          "package": "idris",
          "partial": "Log",
          "signature": "SyntaxInfo-\u003eIdrisParser PTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseExpr.html#v:unifyLog"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a verbatim multi-line string literal (triple-quoted)\n\u003c/p\u003e\u003cpre\u003e\nVerbatimString_t ::=\n  '\"\"\"' ~'\"\"\"' '\"\"\"'\n;\n\u003c/pre\u003e",
          "module": "Idris.ParseExpr",
          "name": "verbatimStringLiteral",
          "package": "idris",
          "signature": "m String",
          "source": "src/Idris-ParseExpr.html#verbatimStringLiteral",
          "type": "function"
        },
        "index": {
          "description": "Parses verbatim multi-line string literal triple-quoted VerbatimString",
          "hierarchy": "Idris ParseExpr",
          "module": "Idris.ParseExpr",
          "name": "verbatimStringLiteral",
          "package": "idris",
          "partial": "String Literal",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseExpr.html#v:verbatimStringLiteral"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ParseHelpers",
          "name": "ParseHelpers",
          "package": "idris",
          "source": "src/Idris-ParseHelpers.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "Idris ParseHelpers",
          "module": "Idris.ParseHelpers",
          "name": "ParseHelpers",
          "package": "idris",
          "partial": "Parse Helpers",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseHelpers.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ParseHelpers",
          "name": "IdrisInnerParser",
          "package": "idris",
          "source": "src/Idris-ParseHelpers.html#IdrisInnerParser",
          "type": "newtype"
        },
        "index": {
          "hierarchy": "Idris ParseHelpers",
          "module": "Idris.ParseHelpers",
          "name": "IdrisInnerParser",
          "package": "idris",
          "partial": "Idris Inner Parser",
          "type": "newtype"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseHelpers.html#t:IdrisInnerParser"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eIdris parser with state used during parsing\n\u003c/p\u003e",
          "module": "Idris.ParseHelpers",
          "name": "IdrisParser",
          "package": "idris",
          "source": "src/Idris-ParseHelpers.html#IdrisParser",
          "type": "type"
        },
        "index": {
          "description": "Idris parser with state used during parsing",
          "hierarchy": "Idris ParseHelpers",
          "module": "Idris.ParseHelpers",
          "name": "IdrisParser",
          "package": "idris",
          "partial": "Idris Parser",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseHelpers.html#t:IdrisParser"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eRepresentation of an operation that can compare the current indentation with the last indentation, and an error message if it fails\n\u003c/p\u003e",
          "module": "Idris.ParseHelpers",
          "name": "IndentProperty",
          "package": "idris",
          "source": "src/Idris-ParseHelpers.html#IndentProperty",
          "type": "data"
        },
        "index": {
          "description": "Representation of an operation that can compare the current indentation with the last indentation and an error message if it fails",
          "hierarchy": "Idris ParseHelpers",
          "module": "Idris.ParseHelpers",
          "name": "IndentProperty",
          "package": "idris",
          "partial": "Indent Property",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseHelpers.html#t:IndentProperty"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eGeneralized monadic parsing constraint type\n\u003c/p\u003e",
          "module": "Idris.ParseHelpers",
          "name": "MonadicParsing",
          "package": "idris",
          "source": "src/Idris-ParseHelpers.html#MonadicParsing",
          "type": "type"
        },
        "index": {
          "description": "Generalized monadic parsing constraint type",
          "hierarchy": "Idris ParseHelpers",
          "module": "Idris.ParseHelpers",
          "name": "MonadicParsing",
          "package": "idris",
          "partial": "Monadic Parsing",
          "type": "type"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseHelpers.html#t:MonadicParsing"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ParseHelpers",
          "name": "IdrisInnerParser",
          "package": "idris",
          "signature": "IdrisInnerParser",
          "source": "src/Idris-ParseHelpers.html#IdrisInnerParser",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ParseHelpers",
          "module": "Idris.ParseHelpers",
          "name": "IdrisInnerParser",
          "package": "idris",
          "partial": "Idris Inner Parser",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseHelpers.html#v:IdrisInnerParser"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ParseHelpers",
          "name": "IndentProperty",
          "package": "idris",
          "signature": "IndentProperty (Int -\u003e Int -\u003e Bool) String",
          "source": "src/Idris-ParseHelpers.html#IndentProperty",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ParseHelpers",
          "module": "Idris.ParseHelpers",
          "name": "IndentProperty",
          "normalized": "IndentProperty(Int-\u003eInt-\u003eBool)String",
          "package": "idris",
          "partial": "Indent Property",
          "signature": "IndentProperty(Int-\u003eInt-\u003eBool)String",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseHelpers.html#v:IndentProperty"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eAdd accessbility option for data declarations\n (works for classes too - \u003ccode\u003eabstract\u003c/code\u003e means the data/class is visible but members not) \n\u003c/p\u003e",
          "module": "Idris.ParseHelpers",
          "name": "accData",
          "package": "idris",
          "signature": "Maybe Accessibility -\u003e Name -\u003e [Name] -\u003e IdrisParser ()",
          "source": "src/Idris-ParseHelpers.html#accData",
          "type": "function"
        },
        "index": {
          "description": "Add accessbility option for data declarations works for classes too abstract means the data class is visible but members not",
          "hierarchy": "Idris ParseHelpers",
          "module": "Idris.ParseHelpers",
          "name": "accData",
          "normalized": "Maybe Accessibility-\u003eName-\u003e[Name]-\u003eIdrisParser()",
          "package": "idris",
          "partial": "Data",
          "signature": "Maybe Accessibility-\u003eName-\u003e[Name]-\u003eIdrisParser()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseHelpers.html#v:accData"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses an accessibilty modifier (e.g. public, private) \n\u003c/p\u003e",
          "module": "Idris.ParseHelpers",
          "name": "accessibility",
          "package": "idris",
          "signature": "IdrisParser Accessibility",
          "source": "src/Idris-ParseHelpers.html#accessibility",
          "type": "function"
        },
        "index": {
          "description": "Parses an accessibilty modifier e.g public private",
          "hierarchy": "Idris ParseHelpers",
          "module": "Idris.ParseHelpers",
          "name": "accessibility",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseHelpers.html#v:accessibility"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eAdds accessibility option for function\n\u003c/p\u003e",
          "module": "Idris.ParseHelpers",
          "name": "addAcc",
          "package": "idris",
          "signature": "Name -\u003e Maybe Accessibility -\u003e IdrisParser ()",
          "source": "src/Idris-ParseHelpers.html#addAcc",
          "type": "function"
        },
        "index": {
          "description": "Adds accessibility option for function",
          "hierarchy": "Idris ParseHelpers",
          "module": "Idris.ParseHelpers",
          "name": "addAcc",
          "normalized": "Name-\u003eMaybe Accessibility-\u003eIdrisParser()",
          "package": "idris",
          "partial": "Acc",
          "signature": "Name-\u003eMaybe Accessibility-\u003eIdrisParser()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseHelpers.html#v:addAcc"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eBind constraints to term\n\u003c/p\u003e",
          "module": "Idris.ParseHelpers",
          "name": "bindList",
          "package": "idris",
          "signature": "(Name -\u003e PTerm -\u003e PTerm -\u003e PTerm) -\u003e [(Name, PTerm)] -\u003e PTerm -\u003e PTerm",
          "source": "src/Idris-ParseHelpers.html#bindList",
          "type": "function"
        },
        "index": {
          "description": "Bind constraints to term",
          "hierarchy": "Idris ParseHelpers",
          "module": "Idris.ParseHelpers",
          "name": "bindList",
          "normalized": "(Name-\u003ePTerm-\u003ePTerm-\u003ePTerm)-\u003e[(Name,PTerm)]-\u003ePTerm-\u003ePTerm",
          "package": "idris",
          "partial": "List",
          "signature": "(Name-\u003ePTerm-\u003ePTerm-\u003ePTerm)-\u003e[(Name,PTerm)]-\u003ePTerm-\u003ePTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseHelpers.html#v:bindList"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ParseHelpers",
          "name": "char",
          "package": "idris",
          "signature": "Char -\u003e m Char",
          "source": "src/Idris-ParseHelpers.html#char",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ParseHelpers",
          "module": "Idris.ParseHelpers",
          "name": "char",
          "normalized": "Char-\u003ea Char",
          "package": "idris",
          "signature": "Char-\u003em Char",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseHelpers.html#v:char"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003e&#160;Parses a char literal\u003c/p\u003e",
          "module": "Idris.ParseHelpers",
          "name": "charLiteral",
          "package": "idris",
          "signature": "m Char",
          "source": "src/Idris-ParseHelpers.html#charLiteral",
          "type": "function"
        },
        "index": {
          "description": "Parses char literal",
          "hierarchy": "Idris ParseHelpers",
          "module": "Idris.ParseHelpers",
          "name": "charLiteral",
          "package": "idris",
          "partial": "Literal",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseHelpers.html#v:charLiteral"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses an end of block\n\u003c/p\u003e",
          "module": "Idris.ParseHelpers",
          "name": "closeBlock",
          "package": "idris",
          "signature": "IdrisParser ()",
          "source": "src/Idris-ParseHelpers.html#closeBlock",
          "type": "function"
        },
        "index": {
          "description": "Parses an end of block",
          "hierarchy": "Idris ParseHelpers",
          "module": "Idris.ParseHelpers",
          "name": "closeBlock",
          "normalized": "IdrisParser()",
          "package": "idris",
          "partial": "Block",
          "signature": "IdrisParser()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseHelpers.html#v:closeBlock"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eCollect \u003ccode\u003e\u003ca\u003ePClauses\u003c/a\u003e\u003c/code\u003e with the same function name\n\u003c/p\u003e",
          "module": "Idris.ParseHelpers",
          "name": "collect",
          "package": "idris",
          "signature": "[PDecl] -\u003e [PDecl]",
          "source": "src/Idris-ParseHelpers.html#collect",
          "type": "function"
        },
        "index": {
          "description": "Collect PClauses with the same function name",
          "hierarchy": "Idris ParseHelpers",
          "module": "Idris.ParseHelpers",
          "name": "collect",
          "normalized": "[PDecl]-\u003e[PDecl]",
          "package": "idris",
          "signature": "[PDecl]-\u003e[PDecl]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseHelpers.html#v:collect"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eGet column number from position \n\u003c/p\u003e",
          "module": "Idris.ParseHelpers",
          "name": "columnNum",
          "package": "idris",
          "signature": "Delta -\u003e Int",
          "source": "src/Idris-ParseHelpers.html#columnNum",
          "type": "function"
        },
        "index": {
          "description": "Get column number from position",
          "hierarchy": "Idris ParseHelpers",
          "module": "Idris.ParseHelpers",
          "name": "columnNum",
          "normalized": "Delta-\u003eInt",
          "package": "idris",
          "partial": "Num",
          "signature": "Delta-\u003eInt",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseHelpers.html#v:columnNum"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a documentation comment (similar to haddoc) given a marker character\n\u003c/p\u003e\u003cpre\u003e\n  DocComment_t ::=   '--' DocCommentMarker_t ~EOL_t* EOL_t\n                  | '{ -' DocCommentMarket_t ~'- }'* '- }'\n                 ;\n\u003c/pre\u003e",
          "module": "Idris.ParseHelpers",
          "name": "docComment",
          "package": "idris",
          "signature": "Char -\u003e m String",
          "source": "src/Idris-ParseHelpers.html#docComment",
          "type": "function"
        },
        "index": {
          "description": "Parses documentation comment similar to haddoc given marker character DocComment DocCommentMarker EOL EOL DocCommentMarket",
          "hierarchy": "Idris ParseHelpers",
          "module": "Idris.ParseHelpers",
          "name": "docComment",
          "normalized": "Char-\u003ea String",
          "package": "idris",
          "partial": "Comment",
          "signature": "Char-\u003em String",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseHelpers.html#v:docComment"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ParseHelpers",
          "name": "eol",
          "package": "idris",
          "signature": "m ()",
          "source": "src/Idris-ParseHelpers.html#eol",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ParseHelpers",
          "module": "Idris.ParseHelpers",
          "name": "eol",
          "normalized": "a()",
          "package": "idris",
          "signature": "m()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseHelpers.html#v:eol"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eEqual indent property\n\u003c/p\u003e",
          "module": "Idris.ParseHelpers",
          "name": "eqProp",
          "package": "idris",
          "signature": "IndentProperty",
          "source": "src/Idris-ParseHelpers.html#eqProp",
          "type": "function"
        },
        "index": {
          "description": "Equal indent property",
          "hierarchy": "Idris ParseHelpers",
          "module": "Idris.ParseHelpers",
          "name": "eqProp",
          "package": "idris",
          "partial": "Prop",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseHelpers.html#v:eqProp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eGet filename from position (returns \u003ca\u003e(interactive)\u003c/a\u003e when no source file is given)  \n\u003c/p\u003e",
          "module": "Idris.ParseHelpers",
          "name": "fileName",
          "package": "idris",
          "signature": "Delta -\u003e String",
          "source": "src/Idris-ParseHelpers.html#fileName",
          "type": "function"
        },
        "index": {
          "description": "Get filename from position returns interactive when no source file is given",
          "hierarchy": "Idris ParseHelpers",
          "module": "Idris.ParseHelpers",
          "name": "fileName",
          "normalized": "Delta-\u003eString",
          "package": "idris",
          "partial": "Name",
          "signature": "Delta-\u003eString",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseHelpers.html#v:fileName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eError message with possible fixes list \n\u003c/p\u003e",
          "module": "Idris.ParseHelpers",
          "name": "fixErrorMsg",
          "package": "idris",
          "signature": "String -\u003e [String] -\u003e String",
          "source": "src/Idris-ParseHelpers.html#fixErrorMsg",
          "type": "function"
        },
        "index": {
          "description": "Error message with possible fixes list",
          "hierarchy": "Idris ParseHelpers",
          "module": "Idris.ParseHelpers",
          "name": "fixErrorMsg",
          "normalized": "String-\u003e[String]-\u003eString",
          "package": "idris",
          "partial": "Error Msg",
          "signature": "String-\u003e[String]-\u003eString",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseHelpers.html#v:fixErrorMsg"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a floating point number\n\u003c/p\u003e",
          "module": "Idris.ParseHelpers",
          "name": "float",
          "package": "idris",
          "signature": "m Double",
          "source": "src/Idris-ParseHelpers.html#float",
          "type": "function"
        },
        "index": {
          "description": "Parses floating point number",
          "hierarchy": "Idris ParseHelpers",
          "module": "Idris.ParseHelpers",
          "name": "float",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseHelpers.html#v:float"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eGet file position as FC \n\u003c/p\u003e",
          "module": "Idris.ParseHelpers",
          "name": "getFC",
          "package": "idris",
          "signature": "m FC",
          "source": "src/Idris-ParseHelpers.html#getFC",
          "type": "function"
        },
        "index": {
          "description": "Get file position as FC",
          "hierarchy": "Idris ParseHelpers",
          "module": "Idris.ParseHelpers",
          "name": "getFC",
          "package": "idris",
          "partial": "FC",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseHelpers.html#v:getFC"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eGreater-than indent property\n\u003c/p\u003e",
          "module": "Idris.ParseHelpers",
          "name": "gtProp",
          "package": "idris",
          "signature": "IndentProperty",
          "source": "src/Idris-ParseHelpers.html#gtProp",
          "type": "function"
        },
        "index": {
          "description": "Greater-than indent property",
          "hierarchy": "Idris ParseHelpers",
          "module": "Idris.ParseHelpers",
          "name": "gtProp",
          "package": "idris",
          "partial": "Prop",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseHelpers.html#v:gtProp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eGreater-than or equal to indent property\n\u003c/p\u003e",
          "module": "Idris.ParseHelpers",
          "name": "gteProp",
          "package": "idris",
          "signature": "IndentProperty",
          "source": "src/Idris-ParseHelpers.html#gteProp",
          "type": "function"
        },
        "index": {
          "description": "Greater-than or equal to indent property",
          "hierarchy": "Idris ParseHelpers",
          "module": "Idris.ParseHelpers",
          "name": "gteProp",
          "package": "idris",
          "partial": "Prop",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseHelpers.html#v:gteProp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses an identifier with possible namespace as a name\n\u003c/p\u003e",
          "module": "Idris.ParseHelpers",
          "name": "iName",
          "package": "idris",
          "signature": "[String] -\u003e m Name",
          "source": "src/Idris-ParseHelpers.html#iName",
          "type": "function"
        },
        "index": {
          "description": "Parses an identifier with possible namespace as name",
          "hierarchy": "Idris ParseHelpers",
          "module": "Idris.ParseHelpers",
          "name": "iName",
          "normalized": "[String]-\u003ea Name",
          "package": "idris",
          "partial": "Name",
          "signature": "[String]-\u003em Name",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseHelpers.html#v:iName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ParseHelpers",
          "name": "identifier",
          "package": "idris",
          "signature": "m String",
          "source": "src/Idris-ParseHelpers.html#identifier",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ParseHelpers",
          "module": "Idris.ParseHelpers",
          "name": "identifier",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseHelpers.html#v:identifier"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eIdris Style for parsing identifiers/reserved keywords\n\u003c/p\u003e",
          "module": "Idris.ParseHelpers",
          "name": "idrisStyle",
          "package": "idris",
          "signature": "IdentifierStyle m",
          "source": "src/Idris-ParseHelpers.html#idrisStyle",
          "type": "function"
        },
        "index": {
          "description": "Idris Style for parsing identifiers reserved keywords",
          "hierarchy": "Idris ParseHelpers",
          "module": "Idris.ParseHelpers",
          "name": "idrisStyle",
          "package": "idris",
          "partial": "Style",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseHelpers.html#v:idrisStyle"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eGets current indentation\n\u003c/p\u003e",
          "module": "Idris.ParseHelpers",
          "name": "indent",
          "package": "idris",
          "signature": "IdrisParser Int",
          "source": "src/Idris-ParseHelpers.html#indent",
          "type": "function"
        },
        "index": {
          "description": "Gets current indentation",
          "hierarchy": "Idris ParseHelpers",
          "module": "Idris.ParseHelpers",
          "name": "indent",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseHelpers.html#v:indent"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eAllows comparison of indent, and fails if property doesn't hold\n\u003c/p\u003e",
          "module": "Idris.ParseHelpers",
          "name": "indentPropHolds",
          "package": "idris",
          "signature": "IndentProperty -\u003e IdrisParser ()",
          "source": "src/Idris-ParseHelpers.html#indentPropHolds",
          "type": "function"
        },
        "index": {
          "description": "Allows comparison of indent and fails if property doesn hold",
          "hierarchy": "Idris ParseHelpers",
          "module": "Idris.ParseHelpers",
          "name": "indentPropHolds",
          "normalized": "IndentProperty-\u003eIdrisParser()",
          "package": "idris",
          "partial": "Prop Holds",
          "signature": "IndentProperty-\u003eIdrisParser()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseHelpers.html#v:indentPropHolds"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eApplies parser in an indented position\n\u003c/p\u003e",
          "module": "Idris.ParseHelpers",
          "name": "indented",
          "package": "idris",
          "signature": "IdrisParser a -\u003e IdrisParser a",
          "source": "src/Idris-ParseHelpers.html#indented",
          "type": "function"
        },
        "index": {
          "description": "Applies parser in an indented position",
          "hierarchy": "Idris ParseHelpers",
          "module": "Idris.ParseHelpers",
          "name": "indented",
          "normalized": "IdrisParser a-\u003eIdrisParser a",
          "package": "idris",
          "signature": "IdrisParser a-\u003eIdrisParser a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseHelpers.html#v:indented"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eApplies parser to get a block (which has possibly indented statements)\n\u003c/p\u003e",
          "module": "Idris.ParseHelpers",
          "name": "indentedBlock",
          "package": "idris",
          "signature": "IdrisParser a -\u003e IdrisParser [a]",
          "source": "src/Idris-ParseHelpers.html#indentedBlock",
          "type": "function"
        },
        "index": {
          "description": "Applies parser to get block which has possibly indented statements",
          "hierarchy": "Idris ParseHelpers",
          "module": "Idris.ParseHelpers",
          "name": "indentedBlock",
          "normalized": "IdrisParser a-\u003eIdrisParser[a]",
          "package": "idris",
          "partial": "Block",
          "signature": "IdrisParser a-\u003eIdrisParser[a]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseHelpers.html#v:indentedBlock"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eApplies parser to get a block with at least one statement (which has possibly indented statements)\n\u003c/p\u003e",
          "module": "Idris.ParseHelpers",
          "name": "indentedBlock1",
          "package": "idris",
          "signature": "IdrisParser a -\u003e IdrisParser [a]",
          "source": "src/Idris-ParseHelpers.html#indentedBlock1",
          "type": "function"
        },
        "index": {
          "description": "Applies parser to get block with at least one statement which has possibly indented statements",
          "hierarchy": "Idris ParseHelpers",
          "module": "Idris.ParseHelpers",
          "name": "indentedBlock1",
          "normalized": "IdrisParser a-\u003eIdrisParser[a]",
          "package": "idris",
          "partial": "Block",
          "signature": "IdrisParser a-\u003eIdrisParser[a]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseHelpers.html#v:indentedBlock1"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eApplies parser to get a block with exactly one (possibly indented) statement\n\u003c/p\u003e",
          "module": "Idris.ParseHelpers",
          "name": "indentedBlockS",
          "package": "idris",
          "signature": "IdrisParser a -\u003e IdrisParser a",
          "source": "src/Idris-ParseHelpers.html#indentedBlockS",
          "type": "function"
        },
        "index": {
          "description": "Applies parser to get block with exactly one possibly indented statement",
          "hierarchy": "Idris ParseHelpers",
          "module": "Idris.ParseHelpers",
          "name": "indentedBlockS",
          "normalized": "IdrisParser a-\u003eIdrisParser a",
          "package": "idris",
          "partial": "Block",
          "signature": "IdrisParser a-\u003eIdrisParser a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseHelpers.html#v:indentedBlockS"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eList of all initial segments in ascending order of a list.  Every\nsuch initial segment ends right before an element satisfying the given\ncondition.\n\u003c/p\u003e",
          "module": "Idris.ParseHelpers",
          "name": "initsEndAt",
          "package": "idris",
          "signature": "(a -\u003e Bool) -\u003e [a] -\u003e [[a]]",
          "source": "src/Idris-ParseHelpers.html#initsEndAt",
          "type": "function"
        },
        "index": {
          "description": "List of all initial segments in ascending order of list Every such initial segment ends right before an element satisfying the given condition",
          "hierarchy": "Idris ParseHelpers",
          "module": "Idris.ParseHelpers",
          "name": "initsEndAt",
          "normalized": "(a-\u003eBool)-\u003e[a]-\u003e[[a]]",
          "package": "idris",
          "partial": "End At",
          "signature": "(a-\u003eBool)-\u003e[a]-\u003e[[a]]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseHelpers.html#v:initsEndAt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses an integral number\n\u003c/p\u003e",
          "module": "Idris.ParseHelpers",
          "name": "integer",
          "package": "idris",
          "signature": "m Integer",
          "source": "src/Idris-ParseHelpers.html#integer",
          "type": "function"
        },
        "index": {
          "description": "Parses an integral number",
          "hierarchy": "Idris ParseHelpers",
          "module": "Idris.ParseHelpers",
          "name": "integer",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseHelpers.html#v:integer"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eChecks if a character is a documentation comment marker\n\u003c/p\u003e",
          "module": "Idris.ParseHelpers",
          "name": "isDocCommentMarker",
          "package": "idris",
          "signature": "Char -\u003e Bool",
          "source": "src/Idris-ParseHelpers.html#isDocCommentMarker",
          "type": "function"
        },
        "index": {
          "description": "Checks if character is documentation comment marker",
          "hierarchy": "Idris ParseHelpers",
          "module": "Idris.ParseHelpers",
          "name": "isDocCommentMarker",
          "normalized": "Char-\u003eBool",
          "package": "idris",
          "partial": "Doc Comment Marker",
          "signature": "Char-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseHelpers.html#v:isDocCommentMarker"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eChecks if a charcter is end of line\n\u003c/p\u003e",
          "module": "Idris.ParseHelpers",
          "name": "isEol",
          "package": "idris",
          "signature": "Char -\u003e Bool",
          "source": "src/Idris-ParseHelpers.html#isEol",
          "type": "function"
        },
        "index": {
          "description": "Checks if charcter is end of line",
          "hierarchy": "Idris ParseHelpers",
          "module": "Idris.ParseHelpers",
          "name": "isEol",
          "normalized": "Char-\u003eBool",
          "package": "idris",
          "partial": "Eol",
          "signature": "Char-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseHelpers.html#v:isEol"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses and keeps a terminator\n\u003c/p\u003e",
          "module": "Idris.ParseHelpers",
          "name": "keepTerminator",
          "package": "idris",
          "signature": "IdrisParser ()",
          "source": "src/Idris-ParseHelpers.html#keepTerminator",
          "type": "function"
        },
        "index": {
          "description": "Parses and keeps terminator",
          "hierarchy": "Idris ParseHelpers",
          "module": "Idris.ParseHelpers",
          "name": "keepTerminator",
          "normalized": "IdrisParser()",
          "package": "idris",
          "partial": "Terminator",
          "signature": "IdrisParser()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseHelpers.html#v:keepTerminator"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eGets last indentation\n\u003c/p\u003e",
          "module": "Idris.ParseHelpers",
          "name": "lastIndent",
          "package": "idris",
          "signature": "IdrisParser Int",
          "source": "src/Idris-ParseHelpers.html#lastIndent",
          "type": "function"
        },
        "index": {
          "description": "Gets last indentation",
          "hierarchy": "Idris ParseHelpers",
          "module": "Idris.ParseHelpers",
          "name": "lastIndent",
          "package": "idris",
          "partial": "Indent",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseHelpers.html#v:lastIndent"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a character as a token\n\u003c/p\u003e",
          "module": "Idris.ParseHelpers",
          "name": "lchar",
          "package": "idris",
          "signature": "Char -\u003e m Char",
          "source": "src/Idris-ParseHelpers.html#lchar",
          "type": "function"
        },
        "index": {
          "description": "Parses character as token",
          "hierarchy": "Idris ParseHelpers",
          "module": "Idris.ParseHelpers",
          "name": "lchar",
          "normalized": "Char-\u003ea Char",
          "package": "idris",
          "signature": "Char-\u003em Char",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseHelpers.html#v:lchar"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eGet line number from position \n\u003c/p\u003e",
          "module": "Idris.ParseHelpers",
          "name": "lineNum",
          "package": "idris",
          "signature": "Delta -\u003e Int",
          "source": "src/Idris-ParseHelpers.html#lineNum",
          "type": "function"
        },
        "index": {
          "description": "Get line number from position",
          "hierarchy": "Idris ParseHelpers",
          "module": "Idris.ParseHelpers",
          "name": "lineNum",
          "normalized": "Delta-\u003eInt",
          "package": "idris",
          "partial": "Num",
          "signature": "Delta-\u003eInt",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseHelpers.html#v:lineNum"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eChecks if the following character matches provided parser\n\u003c/p\u003e",
          "module": "Idris.ParseHelpers",
          "name": "lookAheadMatches",
          "package": "idris",
          "signature": "m a -\u003e m Bool",
          "source": "src/Idris-ParseHelpers.html#lookAheadMatches",
          "type": "function"
        },
        "index": {
          "description": "Checks if the following character matches provided parser",
          "hierarchy": "Idris ParseHelpers",
          "module": "Idris.ParseHelpers",
          "name": "lookAheadMatches",
          "normalized": "a b-\u003ea Bool",
          "package": "idris",
          "partial": "Ahead Matches",
          "signature": "m a-\u003em Bool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseHelpers.html#v:lookAheadMatches"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eLess-than indent property\n\u003c/p\u003e",
          "module": "Idris.ParseHelpers",
          "name": "ltProp",
          "package": "idris",
          "signature": "IndentProperty",
          "source": "src/Idris-ParseHelpers.html#ltProp",
          "type": "function"
        },
        "index": {
          "description": "Less-than indent property",
          "hierarchy": "Idris ParseHelpers",
          "module": "Idris.ParseHelpers",
          "name": "ltProp",
          "package": "idris",
          "partial": "Prop",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseHelpers.html#v:ltProp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eLess-than or equal to indent property\n\u003c/p\u003e",
          "module": "Idris.ParseHelpers",
          "name": "lteProp",
          "package": "idris",
          "signature": "IndentProperty",
          "source": "src/Idris-ParseHelpers.html#lteProp",
          "type": "function"
        },
        "index": {
          "description": "Less-than or equal to indent property",
          "hierarchy": "Idris ParseHelpers",
          "module": "Idris.ParseHelpers",
          "name": "lteProp",
          "package": "idris",
          "partial": "Prop",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseHelpers.html#v:lteProp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses an string possibly prefixed by a namespace\n\u003c/p\u003e",
          "module": "Idris.ParseHelpers",
          "name": "maybeWithNS",
          "package": "idris",
          "signature": "m String -\u003e Bool -\u003e [String] -\u003e m Name",
          "source": "src/Idris-ParseHelpers.html#maybeWithNS",
          "type": "function"
        },
        "index": {
          "description": "Parses an string possibly prefixed by namespace",
          "hierarchy": "Idris ParseHelpers",
          "module": "Idris.ParseHelpers",
          "name": "maybeWithNS",
          "normalized": "a String-\u003eBool-\u003e[String]-\u003ea Name",
          "package": "idris",
          "partial": "With NS",
          "signature": "m String-\u003eBool-\u003e[String]-\u003em Name",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseHelpers.html#v:maybeWithNS"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eCreate a \u003ccode\u003e\u003ca\u003eName\u003c/a\u003e\u003c/code\u003e from a pair of strings representing a base name and its\n namespace.\n\u003c/p\u003e",
          "module": "Idris.ParseHelpers",
          "name": "mkName",
          "package": "idris",
          "signature": "(String, String) -\u003e Name",
          "source": "src/Idris-ParseHelpers.html#mkName",
          "type": "function"
        },
        "index": {
          "description": "Create Name from pair of strings representing base name and its namespace",
          "hierarchy": "Idris ParseHelpers",
          "module": "Idris.ParseHelpers",
          "name": "mkName",
          "normalized": "(String,String)-\u003eName",
          "package": "idris",
          "partial": "Name",
          "signature": "(String,String)-\u003eName",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseHelpers.html#v:mkName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eConsumes a multi-line comment\n\u003c/p\u003e\u003cpre\u003e\n  MultiLineComment_t ::=\n     '{ -- }'\n   | '{ -' ~DocCommentMarker_t InCommentChars_t\n  ;\n\u003c/pre\u003e\u003cpre\u003e\n  InCommentChars_t ::=\n   '- }'\n   | MultiLineComment_t InCommentChars_t\n   | ~'- }'+ InCommentChars_t\n  ;\n\u003c/pre\u003e",
          "module": "Idris.ParseHelpers",
          "name": "multiLineComment",
          "package": "idris",
          "signature": "m ()",
          "source": "src/Idris-ParseHelpers.html#multiLineComment",
          "type": "function"
        },
        "index": {
          "description": "Consumes multi-line comment MultiLineComment DocCommentMarker InCommentChars InCommentChars MultiLineComment InCommentChars InCommentChars",
          "hierarchy": "Idris ParseHelpers",
          "module": "Idris.ParseHelpers",
          "name": "multiLineComment",
          "normalized": "a()",
          "package": "idris",
          "partial": "Line Comment",
          "signature": "m()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseHelpers.html#v:multiLineComment"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a name\n\u003c/p\u003e",
          "module": "Idris.ParseHelpers",
          "name": "name",
          "package": "idris",
          "signature": "IdrisParser Name",
          "source": "src/Idris-ParseHelpers.html#name",
          "type": "function"
        },
        "index": {
          "description": "Parses name",
          "hierarchy": "Idris ParseHelpers",
          "module": "Idris.ParseHelpers",
          "name": "name",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseHelpers.html#v:name"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a natural number\n\u003c/p\u003e",
          "module": "Idris.ParseHelpers",
          "name": "natural",
          "package": "idris",
          "signature": "m Integer",
          "source": "src/Idris-ParseHelpers.html#natural",
          "type": "function"
        },
        "index": {
          "description": "Parses natural number",
          "hierarchy": "Idris ParseHelpers",
          "module": "Idris.ParseHelpers",
          "name": "natural",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseHelpers.html#v:natural"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eChecks if application expression does not end\n\u003c/p\u003e",
          "module": "Idris.ParseHelpers",
          "name": "notEndApp",
          "package": "idris",
          "signature": "IdrisParser ()",
          "source": "src/Idris-ParseHelpers.html#notEndApp",
          "type": "function"
        },
        "index": {
          "description": "Checks if application expression does not end",
          "hierarchy": "Idris ParseHelpers",
          "module": "Idris.ParseHelpers",
          "name": "notEndApp",
          "normalized": "IdrisParser()",
          "package": "idris",
          "partial": "End App",
          "signature": "IdrisParser()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseHelpers.html#v:notEndApp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eChecks that it is not end of block\n\u003c/p\u003e",
          "module": "Idris.ParseHelpers",
          "name": "notEndBlock",
          "package": "idris",
          "signature": "IdrisParser ()",
          "source": "src/Idris-ParseHelpers.html#notEndBlock",
          "type": "function"
        },
        "index": {
          "description": "Checks that it is not end of block",
          "hierarchy": "Idris ParseHelpers",
          "module": "Idris.ParseHelpers",
          "name": "notEndBlock",
          "normalized": "IdrisParser()",
          "package": "idris",
          "partial": "End Block",
          "signature": "IdrisParser()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseHelpers.html#v:notEndBlock"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eChecks that there are no braces that are not closed\n\u003c/p\u003e",
          "module": "Idris.ParseHelpers",
          "name": "notOpenBraces",
          "package": "idris",
          "signature": "IdrisParser ()",
          "source": "src/Idris-ParseHelpers.html#notOpenBraces",
          "type": "function"
        },
        "index": {
          "description": "Checks that there are no braces that are not closed",
          "hierarchy": "Idris ParseHelpers",
          "module": "Idris.ParseHelpers",
          "name": "notOpenBraces",
          "normalized": "IdrisParser()",
          "package": "idris",
          "partial": "Open Braces",
          "signature": "IdrisParser()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseHelpers.html#v:notOpenBraces"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ParseHelpers",
          "name": "opChars",
          "package": "idris",
          "signature": "String",
          "source": "src/Idris-ParseHelpers.html#opChars",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ParseHelpers",
          "module": "Idris.ParseHelpers",
          "name": "opChars",
          "package": "idris",
          "partial": "Chars",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseHelpers.html#v:opChars"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a start of block\n\u003c/p\u003e",
          "module": "Idris.ParseHelpers",
          "name": "openBlock",
          "package": "idris",
          "signature": "IdrisParser ()",
          "source": "src/Idris-ParseHelpers.html#openBlock",
          "type": "function"
        },
        "index": {
          "description": "Parses start of block",
          "hierarchy": "Idris ParseHelpers",
          "module": "Idris.ParseHelpers",
          "name": "openBlock",
          "normalized": "IdrisParser()",
          "package": "idris",
          "partial": "Block",
          "signature": "IdrisParser()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseHelpers.html#v:openBlock"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses an operator\n\u003c/p\u003e",
          "module": "Idris.ParseHelpers",
          "name": "operator",
          "package": "idris",
          "signature": "m String",
          "source": "src/Idris-ParseHelpers.html#operator",
          "type": "function"
        },
        "index": {
          "description": "Parses an operator",
          "hierarchy": "Idris ParseHelpers",
          "module": "Idris.ParseHelpers",
          "name": "operator",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseHelpers.html#v:operator"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ParseHelpers",
          "name": "operatorLetter",
          "package": "idris",
          "signature": "m Char",
          "source": "src/Idris-ParseHelpers.html#operatorLetter",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ParseHelpers",
          "module": "Idris.ParseHelpers",
          "name": "operatorLetter",
          "package": "idris",
          "partial": "Letter",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseHelpers.html#v:operatorLetter"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003ePops indentation from stack\n\u003c/p\u003e",
          "module": "Idris.ParseHelpers",
          "name": "popIndent",
          "package": "idris",
          "signature": "IdrisParser ()",
          "source": "src/Idris-ParseHelpers.html#popIndent",
          "type": "function"
        },
        "index": {
          "description": "Pops indentation from stack",
          "hierarchy": "Idris ParseHelpers",
          "module": "Idris.ParseHelpers",
          "name": "popIndent",
          "normalized": "IdrisParser()",
          "package": "idris",
          "partial": "Indent",
          "signature": "IdrisParser()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseHelpers.html#v:popIndent"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003ePush indentation to stack\n\u003c/p\u003e",
          "module": "Idris.ParseHelpers",
          "name": "pushIndent",
          "package": "idris",
          "signature": "IdrisParser ()",
          "source": "src/Idris-ParseHelpers.html#pushIndent",
          "type": "function"
        },
        "index": {
          "description": "Push indentation to stack",
          "hierarchy": "Idris ParseHelpers",
          "module": "Idris.ParseHelpers",
          "name": "pushIndent",
          "normalized": "IdrisParser()",
          "package": "idris",
          "partial": "Indent",
          "signature": "IdrisParser()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseHelpers.html#v:pushIndent"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a reserved identifier\n\u003c/p\u003e",
          "module": "Idris.ParseHelpers",
          "name": "reserved",
          "package": "idris",
          "signature": "String -\u003e m ()",
          "source": "src/Idris-ParseHelpers.html#reserved",
          "type": "function"
        },
        "index": {
          "description": "Parses reserved identifier",
          "hierarchy": "Idris ParseHelpers",
          "module": "Idris.ParseHelpers",
          "name": "reserved",
          "normalized": "String-\u003ea()",
          "package": "idris",
          "signature": "String-\u003em()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseHelpers.html#v:reserved"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a reserved operator\n\u003c/p\u003e",
          "module": "Idris.ParseHelpers",
          "name": "reservedOp",
          "package": "idris",
          "signature": "String -\u003e m ()",
          "source": "src/Idris-ParseHelpers.html#reservedOp",
          "type": "function"
        },
        "index": {
          "description": "Parses reserved operator",
          "hierarchy": "Idris ParseHelpers",
          "module": "Idris.ParseHelpers",
          "name": "reservedOp",
          "normalized": "String-\u003ea()",
          "package": "idris",
          "partial": "Op",
          "signature": "String-\u003em()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseHelpers.html#v:reservedOp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ParseHelpers",
          "name": "runInnerParser",
          "package": "idris",
          "signature": "Parser a",
          "source": "src/Idris-ParseHelpers.html#IdrisInnerParser",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ParseHelpers",
          "module": "Idris.ParseHelpers",
          "name": "runInnerParser",
          "package": "idris",
          "partial": "Inner Parser",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseHelpers.html#v:runInnerParser"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eHelper to run Idris inner parser based stateT parsers\n\u003c/p\u003e",
          "module": "Idris.ParseHelpers",
          "name": "runparser",
          "package": "idris",
          "signature": "StateT st IdrisInnerParser res -\u003e st -\u003e String -\u003e String -\u003e Result res",
          "source": "src/Idris-ParseHelpers.html#runparser",
          "type": "function"
        },
        "index": {
          "description": "Helper to run Idris inner parser based stateT parsers",
          "hierarchy": "Idris ParseHelpers",
          "module": "Idris.ParseHelpers",
          "name": "runparser",
          "normalized": "StateT a IdrisInnerParser b-\u003ea-\u003eString-\u003eString-\u003eResult b",
          "package": "idris",
          "signature": "StateT st IdrisInnerParser res-\u003est-\u003eString-\u003eString-\u003eResult res",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseHelpers.html#v:runparser"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eConsumes any simple whitespace (any character which satisfies Char.isSpace)\n\u003c/p\u003e",
          "module": "Idris.ParseHelpers",
          "name": "simpleWhiteSpace",
          "package": "idris",
          "signature": "m ()",
          "source": "src/Idris-ParseHelpers.html#simpleWhiteSpace",
          "type": "function"
        },
        "index": {
          "description": "Consumes any simple whitespace any character which satisfies Char.isSpace",
          "hierarchy": "Idris ParseHelpers",
          "module": "Idris.ParseHelpers",
          "name": "simpleWhiteSpace",
          "normalized": "a()",
          "package": "idris",
          "partial": "White Space",
          "signature": "m()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseHelpers.html#v:simpleWhiteSpace"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eConsumes a single-line comment\n\u003c/p\u003e\u003cpre\u003e\n     SingleLineComment_t ::= '--' EOL_t\n                        |     '--' ~DocCommentMarker_t ~EOL_t* EOL_t\n                        ;\n\u003c/pre\u003e",
          "module": "Idris.ParseHelpers",
          "name": "singleLineComment",
          "package": "idris",
          "signature": "m ()",
          "source": "src/Idris-ParseHelpers.html#singleLineComment",
          "type": "function"
        },
        "index": {
          "description": "Consumes single-line comment SingleLineComment EOL DocCommentMarker EOL EOL",
          "hierarchy": "Idris ParseHelpers",
          "module": "Idris.ParseHelpers",
          "name": "singleLineComment",
          "normalized": "a()",
          "package": "idris",
          "partial": "Line Comment",
          "signature": "m()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseHelpers.html#v:singleLineComment"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ParseHelpers",
          "name": "string",
          "package": "idris",
          "signature": "String -\u003e m String",
          "source": "src/Idris-ParseHelpers.html#string",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ParseHelpers",
          "module": "Idris.ParseHelpers",
          "name": "string",
          "normalized": "String-\u003ea String",
          "package": "idris",
          "signature": "String-\u003em String",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseHelpers.html#v:string"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a string literal\n\u003c/p\u003e",
          "module": "Idris.ParseHelpers",
          "name": "stringLiteral",
          "package": "idris",
          "signature": "m String",
          "source": "src/Idris-ParseHelpers.html#stringLiteral",
          "type": "function"
        },
        "index": {
          "description": "Parses string literal",
          "hierarchy": "Idris ParseHelpers",
          "module": "Idris.ParseHelpers",
          "name": "stringLiteral",
          "package": "idris",
          "partial": "Literal",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseHelpers.html#v:stringLiteral"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses string as a token\n\u003c/p\u003e",
          "module": "Idris.ParseHelpers",
          "name": "symbol",
          "package": "idris",
          "signature": "String -\u003e m String",
          "source": "src/Idris-ParseHelpers.html#symbol",
          "type": "function"
        },
        "index": {
          "description": "Parses string as token",
          "hierarchy": "Idris ParseHelpers",
          "module": "Idris.ParseHelpers",
          "name": "symbol",
          "normalized": "String-\u003ea String",
          "package": "idris",
          "signature": "String-\u003em String",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseHelpers.html#v:symbol"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a terminator\n\u003c/p\u003e",
          "module": "Idris.ParseHelpers",
          "name": "terminator",
          "package": "idris",
          "signature": "IdrisParser ()",
          "source": "src/Idris-ParseHelpers.html#terminator",
          "type": "function"
        },
        "index": {
          "description": "Parses terminator",
          "hierarchy": "Idris ParseHelpers",
          "module": "Idris.ParseHelpers",
          "name": "terminator",
          "normalized": "IdrisParser()",
          "package": "idris",
          "signature": "IdrisParser()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseHelpers.html#v:terminator"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses some white space\n\u003c/p\u003e",
          "module": "Idris.ParseHelpers",
          "name": "whiteSpace",
          "package": "idris",
          "signature": "m ()",
          "source": "src/Idris-ParseHelpers.html#whiteSpace",
          "type": "function"
        },
        "index": {
          "description": "Parses some white space",
          "hierarchy": "Idris ParseHelpers",
          "module": "Idris.ParseHelpers",
          "name": "whiteSpace",
          "normalized": "a()",
          "package": "idris",
          "partial": "Space",
          "signature": "m()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseHelpers.html#v:whiteSpace"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ParseOps",
          "name": "ParseOps",
          "package": "idris",
          "source": "src/Idris-ParseOps.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "Idris ParseOps",
          "module": "Idris.ParseOps",
          "name": "ParseOps",
          "package": "idris",
          "partial": "Parse Ops",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseOps.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eBacktick operator\n\u003c/p\u003e",
          "module": "Idris.ParseOps",
          "name": "backtick",
          "package": "idris",
          "signature": "Operator IdrisParser PTerm",
          "source": "src/Idris-ParseOps.html#backtick",
          "type": "function"
        },
        "index": {
          "description": "Backtick operator",
          "hierarchy": "Idris ParseOps",
          "module": "Idris.ParseOps",
          "name": "backtick",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseOps.html#v:backtick"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eBinary operator\n\u003c/p\u003e",
          "module": "Idris.ParseOps",
          "name": "binary",
          "package": "idris",
          "signature": "String -\u003e (FC -\u003e PTerm -\u003e PTerm -\u003e PTerm) -\u003e Assoc -\u003e Operator IdrisParser PTerm",
          "source": "src/Idris-ParseOps.html#binary",
          "type": "function"
        },
        "index": {
          "description": "Binary operator",
          "hierarchy": "Idris ParseOps",
          "module": "Idris.ParseOps",
          "name": "binary",
          "normalized": "String-\u003e(FC-\u003ePTerm-\u003ePTerm-\u003ePTerm)-\u003eAssoc-\u003eOperator IdrisParser PTerm",
          "package": "idris",
          "signature": "String-\u003e(FC-\u003ePTerm-\u003ePTerm-\u003ePTerm)-\u003eAssoc-\u003eOperator IdrisParser PTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseOps.html#v:binary"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a fixity declaration\n\u003ccode\u003e\nFixity ::=\n  FixityType Natural_t OperatorList Terminator\n  ;\n\u003c/code\u003e\n\u003c/p\u003e",
          "module": "Idris.ParseOps",
          "name": "fixity",
          "package": "idris",
          "signature": "IdrisParser PDecl",
          "source": "src/Idris-ParseOps.html#fixity",
          "type": "function"
        },
        "index": {
          "description": "Parses fixity declaration Fixity FixityType Natural OperatorList Terminator",
          "hierarchy": "Idris ParseOps",
          "module": "Idris.ParseOps",
          "name": "fixity",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseOps.html#v:fixity"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a fixity declaration type (i.e. infix or prefix, associtavity)\n\u003ccode\u003e\n    FixityType ::=\n      'infixl'\n      | 'infixr'\n      | 'infix'\n      | \u003ccode\u003e\u003ca\u003eprefix\u003c/a\u003e\u003c/code\u003e\n      ;\n\u003c/code\u003e\n\u003c/p\u003e",
          "module": "Idris.ParseOps",
          "name": "fixityType",
          "package": "idris",
          "signature": "IdrisParser (Int -\u003e Fixity)",
          "source": "src/Idris-ParseOps.html#fixityType",
          "type": "function"
        },
        "index": {
          "description": "Parses fixity declaration type i.e infix or prefix associtavity FixityType infixl infixr infix prefix",
          "hierarchy": "Idris ParseOps",
          "module": "Idris.ParseOps",
          "name": "fixityType",
          "normalized": "IdrisParser(Int-\u003eFixity)",
          "package": "idris",
          "partial": "Type",
          "signature": "IdrisParser(Int-\u003eFixity)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseOps.html#v:fixityType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a function (either normal name or operator)\n\u003c/p\u003e\u003cpre\u003e\n  FnName ::= Name | OperatorFront;\n\u003c/pre\u003e",
          "module": "Idris.ParseOps",
          "name": "fnName",
          "package": "idris",
          "signature": "IdrisParser Name",
          "source": "src/Idris-ParseOps.html#fnName",
          "type": "function"
        },
        "index": {
          "description": "Parses function either normal name or operator FnName Name OperatorFront",
          "hierarchy": "Idris ParseOps",
          "module": "Idris.ParseOps",
          "name": "fnName",
          "package": "idris",
          "partial": "Name",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseOps.html#v:fnName"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses an operator in function position i.e. enclosed by `()', with an\n optional namespace\n\u003c/p\u003e\u003cpre\u003e\n  OperatorFront ::= (Identifier_t \u003ccode\u003e\u003ca\u003e.\u003c/a\u003e\u003c/code\u003e)? '(' Operator_t ')';\n\u003c/pre\u003e",
          "module": "Idris.ParseOps",
          "name": "operatorFront",
          "package": "idris",
          "signature": "IdrisParser Name",
          "source": "src/Idris-ParseOps.html#operatorFront",
          "type": "function"
        },
        "index": {
          "description": "Parses an operator in function position i.e enclosed by with an optional namespace OperatorFront Identifier Operator",
          "hierarchy": "Idris ParseOps",
          "module": "Idris.ParseOps",
          "name": "operatorFront",
          "package": "idris",
          "partial": "Front",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseOps.html#v:operatorFront"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003ePrefix operator\n\u003c/p\u003e",
          "module": "Idris.ParseOps",
          "name": "prefix",
          "package": "idris",
          "signature": "String -\u003e (FC -\u003e PTerm -\u003e PTerm) -\u003e Operator IdrisParser PTerm",
          "source": "src/Idris-ParseOps.html#prefix",
          "type": "function"
        },
        "index": {
          "description": "Prefix operator",
          "hierarchy": "Idris ParseOps",
          "module": "Idris.ParseOps",
          "name": "prefix",
          "normalized": "String-\u003e(FC-\u003ePTerm-\u003ePTerm)-\u003eOperator IdrisParser PTerm",
          "package": "idris",
          "signature": "String-\u003e(FC-\u003ePTerm-\u003ePTerm)-\u003eOperator IdrisParser PTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseOps.html#v:prefix"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eCreates table for fixity declarations to build expression parser\n using pre-build and user-defined operator/fixity declarations\n\u003c/p\u003e",
          "module": "Idris.ParseOps",
          "name": "table",
          "package": "idris",
          "signature": "[FixDecl] -\u003e OperatorTable IdrisParser PTerm",
          "source": "src/Idris-ParseOps.html#table",
          "type": "function"
        },
        "index": {
          "description": "Creates table for fixity declarations to build expression parser using pre-build and user-defined operator fixity declarations",
          "hierarchy": "Idris ParseOps",
          "module": "Idris.ParseOps",
          "name": "table",
          "normalized": "[FixDecl]-\u003eOperatorTable IdrisParser PTerm",
          "package": "idris",
          "signature": "[FixDecl]-\u003eOperatorTable IdrisParser PTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseOps.html#v:table"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eCalculates table for fixtiy declarations\n\u003c/p\u003e",
          "module": "Idris.ParseOps",
          "name": "toTable",
          "package": "idris",
          "signature": "[FixDecl] -\u003e OperatorTable IdrisParser PTerm",
          "source": "src/Idris-ParseOps.html#toTable",
          "type": "function"
        },
        "index": {
          "description": "Calculates table for fixtiy declarations",
          "hierarchy": "Idris ParseOps",
          "module": "Idris.ParseOps",
          "name": "toTable",
          "normalized": "[FixDecl]-\u003eOperatorTable IdrisParser PTerm",
          "package": "idris",
          "partial": "Table",
          "signature": "[FixDecl]-\u003eOperatorTable IdrisParser PTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ParseOps.html#v:toTable"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Parser",
          "name": "Parser",
          "package": "idris",
          "source": "src/Idris-Parser.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "Idris Parser",
          "module": "Idris.Parser",
          "name": "Parser",
          "package": "idris",
          "partial": "Parser",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Parser.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eAdds names to hide list \n\u003c/p\u003e",
          "module": "Idris.Parser",
          "name": "addHides",
          "package": "idris",
          "signature": "[(Name, Maybe Accessibility)] -\u003e Idris ()",
          "source": "src/Idris-Parser.html#addHides",
          "type": "function"
        },
        "index": {
          "description": "Adds names to hide list",
          "hierarchy": "Idris Parser",
          "module": "Idris.Parser",
          "name": "addHides",
          "normalized": "[(Name,Maybe Accessibility)]-\u003eIdris()",
          "package": "idris",
          "partial": "Hides",
          "signature": "[(Name,Maybe Accessibility)]-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Parser.html#v:addHides"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParse an argument expression\n\u003c/p\u003e\u003cpre\u003e\nArgExpr ::= HSimpleExpr | ;\n\u003c/pre\u003e",
          "module": "Idris.Parser",
          "name": "argExpr",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IdrisParser PTerm",
          "source": "src/Idris-Parser.html#argExpr",
          "type": "function"
        },
        "index": {
          "description": "Parse an argument expression ArgExpr HSimpleExpr",
          "hierarchy": "Idris Parser",
          "module": "Idris.Parser",
          "name": "argExpr",
          "normalized": "SyntaxInfo-\u003eIdrisParser PTerm",
          "package": "idris",
          "partial": "Expr",
          "signature": "SyntaxInfo-\u003eIdrisParser PTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Parser.html#v:argExpr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParse a constant applicative form declaration\n\u003c/p\u003e\u003cpre\u003e\nCAF ::= 'let' FnName '=' Expr Terminator;\n\u003c/pre\u003e",
          "module": "Idris.Parser",
          "name": "caf",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IdrisParser PDecl",
          "source": "src/Idris-Parser.html#caf",
          "type": "function"
        },
        "index": {
          "description": "Parse constant applicative form declaration CAF let FnName Expr Terminator",
          "hierarchy": "Idris Parser",
          "module": "Idris.Parser",
          "name": "caf",
          "normalized": "SyntaxInfo-\u003eIdrisParser PDecl",
          "package": "idris",
          "signature": "SyntaxInfo-\u003eIdrisParser PDecl",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Parser.html#v:caf"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a methods and instances block (for type classes)\n\u003c/p\u003e\u003cpre\u003e\nMethodOrInstance ::=\n   FnDecl\n   | Instance\n   ;\n\u003c/pre\u003e\u003cpre\u003e\nClassBlock ::=\n  'where' OpenBlock MethodOrInstance* CloseBlock\n  ;\n\u003c/pre\u003e",
          "module": "Idris.Parser",
          "name": "classBlock",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IdrisParser [PDecl]",
          "source": "src/Idris-Parser.html#classBlock",
          "type": "function"
        },
        "index": {
          "description": "Parses methods and instances block for type classes MethodOrInstance FnDecl Instance ClassBlock where OpenBlock MethodOrInstance CloseBlock",
          "hierarchy": "Idris Parser",
          "module": "Idris.Parser",
          "name": "classBlock",
          "normalized": "SyntaxInfo-\u003eIdrisParser[PDecl]",
          "package": "idris",
          "partial": "Block",
          "signature": "SyntaxInfo-\u003eIdrisParser[PDecl]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Parser.html#v:classBlock"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a type class declaration\n\u003c/p\u003e\u003cpre\u003e\nClassArgument ::=\n   Name\n   | '(' Name \u003ccode\u003e:\u003c/code\u003e Expr ')'\n   ;\n\u003c/pre\u003e\u003cpre\u003e\nClass ::=\n  DocComment_t? Accessibility? 'class' ConstraintList? Name ClassArgument* ClassBlock?\n  ;\n\u003c/pre\u003e",
          "module": "Idris.Parser",
          "name": "class_",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IdrisParser [PDecl]",
          "source": "src/Idris-Parser.html#class_",
          "type": "function"
        },
        "index": {
          "description": "Parses type class declaration ClassArgument Name Name Expr Class DocComment Accessibility class ConstraintList Name ClassArgument ClassBlock",
          "hierarchy": "Idris Parser",
          "module": "Idris.Parser",
          "name": "class_",
          "normalized": "SyntaxInfo-\u003eIdrisParser[PDecl]",
          "package": "idris",
          "signature": "SyntaxInfo-\u003eIdrisParser[PDecl]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Parser.html#v:class_"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a function clause\n\u003c/p\u003e\u003cpre\u003e\nRHSOrWithBlock ::= RHS WhereOrTerminator\n               | \u003ccode\u003ewith\u003c/code\u003e SimpleExpr OpenBlock FnDecl+ CloseBlock\n               ;\n\u003c/pre\u003e\u003cpre\u003e\nClause ::=                                                               WExpr+ RHSOrWithBlock\n       |   SimpleExpr \u003ccode\u003e\u003c==\u003c/code\u003e  FnName                                             RHS WhereOrTerminator\n       |   ArgExpr Operator ArgExpr                                      WExpr* RHSOrWithBlock \n       |                     FnName ConstraintArg* ImplicitOrArgExpr*    WExpr* RHSOrWithBlock\n       ;\n\u003c/pre\u003e\u003cpre\u003e\nImplicitOrArgExpr ::= ImplicitArg | ArgExpr;\n\u003c/pre\u003e\u003cpre\u003e\nWhereOrTerminator ::= WhereBlock | Terminator;\n\u003c/pre\u003e",
          "module": "Idris.Parser",
          "name": "clause",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IdrisParser PClause",
          "source": "src/Idris-Parser.html#clause",
          "type": "function"
        },
        "index": {
          "description": "Parses function clause RHSOrWithBlock RHS WhereOrTerminator with SimpleExpr OpenBlock FnDecl CloseBlock Clause WExpr RHSOrWithBlock SimpleExpr FnName RHS WhereOrTerminator ArgExpr Operator ArgExpr WExpr RHSOrWithBlock FnName ConstraintArg ImplicitOrArgExpr WExpr RHSOrWithBlock ImplicitOrArgExpr ImplicitArg ArgExpr WhereOrTerminator WhereBlock Terminator",
          "hierarchy": "Idris Parser",
          "module": "Idris.Parser",
          "name": "clause",
          "normalized": "SyntaxInfo-\u003eIdrisParser PClause",
          "package": "idris",
          "signature": "SyntaxInfo-\u003eIdrisParser PClause",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Parser.html#v:clause"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a code generation target language name\n\u003c/p\u003e\u003cpre\u003e\nCodegen ::= \u003ccode\u003eC\u003c/code\u003e\n        |   \u003ccode\u003eJava\u003c/code\u003e\n        |   \u003ccode\u003eJavaScript\u003c/code\u003e\n        |   \u003ccode\u003eNode\u003c/code\u003e\n        |   \u003ccode\u003eLLVM\u003c/code\u003e\n        |   \u003ccode\u003e\u003ca\u003eBytecode\u003c/a\u003e\u003c/code\u003e\n        ;\n\u003c/pre\u003e",
          "module": "Idris.Parser",
          "name": "codegen_",
          "package": "idris",
          "signature": "IdrisParser Codegen",
          "source": "src/Idris-Parser.html#codegen_",
          "type": "function"
        },
        "index": {
          "description": "Parses code generation target language name Codegen Java JavaScript Node LLVM Bytecode",
          "hierarchy": "Idris Parser",
          "module": "Idris.Parser",
          "name": "codegen_",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Parser.html#v:codegen_"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a top-level declaration\n\u003c/p\u003e\u003cpre\u003e\nDecl ::=\n    Decl'\n  | Using\n  | Params\n  | Mutual\n  | Namespace\n  | Class\n  | Instance\n  | DSL\n  | Directive\n  | Provider\n  | Transform\n  | Import!\n  ;\n\u003c/pre\u003e",
          "module": "Idris.Parser",
          "name": "decl",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IdrisParser [PDecl]",
          "source": "src/Idris-Parser.html#decl",
          "type": "function"
        },
        "index": {
          "description": "Parses top-level declaration Decl Decl Using Params Mutual Namespace Class Instance DSL Directive Provider Transform Import",
          "hierarchy": "Idris Parser",
          "module": "Idris.Parser",
          "name": "decl",
          "normalized": "SyntaxInfo-\u003eIdrisParser[PDecl]",
          "package": "idris",
          "signature": "SyntaxInfo-\u003eIdrisParser[PDecl]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Parser.html#v:decl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a top-level declaration with possible syntax sugar\n\u003c/p\u003e\u003cpre\u003e\nDecl' ::=\n    Fixity\n  | FunDecl'\n  | Data\n  | Record\n  | SyntaxDecl\n  ;\n\u003c/pre\u003e",
          "module": "Idris.Parser",
          "name": "decl'",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IdrisParser PDecl",
          "source": "src/Idris-Parser.html#decl%27",
          "type": "function"
        },
        "index": {
          "description": "Parses top-level declaration with possible syntax sugar Decl Fixity FunDecl Data Record SyntaxDecl",
          "hierarchy": "Idris Parser",
          "module": "Idris.Parser",
          "name": "decl'",
          "normalized": "SyntaxInfo-\u003eIdrisParser PDecl",
          "package": "idris",
          "signature": "SyntaxInfo-\u003eIdrisParser PDecl",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Parser.html#v:decl-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a compiler directive\n\u003ccode\u003e\nStringList ::=\n  String\n  | String ',' StringList\n  ;\n\u003c/code\u003e\n\u003c/p\u003e\u003cpre\u003e\nDirective ::= \u003ccode\u003e%\u003c/code\u003e Directive';\n\u003c/pre\u003e\u003cpre\u003e\nDirective' ::= \u003ccode\u003elib\u003c/code\u003e            CodeGen String_t\n           |   \u003ccode\u003elink\u003c/code\u003e           CodeGen String_t\n           |   \u003ccode\u003eflag\u003c/code\u003e           CodeGen String_t\n           |   \u003ccode\u003einclude\u003c/code\u003e        CodeGen String_t\n           |   \u003ccode\u003ehide\u003c/code\u003e           Name\n           |   \u003ccode\u003efreeze\u003c/code\u003e         Name\n           |   \u003ccode\u003eaccess\u003c/code\u003e         Accessibility\n           |   'default'        Totality\n           |   \u003ccode\u003elogging\u003c/code\u003e        Natural\n           |   \u003ccode\u003edynamic\u003c/code\u003e        StringList\n           |   \u003ccode\u003e\u003ca\u003ename\u003c/a\u003e\u003c/code\u003e           Name NameList\n           |   \u003ccode\u003eerror_handlers\u003c/code\u003e Name NameList\n           |   \u003ccode\u003elanguage\u003c/code\u003e       \u003ccode\u003e\u003ca\u003eTypeProviders\u003c/a\u003e\u003c/code\u003e\n           |   \u003ccode\u003elanguage\u003c/code\u003e       \u003ccode\u003e\u003ca\u003eErrorReflection\u003c/a\u003e\u003c/code\u003e\n           ;\n\u003c/pre\u003e",
          "module": "Idris.Parser",
          "name": "directive",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IdrisParser [PDecl]",
          "source": "src/Idris-Parser.html#directive",
          "type": "function"
        },
        "index": {
          "description": "Parses compiler directive StringList String String StringList Directive Directive Directive lib CodeGen String link CodeGen String flag CodeGen String include CodeGen String hide Name freeze Name access Accessibility default Totality logging Natural dynamic StringList name Name NameList error handlers Name NameList language TypeProviders language ErrorReflection",
          "hierarchy": "Idris Parser",
          "module": "Idris.Parser",
          "name": "directive",
          "normalized": "SyntaxInfo-\u003eIdrisParser[PDecl]",
          "package": "idris",
          "signature": "SyntaxInfo-\u003eIdrisParser[PDecl]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Parser.html#v:directive"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eThere should be a better way of doing this...\n\u003c/p\u003e",
          "module": "Idris.Parser",
          "name": "findFC",
          "package": "idris",
          "signature": "Doc -\u003e (FC, String)",
          "source": "src/Idris-Parser.html#findFC",
          "type": "function"
        },
        "index": {
          "description": "There should be better way of doing this",
          "hierarchy": "Idris Parser",
          "module": "Idris.Parser",
          "name": "findFC",
          "normalized": "Doc-\u003e(FC,String)",
          "package": "idris",
          "partial": "FC",
          "signature": "Doc-\u003e(FC,String)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Parser.html#v:findFC"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a function declaration with possible syntax sugar\n\u003c/p\u003e\u003cpre\u003e\n  FunDecl ::= FunDecl';\n\u003c/pre\u003e",
          "module": "Idris.Parser",
          "name": "fnDecl",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IdrisParser [PDecl]",
          "source": "src/Idris-Parser.html#fnDecl",
          "type": "function"
        },
        "index": {
          "description": "Parses function declaration with possible syntax sugar FunDecl FunDecl",
          "hierarchy": "Idris Parser",
          "module": "Idris.Parser",
          "name": "fnDecl",
          "normalized": "SyntaxInfo-\u003eIdrisParser[PDecl]",
          "package": "idris",
          "partial": "Decl",
          "signature": "SyntaxInfo-\u003eIdrisParser[PDecl]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Parser.html#v:fnDecl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a function declaration\n\u003c/p\u003e\u003cpre\u003e\n FunDecl' ::=\n  DocComment_t? FnOpts* Accessibility? FnOpts* FnName TypeSig Terminator\n  | Postulate\n  | Pattern\n  | CAF\n  ;\n\u003c/pre\u003e",
          "module": "Idris.Parser",
          "name": "fnDecl'",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IdrisParser PDecl",
          "source": "src/Idris-Parser.html#fnDecl%27",
          "type": "function"
        },
        "index": {
          "description": "Parses function declaration FunDecl DocComment FnOpts Accessibility FnOpts FnName TypeSig Terminator Postulate Pattern CAF",
          "hierarchy": "Idris Parser",
          "module": "Idris.Parser",
          "name": "fnDecl'",
          "normalized": "SyntaxInfo-\u003eIdrisParser PDecl",
          "package": "idris",
          "partial": "Decl'",
          "signature": "SyntaxInfo-\u003eIdrisParser PDecl",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Parser.html#v:fnDecl-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses function options given initial options\n\u003c/p\u003e\u003cpre\u003e\nFnOpts ::= \u003ccode\u003etotal\u003c/code\u003e\n  | \u003ccode\u003epartial\u003c/code\u003e\n  | \u003ccode\u003e\u003ca\u003eimplicit\u003c/a\u003e\u003c/code\u003e\n  | \u003ccode\u003e%\u003c/code\u003e \u003ccode\u003eassert_total\u003c/code\u003e\n  | \u003ccode\u003e%\u003c/code\u003e \u003ccode\u003eerror_handler\u003c/code\u003e\n  | \u003ccode\u003e%\u003c/code\u003e \u003ccode\u003ereflection\u003c/code\u003e\n  | \u003ccode\u003e%\u003c/code\u003e \u003ccode\u003e\u003ca\u003especialise\u003c/a\u003e\u003c/code\u003e '[' NameTimesList? ']'\n  ;\n\u003c/pre\u003e\u003cpre\u003e\nNameTimes ::= FnName Natural?;\n\u003c/pre\u003e\u003cpre\u003e\nNameTimesList ::=\n  NameTimes\n  | NameTimes ',' NameTimesList\n  ;\n\u003c/pre\u003e",
          "module": "Idris.Parser",
          "name": "fnOpts",
          "package": "idris",
          "signature": "[FnOpt] -\u003e IdrisParser [FnOpt]",
          "source": "src/Idris-Parser.html#fnOpts",
          "type": "function"
        },
        "index": {
          "description": "Parses function options given initial options FnOpts total partial implicit assert total error handler reflection specialise NameTimesList NameTimes FnName Natural NameTimesList NameTimes NameTimes NameTimesList",
          "hierarchy": "Idris Parser",
          "module": "Idris.Parser",
          "name": "fnOpts",
          "normalized": "[FnOpt]-\u003eIdrisParser[FnOpt]",
          "package": "idris",
          "partial": "Opts",
          "signature": "[FnOpt]-\u003eIdrisParser[FnOpt]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Parser.html#v:fnOpts"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses an import statement\n\u003c/p\u003e\u003cpre\u003e\n  Import ::= 'import' Identifier_t ';'?;\n\u003c/pre\u003e",
          "module": "Idris.Parser",
          "name": "import_",
          "package": "idris",
          "signature": "IdrisParser (String, Maybe String, FC)",
          "source": "src/Idris-Parser.html#import_",
          "type": "function"
        },
        "index": {
          "description": "Parses an import statement Import import Identifier",
          "hierarchy": "Idris Parser",
          "module": "Idris.Parser",
          "name": "import_",
          "normalized": "IdrisParser(String,Maybe String,FC)",
          "package": "idris",
          "signature": "IdrisParser(String,Maybe String,FC)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Parser.html#v:import_"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a methods block (for instances)\n\u003c/p\u003e\u003cpre\u003e\n  InstanceBlock ::= 'where' OpenBlock FnDecl* CloseBlock\n\u003c/pre\u003e",
          "module": "Idris.Parser",
          "name": "instanceBlock",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IdrisParser [PDecl]",
          "source": "src/Idris-Parser.html#instanceBlock",
          "type": "function"
        },
        "index": {
          "description": "Parses methods block for instances InstanceBlock where OpenBlock FnDecl CloseBlock",
          "hierarchy": "Idris Parser",
          "module": "Idris.Parser",
          "name": "instanceBlock",
          "normalized": "SyntaxInfo-\u003eIdrisParser[PDecl]",
          "package": "idris",
          "partial": "Block",
          "signature": "SyntaxInfo-\u003eIdrisParser[PDecl]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Parser.html#v:instanceBlock"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a type class instance declaration\n\u003c/p\u003e\u003cpre\u003e\n  Instance ::=\n    'instance' InstanceName? ConstraintList? Name SimpleExpr* InstanceBlock?\n    ;\n\u003c/pre\u003e\u003cpre\u003e\nInstanceName ::= '[' Name ']';\n\u003c/pre\u003e",
          "module": "Idris.Parser",
          "name": "instance_",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IdrisParser [PDecl]",
          "source": "src/Idris-Parser.html#instance_",
          "type": "function"
        },
        "index": {
          "description": "Parses type class instance declaration Instance instance InstanceName ConstraintList Name SimpleExpr InstanceBlock InstanceName Name",
          "hierarchy": "Idris Parser",
          "module": "Idris.Parser",
          "name": "instance_",
          "normalized": "SyntaxInfo-\u003eIdrisParser[PDecl]",
          "package": "idris",
          "signature": "SyntaxInfo-\u003eIdrisParser[PDecl]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Parser.html#v:instance_"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eLoad idris code from file \n\u003c/p\u003e",
          "module": "Idris.Parser",
          "name": "loadFromIFile",
          "package": "idris",
          "signature": "Handle -\u003e IFileType -\u003e Idris ()",
          "source": "src/Idris-Parser.html#loadFromIFile",
          "type": "function"
        },
        "index": {
          "description": "Load idris code from file",
          "hierarchy": "Idris Parser",
          "module": "Idris.Parser",
          "name": "loadFromIFile",
          "normalized": "Handle-\u003eIFileType-\u003eIdris()",
          "package": "idris",
          "partial": "From IFile",
          "signature": "Handle-\u003eIFileType-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Parser.html#v:loadFromIFile"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eLoad idris module and show error if something wrong happens \n\u003c/p\u003e",
          "module": "Idris.Parser",
          "name": "loadModule",
          "package": "idris",
          "signature": "Handle -\u003e FilePath -\u003e Idris String",
          "source": "src/Idris-Parser.html#loadModule",
          "type": "function"
        },
        "index": {
          "description": "Load idris module and show error if something wrong happens",
          "hierarchy": "Idris Parser",
          "module": "Idris.Parser",
          "name": "loadModule",
          "normalized": "Handle-\u003eFilePath-\u003eIdris String",
          "package": "idris",
          "partial": "Module",
          "signature": "Handle-\u003eFilePath-\u003eIdris String",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Parser.html#v:loadModule"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eLoad idris module \n\u003c/p\u003e",
          "module": "Idris.Parser",
          "name": "loadModule'",
          "package": "idris",
          "signature": "Handle -\u003e FilePath -\u003e Idris String",
          "source": "src/Idris-Parser.html#loadModule%27",
          "type": "function"
        },
        "index": {
          "description": "Load idris module",
          "hierarchy": "Idris Parser",
          "module": "Idris.Parser",
          "name": "loadModule'",
          "normalized": "Handle-\u003eFilePath-\u003eIdris String",
          "package": "idris",
          "partial": "Module'",
          "signature": "Handle-\u003eFilePath-\u003eIdris String",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Parser.html#v:loadModule-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eLoad Idris source code\n\u003c/p\u003e",
          "module": "Idris.Parser",
          "name": "loadSource",
          "package": "idris",
          "signature": "Handle -\u003e Bool -\u003e FilePath -\u003e Idris ()",
          "source": "src/Idris-Parser.html#loadSource",
          "type": "function"
        },
        "index": {
          "description": "Load Idris source code",
          "hierarchy": "Idris Parser",
          "module": "Idris.Parser",
          "name": "loadSource",
          "normalized": "Handle-\u003eBool-\u003eFilePath-\u003eIdris()",
          "package": "idris",
          "partial": "Source",
          "signature": "Handle-\u003eBool-\u003eFilePath-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Parser.html#v:loadSource"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eLoad idris source code and show error if something wrong happens \n\u003c/p\u003e",
          "module": "Idris.Parser",
          "name": "loadSource'",
          "package": "idris",
          "signature": "Handle -\u003e Bool -\u003e FilePath -\u003e Idris ()",
          "source": "src/Idris-Parser.html#loadSource%27",
          "type": "function"
        },
        "index": {
          "description": "Load idris source code and show error if something wrong happens",
          "hierarchy": "Idris Parser",
          "module": "Idris.Parser",
          "name": "loadSource'",
          "normalized": "Handle-\u003eBool-\u003eFilePath-\u003eIdris()",
          "package": "idris",
          "partial": "Source'",
          "signature": "Handle-\u003eBool-\u003eFilePath-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Parser.html#v:loadSource-39-"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses module definition\n\u003c/p\u003e\u003cpre\u003e\n      ModuleHeader ::= 'module' Identifier_t ';'?;\n\u003c/pre\u003e",
          "module": "Idris.Parser",
          "name": "moduleHeader",
          "package": "idris",
          "signature": "IdrisParser [String]",
          "source": "src/Idris-Parser.html#moduleHeader",
          "type": "function"
        },
        "index": {
          "description": "Parses module definition ModuleHeader module Identifier",
          "hierarchy": "Idris Parser",
          "module": "Idris.Parser",
          "name": "moduleHeader",
          "normalized": "IdrisParser[String]",
          "package": "idris",
          "partial": "Header",
          "signature": "IdrisParser[String]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Parser.html#v:moduleHeader"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a mutual declaration (for mutually recursive functions)\n\u003c/p\u003e\u003cpre\u003e\nMutual ::=\n  \u003ccode\u003e\u003ca\u003emutual\u003c/a\u003e\u003c/code\u003e OpenBlock Decl* CloseBlock\n  ;\n\u003c/pre\u003e",
          "module": "Idris.Parser",
          "name": "mutual",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IdrisParser [PDecl]",
          "source": "src/Idris-Parser.html#mutual",
          "type": "function"
        },
        "index": {
          "description": "Parses mutual declaration for mutually recursive functions Mutual mutual OpenBlock Decl CloseBlock",
          "hierarchy": "Idris Parser",
          "module": "Idris.Parser",
          "name": "mutual",
          "normalized": "SyntaxInfo-\u003eIdrisParser[PDecl]",
          "package": "idris",
          "signature": "SyntaxInfo-\u003eIdrisParser[PDecl]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Parser.html#v:mutual"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a namespace declaration\n\u003c/p\u003e\u003cpre\u003e\nNamespace ::=\n  \u003ccode\u003e\u003ca\u003enamespace\u003c/a\u003e\u003c/code\u003e identifier OpenBlock Decl+ CloseBlock\n  ;\n\u003c/pre\u003e",
          "module": "Idris.Parser",
          "name": "namespace",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IdrisParser [PDecl]",
          "source": "src/Idris-Parser.html#namespace",
          "type": "function"
        },
        "index": {
          "description": "Parses namespace declaration Namespace namespace identifier OpenBlock Decl CloseBlock",
          "hierarchy": "Idris Parser",
          "module": "Idris.Parser",
          "name": "namespace",
          "normalized": "SyntaxInfo-\u003eIdrisParser[PDecl]",
          "package": "idris",
          "signature": "SyntaxInfo-\u003eIdrisParser[PDecl]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Parser.html#v:namespace"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Parser",
          "name": "pLangExt",
          "package": "idris",
          "signature": "IdrisParser LanguageExt",
          "source": "src/Idris-Parser.html#pLangExt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Parser",
          "module": "Idris.Parser",
          "name": "pLangExt",
          "package": "idris",
          "partial": "Lang Ext",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Parser.html#v:pLangExt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a parameters declaration\n\u003c/p\u003e\u003cpre\u003e\nParams ::=\n  \u003ccode\u003eparameters\u003c/code\u003e '(' TypeDeclList ')' OpenBlock Decl* CloseBlock\n  ;\n\u003c/pre\u003e",
          "module": "Idris.Parser",
          "name": "params",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IdrisParser [PDecl]",
          "source": "src/Idris-Parser.html#params",
          "type": "function"
        },
        "index": {
          "description": "Parses parameters declaration Params parameters TypeDeclList OpenBlock Decl CloseBlock",
          "hierarchy": "Idris Parser",
          "module": "Idris.Parser",
          "name": "params",
          "normalized": "SyntaxInfo-\u003eIdrisParser[PDecl]",
          "package": "idris",
          "signature": "SyntaxInfo-\u003eIdrisParser[PDecl]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Parser.html#v:params"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses an expression from input \n\u003c/p\u003e",
          "module": "Idris.Parser",
          "name": "parseExpr",
          "package": "idris",
          "signature": "IState -\u003e String -\u003e Result PTerm",
          "source": "src/Idris-Parser.html#parseExpr",
          "type": "function"
        },
        "index": {
          "description": "Parses an expression from input",
          "hierarchy": "Idris Parser",
          "module": "Idris.Parser",
          "name": "parseExpr",
          "normalized": "IState-\u003eString-\u003eResult PTerm",
          "package": "idris",
          "partial": "Expr",
          "signature": "IState-\u003eString-\u003eResult PTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Parser.html#v:parseExpr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParse module header and imports\n\u003c/p\u003e",
          "module": "Idris.Parser",
          "name": "parseImports",
          "package": "idris",
          "signature": "FilePath -\u003e String -\u003e Idris ([String], [(String, Maybe String, FC)], Maybe Delta)",
          "source": "src/Idris-Parser.html#parseImports",
          "type": "function"
        },
        "index": {
          "description": "Parse module header and imports",
          "hierarchy": "Idris Parser",
          "module": "Idris.Parser",
          "name": "parseImports",
          "normalized": "FilePath-\u003eString-\u003eIdris([String],[(String,Maybe String,FC)],Maybe Delta)",
          "package": "idris",
          "partial": "Imports",
          "signature": "FilePath-\u003eString-\u003eIdris([String],[(String,Maybe String,FC)],Maybe Delta)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Parser.html#v:parseImports"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eA program is a list of declarations, possibly with associated\n documentation strings.\n\u003c/p\u003e",
          "module": "Idris.Parser",
          "name": "parseProg",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e FilePath -\u003e String -\u003e Maybe Delta -\u003e Idris [PDecl]",
          "source": "src/Idris-Parser.html#parseProg",
          "type": "function"
        },
        "index": {
          "description": "program is list of declarations possibly with associated documentation strings",
          "hierarchy": "Idris Parser",
          "module": "Idris.Parser",
          "name": "parseProg",
          "normalized": "SyntaxInfo-\u003eFilePath-\u003eString-\u003eMaybe Delta-\u003eIdris[PDecl]",
          "package": "idris",
          "partial": "Prog",
          "signature": "SyntaxInfo-\u003eFilePath-\u003eString-\u003eMaybe Delta-\u003eIdris[PDecl]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Parser.html#v:parseProg"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a tactic from input \n\u003c/p\u003e",
          "module": "Idris.Parser",
          "name": "parseTactic",
          "package": "idris",
          "signature": "IState -\u003e String -\u003e Result PTactic",
          "source": "src/Idris-Parser.html#parseTactic",
          "type": "function"
        },
        "index": {
          "description": "Parses tactic from input",
          "hierarchy": "Idris Parser",
          "module": "Idris.Parser",
          "name": "parseTactic",
          "normalized": "IState-\u003eString-\u003eResult PTactic",
          "package": "idris",
          "partial": "Tactic",
          "signature": "IState-\u003eString-\u003eResult PTactic",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Parser.html#v:parseTactic"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParse a clause with patterns\n\u003c/p\u003e\u003cpre\u003e\nPattern ::= Clause;\n\u003c/pre\u003e",
          "module": "Idris.Parser",
          "name": "pattern",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IdrisParser PDecl",
          "source": "src/Idris-Parser.html#pattern",
          "type": "function"
        },
        "index": {
          "description": "Parse clause with patterns Pattern Clause",
          "hierarchy": "Idris Parser",
          "module": "Idris.Parser",
          "name": "pattern",
          "normalized": "SyntaxInfo-\u003eIdrisParser PDecl",
          "package": "idris",
          "signature": "SyntaxInfo-\u003eIdrisParser PDecl",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Parser.html#v:pattern"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a postulate\n\u003c/p\u003e\u003cpre\u003e\nPostulate ::=\n  DocComment_t? \u003ccode\u003e\u003ca\u003epostulate\u003c/a\u003e\u003c/code\u003e FnOpts* Accesibility? FnOpts* FnName TypeSig Terminator\n  ;\n\u003c/pre\u003e",
          "module": "Idris.Parser",
          "name": "postulate",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IdrisParser PDecl",
          "source": "src/Idris-Parser.html#postulate",
          "type": "function"
        },
        "index": {
          "description": "Parses postulate Postulate DocComment postulate FnOpts Accesibility FnOpts FnName TypeSig Terminator",
          "hierarchy": "Idris Parser",
          "module": "Idris.Parser",
          "name": "postulate",
          "normalized": "SyntaxInfo-\u003eIdrisParser PDecl",
          "package": "idris",
          "signature": "SyntaxInfo-\u003eIdrisParser PDecl",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Parser.html#v:postulate"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses program source\n\u003c/p\u003e\u003cpre\u003e\n     Prog ::= Decl* EOF;\n\u003c/pre\u003e",
          "module": "Idris.Parser",
          "name": "prog",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IdrisParser [PDecl]",
          "source": "src/Idris-Parser.html#prog",
          "type": "function"
        },
        "index": {
          "description": "Parses program source Prog Decl EOF",
          "hierarchy": "Idris Parser",
          "module": "Idris.Parser",
          "name": "prog",
          "normalized": "SyntaxInfo-\u003eIdrisParser[PDecl]",
          "package": "idris",
          "signature": "SyntaxInfo-\u003eIdrisParser[PDecl]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Parser.html#v:prog"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a type provider\n\u003c/p\u003e\u003cpre\u003e\nProvider ::= \u003ccode\u003e%\u003c/code\u003e \u003ccode\u003eprovide\u003c/code\u003e '(' FnName TypeSig ')' \u003ccode\u003ewith\u003c/code\u003e Expr;\n\u003c/pre\u003e",
          "module": "Idris.Parser",
          "name": "provider",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IdrisParser [PDecl]",
          "source": "src/Idris-Parser.html#provider",
          "type": "function"
        },
        "index": {
          "description": "Parses type provider Provider provide FnName TypeSig with Expr",
          "hierarchy": "Idris Parser",
          "module": "Idris.Parser",
          "name": "provider",
          "normalized": "SyntaxInfo-\u003eIdrisParser[PDecl]",
          "package": "idris",
          "signature": "SyntaxInfo-\u003eIdrisParser[PDecl]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Parser.html#v:provider"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParse a right hand side of a function\n\u003c/p\u003e\u003cpre\u003e\nRHS ::= '='            Expr\n     |  \u003ccode\u003e?=\u003c/code\u003e  RHSName? Expr\n     |  \u003ccode\u003eimpossible\u003c/code\u003e\n     ;\n\u003c/pre\u003e\u003cpre\u003e\nRHSName ::= '{' FnName '}';\n\u003c/pre\u003e",
          "module": "Idris.Parser",
          "name": "rhs",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e Name -\u003e IdrisParser PTerm",
          "source": "src/Idris-Parser.html#rhs",
          "type": "function"
        },
        "index": {
          "description": "Parse right hand side of function RHS Expr RHSName Expr impossible RHSName FnName",
          "hierarchy": "Idris Parser",
          "module": "Idris.Parser",
          "name": "rhs",
          "normalized": "SyntaxInfo-\u003eName-\u003eIdrisParser PTerm",
          "package": "idris",
          "signature": "SyntaxInfo-\u003eName-\u003eIdrisParser PTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Parser.html#v:rhs"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a syntax extension declaration (and adds the rule to parser state)\n\u003c/p\u003e\u003cpre\u003e\n  SyntaxDecl ::= SyntaxRule;\n\u003c/pre\u003e",
          "module": "Idris.Parser",
          "name": "syntaxDecl",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IdrisParser PDecl",
          "source": "src/Idris-Parser.html#syntaxDecl",
          "type": "function"
        },
        "index": {
          "description": "Parses syntax extension declaration and adds the rule to parser state SyntaxDecl SyntaxRule",
          "hierarchy": "Idris Parser",
          "module": "Idris.Parser",
          "name": "syntaxDecl",
          "normalized": "SyntaxInfo-\u003eIdrisParser PDecl",
          "package": "idris",
          "partial": "Decl",
          "signature": "SyntaxInfo-\u003eIdrisParser PDecl",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Parser.html#v:syntaxDecl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a syntax extension declaration\n\u003c/p\u003e\u003cpre\u003e\nSyntaxRuleOpts ::= \u003ccode\u003eterm\u003c/code\u003e | \u003ccode\u003e\u003ca\u003epattern\u003c/a\u003e\u003c/code\u003e;\n\u003c/pre\u003e\u003cpre\u003e\nSyntaxRule ::=\n  SyntaxRuleOpts? \u003ccode\u003esyntax\u003c/code\u003e SyntaxSym+ '=' TypeExpr Terminator;\n\u003c/pre\u003e\u003cpre\u003e\nSyntaxSym ::=   '[' Name_t ']'\n             |  '{' Name_t '}'\n             |  Name_t\n             |  StringLiteral_t\n             ;\n\u003c/pre\u003e",
          "module": "Idris.Parser",
          "name": "syntaxRule",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IdrisParser Syntax",
          "source": "src/Idris-Parser.html#syntaxRule",
          "type": "function"
        },
        "index": {
          "description": "Parses syntax extension declaration SyntaxRuleOpts term pattern SyntaxRule SyntaxRuleOpts syntax SyntaxSym TypeExpr Terminator SyntaxSym Name Name Name StringLiteral",
          "hierarchy": "Idris Parser",
          "module": "Idris.Parser",
          "name": "syntaxRule",
          "normalized": "SyntaxInfo-\u003eIdrisParser Syntax",
          "package": "idris",
          "partial": "Rule",
          "signature": "SyntaxInfo-\u003eIdrisParser Syntax",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Parser.html#v:syntaxRule"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a syntax symbol (either binding variable, keyword or expression)\n\u003c/p\u003e\u003cpre\u003e\nSyntaxSym ::=   '[' Name_t ']'\n             |  '{' Name_t '}'\n             |  Name_t\n             |  StringLiteral_t\n             ;\n\u003c/pre\u003e",
          "module": "Idris.Parser",
          "name": "syntaxSym",
          "package": "idris",
          "signature": "IdrisParser SSymbol",
          "source": "src/Idris-Parser.html#syntaxSym",
          "type": "function"
        },
        "index": {
          "description": "Parses syntax symbol either binding variable keyword or expression SyntaxSym Name Name Name StringLiteral",
          "hierarchy": "Idris Parser",
          "module": "Idris.Parser",
          "name": "syntaxSym",
          "package": "idris",
          "partial": "Sym",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Parser.html#v:syntaxSym"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a totality\n\u003c/p\u003e\u003cpre\u003e\nTotality ::= \u003ccode\u003epartial\u003c/code\u003e | \u003ccode\u003etotal\u003c/code\u003e\n\u003c/pre\u003e",
          "module": "Idris.Parser",
          "name": "totality",
          "package": "idris",
          "signature": "IdrisParser Bool",
          "source": "src/Idris-Parser.html#totality",
          "type": "function"
        },
        "index": {
          "description": "Parses totality Totality partial total",
          "hierarchy": "Idris Parser",
          "module": "Idris.Parser",
          "name": "totality",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Parser.html#v:totality"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a transform\n\u003c/p\u003e\u003cpre\u003e\nTransform ::= \u003ccode\u003e%\u003c/code\u003e \u003ccode\u003e\u003ca\u003etransform\u003c/a\u003e\u003c/code\u003e Expr \u003ccode\u003e==\u003e\u003c/code\u003e Expr\n\u003c/pre\u003e",
          "module": "Idris.Parser",
          "name": "transform",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IdrisParser [PDecl]",
          "source": "src/Idris-Parser.html#transform",
          "type": "function"
        },
        "index": {
          "description": "Parses transform Transform transform Expr Expr",
          "hierarchy": "Idris Parser",
          "module": "Idris.Parser",
          "name": "transform",
          "normalized": "SyntaxInfo-\u003eIdrisParser[PDecl]",
          "package": "idris",
          "signature": "SyntaxInfo-\u003eIdrisParser[PDecl]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Parser.html#v:transform"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a using declaration\n\u003c/p\u003e\u003cpre\u003e\nUsingDecl ::=\n  FnName TypeSig\n  | FnName FnName+\n  ;\n\u003c/pre\u003e",
          "module": "Idris.Parser",
          "name": "usingDecl",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IdrisParser Using",
          "source": "src/Idris-Parser.html#usingDecl",
          "type": "function"
        },
        "index": {
          "description": "Parses using declaration UsingDecl FnName TypeSig FnName FnName",
          "hierarchy": "Idris Parser",
          "module": "Idris.Parser",
          "name": "usingDecl",
          "normalized": "SyntaxInfo-\u003eIdrisParser Using",
          "package": "idris",
          "partial": "Decl",
          "signature": "SyntaxInfo-\u003eIdrisParser Using",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Parser.html#v:usingDecl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a using declaration list\n\u003c/p\u003e\u003cpre\u003e\nUsingDeclList ::=\n  UsingDeclList'\n  | NameList TypeSig\n  ;\n\u003c/pre\u003e\u003cpre\u003e\nUsingDeclList' ::=\n  UsingDecl\n  | UsingDecl ',' UsingDeclList'\n  ;\n\u003c/pre\u003e\u003cpre\u003e\nNameList ::=\n  Name\n  | Name ',' NameList\n  ;\n\u003c/pre\u003e",
          "module": "Idris.Parser",
          "name": "usingDeclList",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IdrisParser [Using]",
          "source": "src/Idris-Parser.html#usingDeclList",
          "type": "function"
        },
        "index": {
          "description": "Parses using declaration list UsingDeclList UsingDeclList NameList TypeSig UsingDeclList UsingDecl UsingDecl UsingDeclList NameList Name Name NameList",
          "hierarchy": "Idris Parser",
          "module": "Idris.Parser",
          "name": "usingDeclList",
          "normalized": "SyntaxInfo-\u003eIdrisParser[Using]",
          "package": "idris",
          "partial": "Decl List",
          "signature": "SyntaxInfo-\u003eIdrisParser[Using]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Parser.html#v:usingDeclList"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a using declaration\n\u003c/p\u003e\u003cpre\u003e\nUsing ::=\n  \u003ccode\u003e\u003ca\u003eusing\u003c/a\u003e\u003c/code\u003e '(' UsingDeclList ')' OpenBlock Decl* CloseBlock\n  ;\n\u003c/pre\u003e",
          "module": "Idris.Parser",
          "name": "using_",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IdrisParser [PDecl]",
          "source": "src/Idris-Parser.html#using_",
          "type": "function"
        },
        "index": {
          "description": "Parses using declaration Using using UsingDeclList OpenBlock Decl CloseBlock",
          "hierarchy": "Idris Parser",
          "module": "Idris.Parser",
          "name": "using_",
          "normalized": "SyntaxInfo-\u003eIdrisParser[PDecl]",
          "package": "idris",
          "signature": "SyntaxInfo-\u003eIdrisParser[PDecl]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Parser.html#v:using_"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses with pattern\n\u003c/p\u003e\u003cpre\u003e \nWExpr ::= '|' Expr';\n\u003c/pre\u003e",
          "module": "Idris.Parser",
          "name": "wExpr",
          "package": "idris",
          "signature": "SyntaxInfo -\u003e IdrisParser PTerm",
          "source": "src/Idris-Parser.html#wExpr",
          "type": "function"
        },
        "index": {
          "description": "Parses with pattern WExpr Expr",
          "hierarchy": "Idris Parser",
          "module": "Idris.Parser",
          "name": "wExpr",
          "normalized": "SyntaxInfo-\u003eIdrisParser PTerm",
          "package": "idris",
          "partial": "Expr",
          "signature": "SyntaxInfo-\u003eIdrisParser PTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Parser.html#v:wExpr"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eParses a where block\n\u003c/p\u003e\u003cpre\u003e\nWhereBlock ::= 'where' OpenBlock Decl+ CloseBlock;\n\u003c/pre\u003e",
          "module": "Idris.Parser",
          "name": "whereBlock",
          "package": "idris",
          "signature": "Name -\u003e SyntaxInfo -\u003e IdrisParser ([PDecl], [(Name, Name)])",
          "source": "src/Idris-Parser.html#whereBlock",
          "type": "function"
        },
        "index": {
          "description": "Parses where block WhereBlock where OpenBlock Decl CloseBlock",
          "hierarchy": "Idris Parser",
          "module": "Idris.Parser",
          "name": "whereBlock",
          "normalized": "Name-\u003eSyntaxInfo-\u003eIdrisParser([PDecl],[(Name,Name)])",
          "package": "idris",
          "partial": "Block",
          "signature": "Name-\u003eSyntaxInfo-\u003eIdrisParser([PDecl],[(Name,Name)])",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Parser.html#v:whereBlock"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.PartialEval",
          "name": "PartialEval",
          "package": "idris",
          "source": "src/Idris-PartialEval.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "Idris PartialEval",
          "module": "Idris.PartialEval",
          "name": "PartialEval",
          "package": "idris",
          "partial": "Partial Eval",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-PartialEval.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.PartialEval",
          "name": "PEArgType",
          "package": "idris",
          "source": "src/Idris-PartialEval.html#PEArgType",
          "type": "data"
        },
        "index": {
          "hierarchy": "Idris PartialEval",
          "module": "Idris.PartialEval",
          "name": "PEArgType",
          "package": "idris",
          "partial": "PEArg Type",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-PartialEval.html#t:PEArgType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.PartialEval",
          "name": "ExplicitD",
          "package": "idris",
          "signature": "ExplicitD",
          "source": "src/Idris-PartialEval.html#PEArgType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris PartialEval",
          "module": "Idris.PartialEval",
          "name": "ExplicitD",
          "package": "idris",
          "partial": "Explicit",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-PartialEval.html#v:ExplicitD"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.PartialEval",
          "name": "ExplicitS",
          "package": "idris",
          "signature": "ExplicitS",
          "source": "src/Idris-PartialEval.html#PEArgType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris PartialEval",
          "module": "Idris.PartialEval",
          "name": "ExplicitS",
          "package": "idris",
          "partial": "Explicit",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-PartialEval.html#v:ExplicitS"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.PartialEval",
          "name": "ImplicitD",
          "package": "idris",
          "signature": "ImplicitD",
          "source": "src/Idris-PartialEval.html#PEArgType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris PartialEval",
          "module": "Idris.PartialEval",
          "name": "ImplicitD",
          "package": "idris",
          "partial": "Implicit",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-PartialEval.html#v:ImplicitD"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.PartialEval",
          "name": "ImplicitS",
          "package": "idris",
          "signature": "ImplicitS",
          "source": "src/Idris-PartialEval.html#PEArgType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris PartialEval",
          "module": "Idris.PartialEval",
          "name": "ImplicitS",
          "package": "idris",
          "partial": "Implicit",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-PartialEval.html#v:ImplicitS"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.PartialEval",
          "name": "UnifiedD",
          "package": "idris",
          "signature": "UnifiedD",
          "source": "src/Idris-PartialEval.html#PEArgType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris PartialEval",
          "module": "Idris.PartialEval",
          "name": "UnifiedD",
          "package": "idris",
          "partial": "Unified",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-PartialEval.html#v:UnifiedD"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.PartialEval",
          "name": "getSpecApps",
          "package": "idris",
          "signature": "IState -\u003e [Name] -\u003e Term -\u003e [(Name, [(PEArgType, Term)])]",
          "source": "src/Idris-PartialEval.html#getSpecApps",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris PartialEval",
          "module": "Idris.PartialEval",
          "name": "getSpecApps",
          "normalized": "IState-\u003e[Name]-\u003eTerm-\u003e[(Name,[(PEArgType,Term)])]",
          "package": "idris",
          "partial": "Spec Apps",
          "signature": "IState-\u003e[Name]-\u003eTerm-\u003e[(Name,[(PEArgType,Term)])]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-PartialEval.html#v:getSpecApps"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.PartialEval",
          "name": "mkPE_TermDecl",
          "package": "idris",
          "signature": "IState -\u003e Name -\u003e Name -\u003e [(PEArgType, Term)] -\u003e [(PTerm, PTerm)]",
          "source": "src/Idris-PartialEval.html#mkPE_TermDecl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris PartialEval",
          "module": "Idris.PartialEval",
          "name": "mkPE_TermDecl",
          "normalized": "IState-\u003eName-\u003eName-\u003e[(PEArgType,Term)]-\u003e[(PTerm,PTerm)]",
          "package": "idris",
          "partial": "PE Term Decl",
          "signature": "IState-\u003eName-\u003eName-\u003e[(PEArgType,Term)]-\u003e[(PTerm,PTerm)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-PartialEval.html#v:mkPE_TermDecl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.PartialEval",
          "name": "mkPE_TyDecl",
          "package": "idris",
          "signature": "IState -\u003e [(PEArgType, Term)] -\u003e Type -\u003e PTerm",
          "source": "src/Idris-PartialEval.html#mkPE_TyDecl",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris PartialEval",
          "module": "Idris.PartialEval",
          "name": "mkPE_TyDecl",
          "normalized": "IState-\u003e[(PEArgType,Term)]-\u003eType-\u003ePTerm",
          "package": "idris",
          "partial": "PE Ty Decl",
          "signature": "IState-\u003e[(PEArgType,Term)]-\u003eType-\u003ePTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-PartialEval.html#v:mkPE_TyDecl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.PartialEval",
          "name": "partial_eval",
          "package": "idris",
          "signature": "Context -\u003e [(Name, Maybe Int)] -\u003e [Either Term (Term, Term)] -\u003e [Either Term (Term, Term)]",
          "source": "src/Idris-PartialEval.html#partial_eval",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris PartialEval",
          "module": "Idris.PartialEval",
          "name": "partial_eval",
          "normalized": "Context-\u003e[(Name,Maybe Int)]-\u003e[Either Term(Term,Term)]-\u003e[Either Term(Term,Term)]",
          "package": "idris",
          "signature": "Context-\u003e[(Name,Maybe Int)]-\u003e[Either Term(Term,Term)]-\u003e[Either Term(Term,Term)]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-PartialEval.html#v:partial_eval"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.PartialEval",
          "name": "specType",
          "package": "idris",
          "signature": "[(PEArgType, Term)] -\u003e Type -\u003e (Type, [(PEArgType, Term)])",
          "source": "src/Idris-PartialEval.html#specType",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris PartialEval",
          "module": "Idris.PartialEval",
          "name": "specType",
          "normalized": "[(PEArgType,Term)]-\u003eType-\u003e(Type,[(PEArgType,Term)])",
          "package": "idris",
          "partial": "Type",
          "signature": "[(PEArgType,Term)]-\u003eType-\u003e(Type,[(PEArgType,Term)])",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-PartialEval.html#v:specType"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Primitives",
          "name": "Primitives",
          "package": "idris",
          "source": "src/Idris-Primitives.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "Idris Primitives",
          "module": "Idris.Primitives",
          "name": "Primitives",
          "package": "idris",
          "partial": "Primitives",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Primitives.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Primitives",
          "name": "Prim",
          "package": "idris",
          "source": "src/Idris-Primitives.html#Prim",
          "type": "data"
        },
        "index": {
          "hierarchy": "Idris Primitives",
          "module": "Idris.Primitives",
          "name": "Prim",
          "package": "idris",
          "partial": "Prim",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Primitives.html#t:Prim"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Primitives",
          "name": "Prim",
          "package": "idris",
          "signature": "Prim",
          "source": "src/Idris-Primitives.html#Prim",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Primitives",
          "module": "Idris.Primitives",
          "name": "Prim",
          "package": "idris",
          "partial": "Prim",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Primitives.html#v:Prim"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Primitives",
          "name": "p_arity",
          "package": "idris",
          "signature": "Int",
          "source": "src/Idris-Primitives.html#Prim",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Primitives",
          "module": "Idris.Primitives",
          "name": "p_arity",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Primitives.html#v:p_arity"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Primitives",
          "name": "p_def",
          "package": "idris",
          "signature": "[Const] -\u003e Maybe Const",
          "source": "src/Idris-Primitives.html#Prim",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Primitives",
          "module": "Idris.Primitives",
          "name": "p_def",
          "normalized": "[Const]-\u003eMaybe Const",
          "package": "idris",
          "signature": "[Const]-\u003eMaybe Const",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Primitives.html#v:p_def"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Primitives",
          "name": "p_lexp",
          "package": "idris",
          "signature": "(Int, PrimFn)",
          "source": "src/Idris-Primitives.html#Prim",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Primitives",
          "module": "Idris.Primitives",
          "name": "p_lexp",
          "normalized": "(Int,PrimFn)",
          "package": "idris",
          "signature": "(Int,PrimFn)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Primitives.html#v:p_lexp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Primitives",
          "name": "p_name",
          "package": "idris",
          "signature": "Name",
          "source": "src/Idris-Primitives.html#Prim",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Primitives",
          "module": "Idris.Primitives",
          "name": "p_name",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Primitives.html#v:p_name"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Primitives",
          "name": "p_total",
          "package": "idris",
          "signature": "Totality",
          "source": "src/Idris-Primitives.html#Prim",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Primitives",
          "module": "Idris.Primitives",
          "name": "p_total",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Primitives.html#v:p_total"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Primitives",
          "name": "p_type",
          "package": "idris",
          "signature": "Type",
          "source": "src/Idris-Primitives.html#Prim",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Primitives",
          "module": "Idris.Primitives",
          "name": "p_type",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Primitives.html#v:p_type"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Primitives",
          "name": "primitives",
          "package": "idris",
          "signature": "[Prim]",
          "source": "src/Idris-Primitives.html#primitives",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Primitives",
          "module": "Idris.Primitives",
          "name": "primitives",
          "normalized": "[Prim]",
          "package": "idris",
          "signature": "[Prim]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Primitives.html#v:primitives"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ProofSearch",
          "name": "ProofSearch",
          "package": "idris",
          "source": "src/Idris-ProofSearch.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "Idris ProofSearch",
          "module": "Idris.ProofSearch",
          "name": "ProofSearch",
          "package": "idris",
          "partial": "Proof Search",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ProofSearch.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ProofSearch",
          "name": "proofSearch",
          "package": "idris",
          "signature": "(PTerm -\u003e ElabD ()) -\u003e Maybe Name -\u003e Name -\u003e [Name] -\u003e IState -\u003e ElabD ()",
          "source": "src/Idris-ProofSearch.html#proofSearch",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ProofSearch",
          "module": "Idris.ProofSearch",
          "name": "proofSearch",
          "normalized": "(PTerm-\u003eElabD())-\u003eMaybe Name-\u003eName-\u003e[Name]-\u003eIState-\u003eElabD()",
          "package": "idris",
          "partial": "Search",
          "signature": "(PTerm-\u003eElabD())-\u003eMaybe Name-\u003eName-\u003e[Name]-\u003eIState-\u003eElabD()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ProofSearch.html#v:proofSearch"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.ProofSearch",
          "name": "trivial",
          "package": "idris",
          "signature": "(PTerm -\u003e ElabD ()) -\u003e IState -\u003e ElabD ()",
          "source": "src/Idris-ProofSearch.html#trivial",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris ProofSearch",
          "module": "Idris.ProofSearch",
          "name": "trivial",
          "normalized": "(PTerm-\u003eElabD())-\u003eIState-\u003eElabD()",
          "package": "idris",
          "signature": "(PTerm-\u003eElabD())-\u003eIState-\u003eElabD()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-ProofSearch.html#v:trivial"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Prover",
          "name": "Prover",
          "package": "idris",
          "source": "src/Idris-Prover.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "Idris Prover",
          "module": "Idris.Prover",
          "name": "Prover",
          "package": "idris",
          "partial": "Prover",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Prover.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Prover",
          "name": "assumptionNames",
          "package": "idris",
          "signature": "ElabState [PDecl] -\u003e [String]",
          "source": "src/Idris-Prover.html#assumptionNames",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Prover",
          "module": "Idris.Prover",
          "name": "assumptionNames",
          "normalized": "ElabState[PDecl]-\u003e[String]",
          "package": "idris",
          "partial": "Names",
          "signature": "ElabState[PDecl]-\u003e[String]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Prover.html#v:assumptionNames"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Prover",
          "name": "dumpState",
          "package": "idris",
          "signature": "IState -\u003e ProofState -\u003e Idris ()",
          "source": "src/Idris-Prover.html#dumpState",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Prover",
          "module": "Idris.Prover",
          "name": "dumpState",
          "normalized": "IState-\u003eProofState-\u003eIdris()",
          "package": "idris",
          "partial": "State",
          "signature": "IState-\u003eProofState-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Prover.html#v:dumpState"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Prover",
          "name": "elabStep",
          "package": "idris",
          "signature": "ElabState [PDecl] -\u003e ElabD a -\u003e Idris (a, ElabState [PDecl])",
          "source": "src/Idris-Prover.html#elabStep",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Prover",
          "module": "Idris.Prover",
          "name": "elabStep",
          "normalized": "ElabState[PDecl]-\u003eElabD a-\u003eIdris(a,ElabState[PDecl])",
          "package": "idris",
          "partial": "Step",
          "signature": "ElabState[PDecl]-\u003eElabD a-\u003eIdris(a,ElabState[PDecl])",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Prover.html#v:elabStep"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Prover",
          "name": "lifte",
          "package": "idris",
          "signature": "ElabState [PDecl] -\u003e ElabD a -\u003e Idris a",
          "source": "src/Idris-Prover.html#lifte",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Prover",
          "module": "Idris.Prover",
          "name": "lifte",
          "normalized": "ElabState[PDecl]-\u003eElabD a-\u003eIdris a",
          "package": "idris",
          "signature": "ElabState[PDecl]-\u003eElabD a-\u003eIdris a",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Prover.html#v:lifte"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Prover",
          "name": "ploop",
          "package": "idris",
          "signature": "Bool -\u003e String -\u003e [String] -\u003e ElabState [PDecl] -\u003e Maybe History -\u003e Idris (Term, [String])",
          "source": "src/Idris-Prover.html#ploop",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Prover",
          "module": "Idris.Prover",
          "name": "ploop",
          "normalized": "Bool-\u003eString-\u003e[String]-\u003eElabState[PDecl]-\u003eMaybe History-\u003eIdris(Term,[String])",
          "package": "idris",
          "signature": "Bool-\u003eString-\u003e[String]-\u003eElabState[PDecl]-\u003eMaybe History-\u003eIdris(Term,[String])",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Prover.html#v:ploop"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Prover",
          "name": "prove",
          "package": "idris",
          "signature": "Context -\u003e Bool -\u003e Name -\u003e Type -\u003e Idris ()",
          "source": "src/Idris-Prover.html#prove",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Prover",
          "module": "Idris.Prover",
          "name": "prove",
          "normalized": "Context-\u003eBool-\u003eName-\u003eType-\u003eIdris()",
          "package": "idris",
          "signature": "Context-\u003eBool-\u003eName-\u003eType-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Prover.html#v:prove"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Prover",
          "name": "prover",
          "package": "idris",
          "signature": "Bool -\u003e Name -\u003e Idris ()",
          "source": "src/Idris-Prover.html#prover",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Prover",
          "module": "Idris.Prover",
          "name": "prover",
          "normalized": "Bool-\u003eName-\u003eIdris()",
          "package": "idris",
          "signature": "Bool-\u003eName-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Prover.html#v:prover"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Prover",
          "name": "proverSettings",
          "package": "idris",
          "signature": "ElabState [PDecl] -\u003e Settings Idris",
          "source": "src/Idris-Prover.html#proverSettings",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Prover",
          "module": "Idris.Prover",
          "name": "proverSettings",
          "normalized": "ElabState[PDecl]-\u003eSettings Idris",
          "package": "idris",
          "partial": "Settings",
          "signature": "ElabState[PDecl]-\u003eSettings Idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Prover.html#v:proverSettings"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Prover",
          "name": "receiveInput",
          "package": "idris",
          "signature": "ElabState [PDecl] -\u003e Idris (Maybe String)",
          "source": "src/Idris-Prover.html#receiveInput",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Prover",
          "module": "Idris.Prover",
          "name": "receiveInput",
          "normalized": "ElabState[PDecl]-\u003eIdris(Maybe String)",
          "package": "idris",
          "partial": "Input",
          "signature": "ElabState[PDecl]-\u003eIdris(Maybe String)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Prover.html#v:receiveInput"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Prover",
          "name": "showProof",
          "package": "idris",
          "signature": "Bool -\u003e Name -\u003e [String] -\u003e String",
          "source": "src/Idris-Prover.html#showProof",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Prover",
          "module": "Idris.Prover",
          "name": "showProof",
          "normalized": "Bool-\u003eName-\u003e[String]-\u003eString",
          "package": "idris",
          "partial": "Proof",
          "signature": "Bool-\u003eName-\u003e[String]-\u003eString",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Prover.html#v:showProof"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Providers",
          "name": "Providers",
          "package": "idris",
          "source": "src/Idris-Providers.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "Idris Providers",
          "module": "Idris.Providers",
          "name": "Providers",
          "package": "idris",
          "partial": "Providers",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Providers.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eHandle an error, if the type provider returned an error. Otherwise return the provided term.\n\u003c/p\u003e",
          "module": "Idris.Providers",
          "name": "getProvided",
          "package": "idris",
          "signature": "FC -\u003e TT Name -\u003e Idris (TT Name)",
          "source": "src/Idris-Providers.html#getProvided",
          "type": "function"
        },
        "index": {
          "description": "Handle an error if the type provider returned an error Otherwise return the provided term",
          "hierarchy": "Idris Providers",
          "module": "Idris.Providers",
          "name": "getProvided",
          "normalized": "FC-\u003eTT Name-\u003eIdris(TT Name)",
          "package": "idris",
          "partial": "Provided",
          "signature": "FC-\u003eTT Name-\u003eIdris(TT Name)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Providers.html#v:getProvided"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eWrap a type provider in the type of type providers\n\u003c/p\u003e",
          "module": "Idris.Providers",
          "name": "providerTy",
          "package": "idris",
          "signature": "FC -\u003e PTerm -\u003e PTerm",
          "source": "src/Idris-Providers.html#providerTy",
          "type": "function"
        },
        "index": {
          "description": "Wrap type provider in the type of type providers",
          "hierarchy": "Idris Providers",
          "module": "Idris.Providers",
          "name": "providerTy",
          "normalized": "FC-\u003ePTerm-\u003ePTerm",
          "package": "idris",
          "partial": "Ty",
          "signature": "FC-\u003ePTerm-\u003ePTerm",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Providers.html#v:providerTy"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.REPL",
          "name": "REPL",
          "package": "idris",
          "source": "src/Idris-REPL.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "Idris REPL",
          "module": "Idris.REPL",
          "name": "REPL",
          "package": "idris",
          "partial": "REPL",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-REPL.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.REPL",
          "name": "banner",
          "package": "idris",
          "signature": "[Char]",
          "source": "src/Idris-REPL.html#banner",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris REPL",
          "module": "Idris.REPL",
          "name": "banner",
          "normalized": "[Char]",
          "package": "idris",
          "signature": "[Char]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-REPL.html#v:banner"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.REPL",
          "name": "classInfo",
          "package": "idris",
          "signature": "ClassInfo -\u003e Idris ()",
          "source": "src/Idris-REPL.html#classInfo",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris REPL",
          "module": "Idris.REPL",
          "name": "classInfo",
          "normalized": "ClassInfo-\u003eIdris()",
          "package": "idris",
          "partial": "Info",
          "signature": "ClassInfo-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-REPL.html#v:classInfo"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.REPL",
          "name": "displayHelp",
          "package": "idris",
          "signature": "[Char]",
          "source": "src/Idris-REPL.html#displayHelp",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris REPL",
          "module": "Idris.REPL",
          "name": "displayHelp",
          "normalized": "[Char]",
          "package": "idris",
          "partial": "Help",
          "signature": "[Char]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-REPL.html#v:displayHelp"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.REPL",
          "name": "dumpDefaultInstance",
          "package": "idris",
          "signature": "PDecl -\u003e Idris ()",
          "source": "src/Idris-REPL.html#dumpDefaultInstance",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris REPL",
          "module": "Idris.REPL",
          "name": "dumpDefaultInstance",
          "normalized": "PDecl-\u003eIdris()",
          "package": "idris",
          "partial": "Default Instance",
          "signature": "PDecl-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-REPL.html#v:dumpDefaultInstance"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.REPL",
          "name": "dumpInstance",
          "package": "idris",
          "signature": "Name -\u003e Idris ()",
          "source": "src/Idris-REPL.html#dumpInstance",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris REPL",
          "module": "Idris.REPL",
          "name": "dumpInstance",
          "normalized": "Name-\u003eIdris()",
          "package": "idris",
          "partial": "Instance",
          "signature": "Name-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-REPL.html#v:dumpInstance"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.REPL",
          "name": "dumpMethod",
          "package": "idris",
          "signature": "(Name, (FnOpts, PTerm)) -\u003e Idris ()",
          "source": "src/Idris-REPL.html#dumpMethod",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris REPL",
          "module": "Idris.REPL",
          "name": "dumpMethod",
          "normalized": "(Name,(FnOpts,PTerm))-\u003eIdris()",
          "package": "idris",
          "partial": "Method",
          "signature": "(Name,(FnOpts,PTerm))-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-REPL.html#v:dumpMethod"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.REPL",
          "name": "edit",
          "package": "idris",
          "signature": "FilePath -\u003e IState -\u003e Idris ()",
          "source": "src/Idris-REPL.html#edit",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris REPL",
          "module": "Idris.REPL",
          "name": "edit",
          "normalized": "FilePath-\u003eIState-\u003eIdris()",
          "package": "idris",
          "signature": "FilePath-\u003eIState-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-REPL.html#v:edit"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.REPL",
          "name": "execScript",
          "package": "idris",
          "signature": "String -\u003e Idris ()",
          "source": "src/Idris-REPL.html#execScript",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris REPL",
          "module": "Idris.REPL",
          "name": "execScript",
          "normalized": "String-\u003eIdris()",
          "package": "idris",
          "partial": "Script",
          "signature": "String-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-REPL.html#v:execScript"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eCheck if the coloring matches the options and corrects if necessary\n\u003c/p\u003e",
          "module": "Idris.REPL",
          "name": "fixColour",
          "package": "idris",
          "signature": "Bool -\u003e Doc -\u003e Doc",
          "source": "src/Idris-REPL.html#fixColour",
          "type": "function"
        },
        "index": {
          "description": "Check if the coloring matches the options and corrects if necessary",
          "hierarchy": "Idris REPL",
          "module": "Idris.REPL",
          "name": "fixColour",
          "normalized": "Bool-\u003eDoc-\u003eDoc",
          "package": "idris",
          "partial": "Colour",
          "signature": "Bool-\u003eDoc-\u003eDoc",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-REPL.html#v:fixColour"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.REPL",
          "name": "getBC",
          "package": "idris",
          "signature": "Opt -\u003e Maybe String",
          "source": "src/Idris-REPL.html#getBC",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris REPL",
          "module": "Idris.REPL",
          "name": "getBC",
          "normalized": "Opt-\u003eMaybe String",
          "package": "idris",
          "partial": "BC",
          "signature": "Opt-\u003eMaybe String",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-REPL.html#v:getBC"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.REPL",
          "name": "getCPU",
          "package": "idris",
          "signature": "Opt -\u003e Maybe String",
          "source": "src/Idris-REPL.html#getCPU",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris REPL",
          "module": "Idris.REPL",
          "name": "getCPU",
          "normalized": "Opt-\u003eMaybe String",
          "package": "idris",
          "partial": "CPU",
          "signature": "Opt-\u003eMaybe String",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-REPL.html#v:getCPU"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.REPL",
          "name": "getCodegen",
          "package": "idris",
          "signature": "Opt -\u003e Maybe Codegen",
          "source": "src/Idris-REPL.html#getCodegen",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris REPL",
          "module": "Idris.REPL",
          "name": "getCodegen",
          "normalized": "Opt-\u003eMaybe Codegen",
          "package": "idris",
          "partial": "Codegen",
          "signature": "Opt-\u003eMaybe Codegen",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-REPL.html#v:getCodegen"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.REPL",
          "name": "getColour",
          "package": "idris",
          "signature": "Opt -\u003e Maybe Bool",
          "source": "src/Idris-REPL.html#getColour",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris REPL",
          "module": "Idris.REPL",
          "name": "getColour",
          "normalized": "Opt-\u003eMaybe Bool",
          "package": "idris",
          "partial": "Colour",
          "signature": "Opt-\u003eMaybe Bool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-REPL.html#v:getColour"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.REPL",
          "name": "getExecScript",
          "package": "idris",
          "signature": "Opt -\u003e Maybe String",
          "source": "src/Idris-REPL.html#getExecScript",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris REPL",
          "module": "Idris.REPL",
          "name": "getExecScript",
          "normalized": "Opt-\u003eMaybe String",
          "package": "idris",
          "partial": "Exec Script",
          "signature": "Opt-\u003eMaybe String",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-REPL.html#v:getExecScript"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.REPL",
          "name": "getFile",
          "package": "idris",
          "signature": "Opt -\u003e Maybe String",
          "source": "src/Idris-REPL.html#getFile",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris REPL",
          "module": "Idris.REPL",
          "name": "getFile",
          "normalized": "Opt-\u003eMaybe String",
          "package": "idris",
          "partial": "File",
          "signature": "Opt-\u003eMaybe String",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-REPL.html#v:getFile"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.REPL",
          "name": "getIBCSubDir",
          "package": "idris",
          "signature": "Opt -\u003e Maybe String",
          "source": "src/Idris-REPL.html#getIBCSubDir",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris REPL",
          "module": "Idris.REPL",
          "name": "getIBCSubDir",
          "normalized": "Opt-\u003eMaybe String",
          "package": "idris",
          "partial": "IBCSub Dir",
          "signature": "Opt-\u003eMaybe String",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-REPL.html#v:getIBCSubDir"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eGet the platform-specific, user-specific Idris dir\n\u003c/p\u003e",
          "module": "Idris.REPL",
          "name": "getIdrisUserDataDir",
          "package": "idris",
          "signature": "Idris FilePath",
          "source": "src/Idris-REPL.html#getIdrisUserDataDir",
          "type": "function"
        },
        "index": {
          "description": "Get the platform-specific user-specific Idris dir",
          "hierarchy": "Idris REPL",
          "module": "Idris.REPL",
          "name": "getIdrisUserDataDir",
          "package": "idris",
          "partial": "Idris User Data Dir",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-REPL.html#v:getIdrisUserDataDir"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.REPL",
          "name": "getImportDir",
          "package": "idris",
          "signature": "Opt -\u003e Maybe String",
          "source": "src/Idris-REPL.html#getImportDir",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris REPL",
          "module": "Idris.REPL",
          "name": "getImportDir",
          "normalized": "Opt-\u003eMaybe String",
          "package": "idris",
          "partial": "Import Dir",
          "signature": "Opt-\u003eMaybe String",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-REPL.html#v:getImportDir"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eLocate the platform-specific location for the init script\n\u003c/p\u003e",
          "module": "Idris.REPL",
          "name": "getInitScript",
          "package": "idris",
          "signature": "Idris FilePath",
          "source": "src/Idris-REPL.html#getInitScript",
          "type": "function"
        },
        "index": {
          "description": "Locate the platform-specific location for the init script",
          "hierarchy": "Idris REPL",
          "module": "Idris.REPL",
          "name": "getInitScript",
          "package": "idris",
          "partial": "Init Script",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-REPL.html#v:getInitScript"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.REPL",
          "name": "getLanguageExt",
          "package": "idris",
          "signature": "Opt -\u003e Maybe LanguageExt",
          "source": "src/Idris-REPL.html#getLanguageExt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris REPL",
          "module": "Idris.REPL",
          "name": "getLanguageExt",
          "normalized": "Opt-\u003eMaybe LanguageExt",
          "package": "idris",
          "partial": "Language Ext",
          "signature": "Opt-\u003eMaybe LanguageExt",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-REPL.html#v:getLanguageExt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.REPL",
          "name": "getOptLevel",
          "package": "idris",
          "signature": "Opt -\u003e Maybe Word",
          "source": "src/Idris-REPL.html#getOptLevel",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris REPL",
          "module": "Idris.REPL",
          "name": "getOptLevel",
          "normalized": "Opt-\u003eMaybe Word",
          "package": "idris",
          "partial": "Opt Level",
          "signature": "Opt-\u003eMaybe Word",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-REPL.html#v:getOptLevel"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.REPL",
          "name": "getOutput",
          "package": "idris",
          "signature": "Opt -\u003e Maybe String",
          "source": "src/Idris-REPL.html#getOutput",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris REPL",
          "module": "Idris.REPL",
          "name": "getOutput",
          "normalized": "Opt-\u003eMaybe String",
          "package": "idris",
          "partial": "Output",
          "signature": "Opt-\u003eMaybe String",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-REPL.html#v:getOutput"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.REPL",
          "name": "getOutputTy",
          "package": "idris",
          "signature": "Opt -\u003e Maybe OutputType",
          "source": "src/Idris-REPL.html#getOutputTy",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris REPL",
          "module": "Idris.REPL",
          "name": "getOutputTy",
          "normalized": "Opt-\u003eMaybe OutputType",
          "package": "idris",
          "partial": "Output Ty",
          "signature": "Opt-\u003eMaybe OutputType",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-REPL.html#v:getOutputTy"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.REPL",
          "name": "getPkg",
          "package": "idris",
          "signature": "Opt -\u003e Maybe (Bool, String)",
          "source": "src/Idris-REPL.html#getPkg",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris REPL",
          "module": "Idris.REPL",
          "name": "getPkg",
          "normalized": "Opt-\u003eMaybe(Bool,String)",
          "package": "idris",
          "partial": "Pkg",
          "signature": "Opt-\u003eMaybe(Bool,String)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-REPL.html#v:getPkg"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.REPL",
          "name": "getPkgCheck",
          "package": "idris",
          "signature": "Opt -\u003e Maybe String",
          "source": "src/Idris-REPL.html#getPkgCheck",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris REPL",
          "module": "Idris.REPL",
          "name": "getPkgCheck",
          "normalized": "Opt-\u003eMaybe String",
          "package": "idris",
          "partial": "Pkg Check",
          "signature": "Opt-\u003eMaybe String",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-REPL.html#v:getPkgCheck"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.REPL",
          "name": "getPkgClean",
          "package": "idris",
          "signature": "Opt -\u003e Maybe String",
          "source": "src/Idris-REPL.html#getPkgClean",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris REPL",
          "module": "Idris.REPL",
          "name": "getPkgClean",
          "normalized": "Opt-\u003eMaybe String",
          "package": "idris",
          "partial": "Pkg Clean",
          "signature": "Opt-\u003eMaybe String",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-REPL.html#v:getPkgClean"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.REPL",
          "name": "getPkgDir",
          "package": "idris",
          "signature": "Opt -\u003e Maybe String",
          "source": "src/Idris-REPL.html#getPkgDir",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris REPL",
          "module": "Idris.REPL",
          "name": "getPkgDir",
          "normalized": "Opt-\u003eMaybe String",
          "package": "idris",
          "partial": "Pkg Dir",
          "signature": "Opt-\u003eMaybe String",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-REPL.html#v:getPkgDir"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.REPL",
          "name": "getPkgREPL",
          "package": "idris",
          "signature": "Opt -\u003e Maybe String",
          "source": "src/Idris-REPL.html#getPkgREPL",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris REPL",
          "module": "Idris.REPL",
          "name": "getPkgREPL",
          "normalized": "Opt-\u003eMaybe String",
          "package": "idris",
          "partial": "Pkg REPL",
          "signature": "Opt-\u003eMaybe String",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-REPL.html#v:getPkgREPL"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.REPL",
          "name": "getTriple",
          "package": "idris",
          "signature": "Opt -\u003e Maybe String",
          "source": "src/Idris-REPL.html#getTriple",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris REPL",
          "module": "Idris.REPL",
          "name": "getTriple",
          "normalized": "Opt-\u003eMaybe String",
          "package": "idris",
          "partial": "Triple",
          "signature": "Opt-\u003eMaybe String",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-REPL.html#v:getTriple"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.REPL",
          "name": "helphead",
          "package": "idris",
          "signature": "[([[Char]], CmdArg, [Char])]",
          "source": "src/Idris-REPL.html#helphead",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris REPL",
          "module": "Idris.REPL",
          "name": "helphead",
          "normalized": "[([[Char]],CmdArg,[Char])]",
          "package": "idris",
          "signature": "[([[Char]],CmdArg,[Char])]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-REPL.html#v:helphead"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.REPL",
          "name": "ideslave",
          "package": "idris",
          "signature": "IState -\u003e [FilePath] -\u003e Idris ()",
          "source": "src/Idris-REPL.html#ideslave",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris REPL",
          "module": "Idris.REPL",
          "name": "ideslave",
          "normalized": "IState-\u003e[FilePath]-\u003eIdris()",
          "package": "idris",
          "signature": "IState-\u003e[FilePath]-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-REPL.html#v:ideslave"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.REPL",
          "name": "ideslaveProcess",
          "package": "idris",
          "signature": "FilePath -\u003e Command -\u003e Idris ()",
          "source": "src/Idris-REPL.html#ideslaveProcess",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris REPL",
          "module": "Idris.REPL",
          "name": "ideslaveProcess",
          "normalized": "FilePath-\u003eCommand-\u003eIdris()",
          "package": "idris",
          "partial": "Process",
          "signature": "FilePath-\u003eCommand-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-REPL.html#v:ideslaveProcess"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eRun the IdeSlave\n\u003c/p\u003e",
          "module": "Idris.REPL",
          "name": "ideslaveStart",
          "package": "idris",
          "signature": "IState -\u003e [FilePath] -\u003e Idris ()",
          "source": "src/Idris-REPL.html#ideslaveStart",
          "type": "function"
        },
        "index": {
          "description": "Run the IdeSlave",
          "hierarchy": "Idris REPL",
          "module": "Idris.REPL",
          "name": "ideslaveStart",
          "normalized": "IState-\u003e[FilePath]-\u003eIdris()",
          "package": "idris",
          "partial": "Start",
          "signature": "IState-\u003e[FilePath]-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-REPL.html#v:ideslaveStart"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.REPL",
          "name": "idris",
          "package": "idris",
          "signature": "[Opt] -\u003e IO (Maybe IState)",
          "source": "src/Idris-REPL.html#idris",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris REPL",
          "module": "Idris.REPL",
          "name": "idris",
          "normalized": "[Opt]-\u003eIO(Maybe IState)",
          "package": "idris",
          "signature": "[Opt]-\u003eIO(Maybe IState)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-REPL.html#v:idris"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.REPL",
          "name": "idrisMain",
          "package": "idris",
          "signature": "[Opt] -\u003e Idris ()",
          "source": "src/Idris-REPL.html#idrisMain",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris REPL",
          "module": "Idris.REPL",
          "name": "idrisMain",
          "normalized": "[Opt]-\u003eIdris()",
          "package": "idris",
          "partial": "Main",
          "signature": "[Opt]-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-REPL.html#v:idrisMain"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eRun the initialisation script\n\u003c/p\u003e",
          "module": "Idris.REPL",
          "name": "initScript",
          "package": "idris",
          "signature": "Idris ()",
          "source": "src/Idris-REPL.html#initScript",
          "type": "function"
        },
        "index": {
          "description": "Run the initialisation script",
          "hierarchy": "Idris REPL",
          "module": "Idris.REPL",
          "name": "initScript",
          "normalized": "Idris()",
          "package": "idris",
          "partial": "Script",
          "signature": "Idris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-REPL.html#v:initScript"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.REPL",
          "name": "insertScript",
          "package": "idris",
          "signature": "String -\u003e [String] -\u003e [String]",
          "source": "src/Idris-REPL.html#insertScript",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris REPL",
          "module": "Idris.REPL",
          "name": "insertScript",
          "normalized": "String-\u003e[String]-\u003e[String]",
          "package": "idris",
          "partial": "Script",
          "signature": "String-\u003e[String]-\u003e[String]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-REPL.html#v:insertScript"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eDetermine whether a file uses literate syntax\n\u003c/p\u003e",
          "module": "Idris.REPL",
          "name": "lit",
          "package": "idris",
          "signature": "FilePath -\u003e Bool",
          "source": "src/Idris-REPL.html#lit",
          "type": "function"
        },
        "index": {
          "description": "Determine whether file uses literate syntax",
          "hierarchy": "Idris REPL",
          "module": "Idris.REPL",
          "name": "lit",
          "normalized": "FilePath-\u003eBool",
          "package": "idris",
          "signature": "FilePath-\u003eBool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-REPL.html#v:lit"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.REPL",
          "name": "loadInputs",
          "package": "idris",
          "signature": "Handle -\u003e [FilePath] -\u003e Idris ()",
          "source": "src/Idris-REPL.html#loadInputs",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris REPL",
          "module": "Idris.REPL",
          "name": "loadInputs",
          "normalized": "Handle-\u003e[FilePath]-\u003eIdris()",
          "package": "idris",
          "partial": "Inputs",
          "signature": "Handle-\u003e[FilePath]-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-REPL.html#v:loadInputs"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eThe prompt consists of the currently loaded modules, or \u003ca\u003eIdris\u003c/a\u003e if there are none\n\u003c/p\u003e",
          "module": "Idris.REPL",
          "name": "mkPrompt",
          "package": "idris",
          "signature": "[FilePath] -\u003e [Char]",
          "source": "src/Idris-REPL.html#mkPrompt",
          "type": "function"
        },
        "index": {
          "description": "The prompt consists of the currently loaded modules or Idris if there are none",
          "hierarchy": "Idris REPL",
          "module": "Idris.REPL",
          "name": "mkPrompt",
          "normalized": "[FilePath]-\u003e[Char]",
          "package": "idris",
          "partial": "Prompt",
          "signature": "[FilePath]-\u003e[Char]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-REPL.html#v:mkPrompt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.REPL",
          "name": "opt",
          "package": "idris",
          "signature": "(Opt -\u003e Maybe a) -\u003e [Opt] -\u003e [a]",
          "source": "src/Idris-REPL.html#opt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris REPL",
          "module": "Idris.REPL",
          "name": "opt",
          "normalized": "(Opt-\u003eMaybe a)-\u003e[Opt]-\u003e[a]",
          "package": "idris",
          "signature": "(Opt-\u003eMaybe a)-\u003e[Opt]-\u003e[a]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-REPL.html#v:opt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.REPL",
          "name": "parseArgs",
          "package": "idris",
          "signature": "[String] -\u003e [Opt]",
          "source": "src/Idris-REPL.html#parseArgs",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris REPL",
          "module": "Idris.REPL",
          "name": "parseArgs",
          "normalized": "[String]-\u003e[Opt]",
          "package": "idris",
          "partial": "Args",
          "signature": "[String]-\u003e[Opt]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-REPL.html#v:parseArgs"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.REPL",
          "name": "parseCodegen",
          "package": "idris",
          "signature": "String -\u003e Codegen",
          "source": "src/Idris-REPL.html#parseCodegen",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris REPL",
          "module": "Idris.REPL",
          "name": "parseCodegen",
          "normalized": "String-\u003eCodegen",
          "package": "idris",
          "partial": "Codegen",
          "signature": "String-\u003eCodegen",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-REPL.html#v:parseCodegen"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.REPL",
          "name": "process",
          "package": "idris",
          "signature": "Handle -\u003e FilePath -\u003e Command -\u003e Idris ()",
          "source": "src/Idris-REPL.html#process",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris REPL",
          "module": "Idris.REPL",
          "name": "process",
          "normalized": "Handle-\u003eFilePath-\u003eCommand-\u003eIdris()",
          "package": "idris",
          "signature": "Handle-\u003eFilePath-\u003eCommand-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-REPL.html#v:process"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.REPL",
          "name": "processInput",
          "package": "idris",
          "signature": "String -\u003e IState -\u003e [FilePath] -\u003e Idris (Maybe [FilePath])",
          "source": "src/Idris-REPL.html#processInput",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris REPL",
          "module": "Idris.REPL",
          "name": "processInput",
          "normalized": "String-\u003eIState-\u003e[FilePath]-\u003eIdris(Maybe[FilePath])",
          "package": "idris",
          "partial": "Input",
          "signature": "String-\u003eIState-\u003e[FilePath]-\u003eIdris(Maybe[FilePath])",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-REPL.html#v:processInput"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.REPL",
          "name": "processNetCmd",
          "package": "idris",
          "signature": "IState -\u003e IState -\u003e Handle -\u003e FilePath -\u003e String -\u003e IO (IState, FilePath)",
          "source": "src/Idris-REPL.html#processNetCmd",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris REPL",
          "module": "Idris.REPL",
          "name": "processNetCmd",
          "normalized": "IState-\u003eIState-\u003eHandle-\u003eFilePath-\u003eString-\u003eIO(IState,FilePath)",
          "package": "idris",
          "partial": "Net Cmd",
          "signature": "IState-\u003eIState-\u003eHandle-\u003eFilePath-\u003eString-\u003eIO(IState,FilePath)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-REPL.html#v:processNetCmd"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.REPL",
          "name": "proofs",
          "package": "idris",
          "signature": "IState -\u003e Idris ()",
          "source": "src/Idris-REPL.html#proofs",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris REPL",
          "module": "Idris.REPL",
          "name": "proofs",
          "normalized": "IState-\u003eIdris()",
          "package": "idris",
          "signature": "IState-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-REPL.html#v:proofs"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.REPL",
          "name": "removeProof",
          "package": "idris",
          "signature": "Name -\u003e Idris ()",
          "source": "src/Idris-REPL.html#removeProof",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris REPL",
          "module": "Idris.REPL",
          "name": "removeProof",
          "normalized": "Name-\u003eIdris()",
          "package": "idris",
          "partial": "Proof",
          "signature": "Name-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-REPL.html#v:removeProof"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eRun the REPL\n\u003c/p\u003e",
          "module": "Idris.REPL",
          "name": "repl",
          "package": "idris",
          "signature": "IState-\u003e [FilePath]-\u003e InputT Idris ()",
          "type": "function"
        },
        "index": {
          "description": "Run the REPL",
          "hierarchy": "Idris REPL",
          "module": "Idris.REPL",
          "name": "repl",
          "normalized": "IState-\u003e[FilePath]-\u003eInputT Idris()",
          "package": "idris",
          "signature": "IState-\u003e[FilePath]-\u003eInputT Idris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-REPL.html#v:repl"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.REPL",
          "name": "replSettings",
          "package": "idris",
          "signature": "Maybe FilePath -\u003e Settings Idris",
          "source": "src/Idris-REPL.html#replSettings",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris REPL",
          "module": "Idris.REPL",
          "name": "replSettings",
          "normalized": "Maybe FilePath-\u003eSettings Idris",
          "package": "idris",
          "partial": "Settings",
          "signature": "Maybe FilePath-\u003eSettings Idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-REPL.html#v:replSettings"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.REPL",
          "name": "resolveProof",
          "package": "idris",
          "signature": "Name -\u003e Idris Name",
          "source": "src/Idris-REPL.html#resolveProof",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris REPL",
          "module": "Idris.REPL",
          "name": "resolveProof",
          "normalized": "Name-\u003eIdris Name",
          "package": "idris",
          "partial": "Proof",
          "signature": "Name-\u003eIdris Name",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-REPL.html#v:resolveProof"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eRun a command on the server on localhost\n\u003c/p\u003e",
          "module": "Idris.REPL",
          "name": "runClient",
          "package": "idris",
          "signature": "String -\u003e IO ()",
          "source": "src/Idris-REPL.html#runClient",
          "type": "function"
        },
        "index": {
          "description": "Run command on the server on localhost",
          "hierarchy": "Idris REPL",
          "module": "Idris.REPL",
          "name": "runClient",
          "normalized": "String-\u003eIO()",
          "package": "idris",
          "partial": "Client",
          "signature": "String-\u003eIO()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-REPL.html#v:runClient"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.REPL",
          "name": "showTotal",
          "package": "idris",
          "signature": "Totality -\u003e IState -\u003e String",
          "source": "src/Idris-REPL.html#showTotal",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris REPL",
          "module": "Idris.REPL",
          "name": "showTotal",
          "normalized": "Totality-\u003eIState-\u003eString",
          "package": "idris",
          "partial": "Total",
          "signature": "Totality-\u003eIState-\u003eString",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-REPL.html#v:showTotal"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.REPL",
          "name": "showTotalN",
          "package": "idris",
          "signature": "IState -\u003e Name -\u003e String",
          "source": "src/Idris-REPL.html#showTotalN",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris REPL",
          "module": "Idris.REPL",
          "name": "showTotalN",
          "normalized": "IState-\u003eName-\u003eString",
          "package": "idris",
          "partial": "Total",
          "signature": "IState-\u003eName-\u003eString",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-REPL.html#v:showTotalN"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eRun the REPL server\n\u003c/p\u003e",
          "module": "Idris.REPL",
          "name": "startServer",
          "package": "idris",
          "signature": "IState -\u003e [FilePath] -\u003e Idris ()",
          "source": "src/Idris-REPL.html#startServer",
          "type": "function"
        },
        "index": {
          "description": "Run the REPL server",
          "hierarchy": "Idris REPL",
          "module": "Idris.REPL",
          "name": "startServer",
          "normalized": "IState-\u003e[FilePath]-\u003eIdris()",
          "package": "idris",
          "partial": "Server",
          "signature": "IState-\u003e[FilePath]-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-REPL.html#v:startServer"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.REPL",
          "name": "ver",
          "package": "idris",
          "signature": "[Char]",
          "source": "src/Idris-REPL.html#ver",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris REPL",
          "module": "Idris.REPL",
          "name": "ver",
          "normalized": "[Char]",
          "package": "idris",
          "signature": "[Char]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-REPL.html#v:ver"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.REPLParser",
          "name": "REPLParser",
          "package": "idris",
          "source": "src/Idris-REPLParser.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "Idris REPLParser",
          "module": "Idris.REPLParser",
          "name": "REPLParser",
          "package": "idris",
          "partial": "REPLParser",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-REPLParser.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.REPLParser",
          "name": "parseCmd",
          "package": "idris",
          "signature": "IState -\u003e String -\u003e String -\u003e Result Command",
          "source": "src/Idris-REPLParser.html#parseCmd",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris REPLParser",
          "module": "Idris.REPLParser",
          "name": "parseCmd",
          "normalized": "IState-\u003eString-\u003eString-\u003eResult Command",
          "package": "idris",
          "partial": "Cmd",
          "signature": "IState-\u003eString-\u003eString-\u003eResult Command",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-REPLParser.html#v:parseCmd"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Transforms",
          "name": "Transforms",
          "package": "idris",
          "source": "src/Idris-Transforms.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "Idris Transforms",
          "module": "Idris.Transforms",
          "name": "Transforms",
          "package": "idris",
          "partial": "Transforms",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Transforms.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Transforms",
          "name": "TTOpt",
          "package": "idris",
          "source": "src/Idris-Transforms.html#TTOpt",
          "type": "data"
        },
        "index": {
          "hierarchy": "Idris Transforms",
          "module": "Idris.Transforms",
          "name": "TTOpt",
          "package": "idris",
          "partial": "TTOpt",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Transforms.html#t:TTOpt"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Transforms",
          "name": "Transform",
          "package": "idris",
          "source": "src/Idris-Transforms.html#Transform",
          "type": "class"
        },
        "index": {
          "hierarchy": "Idris Transforms",
          "module": "Idris.Transforms",
          "name": "Transform",
          "package": "idris",
          "partial": "Transform",
          "type": "class"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Transforms.html#t:Transform"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Transforms",
          "name": "CaseTrans",
          "package": "idris",
          "signature": "CaseTrans (SC -\u003e SC)",
          "source": "src/Idris-Transforms.html#TTOpt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Transforms",
          "module": "Idris.Transforms",
          "name": "CaseTrans",
          "normalized": "CaseTrans(SC-\u003eSC)",
          "package": "idris",
          "partial": "Case Trans",
          "signature": "CaseTrans(SC-\u003eSC)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Transforms.html#v:CaseTrans"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Transforms",
          "name": "TermTrans",
          "package": "idris",
          "signature": "TermTrans (TT Name -\u003e TT Name)",
          "source": "src/Idris-Transforms.html#TTOpt",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Transforms",
          "module": "Idris.Transforms",
          "name": "TermTrans",
          "normalized": "TermTrans(TT Name-\u003eTT Name)",
          "package": "idris",
          "partial": "Term Trans",
          "signature": "TermTrans(TT Name-\u003eTT Name)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Transforms.html#v:TermTrans"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Transforms",
          "name": "natTrans",
          "package": "idris",
          "signature": "[TTOpt]",
          "source": "src/Idris-Transforms.html#natTrans",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Transforms",
          "module": "Idris.Transforms",
          "name": "natTrans",
          "normalized": "[TTOpt]",
          "package": "idris",
          "partial": "Trans",
          "signature": "[TTOpt]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Transforms.html#v:natTrans"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Transforms",
          "name": "natcase",
          "package": "idris",
          "signature": "SC -\u003e SC",
          "source": "src/Idris-Transforms.html#natcase",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Transforms",
          "module": "Idris.Transforms",
          "name": "natcase",
          "normalized": "SC-\u003eSC",
          "package": "idris",
          "signature": "SC-\u003eSC",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Transforms.html#v:natcase"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Transforms",
          "name": "sname",
          "package": "idris",
          "signature": "Name",
          "source": "src/Idris-Transforms.html#sname",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Transforms",
          "module": "Idris.Transforms",
          "name": "sname",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Transforms.html#v:sname"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Transforms",
          "name": "suc",
          "package": "idris",
          "signature": "TT Name -\u003e TT Name",
          "source": "src/Idris-Transforms.html#suc",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Transforms",
          "module": "Idris.Transforms",
          "name": "suc",
          "normalized": "TT Name-\u003eTT Name",
          "package": "idris",
          "signature": "TT Name-\u003eTT Name",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Transforms.html#v:suc"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Transforms",
          "name": "transform",
          "package": "idris",
          "signature": "TTOpt -\u003e a -\u003e a",
          "source": "src/Idris-Transforms.html#transform",
          "type": "method"
        },
        "index": {
          "hierarchy": "Idris Transforms",
          "module": "Idris.Transforms",
          "name": "transform",
          "normalized": "TTOpt-\u003ea-\u003ea",
          "package": "idris",
          "signature": "TTOpt-\u003ea-\u003ea",
          "type": "method"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Transforms.html#v:transform"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Transforms",
          "name": "zero",
          "package": "idris",
          "signature": "TT Name -\u003e TT Name",
          "source": "src/Idris-Transforms.html#zero",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Transforms",
          "module": "Idris.Transforms",
          "name": "zero",
          "normalized": "TT Name-\u003eTT Name",
          "package": "idris",
          "signature": "TT Name-\u003eTT Name",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Transforms.html#v:zero"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Transforms",
          "name": "zname",
          "package": "idris",
          "signature": "Name",
          "source": "src/Idris-Transforms.html#zname",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Transforms",
          "module": "Idris.Transforms",
          "name": "zname",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Transforms.html#v:zname"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Unlit",
          "name": "Unlit",
          "package": "idris",
          "source": "src/Idris-Unlit.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "Idris Unlit",
          "module": "Idris.Unlit",
          "name": "Unlit",
          "package": "idris",
          "partial": "Unlit",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Unlit.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.Unlit",
          "name": "unlit",
          "package": "idris",
          "signature": "FilePath -\u003e String -\u003e TC String",
          "source": "src/Idris-Unlit.html#unlit",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris Unlit",
          "module": "Idris.Unlit",
          "name": "unlit",
          "normalized": "FilePath-\u003eString-\u003eTC String",
          "package": "idris",
          "signature": "FilePath-\u003eString-\u003eTC String",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-Unlit.html#v:unlit"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.UnusedArgs",
          "name": "UnusedArgs",
          "package": "idris",
          "source": "src/Idris-UnusedArgs.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "Idris UnusedArgs",
          "module": "Idris.UnusedArgs",
          "name": "UnusedArgs",
          "package": "idris",
          "partial": "Unused Args",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-UnusedArgs.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.UnusedArgs",
          "name": "findUnusedArgs",
          "package": "idris",
          "signature": "[Name] -\u003e Idris ()",
          "source": "src/Idris-UnusedArgs.html#findUnusedArgs",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris UnusedArgs",
          "module": "Idris.UnusedArgs",
          "name": "findUnusedArgs",
          "normalized": "[Name]-\u003eIdris()",
          "package": "idris",
          "partial": "Unused Args",
          "signature": "[Name]-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-UnusedArgs.html#v:findUnusedArgs"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.UnusedArgs",
          "name": "getFargpos",
          "package": "idris",
          "signature": "[(Name, [[Name]])] -\u003e (Name, Int) -\u003e [(Name, Int, (Name, Int))]",
          "source": "src/Idris-UnusedArgs.html#getFargpos",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris UnusedArgs",
          "module": "Idris.UnusedArgs",
          "name": "getFargpos",
          "normalized": "[(Name,[[Name]])]-\u003e(Name,Int)-\u003e[(Name,Int,(Name,Int))]",
          "package": "idris",
          "partial": "Fargpos",
          "signature": "[(Name,[[Name]])]-\u003e(Name,Int)-\u003e[(Name,Int,(Name,Int))]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-UnusedArgs.html#v:getFargpos"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.UnusedArgs",
          "name": "traceUnused",
          "package": "idris",
          "signature": "Name -\u003e Idris ()",
          "source": "src/Idris-UnusedArgs.html#traceUnused",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris UnusedArgs",
          "module": "Idris.UnusedArgs",
          "name": "traceUnused",
          "normalized": "Name-\u003eIdris()",
          "package": "idris",
          "partial": "Unused",
          "signature": "Name-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-UnusedArgs.html#v:traceUnused"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Idris.UnusedArgs",
          "name": "used",
          "package": "idris",
          "signature": "[(Name, Int)] -\u003e Name -\u003e Int -\u003e Idris Bool",
          "source": "src/Idris-UnusedArgs.html#used",
          "type": "function"
        },
        "index": {
          "hierarchy": "Idris UnusedArgs",
          "module": "Idris.UnusedArgs",
          "name": "used",
          "normalized": "[(Name,Int)]-\u003eName-\u003eInt-\u003eIdris Bool",
          "package": "idris",
          "signature": "[(Name,Int)]-\u003eName-\u003eInt-\u003eIdris Bool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Idris-UnusedArgs.html#v:used"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Pkg.Package",
          "name": "Package",
          "package": "idris",
          "source": "src/Pkg-Package.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "Pkg Package",
          "module": "Pkg.Package",
          "name": "Package",
          "package": "idris",
          "partial": "Package",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Pkg-Package.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Pkg.Package",
          "name": "buildMods",
          "package": "idris",
          "signature": "[Opt] -\u003e [Name] -\u003e IO (Maybe IState)",
          "source": "src/Pkg-Package.html#buildMods",
          "type": "function"
        },
        "index": {
          "hierarchy": "Pkg Package",
          "module": "Pkg.Package",
          "name": "buildMods",
          "normalized": "[Opt]-\u003e[Name]-\u003eIO(Maybe IState)",
          "package": "idris",
          "partial": "Mods",
          "signature": "[Opt]-\u003e[Name]-\u003eIO(Maybe IState)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Pkg-Package.html#v:buildMods"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eRun the package through the idris compiler.\n\u003c/p\u003e",
          "module": "Pkg.Package",
          "name": "buildPkg",
          "package": "idris",
          "signature": "Bool -\u003e (Bool, FilePath) -\u003e IO ()",
          "source": "src/Pkg-Package.html#buildPkg",
          "type": "function"
        },
        "index": {
          "description": "Run the package through the idris compiler",
          "hierarchy": "Pkg Package",
          "module": "Pkg.Package",
          "name": "buildPkg",
          "normalized": "Bool-\u003e(Bool,FilePath)-\u003eIO()",
          "package": "idris",
          "partial": "Pkg",
          "signature": "Bool-\u003e(Bool,FilePath)-\u003eIO()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Pkg-Package.html#v:buildPkg"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eType check packages only\n\u003c/p\u003e\u003cp\u003eThis differs from build in that executables are not built, if the\n package contains an executable.\n\u003c/p\u003e",
          "module": "Pkg.Package",
          "name": "checkPkg",
          "package": "idris",
          "signature": "Bool-\u003e Bool-\u003e FilePath-\u003e IO ()",
          "type": "function"
        },
        "index": {
          "description": "Type check packages only This differs from build in that executables are not built if the package contains an executable",
          "hierarchy": "Pkg Package",
          "module": "Pkg.Package",
          "name": "checkPkg",
          "normalized": "Bool-\u003eBool-\u003eFilePath-\u003eIO()",
          "package": "idris",
          "partial": "Pkg",
          "signature": "Bool-\u003eBool-\u003eFilePath-\u003eIO()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Pkg-Package.html#v:checkPkg"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eInvoke a Makefile's clean target.\n\u003c/p\u003e",
          "module": "Pkg.Package",
          "name": "clean",
          "package": "idris",
          "signature": "Maybe String -\u003e IO ()",
          "source": "src/Pkg-Package.html#clean",
          "type": "function"
        },
        "index": {
          "description": "Invoke Makefile clean target",
          "hierarchy": "Pkg Package",
          "module": "Pkg.Package",
          "name": "clean",
          "normalized": "Maybe String-\u003eIO()",
          "package": "idris",
          "signature": "Maybe String-\u003eIO()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Pkg-Package.html#v:clean"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eClean Package build files\n\u003c/p\u003e",
          "module": "Pkg.Package",
          "name": "cleanPkg",
          "package": "idris",
          "signature": "FilePath-\u003e IO ()",
          "type": "function"
        },
        "index": {
          "description": "Clean Package build files",
          "hierarchy": "Pkg Package",
          "module": "Pkg.Package",
          "name": "cleanPkg",
          "normalized": "FilePath-\u003eIO()",
          "package": "idris",
          "partial": "Pkg",
          "signature": "FilePath-\u003eIO()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Pkg-Package.html#v:cleanPkg"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Pkg.Package",
          "name": "installIBC",
          "package": "idris",
          "signature": "String -\u003e Name -\u003e IO ()",
          "source": "src/Pkg-Package.html#installIBC",
          "type": "function"
        },
        "index": {
          "hierarchy": "Pkg Package",
          "module": "Pkg.Package",
          "name": "installIBC",
          "normalized": "String-\u003eName-\u003eIO()",
          "package": "idris",
          "partial": "IBC",
          "signature": "String-\u003eName-\u003eIO()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Pkg-Package.html#v:installIBC"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Pkg.Package",
          "name": "installObj",
          "package": "idris",
          "signature": "String -\u003e String -\u003e IO ()",
          "source": "src/Pkg-Package.html#installObj",
          "type": "function"
        },
        "index": {
          "hierarchy": "Pkg Package",
          "module": "Pkg.Package",
          "name": "installObj",
          "normalized": "String-\u003eString-\u003eIO()",
          "package": "idris",
          "partial": "Obj",
          "signature": "String-\u003eString-\u003eIO()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Pkg-Package.html#v:installObj"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eInstall package\n\u003c/p\u003e",
          "module": "Pkg.Package",
          "name": "installPkg",
          "package": "idris",
          "signature": "PkgDesc -\u003e IO ()",
          "source": "src/Pkg-Package.html#installPkg",
          "type": "function"
        },
        "index": {
          "description": "Install package",
          "hierarchy": "Pkg Package",
          "module": "Pkg.Package",
          "name": "installPkg",
          "normalized": "PkgDesc-\u003eIO()",
          "package": "idris",
          "partial": "Pkg",
          "signature": "PkgDesc-\u003eIO()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Pkg-Package.html#v:installPkg"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eInvoke a Makefile's default target.\n\u003c/p\u003e",
          "module": "Pkg.Package",
          "name": "make",
          "package": "idris",
          "signature": "Maybe String -\u003e IO ()",
          "source": "src/Pkg-Package.html#make",
          "type": "function"
        },
        "index": {
          "description": "Invoke Makefile default target",
          "hierarchy": "Pkg Package",
          "module": "Pkg.Package",
          "name": "make",
          "normalized": "Maybe String-\u003eIO()",
          "package": "idris",
          "signature": "Maybe String-\u003eIO()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Pkg-Package.html#v:make"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Pkg.Package",
          "name": "mkDirCmd",
          "package": "idris",
          "signature": "[Char]",
          "source": "src/Pkg-Package.html#mkDirCmd",
          "type": "function"
        },
        "index": {
          "hierarchy": "Pkg Package",
          "module": "Pkg.Package",
          "name": "mkDirCmd",
          "normalized": "[Char]",
          "package": "idris",
          "partial": "Dir Cmd",
          "signature": "[Char]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Pkg-Package.html#v:mkDirCmd"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cp\u003eCheck a package and start a REPL\n\u003c/p\u003e",
          "module": "Pkg.Package",
          "name": "replPkg",
          "package": "idris",
          "signature": "FilePath -\u003e Idris ()",
          "source": "src/Pkg-Package.html#replPkg",
          "type": "function"
        },
        "index": {
          "description": "Check package and start REPL",
          "hierarchy": "Pkg Package",
          "module": "Pkg.Package",
          "name": "replPkg",
          "normalized": "FilePath-\u003eIdris()",
          "package": "idris",
          "partial": "Pkg",
          "signature": "FilePath-\u003eIdris()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Pkg-Package.html#v:replPkg"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Pkg.Package",
          "name": "rmIBC",
          "package": "idris",
          "signature": "Name -\u003e IO ()",
          "source": "src/Pkg-Package.html#rmIBC",
          "type": "function"
        },
        "index": {
          "hierarchy": "Pkg Package",
          "module": "Pkg.Package",
          "name": "rmIBC",
          "normalized": "Name-\u003eIO()",
          "package": "idris",
          "partial": "IBC",
          "signature": "Name-\u003eIO()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Pkg-Package.html#v:rmIBC"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Pkg.Package",
          "name": "testLib",
          "package": "idris",
          "signature": "Bool -\u003e String -\u003e String -\u003e IO Bool",
          "source": "src/Pkg-Package.html#testLib",
          "type": "function"
        },
        "index": {
          "hierarchy": "Pkg Package",
          "module": "Pkg.Package",
          "name": "testLib",
          "normalized": "Bool-\u003eString-\u003eString-\u003eIO Bool",
          "package": "idris",
          "partial": "Lib",
          "signature": "Bool-\u003eString-\u003eString-\u003eIO Bool",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Pkg-Package.html#v:testLib"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Pkg.Package",
          "name": "toIBCFile",
          "package": "idris",
          "signature": "Name -\u003e [Char]",
          "source": "src/Pkg-Package.html#toIBCFile",
          "type": "function"
        },
        "index": {
          "hierarchy": "Pkg Package",
          "module": "Pkg.Package",
          "name": "toIBCFile",
          "normalized": "Name-\u003e[Char]",
          "package": "idris",
          "partial": "IBCFile",
          "signature": "Name-\u003e[Char]",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Pkg-Package.html#v:toIBCFile"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "description": "\u003cdiv class=\"doc\"\u003e\u003cp\u003ePlatform-specific dynamic linking support. Add new platforms to this file\n through conditional compilation.\n\u003c/p\u003e\u003c/div\u003e",
          "module": "Util.DynamicLinker",
          "name": "DynamicLinker",
          "package": "idris",
          "source": "src/Util-DynamicLinker.html",
          "type": "module"
        },
        "index": {
          "description": "Platform-specific dynamic linking support Add new platforms to this file through conditional compilation",
          "hierarchy": "Util DynamicLinker",
          "module": "Util.DynamicLinker",
          "name": "DynamicLinker",
          "package": "idris",
          "partial": "Dynamic Linker",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Util-DynamicLinker.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Util.DynamicLinker",
          "name": "DynamicLib",
          "package": "idris",
          "source": "src/Util-DynamicLinker.html#DynamicLib",
          "type": "data"
        },
        "index": {
          "hierarchy": "Util DynamicLinker",
          "module": "Util.DynamicLinker",
          "name": "DynamicLib",
          "package": "idris",
          "partial": "Dynamic Lib",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Util-DynamicLinker.html#t:DynamicLib"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Util.DynamicLinker",
          "name": "ForeignFun",
          "package": "idris",
          "source": "src/Util-DynamicLinker.html#ForeignFun",
          "type": "data"
        },
        "index": {
          "hierarchy": "Util DynamicLinker",
          "module": "Util.DynamicLinker",
          "name": "ForeignFun",
          "package": "idris",
          "partial": "Foreign Fun",
          "type": "data"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Util-DynamicLinker.html#t:ForeignFun"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Util.DynamicLinker",
          "name": "Fun",
          "package": "idris",
          "signature": "forall a . Fun",
          "source": "src/Util-DynamicLinker.html#ForeignFun",
          "type": "function"
        },
        "index": {
          "hierarchy": "Util DynamicLinker",
          "module": "Util.DynamicLinker",
          "name": "Fun",
          "package": "idris",
          "partial": "Fun",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Util-DynamicLinker.html#v:Fun"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Util.DynamicLinker",
          "name": "Lib",
          "package": "idris",
          "signature": "Lib",
          "source": "src/Util-DynamicLinker.html#DynamicLib",
          "type": "function"
        },
        "index": {
          "hierarchy": "Util DynamicLinker",
          "module": "Util.DynamicLinker",
          "name": "Lib",
          "package": "idris",
          "partial": "Lib",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Util-DynamicLinker.html#v:Lib"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Util.DynamicLinker",
          "name": "fun_handle",
          "package": "idris",
          "signature": "()",
          "source": "src/Util-DynamicLinker.html#ForeignFun",
          "type": "function"
        },
        "index": {
          "hierarchy": "Util DynamicLinker",
          "module": "Util.DynamicLinker",
          "name": "fun_handle",
          "normalized": "()",
          "package": "idris",
          "signature": "()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Util-DynamicLinker.html#v:fun_handle"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Util.DynamicLinker",
          "name": "fun_name",
          "package": "idris",
          "signature": "String",
          "source": "src/Util-DynamicLinker.html#ForeignFun",
          "type": "function"
        },
        "index": {
          "hierarchy": "Util DynamicLinker",
          "module": "Util.DynamicLinker",
          "name": "fun_name",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Util-DynamicLinker.html#v:fun_name"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Util.DynamicLinker",
          "name": "lib_handle",
          "package": "idris",
          "signature": "()",
          "source": "src/Util-DynamicLinker.html#DynamicLib",
          "type": "function"
        },
        "index": {
          "hierarchy": "Util DynamicLinker",
          "module": "Util.DynamicLinker",
          "name": "lib_handle",
          "normalized": "()",
          "package": "idris",
          "signature": "()",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Util-DynamicLinker.html#v:lib_handle"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Util.DynamicLinker",
          "name": "lib_name",
          "package": "idris",
          "signature": "String",
          "source": "src/Util-DynamicLinker.html#DynamicLib",
          "type": "function"
        },
        "index": {
          "hierarchy": "Util DynamicLinker",
          "module": "Util.DynamicLinker",
          "name": "lib_name",
          "package": "idris",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Util-DynamicLinker.html#v:lib_name"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Util.DynamicLinker",
          "name": "tryLoadFn",
          "package": "idris",
          "signature": "String -\u003e DynamicLib -\u003e IO (Maybe ForeignFun)",
          "source": "src/Util-DynamicLinker.html#tryLoadFn",
          "type": "function"
        },
        "index": {
          "hierarchy": "Util DynamicLinker",
          "module": "Util.DynamicLinker",
          "name": "tryLoadFn",
          "normalized": "String-\u003eDynamicLib-\u003eIO(Maybe ForeignFun)",
          "package": "idris",
          "partial": "Load Fn",
          "signature": "String-\u003eDynamicLib-\u003eIO(Maybe ForeignFun)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Util-DynamicLinker.html#v:tryLoadFn"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Util.DynamicLinker",
          "name": "tryLoadLib",
          "package": "idris",
          "signature": "[FilePath] -\u003e String -\u003e IO (Maybe DynamicLib)",
          "source": "src/Util-DynamicLinker.html#tryLoadLib",
          "type": "function"
        },
        "index": {
          "hierarchy": "Util DynamicLinker",
          "module": "Util.DynamicLinker",
          "name": "tryLoadLib",
          "normalized": "[FilePath]-\u003eString-\u003eIO(Maybe DynamicLib)",
          "package": "idris",
          "partial": "Load Lib",
          "signature": "[FilePath]-\u003eString-\u003eIO(Maybe DynamicLib)",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Util-DynamicLinker.html#v:tryLoadLib"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Util.ScreenSize",
          "name": "ScreenSize",
          "package": "idris",
          "source": "src/Util-ScreenSize.html",
          "type": "module"
        },
        "index": {
          "hierarchy": "Util ScreenSize",
          "module": "Util.ScreenSize",
          "name": "ScreenSize",
          "package": "idris",
          "partial": "Screen Size",
          "type": "module"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Util-ScreenSize.html#"
      }
    },
    {
      "cmd": "insert",
      "document": {
        "description": {
          "module": "Util.ScreenSize",
          "name": "getScreenWidth",
          "package": "idris",
          "signature": "IO Int",
          "source": "src/Util-ScreenSize.html#getScreenWidth",
          "type": "function"
        },
        "index": {
          "hierarchy": "Util ScreenSize",
          "module": "Util.ScreenSize",
          "name": "getScreenWidth",
          "package": "idris",
          "partial": "Screen Width",
          "type": "function"
        },
        "uri": "http://hackage.haskell.org/package/idris/docs/Util-ScreenSize.html#v:getScreenWidth"
      }
    }
  ]
]